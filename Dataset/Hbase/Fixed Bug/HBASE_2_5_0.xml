<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="HBASE">
  <bug id="24354" opendate="2020-5-11 00:00:00" fixdate="2020-5-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make it so can make an hbase1 schema and hbase2 schema equate</summary>
      <description>Currently, NEW_VERSION_BEHAVIOR displays in hbase2 schemas with default value of 'false'. This default is added whenever we create a new column descriptor. Its not needed. We'll return default if empty or undefined. Meantime, since this is not defined in hbase1, it makes it so we can't make equivalent schemas so not possible to replicate from hbase1 to hbase2.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.ColumnFamilyDescriptorBuilder.java</file>
    </fixedFiles>
  </bug>
  <bug id="2451" opendate="2010-4-15 00:00:00" fixdate="2010-4-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>.META. by-passes cache; BLOCKCACHE=&gt;&amp;#39;false&amp;#39;</summary>
      <description>In a new install, if I describe '.META.', it says:DESCRIPTION ENABLED {NAME =&gt; '.META.', IS_META =&gt; 'true', MEMSTORE_FLUSHSIZE =&gt; '16384', F true AMILIES =&gt; [{NAME =&gt; 'historian', COMPRESSION =&gt; 'NONE', VERSIONS =&gt; ' 2147483647', TTL =&gt; '604800', BLOCKSIZE =&gt; '8192', IN_MEMORY =&gt; 'false ', BLOCKCACHE =&gt; 'false'}, {NAME =&gt; 'info', COMPRESSION =&gt; 'NONE', VER SIONS =&gt; '10', TTL =&gt; '2147483647', BLOCKSIZE =&gt; '8192', IN_MEMORY =&gt; 'false', BLOCKCACHE =&gt; 'true'}]} BLOCKCACHE is 'true' for the 'info' family (Yes historian is still in 0.20 branch).But, if I add logging to hfile and storefile and store, blockcache is 'false' &amp;#8211; there is no cache constructed for use by the hfile.This is killing cluster performance. It looks like a problem parsing the 'true' value in columnfamily. I'll put up a patch in the morning. Meantime, marking as blocker on 0.20.4.</description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.master.HMaster.java</file>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.HTableDescriptor.java</file>
      <file type="M">bin.add.table.rb</file>
    </fixedFiles>
  </bug>
  <bug id="24511" opendate="2020-6-5 00:00:00" fixdate="2020-6-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability to configure timeout between RPC retry to RS from master</summary>
      <description>This is useful for the cases where there is an injected environment edge and when the first RS RPC request fails causing it to go to the retry block.In the absence of this , the default timeout would be set to 100 ms and the DelayedUtil class is meant to execute the retry after 100 ms. However as per the getRemainingTime() logic here (https://github.com/apache/hbase/blob/5b01e613fbbb92e243e99a1d199b4ffbb21ed2d9/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/util/DelayedUtil.java#L94), the equation would be evaluated to EnvironmentEdgeManager.currentTime() &gt;= EnvironmentEdgeManager.currentTime() + 100 which would never get evaluated to true in case of injected edge and retry never happens. Hence this config helps you to override it to 0 in cases we want to test with a manual injected environment edge so that the retry would succeed An example would be Master trying to open the meta region even before the RS is online, In this case the retry of opening the meta region would never happen in the case of injected environment edge and master would never finish the initialization</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,2.2.6</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestRegionServerReportForDuty.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.procedure.RSProcedureDispatcher.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
