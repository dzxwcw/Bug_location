<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="HBASE">
  <bug id="11280" opendate="2014-6-2 00:00:00" fixdate="2014-6-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document distributed log replay and distributed log splitting</summary>
      <description>Enable 'distributed log replay' by default. Depends on hfilev3 being enabled.</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.book.xml</file>
    </fixedFiles>
  </bug>
  <bug id="11285" opendate="2014-6-3 00:00:00" fixdate="2014-7-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Expand coprocs info in Ref Guide</summary>
      <description></description>
      <version>0.98.3</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.cp.xml</file>
    </fixedFiles>
  </bug>
  <bug id="11319" opendate="2014-6-10 00:00:00" fixdate="2014-6-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>No need to use favored node mapping initialization to find all regions</summary>
      <description>During a clean re/start, favored node mapping initialization scans meta for an assignment snapshot. We can avoid this scan since such info is already loaded into region states. For small cluster, this is not a big deal. However, if there are lots of regions, the scan is better not to do.</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestRSKilledWhenInitializing.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.TestRestartCluster.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.TestMasterShutdown.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.ServerManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.RegionStates.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.HMaster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.AssignmentManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="11320" opendate="2014-6-10 00:00:00" fixdate="2014-6-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Reenable bucket cache logging</summary>
      <description>Our bucket caches run threads in the background to log stats on a period only since we moved the log level to default INFO, these DEBUG level logs no longer show up. Make the loggings INFO level (and do some fixup to make bucket cache and lru loggings look same).</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.MultiVersionConsistencyControl.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.LruBlockCache.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.bucket.BucketCache.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.bucket.BucketAllocator.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.BlockCacheUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="11341" opendate="2014-6-13 00:00:00" fixdate="2014-6-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ZKProcedureCoordinatorRpcs should respond only to members</summary>
      <description>ZKProcedureCoordinatorRpcs nodeCreated() responds to events of every znode under the procedure and not only members.INFO: Received created event: /hbase/&lt;proc&gt;/reached/&lt;instance&gt;INFO: Received created event: /hbase/&lt;proc&gt;/reached/&lt;instance&gt;/&lt;member&gt;the result is a warning (no other side effects)WARN [main-EventThread] procedure.ProcedureCoordinator: Member '&lt;instance&gt;' is trying to release an unknown procedure 'reachedapurtell posted in HBASE-10926 the steps to reproduce it:$ cd ./src/hbase$ git checkout master$ mvn -DskipTests clean installIn one console:$ ./bin/hbase master startIn another console:$ ./bin/hbase org.apache.hadoop.hbase.util.LoadTestTool -num_keys 100000 \ -read 10:100 -write 1:100:10In a third console:$ ./bin/hbase shellhbase&gt; while true do ; flush 'cluster_test' ; sleep 10 ; end</description>
      <version>0.99.0,0.94.20,0.98.3</version>
      <fixedVersion>0.99.0,0.94.21,0.98.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.procedure.ZKProcedureUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="11347" opendate="2014-6-13 00:00:00" fixdate="2014-6-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>For some errors, the client can retry infinitely</summary>
      <description>As the title says...</description>
      <version>0.99.0,0.98.3</version>
      <fixedVersion>0.99.0,0.98.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-client.src.test.java.org.apache.hadoop.hbase.client.TestAsyncProcess.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.AsyncProcess.java</file>
    </fixedFiles>
  </bug>
  <bug id="11348" opendate="2014-6-13 00:00:00" fixdate="2014-6-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make frequency and sleep times of chaos monkeys configurable</summary>
      <description>Currently the chaos monkeys used in the integration tests, run with a fixed configuration. It would be useful to have the frequency, sleep times to be configurable. That would help controlling the chaos the monkeys are intended to create.</description>
      <version>0.98.3</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.developer.xml</file>
      <file type="M">hbase-it.src.test.java.org.apache.hadoop.hbase.mttr.IntegrationTestMTTR.java</file>
      <file type="M">hbase-it.src.test.java.org.apache.hadoop.hbase.IntegrationTestBase.java</file>
      <file type="M">hbase-it.src.test.java.org.apache.hadoop.hbase.chaos.factories.UnbalanceMonkeyFactory.java</file>
      <file type="M">hbase-it.src.test.java.org.apache.hadoop.hbase.chaos.factories.SlowDeterministicMonkeyFactory.java</file>
      <file type="M">hbase-it.src.test.java.org.apache.hadoop.hbase.chaos.factories.MonkeyFactory.java</file>
      <file type="M">hbase-it.src.test.java.org.apache.hadoop.hbase.chaos.actions.UnbalanceKillAndRebalanceAction.java</file>
      <file type="M">hbase-it.src.test.java.org.apache.hadoop.hbase.chaos.actions.MoveRegionsOfTableAction.java</file>
    </fixedFiles>
  </bug>
  <bug id="11349" opendate="2014-6-13 00:00:00" fixdate="2014-7-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[Thrift] support authentication/impersonation</summary>
      <description>Thrift server can access HBase as a fixed authenticated user. However, we don't authenticate thrift clients. It will be great if the thrift server can authenticate clients, and support impersonation.</description>
      <version>None</version>
      <fixedVersion>0.99.0,0.98.4</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-thrift.src.test.java.org.apache.hadoop.hbase.thrift.TestThriftServer.java</file>
      <file type="M">hbase-thrift.src.main.java.org.apache.hadoop.hbase.thrift.ThriftServerRunner.java</file>
      <file type="M">hbase-thrift.src.main.java.org.apache.hadoop.hbase.thrift.ThriftServer.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.rest.TestGetAndPutResource.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.rest.HBaseRESTTestingUtility.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.RESTServletContainer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.RESTServlet.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.RESTServer.java</file>
    </fixedFiles>
  </bug>
  <bug id="11350" opendate="2014-6-13 00:00:00" fixdate="2014-6-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[PE] Allow random value size</summary>
      <description>Allow PE to write random value sizes. Helpful mimic'ing 'real' sizings.</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.PerformanceEvaluation.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat2.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat.java</file>
    </fixedFiles>
  </bug>
  <bug id="11353" opendate="2014-6-14 00:00:00" fixdate="2014-6-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Wrong Write Request Count</summary>
      <description>See title...</description>
      <version>0.99.0,0.98.3</version>
      <fixedVersion>0.99.0,0.98.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestHRegion.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="11363" opendate="2014-6-16 00:00:00" fixdate="2014-6-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Access checks in preCompact and preCompactSelection are out of sync</summary>
      <description>As discussed on HBASE-6192, it looks like someone cut and pasted the access check from preCompact into preCompactSelection at one time and, later, another change was made that relaxed permissions for compaction requests from ADMIN to ADMIN|CREATE.We do not need an access check in preCompactSelection since a request to compact is already mediated by preCompact.</description>
      <version>0.98.3</version>
      <fixedVersion>0.99.0,0.98.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.security.access.AccessController.java</file>
    </fixedFiles>
  </bug>
  <bug id="11370" opendate="2014-6-17 00:00:00" fixdate="2014-6-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SSH doesn&amp;#39;t need to scan meta if not using ZK for assignment</summary>
      <description>If we don't use ZK for assignment, the meta content should be the same as that in memory. So we should be able to avoid a meta scan.</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.util.TestHBaseFsck.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.RegionStates.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.MasterFileSystem.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.ServerShutdownHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.AssignmentManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="11384" opendate="2014-6-20 00:00:00" fixdate="2014-8-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[Visibility Controller]Check for users covering authorizations for every mutation</summary>
      <description>As part of discussions, it is better that every mutation either Put/Delete with Visibility expressions should validate if the expression has labels for which the user has authorization. If not fail the mutation.Suppose User A is assoicated with A,B and C. The put has a visibility expression A&amp;D. Then fail the mutation as D is not associated with User A.</description>
      <version>0.98.3</version>
      <fixedVersion>0.99.0,0.98.5</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityLabelsManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java</file>
      <file type="M">hbase-common.src.main.resources.hbase-default.xml</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityConstants.java</file>
    </fixedFiles>
  </bug>
  <bug id="11387" opendate="2014-6-20 00:00:00" fixdate="2014-6-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>metrics: wrong totalRequestCount</summary>
      <description>We have an unit test here, but it tests for greater than instead of equals. So we didn't see that the number was the double of the actual value.As well we were not testing the multi case.</description>
      <version>0.99.0,0.98.3</version>
      <fixedVersion>0.99.0,0.98.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestRegionServerMetrics.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.RSRpcServices.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="11403" opendate="2014-6-23 00:00:00" fixdate="2014-6-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix race conditions around Object#notify</summary>
      <description>We do have some race conditions there. We don't see them fail in the unit tests, because our #wait are bounded. But from a performance point of view, they do occur. I've reviewed them and fix all the issue I found excepted in the AM (haven't reviewed this one, may be it's fine).On a perf test, this seems to improve the max latency.</description>
      <version>0.99.0,0.98.3</version>
      <fixedVersion>0.99.0,0.98.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.LogRoller.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.ServerManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.HMaster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.bucket.BucketCache.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.ipc.RpcClient.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.AsyncProcess.java</file>
    </fixedFiles>
  </bug>
  <bug id="11412" opendate="2014-6-25 00:00:00" fixdate="2014-12-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Minimize a number of hbase-client transitive dependencies</summary>
      <description>hbase-client has a number of transitive dependencies not needed for a client mode execution. In my test I've added the following exclusions:&lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt; &lt;artifactId&gt;jersey-server&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt; &lt;artifactId&gt;jersey-core&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt; &lt;artifactId&gt;jersey-json&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;com.sun.jersey.contribs&lt;/groupId&gt; &lt;artifactId&gt;jersey-guice&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;com.google.inject&lt;/groupId&gt; &lt;artifactId&gt;guice&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;com.google.inject.extensions&lt;/groupId&gt; &lt;artifactId&gt;guice-servlet&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt; &lt;artifactId&gt;jetty&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt; &lt;artifactId&gt;jetty-util&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;commons-httpclient&lt;/groupId&gt; &lt;artifactId&gt;commons-httpclient&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt;Proposal: add related exclusions to some of the dependencies hbase-client depends upon.</description>
      <version>0.98.3</version>
      <fixedVersion>1.0.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-client.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="11415" opendate="2014-6-26 00:00:00" fixdate="2014-6-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[PE] Dump config before running test</summary>
      <description>Trivial change in PE</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.PerformanceEvaluation.java</file>
    </fixedFiles>
  </bug>
  <bug id="11418" opendate="2014-6-27 00:00:00" fixdate="2014-6-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>build target "site" doesn&amp;#39;t respect hadoop-two.version property</summary>
      <description>Running build with mvn clean site -Dhadoop-two.version=2.3.0 I see that it pulls in Hadoop 2.2.0 dependencies (when building 0.98.x); and Hadoop 2.3.0 on the master. The reason of the behavior is the bug in configuration of userapi reportset, namely: &lt;docletArtifact&gt; &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt; &lt;!-- doclet lives in hadoop 2's hadoop-common module --&gt; &lt;artifactId&gt;hadoop-common&lt;/artifactId&gt; &lt;version&gt;2.3.0&lt;/version&gt; &lt;/docletArtifact&gt;(the snipped is from the master branch)</description>
      <version>0.98.3</version>
      <fixedVersion>0.99.0,0.98.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="11458" opendate="2014-7-2 00:00:00" fixdate="2014-7-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>NPEs if RegionServer cannot initialize</summary>
      <description>If master aborts, or RS aborts before initialization is complete, we run into a lot of NPE's in region server abort / stop code path.</description>
      <version>None</version>
      <fixedVersion>0.99.0,0.98.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
    </fixedFiles>
  </bug>
  <bug id="11459" opendate="2014-7-2 00:00:00" fixdate="2014-7-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add more doc on compression codecs, how to hook up native lib, lz4, etc.</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>2.0.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.book.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1146" opendate="2009-1-21 00:00:00" fixdate="2009-1-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replace the HRS leases with Zookeeper</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>0.20.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.hadoop.hbase.TestHBaseCluster.java</file>
      <file type="M">src.test.org.apache.hadoop.hbase.regionserver.TestLogRolling.java</file>
      <file type="M">src.test.org.apache.hadoop.hbase.filter.TestRowFilterAfterWrite.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.zookeeper.ZooKeeperWrapper.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.ServerManager.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.RegionManager.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.HMaster.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.HConstants.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="11489" opendate="2014-7-10 00:00:00" fixdate="2014-7-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ClassNotFoundException while running IT tests in trunk using &amp;#39;mvn verify&amp;#39;</summary>
      <description>Trying to run mvn verify -Dit.test=IntegrationTestBigLinkedList -Dtest.output.tofile=falsecauses this ClassNotFoundException issuetestContinuousIngest(org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList): org/jboss/netty/channel/ChannelFactory</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-it.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="11496" opendate="2014-7-10 00:00:00" fixdate="2014-7-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>HBASE-9745 broke cygwin CLASSPATH translation</summary>
      <description>HBASE-9745 put HBASE_CLASSPATH back at the end of the Java classpath, but also moved it to happen after the cygwin translation which broke it.</description>
      <version>None</version>
      <fixedVersion>0.99.0,0.96.3,0.98.4,0.94.22</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.hbase</file>
    </fixedFiles>
  </bug>
  <bug id="11548" opendate="2014-7-19 00:00:00" fixdate="2014-7-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[PE] Add &amp;#39;cycling&amp;#39; test N times and unit tests for size/zipf/valueSize calculations</summary>
      <description>Small PE diff to add a cycles argument so can have a small test run a long time against same keyset.</description>
      <version>None</version>
      <fixedVersion>2.0.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.TestPerformanceEvaluation.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.PerformanceEvaluation.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.ScannerCallableWithReplicas.java</file>
    </fixedFiles>
  </bug>
  <bug id="11589" opendate="2014-7-25 00:00:00" fixdate="2014-8-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AccessControlException should be a not retriable exception</summary>
      <description>RPC server does not handle the AccessControlException thrown by authorizeConnection failure properly and in return sends IOException to the HBase client. Ultimately the client does retries and gets RetriesExhaustedException but does not getting any link or information or stack trace about AccessControlException. In short summary, upon inspection of RPCServer.java, it seems for the Listener, the Reader read code as below does not handle AccessControlExceptionvoid doRead(….…..….. try { count = c.readAndProcess(); // This readAndProcess method throws AccessControlException from processOneRpc(byte[] buf) which is not handled ? } catch (InterruptedException ieo) { throw ieo; } catch (Exception e) { LOG.warn(getName() + ": count of bytes read: " + count, e); count = -1; //so that the (count &lt; 0) block is executed }Below is the client logs if authorizeConnection throws AccessControlException:2014-07-24 19:40:58,768 INFO &amp;#91;main&amp;#93; client.HConnectionManager$HConnectionImplementation: getMaster attempt 7 of 7 failed; no more retrying.com.google.protobuf.ServiceException: java.io.IOException: Call to host-10-18-40-101/10.18.40.101:60000 failed on local exception: java.io.EOFException at org.apache.hadoop.hbase.ipc.RpcClient.callBlockingMethod(RpcClient.java:1674) at org.apache.hadoop.hbase.ipc.RpcClient$BlockingRpcChannelImplementation.callBlockingMethod(RpcClient.java:1715) at org.apache.hadoop.hbase.protobuf.generated.MasterProtos$MasterService$BlockingStub.isMasterRunning(MasterProtos.java:42561) at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation$MasterServiceStubMaker.isMasterRunning(HConnectionManager.java:1688) at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation$StubMaker.makeStubNoRetries(HConnectionManager.java:1597) at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation$StubMaker.makeStub(HConnectionManager.java:1623) at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation$MasterServiceStubMaker.makeStub(HConnectionManager.java:1677) at org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation.getKeepAliveMasterService(HConnectionManager.java:1885)&amp;#91;...&amp;#93;Caused by: java.io.IOException: Call to host-10-18-40-101/10.18.40.101:60000 failed on local exception: java.io.EOFException at org.apache.hadoop.hbase.ipc.RpcClient.wrapException(RpcClient.java:1485) at org.apache.hadoop.hbase.ipc.RpcClient.call(RpcClient.java:1457) at org.apache.hadoop.hbase.ipc.RpcClient.callBlockingMethod(RpcClient.java:1657) ... 254 moreCaused by: java.io.EOFException at java.io.DataInputStream.readInt(DataInputStream.java:375) at org.apache.hadoop.hbase.ipc.RpcClient$Connection.readResponse(RpcClient.java:1072) at org.apache.hadoop.hbase.ipc.RpcClient$Connection.run(RpcClient.java:728)</description>
      <version>0.98.3</version>
      <fixedVersion>0.99.0,0.98.6</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.HBaseFsck.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.FSUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.ipc.RpcServer.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.security.AccessDeniedException.java</file>
    </fixedFiles>
  </bug>
  <bug id="11615" opendate="2014-7-30 00:00:00" fixdate="2014-7-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>TestZKLessAMOnCluster.testForceAssignWhileClosing failed on Jenkins</summary>
      <description>Failed on branch-1.Example Failure: https://builds.apache.org/job/HBase-1.0/75/testReport/org.apache.hadoop.hbase.master/TestZKLessAMOnCluster/testForceAssignWhileClosing/</description>
      <version>None</version>
      <fixedVersion>0.99.0,0.98.6</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.java</file>
    </fixedFiles>
  </bug>
  <bug id="11701" opendate="2014-8-7 00:00:00" fixdate="2014-8-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Start and end of memstore flush log should be on the same level</summary>
      <description>Currently the start of the memstore flush is done in DEBUG level and when it finishes is done in INFO. Both should be done in the same level.</description>
      <version>None</version>
      <fixedVersion>0.99.0,0.98.6</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="11702" opendate="2014-8-7 00:00:00" fixdate="2014-8-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Better introspection of long running compactions</summary>
      <description>For better introspection of long running compactions, periodically print compaction progress for a file at DEBUG level (thread name, file path, total compacted KVs, total compacted bytes, completion percent, rate).</description>
      <version>None</version>
      <fixedVersion>0.99.0,0.98.6</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.MetricsRegionServerWrapperStub.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.Store.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.MetricsRegionServerWrapperImpl.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HStore.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.compactions.Compactor.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.compactions.CompactionProgress.java</file>
      <file type="M">hbase-hadoop2-compat.src.main.java.org.apache.hadoop.hbase.regionserver.MetricsRegionServerSourceImpl.java</file>
      <file type="M">hbase-hadoop-compat.src.main.java.org.apache.hadoop.hbase.regionserver.MetricsRegionServerWrapper.java</file>
      <file type="M">hbase-hadoop-compat.src.main.java.org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.java</file>
    </fixedFiles>
  </bug>
  <bug id="11796" opendate="2014-8-21 00:00:00" fixdate="2014-9-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add client support for atomic checkAndMutate</summary>
      <description>Currently HBase has support for atomic checkAndPut as well as checkAndDelete operations on individual rows. HBase also supports the atomic submission of multiple operations through mutateRow. It would be nice to support atomic checkAndMutate(RowMutations) as well.</description>
      <version>None</version>
      <fixedVersion>0.98.7,0.99.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-thrift.src.main.java.org.apache.hadoop.hbase.thrift2.HTablePool.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestHRegion.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.client.RemoteHTable.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.RSRpcServices.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.HTableWrapper.java</file>
      <file type="M">hbase-protocol.src.main.protobuf.Client.proto</file>
      <file type="M">hbase-protocol.src.main.java.org.apache.hadoop.hbase.protobuf.generated.ClientProtos.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.protobuf.RequestConverter.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.Table.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.HTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="11886" opendate="2014-9-3 00:00:00" fixdate="2014-9-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The creator of the table should have all permissions on the table</summary>
      <description>In our testing of 0.98.4 with security ON, we found that table creator doesn't have RWXCA on the created table. Instead, the user representing the HBase daemon gets all permissions. Due to this the table creator can't write to the table he just created. I am suspecting HBASE-11275 introduced the problem.</description>
      <version>0.98.3</version>
      <fixedVersion>0.99.0,0.98.6</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.CreateTableHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="12781" opendate="2014-12-30 00:00:00" fixdate="2014-12-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>thrift2 listen port will bind always to the passed command line address</summary>
      <description>In Thrift server, listen port will bind always to the address which is passed through command line argument. InetSocketAddress inetSocketAddress = bindToPort(cmd.getOptionValue("bind"), listenPort);private static InetSocketAddress bindToPort(String bindValue, int listenPort) throws UnknownHostException { try { if (bindValue == null) { return new InetSocketAddress(listenPort); } else { return new InetSocketAddress(InetAddress.getByName(bindValue), listenPort); } } catch (UnknownHostException e) { throw new RuntimeException("Could not bind to provided ip address", e); } }In case when bind address is not passed through argument then it is binding with any local address. It should read hbase.thrift.info.bindAddress value from configuration first.</description>
      <version>0.98.3</version>
      <fixedVersion>1.0.0,0.98.10,1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-thrift.src.main.java.org.apache.hadoop.hbase.thrift2.ThriftServer.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
