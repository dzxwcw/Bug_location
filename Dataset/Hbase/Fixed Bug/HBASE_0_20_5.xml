<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="HBASE">
  <bug id="2474" opendate="2010-4-20 00:00:00" fixdate="2010-4-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bug in 2248 - mixed version reads (not allowed by spec)</summary>
      <description>While doing a concurrent read/write test, the reader eventually gets a situation where the first column in the result set has the wrong 'value' than the rest of the result set (of 50 columns or so). The test (included) does puts of 50 columns with all the same (Random) value. The reader validates that all values are equal, and fails.</description>
      <version>0.20.4,0.20.5,0.90.0</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.hadoop.hbase.regionserver.TestMemStore.java</file>
      <file type="M">core.src.test.java.org.apache.hadoop.hbase.regionserver.TestHRegion.java</file>
      <file type="M">core.src.test.java.org.apache.hadoop.hbase.HBaseTestCase.java</file>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2482" opendate="2010-4-23 00:00:00" fixdate="2010-5-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>regions in transition do not get reassigned by master when RS crashes</summary>
      <description>Very similar to HBASE-1928, but for the general case (not just ROOT/META):If a region is in transition on a RS when the RS crashes, the master does not remove it from regionsInTransition when processing the RS shutdown. This is fairly easy to trigger by bringing up a RS and kill -9ing it just as it starts to get regions assigned. Those regions will get permanently lost since they're stuck in regionsInTransition and thus don't get assigned by the metascanner.</description>
      <version>0.20.5</version>
      <fixedVersion>0.20.5,0.90.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.hadoop.hbase.MiniHBaseCluster.java</file>
      <file type="M">core.src.test.java.org.apache.hadoop.hbase.master.TestMasterTransistions.java</file>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.master.ServerManager.java</file>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.master.RegionServerOperationQueue.java</file>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.master.RegionServerOperationListener.java</file>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.master.RegionManager.java</file>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.master.ProcessServerShutdown.java</file>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.master.HMaster.java</file>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.LocalHBaseCluster.java</file>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.HMsg.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2487" opendate="2010-4-26 00:00:00" fixdate="2010-4-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Uncaught exceptions in receiving IPC responses orphan clients</summary>
      <description>This is HADOOP-6723, see that issue for details.</description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.ipc.HBaseClient.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2488" opendate="2010-4-26 00:00:00" fixdate="2010-4-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Master should warn more loudly about unexpected events</summary>
      <description>In debugging cluster issues, I found that we aren't logging certain things loudly enough. This patch adds two more info level logs for things that may be indicative of bugs/problems - certainly not exhaustive, but found them helpful in tracking down assignment bugs.</description>
      <version>0.20.5</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.hadoop.hbase.client.TestScannerTimeout.java</file>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.master.ServerManager.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2763" opendate="2010-6-22 00:00:00" fixdate="2010-6-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cross-port HADOOP-6833 IPC parameter leak bug</summary>
      <description>There's a bug where any RPC call that throws an exception ends up leaking the parameter objects of that call. This was introduced by HBASE-2360</description>
      <version>0.20.5,0.90.0</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.ipc.HBaseClient.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2838" opendate="2010-7-16 00:00:00" fixdate="2010-7-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replication metrics</summary>
      <description>Replication needs to publish metrics about its performance: WALEdits read, filtered, sent to slave clusters, applied on slaves size of batches sent/received ms spent on reading, sending, applying editsThis can be done using HadoopMetrics.Also we need to publish information not related to performance: size of each HLog queues age of the last replicated edit in each queue time of last successful replicationThese informations can hardly be graphed, but we still need to represent them somehow. It has to be accessible by web UI, shell, and other tools in general. I don't feel strongly about creating a new public method on HRS's interface, and I'm not sure publishing those in ZooKeeper is a good idea either (why add another indirection?). Still wondering about a better solution.</description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.java.org.apache.hadoop.hbase.replication.TestReplication.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.replication.regionserver.ReplicationSource.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.replication.regionserver.ReplicationSink.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2865" opendate="2010-7-22 00:00:00" fixdate="2010-7-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cleanup of LRU logging; its hard to read, uses custom MB&amp;#39;maker, repeats info, too many numbers after the point, etc.</summary>
      <description>Sorry, I got stuck on this. I wanted to clear the LRU logging from the log but I suppose its of use... then I started to study it.</description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.java.org.apache.hadoop.hbase.io.hfile.TestLruBlockCache.java</file>
      <file type="M">src.test.java.org.apache.hadoop.hbase.io.hfile.TestCachedBlockQueue.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.io.hfile.CachedBlockQueue.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.io.hfile.CachedBlock.java</file>
      <file type="M">src.assembly.bin.xml</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.io.hfile.LruBlockCache.java</file>
    </fixedFiles>
  </bug>
  <bug id="2868" opendate="2010-7-22 00:00:00" fixdate="2010-8-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Do some small cleanups in org.apache.hadoop.hbase.regionserver.wal</summary>
      <description>Since i am touching this area its probably better to leave it in a cleaner state. Non deprecated ,etc</description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.regionserver.wal.HLog.java</file>
      <file type="M">src.test.java.org.apache.hadoop.hbase.regionserver.wal.TestLogRolling.java</file>
      <file type="M">src.test.java.org.apache.hadoop.hbase.regionserver.wal.TestLogActionsListener.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2869" opendate="2010-7-22 00:00:00" fixdate="2010-7-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Regularize how we log sequenceids -- sometimes its myseqid, other times its sequence id, etc.</summary>
      <description>I'm trying to trace sequenceids over time to make sure all is working properly over crashes, etc., in an HRS and its way too painful. Regularize how we log so whenever a sequence id is mentioned in logs its named sequenceid.</description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.regionserver.Store.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.regionserver.wal.HLog.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2873" opendate="2010-7-23 00:00:00" fixdate="2010-7-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Minor clean up in basescanner; fix a log and make deletes of region processing run in order</summary>
      <description>Minor stuff I tripped over looking at HBASE-2866 logs.</description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.regionserver.CompactSplitThread.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.master.BaseScanner.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2886" opendate="2010-7-28 00:00:00" fixdate="2010-7-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add search box to site</summary>
      <description>Add search box to HBase site which directs users to http://search-hadoop.comThis was discussed on mailing list: http://search-hadoop.com/m/pv9ndRH2tc</description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.master.HMaster.java</file>
      <file type="M">pom.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2892" opendate="2010-7-30 00:00:00" fixdate="2010-7-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replication metrics aren&amp;#39;t updated</summary>
      <description>When I committed HBASE-2838, I changed the way the metrics were managed in my last patch but I forgot to put the doUpdates in place.</description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceMetrics.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.replication.regionserver.ReplicationSinkMetrics.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2901" opendate="2010-8-5 00:00:00" fixdate="2010-8-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>HBASE-2461 broke build</summary>
      <description>I broke the build. Fix coming.</description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.regionserver.SplitTransaction.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2907" opendate="2010-8-11 00:00:00" fixdate="2010-10-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[rest/stargate] Improve error response when trying to create a scanner on a nonexistant table</summary>
      <description>Since 0.20.4, an attempt to create a scanner for a nonexistant table receives a "400 Bad Request" response with no furthur information. Prior to 0.20.4 it would receive a "500 org.apache.hadoop.hbase.TableNotFoundException: &lt;table&gt;" response with a stack trace in the body.Neither of these is ideal - the 400 fails to identify what aspect of the request was bad, and the 500 incorrectly suggests that the error was internal. Ideally the error should be a 400 error with information in the body identifying the nature of the problem.</description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.java.org.apache.hadoop.hbase.rest.TestScannerResource.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.rest.ScannerResource.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3117" opendate="2010-10-16 00:00:00" fixdate="2010-5-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Thrift to 0.5 version</summary>
      <description>Thrift 0.5 has been released already and we want to upgrade to at least 0.3 but 0.5 has a lot of improvements so that would be the best.Unfortunately the Java lib has changed so that we'll have to regenerate the current Thrift interface and fix the implementation (byte[] -&gt; ByteBuffer).They also have problems getting Thrift into a Maven repository so we'll need to do our current workaround again unfortunately and upload it to a repository. That would be Ryan's I think?I'll upload an updated thrift jar and a patch for the old Thrift code.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="3227" opendate="2010-11-11 00:00:00" fixdate="2010-11-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Edit of log messages before branching...</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.regionserver.Store.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.regionserver.CompactSplitThread.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.client.HConnectionManager.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
</bugrepository>
