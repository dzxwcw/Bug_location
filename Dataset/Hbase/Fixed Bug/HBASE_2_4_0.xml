<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="HBASE">
  <bug id="23855" opendate="2020-2-16 00:00:00" fixdate="2020-2-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Change bytes size to human readable size for Server Metrics of RegionServer Web UI</summary>
      <description>I found that the “BytesBufferAllocator Status” in RegionServer Web UI still using "Bytes" as a fixture unit. I think we should use "MB" or "GB" when the size is too large  The Web UI after improvement:</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.jamon.org.apache.hadoop.hbase.tmpl.regionserver.ServerMetricsTmpl.jamon</file>
    </fixedFiles>
  </bug>
  <bug id="23857" opendate="2020-2-17 00:00:00" fixdate="2020-2-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add 2.1.9 to download page</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.site.xdoc.downloads.xml</file>
    </fixedFiles>
  </bug>
  <bug id="23859" opendate="2020-2-17 00:00:00" fixdate="2020-2-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modify "Block locality" of RegionServer Web UI to human readable percentage</summary>
      <description>The unit of "Block locality" in Web UI just like picture 1I think we should change it to percentage unit like picture 2 </description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,2.2.4,2.1.10</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.jamon.org.apache.hadoop.hbase.tmpl.regionserver.ServerMetricsTmpl.jamon</file>
    </fixedFiles>
  </bug>
  <bug id="24002" opendate="2020-3-17 00:00:00" fixdate="2020-3-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>shadedjars check does not propagate --hadoop-profile</summary>
      <description>After HBASE-23829, we see the shadedjars check fail on JDK11 stages. From the logTue Mar 17 00:14:24 UTC 2020cd /home/jenkins/jenkins-slave/workspace/Base-PreCommit-GitHub-PR_PR-1296/yetus-jdk11-hadoop3-check/src/opt/maven/bin/mvn --batch-mode -Dmaven.repo.local=/home/jenkins/jenkins-slave/workspace/Base-PreCommit-GitHub-PR_PR-1296/yetus-m2/hbase-branch-2-patch-1 clean verify -fae --batch-mode -pl hbase-shaded/hbase-shaded-check-invariants -am -Dtest=NoUnitTests -DHBasePatchProcess -Prelease -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true -Dspotbugs.skip=true...[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (hadoop3-profile-required) @ hbase ---[INFO] Adding ignore: module-info[WARNING] Rule 0: org.apache.maven.plugins.enforcer.RequireProperty failed with message:HBase with JDK11 requires Hadoop3. Activate the profile with `-Dhadoop.profile=3.0`.</description>
      <version>3.0.0-alpha-1,2.3.0,2.4.0</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-support.hbase-personality.sh</file>
    </fixedFiles>
  </bug>
  <bug id="24016" opendate="2020-3-18 00:00:00" fixdate="2020-3-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Change nightly poll from cron @daily to pollSCM @daily; i.e. run nightly if a change ONLY</summary>
      <description>Change build on branch-1.3, 1.4, 2.1, and feature branches HBASE-23162-branch-1 and HBASE-22114-branch-1 to be pollSCM @daily &amp;#8211; i.e. poll once a day and if change run nightly &amp;#8211; rather than build every night regardless.See https://lists.apache.org/thread.html/r5dca2cacc123f2e5719c622add6853ac62b56b2a77885fe0b2eb53c3%40%3Cdev.hbase.apache.org%3E for dev list discussion on downing our nightly load.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,1.3.7,1.7.0,2.1.10,1.4.14,2.2.5</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-support.Jenkinsfile</file>
    </fixedFiles>
  </bug>
  <bug id="24017" opendate="2020-3-18 00:00:00" fixdate="2020-3-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Turn down flakey rerun rate on all but hot branches</summary>
      <description>Keep flakies running on branch-2.3 and branch-2.2 every four hours.Have it so flakies run twice a day on master and branch-2/2.4 instead of every 4 hours.Have it so we run once a day on 2.1, 1.4, and 1.3.Reporting is done once a day still (untouched).</description>
      <version>3.0.0-alpha-1,1.3.6,2.1.9,1.4.13,2.4.0</version>
      <fixedVersion>3.0.0-alpha-1,1.3.7,2.4.0,2.1.10,1.4.14</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-support.flaky-tests.run-flaky-tests.Jenkinsfile</file>
    </fixedFiles>
  </bug>
  <bug id="2402" opendate="2010-4-1 00:00:00" fixdate="2010-4-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[stargate] set maxVersions on gets</summary>
      <description>Support setting maxVersions on get. Append query parameter "v" to the end of resource URIs on GETs, e.g. "?v=3" for max 3 versions.</description>
      <version>None</version>
      <fixedVersion>0.20.4,0.90.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.RowSpec.java</file>
    </fixedFiles>
  </bug>
  <bug id="24023" opendate="2020-3-20 00:00:00" fixdate="2020-3-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add 2.2.4 to download page</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.site.xdoc.downloads.xml</file>
    </fixedFiles>
  </bug>
  <bug id="24024" opendate="2020-3-20 00:00:00" fixdate="2020-4-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Optionally reject multi() requests with very high no of rows</summary>
      <description>As part of multi() request, RegionServer might receive requests with higher rows than row size threshold defined by hbase.rpc.rows.warning.threshold, and we provide warning log. To improve CPU consumption, we should introduce a config that would let RegionServer reject such requests other than providing warning log. This is an attempt to not let any client overburden CPU computation available to RegionServers.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.asciidoc..chapters.hbase-default.adoc</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestMultiLogThreshold.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.RSRpcServices.java</file>
      <file type="M">hbase-common.src.main.resources.hbase-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2403" opendate="2010-4-2 00:00:00" fixdate="2010-4-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[stargate] client HTable interface to REST connector</summary>
      <description>Implement a HTableInterface that wraps client access to the REST connector. Many ops can be supported, except for filters on Gets, ICV, CheckAndPut, and row locks. Just throw exceptions for those. Backport to branch as HTable subclass.</description>
      <version>None</version>
      <fixedVersion>0.20.4,0.90.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.ScannerInstanceResource.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.RowSpec.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.RowResource.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.model.ScannerModel.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="24032" opendate="2020-3-21 00:00:00" fixdate="2020-3-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[RSGroup] Assign created tables to respective rsgroup automatically instead of manual operations</summary>
      <description>In prod practise, it's time consuming and tiring to assign tables to their rsgroups for HBase admin by shell, especially in 1.x rsgroup client is IA.private, we could not even write some programs to do that.And I'm here proposing a solution to do the automated rsgroup assignment by allowing running a shell in postCreateTable to determine which table should go to which rsgroup (way in branch-1 not master). The benefit is obvious, admin can determine or change at any time the mapping rule in script without restarting or re-config anything. It's flexible, convenience and time saving.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,1.7.0,1.4.14,2.2.5</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rsgroup.RSGroupUtil.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rsgroup.RSGroupInfoManagerImpl.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rsgroup.RSGroupInfoManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rsgroup.DisabledRSGroupInfoManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="24033" opendate="2020-3-22 00:00:00" fixdate="2020-3-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add ut for loading the corrupt recovered hfiles</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.wal.TestWALSplitToHFile.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.wal.WALSplitUtil.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="24037" opendate="2020-3-24 00:00:00" fixdate="2020-3-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add ut for root dir and wal root dir are different</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.wal.TestWALSplitToHFile.java</file>
    </fixedFiles>
  </bug>
  <bug id="24057" opendate="2020-3-26 00:00:00" fixdate="2020-3-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add modules to mapreduce job classpaths</summary>
      <description>Modularization of hbase-server introduced new top-level modules that are missing from MapReduce jobs' classpath.CompactionTool job in MapReduce mode required ReplicationUtils class which is moved to the hbase-replication module.</description>
      <version>3.0.0-alpha-1,2.3.0,2.4.0,2.1.10,2.2.5</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,2.1.10,2.2.5</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-mapreduce.src.main.java.org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="2406" opendate="2010-4-3 00:00:00" fixdate="2010-10-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Define semantics of cell timestamps/versions</summary>
      <description>There is a lot of general confusion over the semantics of the cell timestamp. In particular, a couple questions that often come up: If multiple writes to a cell have the same timestamp, are all versions maintained or just the last? Is it OK to write cells in a non-increasing timestamp order?Let's discuss, figure out what semantics make sense, and then move towards (a) documentation, (b) unit tests that prove we have those semantics.</description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.site.site.xml</file>
      <file type="M">src.docbkx.sample.article.xml</file>
      <file type="M">pom.xml</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">src.docbkx.book.xml</file>
    </fixedFiles>
  </bug>
  <bug id="24062" opendate="2020-3-26 00:00:00" fixdate="2020-4-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add 2.1.10 to download page</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.site.xdoc.downloads.xml</file>
    </fixedFiles>
  </bug>
  <bug id="24105" opendate="2020-4-2 00:00:00" fixdate="2020-4-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[Flakey Test] regionserver.TestRegionReplicas</summary>
      <description>There are 3 failed runs from flakey test board.org.apache.hadoop.hbase.regionserver.TestRegionReplicas.testFlushAndCompactionsInPrimaryFailing for the past 1 build (Since #5954 )Took 45 sec.Error Messageexpected null, but was:&lt;org.apache.hadoop.hbase.NotServingRegionException: TestRegionReplicas,,1585782621571_0001.0896d89824217690d8a4b391bb139962. is not online on asf905.gq1.ygridcore.net,37761,1585782616299&gt;Stacktracejava.lang.AssertionError: expected null, but was:&lt;org.apache.hadoop.hbase.NotServingRegionException: TestRegionReplicas,,1585782621571_0001.0896d89824217690d8a4b391bb139962. is not online on asf905.gq1.ygridcore.net,37761,1585782616299&gt; at org.apache.hadoop.hbase.regionserver.TestRegionReplicas.testFlushAndCompactionsInPrimary(TestRegionReplicas.java:432)Standard OutputFormatting using clusterid: testClusterIDjava.lang.ThreadGroup[name=PEWorkerGroup,maxpri=10] Thread[HFileArchiver-3,5,PEWorkerGroup] Thread[HFileArchiver-4,5,PEWorkerGroup]Standard Error</description>
      <version>2.3.0,2.4.0</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.handler.CloseRegionHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="24112" opendate="2020-4-3 00:00:00" fixdate="2020-4-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[RSGroup] Support renaming rsgroup</summary>
      <description>Rsgroup name once is decided at the beginning, it is difficult to rename it.Current approach is removing all tables and servers back to default rsgroup, then delete it and add a rsgroup with the new name, after that moving regions and servers back. Or without moving back, if machine resources is ample. Anyway, it is an expensive operation: moving regions, breaking region's locality.And given that rsgroup is one kind of managements in cluster, and management sometimes changes, renaming is necessary.It is simple in implementation. I'm working on it.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,1.7.0,2.2.5</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-thrift.src.main.java.org.apache.hadoop.hbase.thrift2.client.ThriftAdmin.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.rsgroup.VerifyingRSGroupAdmin.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.rsgroup.TestRSGroupsAdmin1.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rsgroup.RSGroupInfoManagerImpl.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rsgroup.RSGroupInfoManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rsgroup.RSGroupAdminServiceImpl.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rsgroup.DisabledRSGroupInfoManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.MasterRpcServices.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.MasterCoprocessorHost.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coprocessor.MasterObserver.java</file>
      <file type="M">hbase-protocol-shaded.src.main.protobuf.server.rsgroup.RSGroupAdmin.proto</file>
      <file type="M">hbase-protocol-shaded.src.main.protobuf.server.master.Master.proto</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.rsgroup.RSGroupInfo.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.RawAsyncHBaseAdmin.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.AsyncHBaseAdmin.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.AsyncAdmin.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.AdminOverAsyncAdmin.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.Admin.java</file>
    </fixedFiles>
  </bug>
  <bug id="24113" opendate="2020-4-3 00:00:00" fixdate="2020-4-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade the maven we use from 3.5.4 to 3.6.3 in nightlies</summary>
      <description>I want to up parallelism of nightlies and hopefully improve stability. Lets use latest maven, go from 3.5.4 to 3.6.3.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">dev-support.hbase.docker.Dockerfile</file>
      <file type="M">dev-support.docker.Dockerfile</file>
    </fixedFiles>
  </bug>
  <bug id="24115" opendate="2020-4-4 00:00:00" fixdate="2020-5-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Relocate test-only REST "client" from src/ to test/ and mark Private</summary>
      <description>Relocate test-only REST "client" from src/ to test/ and annotate as Private. The classes o.a.h.h.rest.Remote* were developed to facilitate REST unit tests and incorrectly committed to src/ . Although this "breaks" compatibility by moving public classes to test jar and marking them private, no attention has been paid to these classes with respect to performance, convenience, or security. Consensus from various discussions over the years is to move them to test/ as was intent of the original committer, but misplaced by the same individual.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,1.3.7,1.7.0,2.1.10,1.4.14,2.2.5</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-rest.src.main.java.org.apache.hadoop.hbase.rest.client.RemoteHTable.java</file>
      <file type="M">hbase-rest.src.main.java.org.apache.hadoop.hbase.rest.client.RemoteAdmin.java</file>
      <file type="M">hbase-examples.src.main.java.org.apache.hadoop.hbase.rest.RESTDemoClient.java</file>
    </fixedFiles>
  </bug>
  <bug id="24119" opendate="2020-4-6 00:00:00" fixdate="2020-4-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Polish the protobuf usage in hbase-examples</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-protocol-shaded.src.main.protobuf.server.coprocessor.examples.RowCount.proto</file>
      <file type="M">hbase-protocol-shaded.src.main.protobuf.server.coprocessor.examples.RefreshHFiles.proto</file>
      <file type="M">hbase-protocol-shaded.src.main.protobuf.server.coprocessor.examples.BulkDelete.proto</file>
      <file type="M">hbase-protocol-shaded.pom.xml</file>
      <file type="M">hbase-examples.src.test.java.org.apache.hadoop.hbase.types.TestPBCell.java</file>
      <file type="M">hbase-examples.src.main.java.org.apache.hadoop.hbase.types.PBType.java</file>
      <file type="M">hbase-examples.src.main.java.org.apache.hadoop.hbase.types.PBCell.java</file>
      <file type="M">hbase-examples.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2412" opendate="2010-4-6 00:00:00" fixdate="2010-4-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[stargate] PerformanceEvaluation</summary>
      <description>A version of PE that works with Stargate. Patch includes a number of fixes for multiuser mode and the client library also.</description>
      <version>None</version>
      <fixedVersion>0.20.4,0.90.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.util.UserData.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.util.HTableTokenBucket.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.User.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.TableResource.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.StorageClusterStatusResource.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.SchemaResource.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.ScannerResource.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.RowResource.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.RootResource.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.RESTServlet.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.RegionsResource.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.model.TableSchemaModel.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.model.TableRegionModel.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.Main.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.client.RemoteHTable.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.client.Cluster.java</file>
      <file type="M">contrib.stargate.core.src.main.java.org.apache.hadoop.hbase.stargate.client.Client.java</file>
      <file type="M">contrib.stargate.core.pom.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="24121" opendate="2020-4-6 00:00:00" fixdate="2020-4-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[Authorization] ServiceAuthorizationManager isn&amp;#39;t dynamically updatable. And it should be.</summary>
      <description>Some more background information.ServiceAuthorizationManager is responsible for the Services access rights defined in hbase-policy.xml which locates under $hbase_home/conf directory.Currently, since it doesn't support update dynamically, we need to restart master/regionservers to make configurations take effect. It is an expensive and low efficient admin operation.HDFS has the refreshPolicy to do that, HBase also has update_config command, we can make use of that.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,1.7.0,1.4.14,2.2.5</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.ipc.RpcServer.java</file>
    </fixedFiles>
  </bug>
  <bug id="24122" opendate="2020-4-6 00:00:00" fixdate="2020-4-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Change machine ulimit-l to ulimit-a so dumps full ulimit rather than just &amp;#39;max locked memory&amp;#39;</summary>
      <description>Dump out full ulimit list under the machine dir job output rather than one-liner. More utility.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,2.2.5</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-support.gather.machine.environment.sh</file>
    </fixedFiles>
  </bug>
  <bug id="24185" opendate="2020-4-14 00:00:00" fixdate="2020-4-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Junit tests do not behave well with System.exit or Runtime.halt or JVM exits in general.</summary>
      <description>This ends up exiting the JVM and confusing / erroring out the test runner that manages that JVM as well as cutting off test output files.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-common.src.test.java.org.apache.hadoop.hbase.HBaseClassTestRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="24393" opendate="2020-5-18 00:00:00" fixdate="2020-5-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>release scripts should allow for creation of initial CHANGES/RELEASE on new major version.</summary>
      <description>Right now if you try to run the release scripts on a new major version, e.g. one without a RELEASENOTES.md and CHANGES.md things fail:/opt/hbase-rm/output+ sed -i -e '/^## Release 3.0.0-alpha-1/,/^## Release/ {//!d; /^## Release 3.0.0-alpha-1/d;}' /opt/hbase-rm/output/hbase/CHANGES.mdsed: can't read /opt/hbase-rm/output/hbase/CHANGES.md: No such file or directory+ true+ sed -i -e '/^# HBASE 3.0.0-alpha-1 Release Notes/,/^# HBASE/{//!d; /^# HBASE 3.0.0-alpha-1 Release Notes/d;}' /opt/hbase-rm/output/hbase/RELEASENOTES.mdsed: can't read /opt/hbase-rm/output/hbase/RELEASENOTES.md: No such file or directory+ true+ sed -i -e '/## Release/,$!d' CHANGELOG.3.0.0-alpha-1.md+ sed -i -e '/DO NOT REMOVE/r CHANGELOG.3.0.0-alpha-1.md' /opt/hbase-rm/output/hbase/CHANGES.mdsed: can't read /opt/hbase-rm/output/hbase/CHANGES.md: No such file or directory+ cleanupinstead we should just create the new files.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-support.create-release.release-util.sh</file>
    </fixedFiles>
  </bug>
  <bug id="24405" opendate="2020-5-20 00:00:00" fixdate="2020-5-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document hbase:slowlog in detail</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.asciidoc..chapters.ops.mgt.adoc</file>
      <file type="M">src.main.asciidoc..chapters.hbase-default.adoc</file>
      <file type="M">hbase-common.src.main.resources.hbase-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="24408" opendate="2020-5-21 00:00:00" fixdate="2020-5-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Introduce a general &amp;#39;local region&amp;#39; to store data on master</summary>
      <description>We already have a local region to store the procedure data and when implementing HBASE-11288, splittable meta, we are thinking of also storing the data for root table in a local region.Now in the patch for HBASE-24388, we introduced another local region to store the data for root table, but maybe it is better to store the procedure data and root table together in a single region(with different families).And this should be done before 2.3.0, to prevent shipping the procedure store region out in a release. Set it a blocker for 2.3.0.Patch will be available soon.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.procedure2.store.region.TestWALProcedurePrettyPrinter.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.procedure2.store.region.TestRegionProcedureStoreWALCleaner.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.procedure2.store.region.TestRegionProcedureStoreMigration.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.procedure2.store.region.TestRegionProcedureStoreFlush.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.procedure2.store.region.TestRegionProcedureStoreCompaction.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.procedure2.store.region.TestRegionProcedureStore.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.procedure2.store.region.TestHFileProcedurePrettyPrinter.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.procedure2.store.region.RegionProcedureStoreTestHelper.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.procedure2.store.region.RegionProcedureStoreTestBase.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.procedure2.store.region.RegionProcedureStorePerformanceEvaluation.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.HFileArchiveUtil.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.procedure2.store.region.WALProcedurePrettyPrinter.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.procedure2.store.region.RegionProcedureStoreWALRoller.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.procedure2.store.region.RegionProcedureStore.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.procedure2.store.region.RegionFlusherAndCompactor.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.procedure2.store.region.HFileProcedurePrettyPrinter.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.procedure.MasterProcedureUtil.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.HMaster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.cleaner.TimeToLiveProcedureWALCleaner.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.cleaner.TimeToLiveLogCleaner.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.cleaner.TimeToLiveHFileCleaner.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.cleaner.LogCleaner.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.cleaner.HFileCleaner.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.HFileLink.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.FileLink.java</file>
      <file type="M">hbase-procedure.src.main.java.org.apache.hadoop.hbase.procedure2.store.ProcedureStore.java</file>
      <file type="M">hbase-common.src.main.resources.hbase-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="24506" opendate="2020-6-5 00:00:00" fixdate="2020-6-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>async client deadlock</summary>
      <description>I ran into an issue where one instance in a cluster of application servers backed by HBase stopped processing requests. Looking at a thread dump, it seems HBase client threads are deadlocked:https://pastebin.com/raw/B3FJL1AgThe deadlock seemed to happen at the same time that a region server was abruptly stopped (the physical server was restarted unexpectedly).I'm using the hbase async API. The hbase client version is 2.2.4. The server is running 2.2.4 as well.</description>
      <version>3.0.0-alpha-1,2.3.0,2.2.4,2.4.0,2.2.5</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,2.2.6</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-client.src.test.java.org.apache.hadoop.hbase.ipc.TestNettyRpcConnection.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.client.TestAsyncTableGetMultiThreaded.java</file>
      <file type="M">hbase-client.src.test.java.org.apache.hadoop.hbase.ipc.TestIPCUtil.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.ipc.NettyRpcConnection.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.ipc.IPCUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="24562" opendate="2020-6-15 00:00:00" fixdate="2020-7-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Stabilize master startup with meta replicas enabled</summary>
      <description>This is related to HBASE-21624 . I created a separate ticket because in the original one a "complete solution for meta replicas" was requested and this is not one. I'm just trying to make master startup more stable by making assigning meta replicas asynchronous and preventing a potential assignment failure from crashing master.The idea is that starting master with less or even no meta replicas assigned is preferable to not having a running master.</description>
      <version>3.0.0-alpha-1,2.3.0,2.4.0,2.2.5</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,2.2.6</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.client.TestMetaWithReplicas.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.MasterMetaBootstrap.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.HMaster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.assignment.AssignmentManager.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
