<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="HBASE">
  <bug id="478" opendate="2008-2-29 00:00:00" fixdate="2008-5-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>offlining of table does not run reliably</summary>
      <description>I have a table of 4 regions made w/ PE. I cannot reliably offline it. I'm using 'disable TestTable' and have traced it to ensure its not a problem in hql. What I see is that one region will get the offlined mark or maybe two.. but never all.Jim in IRC suggested that if we did the .TABLE. catalog table, offlining the entry there might be more reliable than trying to offline all regions in a table.</description>
      <version>0.1.1,0.1.2,0.2.0</version>
      <fixedVersion>0.1.2,0.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.hadoop.hbase.TestHBaseCluster.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.Memcache.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.TableOperation.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.TableDelete.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.ServerManager.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.RetryableMetaOperation.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.RegionManager.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.ProcessServerShutdown.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.ProcessRegionClose.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.ModifyColumn.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.ChangeTableState.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.BaseScanner.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="569" opendate="2008-4-8 00:00:00" fixdate="2008-5-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>DemoClient.php</summary>
      <description>Adding DemoClient.php implementation</description>
      <version>0.1.0,0.1.1,0.1.2,0.2.0</version>
      <fixedVersion>0.2.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.examples.thrift.README.txt</file>
      <file type="M">conf.hbase-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="573" opendate="2008-4-11 00:00:00" fixdate="2008-4-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>HBase does not read hadoop-*.xml for dfs configuration after moving out hadoop/contrib</summary>
      <description>When HBase was in hadoop/contrib, the hbase script set both HADOOP_CONF_DIRand HBASE_CONF_DIR to CLASSPATH, so that dfs's configuration can be loadedcorrectly. However, when moved out hadoop/contrib, it only sets HBASE_CONF_DIR.I can think of several possible solutions:1) set HADOOP_CONF_DIR in hbase-env.sh, then add HADOOP_CONF_DIR to CLASSPATH as before2) Instruct user to create links for hadoop-*.xml if they want to customize some dfs settings.3) If only a small set of dfs confs are related to dfs's client, maybe they can be set via hbase-site.xml, then hbase sets these for us when create a FileSystem obj.Please see the thread "# of dfs replications when using hbase" on hbase-user@.</description>
      <version>0.1.0,0.1.1,0.1.2,0.2.0</version>
      <fixedVersion>0.1.2,0.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.overview.html</file>
      <file type="M">src.java.org.apache.hadoop.hbase.mapred.IdentityTableMap.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.mapred.GroupingTableMap.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="574" opendate="2008-4-11 00:00:00" fixdate="2008-4-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>HBase does not load hadoop native libs</summary>
      <description>After moving out from hadoop/contrib, the standalone release does not include hadoop native libs in hbase/lib/native while it still includes hadoop-core.jar. I think they should be included as well to improve speed for compression and decompression.</description>
      <version>0.1.0,0.1.1,0.1.2,0.2.0</version>
      <fixedVersion>0.1.2,0.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.hbase</file>
    </fixedFiles>
  </bug>
  <bug id="5770" opendate="2012-4-12 00:00:00" fixdate="2012-4-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a clock skew warning threshold</summary>
      <description>There's currently an exception thrown by the master when a region server attempts to start up with clock skew greater than some configured amount (defaulting to 30 seconds). However, it'd be nice to get some warnings logged at a value that isn't severe enough to warrant killing the RS, but still represents significant skew that could affect correctness. Will attach a simple patch to add this as a setting.</description>
      <version>None</version>
      <fixedVersion>0.94.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.java.org.apache.hadoop.hbase.master.TestClockSkewDetection.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.master.ServerManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="6082" opendate="2012-5-23 00:00:00" fixdate="2012-5-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[refGuide] adding HBck docs in RefGuide appendix</summary>
      <description>Jon pointed me to a PDF that he had put together and attached in HBASE-5634. I ported the attachment to the refGuide in the Appendix.Also, added link in Ops_Mgt.xml Tools chapter to point to the appendix.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.docbkx.ops.mgt.xml</file>
      <file type="M">src.docbkx.book.xml</file>
    </fixedFiles>
  </bug>
  <bug id="6083" opendate="2012-5-24 00:00:00" fixdate="2012-5-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modify old filter tests to use Junit4/no longer use HBaseTestCase</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.filter.TestSingleColumnValueFilter.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.filter.TestSingleColumnValueExcludeFilter.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.filter.TestRandomRowFilter.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.filter.TestPrefixFilter.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.filter.TestPageFilter.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.filter.TestInclusiveStopFilter.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.filter.TestFilterList.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.filter.TestFilter.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.filter.TestDependentColumnFilter.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.filter.TestColumnPaginationFilter.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.filter.TestBitComparator.java</file>
    </fixedFiles>
  </bug>
  <bug id="6084" opendate="2012-5-24 00:00:00" fixdate="2012-5-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Server Load does not display correctly on the ui</summary>
      <description>The ui uses the toString method and toString does not implement it any more.</description>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.ServerLoad.java</file>
    </fixedFiles>
  </bug>
  <bug id="613" opendate="2008-5-2 00:00:00" fixdate="2008-6-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Timestamp-anchored scanning fails to find all records</summary>
      <description>If I add 3 versions of a cell and then scan across the first set of added cells using a timestamp that should only get values from the first upload, a bunch are missing (I added 100k on each of the three uploads). I thought it the fact that we set the number of cells found back to 1 in HStore when we move off current row/column but that doesn't seem to be it. I also tried upping the MAX_VERSIONs on my table and that seemed to have no effect. Need to look closer.Build a unit test because replicating on cluster takes too much time.</description>
      <version>0.1.0,0.1.1,0.1.2</version>
      <fixedVersion>0.1.3,0.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.client.HTable.java</file>
      <file type="M">src.test.org.apache.hadoop.hbase.util.TestMergeTool.java</file>
      <file type="M">src.test.org.apache.hadoop.hbase.TestRegionRebalancing.java</file>
      <file type="M">src.test.org.apache.hadoop.hbase.MultiRegionTable.java</file>
      <file type="M">src.test.org.apache.hadoop.hbase.HBaseTestCase.java</file>
      <file type="M">src.test.org.apache.hadoop.hbase.AbstractMergeTestBase.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.StoreFileScanner.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.Memcache.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HAbstractScanner.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="614" opendate="2008-5-5 00:00:00" fixdate="2008-5-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Retiring regions is not used; exploit or remove</summary>
      <description>There is a little dance around region close where a region first gets moved into the retiring queue. The idea, IIRC, was that regions in retiring could serve reads while close was going about its business. Meant that region was online that bit longer.This feature is not used any more &amp;#8211; regions are added to retiring but gets do not bother to look in retiring. We should either remove retiring cocept altogether or else make use of it again.</description>
      <version>0.1.2,0.2.0</version>
      <fixedVersion>0.2.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.CompactSplitThread.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="619" opendate="2008-5-7 00:00:00" fixdate="2008-5-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix &amp;#39;logs&amp;#39; link in UI</summary>
      <description>Clicking on the 'local logs' link in UI gives 404</description>
      <version>0.1.2,0.2.0</version>
      <fixedVersion>0.1.2,0.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.util.InfoServer.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="620" opendate="2008-5-7 00:00:00" fixdate="2008-5-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>testmergetool failing in branch and trunk since hbase-618 went in</summary>
      <description>The hbase-618 fix revealed that testmergetool depends on compactions running.</description>
      <version>0.1.2,0.2.0</version>
      <fixedVersion>0.1.2,0.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HStore.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="6591" opendate="2012-8-15 00:00:00" fixdate="2012-9-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>checkAndPut executed/not metrics</summary>
      <description>checkAndPut/checkAndDelete return true if the new put was executed, false otherwise.So clients can figure out this metric for themselves, but it would be useful to get a look at what is happening on the cluster as a whole, across all clients.</description>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestRegionServerMetrics.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.metrics.RegionServerMetrics.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="6592" opendate="2012-8-15 00:00:00" fixdate="2012-9-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[shell] Add means of custom formatting output by column</summary>
      <description>See Jacques suggestion toward end of this thread for how we should allow adding a custom formatter per column to use outputting column content in shell: http://search-hadoop.com/m/2WxUB1fuxL11/Printing+integers+in+the+Hbase+shell&amp;subj=Printing+integers+in+the+Hbase+shell</description>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.ruby.hbase.table.test.rb</file>
      <file type="M">hbase-server.src.main.ruby.shell.commands.scan.rb</file>
      <file type="M">hbase-server.src.main.ruby.shell.commands.get.rb</file>
      <file type="M">hbase-server.src.main.ruby.hbase.table.rb</file>
    </fixedFiles>
  </bug>
  <bug id="674" opendate="2008-6-9 00:00:00" fixdate="2008-7-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>memcache size unreliable</summary>
      <description>Multiple updates against same row/column/ts will be seen as increments to cache size on insert but when we then play the memcache at flush time, we'll only see the most recent entry and decrement the memcache size by whatever its size; memcache will be off.</description>
      <version>0.1.2</version>
      <fixedVersion>0.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.Memcache.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HStore.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="6864" opendate="2012-9-22 00:00:00" fixdate="2012-1-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Online snapshots scaffolding</summary>
      <description>Basic scaffolding for taking a snapshot of an offline table. This includes the basic work on both the regionserver and master to support (but not implement) timestamp and globally consistent snapshots.</description>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.snapshot.TestSnapshotDescriptionUtils.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.snapshot.TestSnapshotManager.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.client.TestSnapshotFromClient.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.snapshot.TakeSnapshotUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.snapshot.SnapshotDescriptionUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.snapshot.TakeSnapshotHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.snapshot.SnapshotManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.snapshot.MasterSnapshotVerifier.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.HBaseAdmin.java</file>
      <file type="M">hbase-protocol.src.main.protobuf.hbase.proto</file>
      <file type="M">hbase-protocol.src.main.java.org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.java</file>
    </fixedFiles>
  </bug>
  <bug id="6865" opendate="2012-9-22 00:00:00" fixdate="2012-11-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Snapshot File Cleaners</summary>
      <description>HFile and HLog cleaners are necessary for fully implementing snapshots, but can be broken out into their own piece really cleanly. The HFile cleaner is necessary for both timestamp and globally consistent snapshots, but the HLog cleaner is necessary for globally consistent and offline snapshots. Putting everything together in one patch isn't too much overload as there is a lot of overlap between the cleaners.</description>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.snapshot.SnapshotTestingUtils.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.TestSnapshotFromMaster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.snapshot.SnapshotDescriptionUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.server.snapshot.TakeSnapshotUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.HMaster.java</file>
    </fixedFiles>
  </bug>
  <bug id="698" opendate="2008-6-19 00:00:00" fixdate="2008-7-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>HLog recovery is not performed after master failure</summary>
      <description>I have a local cluster running, and its logging to&lt;hbase&gt;/log_X.X.X.X_1213228101021_60020/Then I kill both master and regionserver, and restart. Looking throughthe logs I don't see anything about trying to recover from this hlog,it just creates a new hlog alongside the existing one (with a newstartcode). The older hlog seems to be ignored, and the tablescreated in the inital session are all gone.</description>
      <version>0.1.2,0.2.1,0.19.3</version>
      <fixedVersion>0.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.master.HMaster.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.BaseScanner.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
</bugrepository>
