<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="HBASE">
  <bug id="20153" opendate="2018-3-8 00:00:00" fixdate="2018-3-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>enable error-prone analysis in precommit</summary>
      <description>We've done a lot of work to get rid of the error-prone errors, we should make sure they stay out. Let's enable errorProne profile and analysis in precommit.busbey - I tried figuring out how to pass flags (-PerrorProne to the mvn compile precommit check but was unable to unravel that thread. Any help is appreciated.</description>
      <version>None</version>
      <fixedVersion>1.4.3,2.0.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-support.hbase-personality.sh</file>
    </fixedFiles>
  </bug>
  <bug id="20801" opendate="2018-6-28 00:00:00" fixdate="2018-6-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix broken TestReplicationShell</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-shell.src.test.ruby.hbase.replication.admin.test.rb</file>
    </fixedFiles>
  </bug>
  <bug id="20806" opendate="2018-6-28 00:00:00" fixdate="2018-7-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Split style journal for flushes and compactions</summary>
      <description>In 1.x we have split transaction journal that gives a clear picture of when various stages of splits took place. We should have a similar thing for flushes and compactions so as to have insights into time spent in various stages, which we can use to identify regressions that might creep up.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.1.0,1.3.3,1.4.6,1.2.7,2.0.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.monitoring.TestTaskMonitor.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.monitoring.MonitoredTaskImpl.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.monitoring.MonitoredTask.java</file>
    </fixedFiles>
  </bug>
  <bug id="20808" opendate="2018-6-28 00:00:00" fixdate="2018-7-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Wrong shutdown order between Chores and ChoreService</summary>
      <description>When stopping master, ChoreService, which serves all the chores, is stopped before canceling all running chores.It should cancel all running chores, then shutdown ChoreService.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.1.0,1.3.3,1.4.6</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.HMaster.java</file>
    </fixedFiles>
  </bug>
  <bug id="2081" opendate="2009-12-30 00:00:00" fixdate="2009-12-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Set the retries higher in shell since client pause is lower</summary>
      <description>Client pause went from 2 to1 second and in the shell we only retry 5 times. I propose we set that to 6 or 7 now to keep the same behavior as before.</description>
      <version>None</version>
      <fixedVersion>0.20.3,0.90.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.hirb.rb</file>
    </fixedFiles>
  </bug>
  <bug id="20813" opendate="2018-6-28 00:00:00" fixdate="2018-8-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove RPC quotas when the associated table/Namespace is dropped off</summary>
      <description>In short, the below scenario shouldn't be the case.hbase(main):023:0&gt; create 't2','cf1' Created table t2 Took 0.7405 seconds =&gt; Hbase::Table - t2 hbase(main):024:0&gt; hbase(main):025:0* hbase(main):026:0* set_quota TYPE =&gt; THROTTLE, TABLE =&gt; 't2', LIMIT =&gt; '10M/sec' Took 0.0082 seconds hbase(main):027:0&gt; list_quotas OWNER QUOTAS TABLE =&gt; t2 TYPE =&gt; THROTTLE, THROTTLE_TYPE =&gt; REQUEST_SIZE, LIMIT =&gt; 10M/sec, SCOPE =&gt; MACHINE 1 row(s) Took 0.0291 seconds hbase(main):028:0&gt; scan 'hbase:quota' ROW COLUMN+CELL t.t2 column=q:s, timestamp=1530165010888, value=PBUF\x12\x0B\x12\x09\x08\x04\x10\x80\x80\x80\x05 \x02 1 row(s) Took 0.0037 seconds hbase(main):029:0&gt; disable 't2' Took 0.4328 seconds hbase(main):030:0&gt; drop 't2' Took 0.2285 seconds hbase(main):031:0&gt; list_quotas OWNER QUOTAS TABLE =&gt; t2 TYPE =&gt; THROTTLE, THROTTLE_TYPE =&gt; REQUEST_SIZE, LIMIT =&gt; 10M/sec, SCOPE =&gt; MACHINE 1 row(s) Took 0.0230 seconds hbase(main):032:0&gt; scan 'hbase:quota' ROW COLUMN+CELL t.t2 column=q:s, timestamp=1530165010888, value=PBUF\x12\x0B\x12\x09\x08\x04\x10\x80\x80\x80\x05 \x02 1 row(s) Took 0.0038 seconds</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.2.0,2.1.1,2.0.2</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.quotas.TestMasterSpaceQuotaObserverWithMocks.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.quotas.TestMasterSpaceQuotaObserver.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.quotas.MasterSpaceQuotaObserver.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.HMaster.java</file>
    </fixedFiles>
  </bug>
  <bug id="20841" opendate="2018-7-4 00:00:00" fixdate="2018-7-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add note about the limitations when running WAL against the recent versions of hadoop</summary>
      <description>AsyncFSWAL may easily be broken when upgrading the DFSClient, so we introduced a fallback logic in HBASE-20839. And also, WAL can not be written into a directory with EC enabled, but the API for creating a non-EC file in EC directory is not available in hadoop-2.8-, see HBASE-19369 for more details.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.asciidoc..chapters.troubleshooting.adoc</file>
      <file type="M">src.main.asciidoc..chapters.architecture.adoc</file>
    </fixedFiles>
  </bug>
  <bug id="20843" opendate="2018-7-4 00:00:00" fixdate="2018-7-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add release manager for 2.1 in ref guide</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.asciidoc..chapters.community.adoc</file>
    </fixedFiles>
  </bug>
  <bug id="21465" opendate="2018-11-11 00:00:00" fixdate="2018-11-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Retry on reportRegionStateTransition can lead to unexpected errors</summary>
      <description>It is possible that the reportRegionStateTransition method is succeeded at master side, but before returning the the region server, the rpc connection is broken, or the master restarts. So next when the region server try again,we will find that the state for the region and the TRSP is not correct, and can lead to a RS abort or something even worse.We should be able to determine whether a reportRegionStateTransition call is just a retry and has already been succeeded, and just ignore it.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.2.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.assignment.TestAssignmentManagerBase.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.assignment.TransitRegionStateProcedure.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.assignment.TestReportRegionStateTransitionRetry.java</file>
    </fixedFiles>
  </bug>
  <bug id="22082" opendate="2019-3-22 00:00:00" fixdate="2019-3-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Should not use an instance to access static members, which will increases compilation costs.</summary>
      <description>A little modification:In class MutationBatchOperation, the method prepareMiniBatchOperations has a small change,we should not use an instance to access static members, whichÂ will increases compilation costs.</description>
      <version>1.4.5,2.1.1,2.0.4</version>
      <fixedVersion>3.0.0-alpha-1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="22083" opendate="2019-3-22 00:00:00" fixdate="2019-4-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>move eclipse specific configs into a profile</summary>
      <description>move our eclipse specific configs into profiles so they don't show up a non-eclipse build.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">hbase-zookeeper.pom.xml</file>
      <file type="M">hbase-thrift.pom.xml</file>
      <file type="M">hbase-shell.pom.xml</file>
      <file type="M">hbase-server.pom.xml</file>
      <file type="M">hbase-rsgroup.pom.xml</file>
      <file type="M">hbase-rest.pom.xml</file>
      <file type="M">hbase-replication.pom.xml</file>
      <file type="M">hbase-protocol.pom.xml</file>
      <file type="M">hbase-protocol-shaded.pom.xml</file>
      <file type="M">hbase-mapreduce.pom.xml</file>
      <file type="M">hbase-it.pom.xml</file>
      <file type="M">hbase-http.pom.xml</file>
      <file type="M">hbase-hadoop2-compat.pom.xml</file>
      <file type="M">hbase-hadoop-compat.pom.xml</file>
      <file type="M">hbase-external-blockcache.pom.xml</file>
      <file type="M">hbase-examples.pom.xml</file>
      <file type="M">hbase-endpoint.pom.xml</file>
      <file type="M">hbase-common.pom.xml</file>
      <file type="M">hbase-client.pom.xml</file>
      <file type="M">hbase-backup.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="22086" opendate="2019-3-22 00:00:00" fixdate="2019-4-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>space quota issue: deleting snapshot doesn&amp;#39;t update the usage of table</summary>
      <description>space quota issue: deleting snapshot doesn't update the usage of tableSteps: 1:set_quota TYPE =&gt; SPACE, TABLE =&gt; 'bugatti', LIMIT =&gt; '7M', POLICY =&gt; NO_WRITES_COMPACTIONS2: ./hbase pe --table="bugatti" --nomapred --rows=200 sequentialWrite 103: ./hbase pe --table="bugatti" --nomapred --rows=200 sequentialWrite 104: snapshot 'bugatti','bugatti_snapshot'5: ./hbase pe --table="bugatti" --nomapred --rows=200 sequentialWrite 106: major_compact 'bugatti'7: delete_snapshot 'bugatti_snapshot'now check the usage and observe that it is not getting updated.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.2.0,2.3.0,2.1.5</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.quotas.TestSnapshotQuotaObserverChore.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.quotas.TestQuotaTableUtil.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.quotas.SnapshotQuotaObserverChore.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.quotas.QuotaTableUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="22087" opendate="2019-3-22 00:00:00" fixdate="2019-5-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update LICENSE/shading for the dependencies from the latest Hadoop trunk</summary>
      <description>The following list of dependencies were added in Hadoop trunk (3.3.0) and HBase does not compile successfully:YARN-8778 added jline 3.9.0HADOOP-15775 added javax.activationHADOOP-15531 added org.apache.common.text (commons-text)HADOOP-15764 added dnsjava (org.xbill)Some of these are needed to support JDK9/10/11 in Hadoop.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.2.0,2.3.0,2.1.5</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-shaded.pom.xml</file>
      <file type="M">hbase-resource-bundle.src.main.resources.supplemental-models.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2209" opendate="2010-2-10 00:00:00" fixdate="2010-2-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support of List [ ] in HBaseOutputWritable for serialization</summary>
      <description>On a higher language semantics , List &lt; &gt; are very useful for manipulation and when finally sent down to the wire - the protocol currently seems to take only [ ] through an expensive copy. Supporting List &lt;T &gt; directly would save us the copy in terms of memory and add to faster / deserialization.</description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.hadoop.hbase.io.TestHbaseObjectWritable.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.ipc.HBaseRPCProtocolVersion.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.io.HbaseObjectWritable.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="22092" opendate="2019-3-22 00:00:00" fixdate="2019-3-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Typo in block cache monitoring documentation</summary>
      <description>In http://hbase.apache.org/book.html#_block_cache_monitoring, there's an incomplete sentence:Starting with HBase 0.98, the HBase Web UI includes the ability to monitor and report on the performance of the block cache. To view the block cache reports, click .The old verbiage was:Starting with HBase 0.98, the HBase Web UI includes the ability to monitor and report on the performance of the block cache. To view the block cache reports, click Tasks â Show Non-RPC Tasks â Block Cache. The old documentation seems incorrect also, and probably would be more appropriately worded along the line of To view the block cache reports, see the Block Cache section of the Region Server UI.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.asciidoc..chapters.ops.mgt.adoc</file>
    </fixedFiles>
  </bug>
  <bug id="22095" opendate="2019-3-23 00:00:00" fixdate="2019-3-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Taking a snapshot fails in local mode</summary>
      <description>It looks like afterÂ HBASE-21098, taking a snapshot fails in local mode.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.2.0,2.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.snapshot.TestSnapshotDescriptionUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.snapshot.SnapshotDescriptionUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.snapshot.TakeSnapshotHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="23829" opendate="2020-2-11 00:00:00" fixdate="2020-4-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Get `-PrunSmallTests` passing on JDK11</summary>
      <description>Start with the small tests, shaking out issues identified by the harness. So far it seems like -Dhadoop.profile=3.0 and -Dhadoop-three.version=3.3.0-SNAPSHOT maybe be required.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">hbase-shaded.hbase-shaded-with-hadoop-check-invariants.pom.xml</file>
      <file type="M">hbase-shaded.hbase-shaded-check-invariants.pom.xml</file>
      <file type="M">hbase-http.src.test.java.org.apache.hadoop.hbase.http.log.TestLogLevel.java</file>
      <file type="M">hbase-hadoop2-compat.pom.xml</file>
      <file type="M">hbase-common.src.test.java.org.apache.hadoop.hbase.util.TestFutureUtils.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
