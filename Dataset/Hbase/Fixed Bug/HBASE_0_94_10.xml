<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="HBASE">
  <bug id="8909" opendate="2013-7-9 00:00:00" fixdate="2013-7-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>HBASE-6170 broke "hbase.regionserver.lease.period" config, we should support it for BC</summary>
      <description>HBASE-6170 replaces "hbase.regionserver.lease.period" with the new configuration "hbase.client.scanner.timeout.period". We should support the old configuration at least in 0.96. We can put a WARN and deprecate the old value. Remove it in 1.0.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.95.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.HConstants.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.HBaseConfiguration.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.ClientScanner.java</file>
    </fixedFiles>
  </bug>
  <bug id="9062" opendate="2013-7-27 00:00:00" fixdate="2013-7-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove TestReplicationKillRs* tests temporarily</summary>
      <description>Removing this suite of tests for now. jdcryans is working on fixing these over in HBASE-8615 but currently he is off in "exotic location". Removing meantime to get in some clean builds. Will put back in HBASE-9061 which is critical for 0.95.2</description>
      <version>None</version>
      <fixedVersion>0.95.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.replication.TestReplicationKillSlaveRS.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.replication.TestReplicationKillRS.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.replication.TestReplicationKillMasterRSCompressed.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.replication.TestReplicationKillMasterRS.java</file>
    </fixedFiles>
  </bug>
  <bug id="9110" opendate="2013-8-1 00:00:00" fixdate="2013-8-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Meta region edits not recovered while migrating to 0.96.0</summary>
      <description>I was doing the migration testing from 0.94.11-snapshot to 0.95.0, and faced this issue.1) Do some edits in meta table (for eg, create a table).2) Kill the cluster.(I used kill because we would be doing log splitting when upgrading anyway).3) There is some dependency on WALs. Upgrade the bits to 0.95.2-snapshot. Start the cluster.Every thing comes up. I see log splitting happening as expected. But, the WAL-data for meta table is missing.I could see recovered.edits file for meta created, and placed at the right location. It is just that the new HMaster code tries to recover meta by looking at meta prefix in the log name, and if it didn't find one, just opens the meta region. So, the recovered.edits file, created afterwards, is not honored.Opening this jira to let folks give their opinions about how to tackle this migration issue.</description>
      <version>0.95.2,0.94.10</version>
      <fixedVersion>0.98.0,0.96.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.migration.UpgradeTo96.java</file>
    </fixedFiles>
  </bug>
  <bug id="914" opendate="2008-10-7 00:00:00" fixdate="2008-10-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>MSG_REPORT_CLOSE has a byte array for a message</summary>
      <description>2008-10-07 22:00:00,395 INFO org.apache.hadoop.hbase.master.ServerManager: Received MSG_REPORT_CLOSE: shroomz_092908,V83h4i64kfPm88mSqnWunF==,1222710493094: [B@5cf13baf from 208.76.45.178:60020</description>
      <version>None</version>
      <fixedVersion>0.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.HMsg.java</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.ProcessServerShutdown.java</file>
    </fixedFiles>
  </bug>
  <bug id="9163" opendate="2013-8-8 00:00:00" fixdate="2013-8-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add timeouts to HBaseAdmin because hanging/zombying</summary>
      <description>Let me add timeouts. HBaseAdmin is acting up since namespaces went in. Add timeouts so hopefully fails faster.</description>
      <version>None</version>
      <fixedVersion>0.95.2</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.client.TestAdmin.java</file>
    </fixedFiles>
  </bug>
  <bug id="9234" opendate="2013-8-15 00:00:00" fixdate="2013-8-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Rebuilding user regions should ignore system tables</summary>
      <description>System tables are already assigned when rebuilding user regions. So we don't need to consider system table regions in rebuilding user regions.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.96.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.AssignmentManager.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.TableName.java</file>
    </fixedFiles>
  </bug>
  <bug id="9261" opendate="2013-8-19 00:00:00" fixdate="2013-12-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add cp hooks after {start|close}RegionOperation</summary>
      <description>These hooks helps for checking Resources(blocking memstore size) and necessary locking on index region while performing batch of mutations.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.99.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.coprocessor.SimpleRegionObserver.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coprocessor.RegionObserver.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coprocessor.BaseRegionObserver.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.ClientSideRegionScanner.java</file>
    </fixedFiles>
  </bug>
  <bug id="9645" opendate="2013-9-24 00:00:00" fixdate="2013-10-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Regionserver halt because of HLog&amp;#39;s "Logic Error Snapshot seq id from earlier flush still present!"</summary>
      <description>I upgrade my hbase cluster to 0.94.10 three weeks ago, and this case happened several days after that. I change the bug's priority to 'Critical' because every time it happens, a regionserver halt down. All of them have the same log:ERROR org.apache.hadoop.hbase.regionserver.wal.HLog: Logic Error Snapshot seq id from earlier flush still present! for region c0d88db4ce3606842fbec9d34c38f707 overwritten oldseq=80114270537with new seq=80115066829I check the code finding that it locates at HLog.startCacheFlush method. The 'lastSeqWritten' has been locked. Maybe something wrong happened outside the HLog that change it by mistake.</description>
      <version>0.94.10</version>
      <fixedVersion>0.98.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="9915" opendate="2013-11-7 00:00:00" fixdate="2013-11-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Performance: isSeeked() in EncodedScannerV2 always returns false</summary>
      <description>While debugging why reseek is so slow I found that it is quite broken for encoded scanners.The problem is this:AbstractScannerV2.reseekTo(...) calls isSeeked() to check whether scanner was seeked or not. If it was it checks whether the KV we want to seek to is in the current block, if not it always consults the index blocks again.isSeeked checks the blockBuffer member, which is not used by EncodedScannerV2 and thus always returns false, which in turns causes an index lookup for each reseek.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.96.1,0.94.14</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.HFileReaderV2.java</file>
    </fixedFiles>
  </bug>
  <bug id="9921" opendate="2013-11-8 00:00:00" fixdate="2013-11-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>stripe compaction - findbugs and javadoc issues, some improvements</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>0.98.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.compactions.TestStripeCompactionPolicy.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.StripeStoreFlusher.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.StripeStoreConfig.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.StoreFileManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.compactions.StripeCompactionPolicy.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.compactions.CompactionConfiguration.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
