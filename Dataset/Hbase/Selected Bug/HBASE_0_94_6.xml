<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="HBASE">
  
  
  
  
  
  <bug fixdate="2012-6-30 01:00:00" id="6135" opendate="2012-5-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Style the Web UI to use Twitter&amp;#39;s Bootstrap.</summary>
      <description>Our web ui has lagged a little bit behind. While it's not a huge deal, it is one of the first things that new people see. As such styling it a little bit better would put a good foot forward.</description>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.jamon.org.apache.hadoop.hbase.tmpl.regionserver.RegionListTmpl.jamon</file>
      <file type="M">hbase-server.src.main.resources.hbase-webapps.master.tablesDetailed.jsp</file>
      <file type="M">hbase-server.src.main.resources.hbase-webapps.master.table.jsp</file>
      <file type="M">hbase-server.src.main.jamon.org.apache.hadoop.hbase.tmpl.regionserver.RSStatusTmpl.jamon</file>
      <file type="M">hbase-server.src.main.jamon.org.apache.hadoop.hbase.tmpl.master.MasterStatusTmpl.jamon</file>
      <file type="M">hbase-server.src.main.jamon.org.apache.hadoop.hbase.tmpl.master.AssignmentManagerStatusTmpl.jamon</file>
      <file type="M">hbase-server.src.main.jamon.org.apache.hadoop.hbase.tmpl.common.TaskMonitorTmpl.jamon</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-10-14 01:00:00" id="6583" opendate="2012-8-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enhance Hbase load test tool to automatically create column families if not present</summary>
      <description>The load test tool currently disables the table and applies any changes to the cf descriptor if any, but does not create the cf if not present.</description>
      <version>None</version>
      <fixedVersion>0.94.3,0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.util.LoadTestTool.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-8-23 01:00:00" id="6643" opendate="2012-8-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Accept encoded region name in compacting/spliting region from shell</summary>
      <description>Sometimes, the region name has binary characters. When compacting/splitting it from shell, the region name is not recognized. If we can support encoded region name, it will make things easier.</description>
      <version>None</version>
      <fixedVersion>0.94.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.client.TestAdmin.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.HBaseAdmin.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2012-11-12 01:00:00" id="7151" opendate="2012-11-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Better log message for Per-CF compactions</summary>
      <description>A coworker pointed out that in HBASE-4913 it would be nice to include the column family in the log message for a per-CF compaction.</description>
      <version>None</version>
      <fixedVersion>0.94.3,0.95.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-1-25 01:00:00" id="7669" opendate="2013-1-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>ROOT region wouldn&amp;#39;t be handled by PRI-IPC-Handler</summary>
      <description>RPC reuqest about ROOT region should be handled by PRI-IPC-Handler, just the same as META region</description>
      <version>0.94.6,0.95.0</version>
      <fixedVersion>0.94.5,0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestPriorityRpc.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-1-29 01:00:00" id="7712" opendate="2013-1-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pass ScanType into preCompact()</summary>
      <description>See related discussion:http://search-hadoop.com/m/a7BYc2RITZ22/Getting+the+scan+type+at+preCompact&amp;subj=Re+Getting+the+scan+type+at+preCompact</description>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.security.access.TestAccessController.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.coprocessor.TestCoprocessorInterface.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.coprocessor.SimpleRegionObserver.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.security.access.AccessController.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.Compactor.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coprocessor.RegionObserver.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coprocessor.BaseRegionObserver.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-3-30 01:00:00" id="7723" opendate="2013-1-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove NameNode URI from ZK splitlogs</summary>
      <description>When moving to HDFS HA or removing HA we end up changing the NN namespace. This can cause the HMaster not to start up fully due to trying to split phantom HLogs pointing to the wrong FS - java.lang.IllegalArgumentException: Wrong FS: error messages. The HLogs in question might not even be on HDFS anymore. You have to go in a manually clear out the ZK splitlogs directory to get HBase to properly boot up.</description>
      <version>0.94.6,0.95.0</version>
      <fixedVersion>0.98.0,0.94.6,0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.FSUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.SplitLogWorker.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.SplitLogManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-2-4 01:00:00" id="7763" opendate="2013-2-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Compactions not sorting based on size anymore.</summary>
      <description>Currently compaction selection is not sorting based on size. This causes selection to choose larger files to re-write than are needed when bulk loads are involved.</description>
      <version>0.94.6,0.95.0</version>
      <fixedVersion>0.94.6,0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestStoreFile.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.StoreFile.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2013-2-13 01:00:00" id="7833" opendate="2013-2-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>0.94 does not compile with Hadoop-0.20.205 and 0.22.0</summary>
      <description>0.94 is supposed to work with 0.20.205 and 0.22 if I am not wrong. We should document this.</description>
      <version>None</version>
      <fixedVersion>0.94.6</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.docbkx.configuration.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-2-13 01:00:00" id="7834" opendate="2013-2-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document Hadoop version support matrix in the book</summary>
      <description>Lets do a support matrix in the book for HBase versions x Hadoop versions, and some cleanup in the Hadoop section.</description>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.docbkx.configuration.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-2-18 01:00:00" id="7869" opendate="2013-2-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Provide way to not start LogSyncer thread</summary>
      <description>In our usecase we want all the Mutations on all the tables to be immediately written and synced to WAL. We dont want the LogSyncer thread to be running in such a case.In minbatch operation we write entries to WAL and we use postWALWrite and write some more WAL entries(Only write no sync). We want all these written data to be synced as one unit (at the sync step in doMiniBatchOperation) But if the LogSyncer thread is running in the system it can come and do the sync at any point in time which we dont want in our case.</description>
      <version>0.94.6,0.95.0</version>
      <fixedVersion>0.98.0,0.94.6,0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.FSHLog.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-3-5 01:00:00" id="8008" opendate="2013-3-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix DirFilter usage to be consistent</summary>
      <description>Currently the DirFilter automatically filters out HConstants.HBASE_NON_USER_TABLE_DIRS, which is not needed in most cases. We should switch the usage so people actually using a directory filter and then have a special filter when looking for tables specifically.</description>
      <version>None</version>
      <fixedVersion>0.98.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.FSUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.snapshot.SnapshotDescriptionUtils.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-3-18 01:00:00" id="8141" opendate="2013-3-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove accidental uses of org.mortbay.log.Log</summary>
      <description>Remove accidental uses of org.mortbay.log.Log. Eclipse autocomplete is probably the culprit.</description>
      <version>0.94.6,0.95.0,0.95.2</version>
      <fixedVersion>0.94.6,0.95.0,0.95.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.ipc.TestDelayedRpc.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.io.hfile.TestHFileSeek.java</file>
      <file type="M">hbase-prefix-tree.src.test.java.org.apache.hadoop.hbase.codec.prefixtree.builder.TestTreeDepth.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-4-28 01:00:00" id="8208" opendate="2013-3-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>In some situations data is not replicated to slaves when deferredLogSync is enabled</summary>
      <description>This is a subtle issue. When deferredLogSync is enabled, there are chances we could flush data before syncing all HLog entries. Assuming we just flush the internal cache and the server dies with some unsynced hlog entries. Data is not lost at the source cluster while replication is based on WAL files and some changes we flushed at the source won't be replicated the slave clusters. Although enabling deferredLogSync with tolerances of data loss, it breaks the replication assumption that whatever persisted in the source should be replicated to its slave clusters. In short, the slave cluster could end up with double losses: the data loss in the source and some data stored in source cluster may not be replicated to slaves either.The fix of the issue isn't hard. Basically we can invoke sync during each flush when replication is enabled for a region server. Since sync returns immediately when nothing to sync so there should be no performance impact.Please let me know what you think!Thanks,-Jeffrey</description>
      <version>0.98.0,0.94.6,0.95.0</version>
      <fixedVersion>0.98.0,0.94.7,0.95.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.FSHLog.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-4-2 01:00:00" id="8247" opendate="2013-4-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>inconsistent date format in different logs makes it painful to manipulate them</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.resources.log4j.properties</file>
      <file type="M">conf.log4j.properties</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-4-3 01:00:00" id="8260" opendate="2013-4-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>create generic integration test for trunk and 94 that is more deterministic, can be run for longer and is less aggressive</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.98.0,0.94.7,0.95.2</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-it.src.test.java.org.apache.hadoop.hbase.IntegrationTestDataIngestWithChaosMonkey.java</file>
      <file type="M">hbase-it.src.test.java.org.apache.hadoop.hbase.util.ChaosMonkey.java</file>
      <file type="M">hbase-it.src.test.java.org.apache.hadoop.hbase.IntegrationTestDataIngestSlowDeterministic.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-4-3 01:00:00" id="8262" opendate="2013-4-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add testcase to verify HBASE-7876&amp;#39;s empty region split semantics change</summary>
      <description>HBASE-7678 change the semantics of splits and removed a test case but didn't not add one to verify behavior. We'll add one here.</description>
      <version>0.98.0,0.94.6,0.95.0,0.95.2</version>
      <fixedVersion>0.98.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.FSUtils.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-12-4 01:00:00" id="8269" opendate="2013-4-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix data locallity documentation.</summary>
      <description>Documetation regarding data locality and the way hadoop write the replicas need to be updated/corrected.http://mail-archives.apache.org/mod_mbox/hbase-user/201304.mbox/browser</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.book.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-3-23 01:00:00" id="8604" opendate="2013-5-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>improve reporting of incorrect peer address in replication</summary>
      <description>I was running some replication code that incorrectly advertised the peer address for replication. HBase complained that the format of the record was NOT what it was expecting but it didn't include what it saw in the exception message. Including that string would help cutting down the time it takes to debug issues like that.</description>
      <version>0.94.6</version>
      <fixedVersion>0.96.2,0.98.1,0.99.0,0.94.18</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.zookeeper.ZKUtil.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-5-23 01:00:00" id="8606" opendate="2013-5-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Meta scanner is not closed</summary>
      <description>In my meta region server log file, I see lots of error messages complaining about meta region scanner lease expired.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.95.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.MetaScanner.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-6-24 01:00:00" id="8608" opendate="2013-5-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Do an edit of logs.. we log too much.</summary>
      <description>Since we enabled blooms, there is a bunch of bloom spew.... We also do a bunch of logging around new file open....</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.95.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.FSUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.CompoundBloomFilterWriter.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.ProtobufLogWriter.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.FSHLog.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.StoreFile.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.DefaultStoreFlusher.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.TableLockManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.HFileWriterV2.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-7-13 01:00:00" id="8944" opendate="2013-7-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document workaround for MiniDFSCluster exceptions when running tests</summary>
      <description>The HBaseTestingUtility appears to have an unhandled NullPointerException in certain environments. It works on Apache HBase 0.94.6.1 on Mac OSX but not in certain Linux environments such as CentOS. In Java:HBaseTestingUtility testingUtility = new HBaseTestingUtility();testingUtility.startMiniCluster(1); // blows up on CentOS Linux but not Mac OSXCreates this exception:ERROR in (create-table) (MiniDFSCluster.java:426)Uncaught exception, not in assertion.expected: nil actual: java.lang.NullPointerException: null at org.apache.hadoop.hdfs.MiniDFSCluster.startDataNodes (MiniDFSCluster.java:426) org.apache.hadoop.hdfs.MiniDFSCluster.&lt;init&gt; (MiniDFSCluster.java:284) org.apache.hadoop.hbase.HBaseTestingUtility.startMiniDFSCluster (HBaseTestingUtility.java:444) org.apache.hadoop.hbase.HBaseTestingUtility.startMiniCluster (HBaseTestingUtility.java:612) org.apache.hadoop.hbase.HBaseTestingUtility.startMiniCluster (HBaseTestingUtility.java:568) org.apache.hadoop.hbase.HBaseTestingUtility.startMiniCluster (HBaseTestingUtility.java:555)I also created a stack overflow ticket here, with more info:http://stackoverflow.com/questions/17625938/hbase-minidfscluster-java-fails-in-certain-environmentsSteps to reproduce:1. Download a copy of CentOS2. Install Java3. Fire up a minicluster as part of the HBaseTestingUtility</description>
      <version>0.94.6,0.94.6.1</version>
      <fixedVersion>0.98.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.troubleshooting.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-7-14 01:00:00" id="8946" opendate="2013-7-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a new function to Thrift 2 to open scanner, get results and close scanner</summary>
      <description>We found, very often we open a scanner , get x number of rows , then close the scanner immediately. The attached patch , add a new function getScannerResults that does just that. Using getScannerResults function reduce number of calls to thrift server. Also since the scanner gets closed immediately, it is less prone to cause memory leak.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.95.2,0.94.11</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.thrift2.TestThriftHBaseServiceHandler.java</file>
      <file type="M">hbase-server.src.main.resources.org.apache.hadoop.hbase.thrift2.hbase.thrift</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.ThriftHBaseServiceHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.THBaseService.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-7-15 01:00:00" id="8947" opendate="2013-7-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Thrift 2 : Replace "bool writeToWAL" with "TDurability durability"</summary>
      <description>Introduce new enum TDurability to expose more options for Write To Wal.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.95.2,0.94.11</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.thrift2.TestThriftHBaseServiceHandler.java</file>
      <file type="M">hbase-server.src.main.resources.org.apache.hadoop.hbase.thrift2.hbase.thrift</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.ThriftUtilities.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.TPut.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.TIncrement.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.TDelete.java</file>
    </fixedFiles>
  </bug>
</bugrepository>