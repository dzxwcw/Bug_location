<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="HBASE">
  
  <bug fixdate="2014-10-7 01:00:00" id="12186" opendate="2014-10-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Formatting error in Table 8.2. Examples of Visibility Expressions</summary>
      <description>The value of one of the cells of the table got lost somehow during the commit of HBASE-11791. Investigate and fix.</description>
      <version>None</version>
      <fixedVersion>2.0.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.security.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-10-7 01:00:00" id="12189" opendate="2014-10-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix new issues found by coverity static analysis</summary>
      <description>Since the paper about testing and failures, it's probably a good time to start another run of coverity and fix the issues there.</description>
      <version>None</version>
      <fixedVersion>0.99.1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.TestSplitLogManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.RegionSplitter.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.MultiHConnection.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.FSUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.DefaultVisibilityLabelServiceImpl.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.MemStoreChunkPool.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.DefaultMemStore.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.quotas.UserQuotaState.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.quotas.QuotaState.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.balancer.SimpleLoadBalancer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.replication.VerifyReplication.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.LocalHBaseCluster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.errorhandling.TimeoutExceptionInjector.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coordination.ZKSplitLogManagerCoordination.java</file>
      <file type="M">hbase-hadoop2-compat.src.main.java.org.apache.hadoop.metrics2.impl.JmxCacheBuster.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.trace.SpanReceiverHost.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.KeyValue.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.util.Sleeper.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.ipc.RpcClient.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2012-7-11 01:00:00" id="6373" opendate="2012-7-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add more context information to audit log messages</summary>
      <description>The attached patch adds more information to the audit log messages; namely, it includes the IP address where the request originated, if it's available.The patch is against trunk, but I've tested it against the 0.92 branch. I didn't find any unit test for this code, please let me know if I missed something.</description>
      <version>0.94.2,0.95.2</version>
      <fixedVersion>0.94.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.security.access.AccessController.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-7-12 01:00:00" id="6382" opendate="2012-7-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade Jersey to 1.8 to match Hadoop 1 and 2</summary>
      <description>Upgrade Jersey dependency from 1.4 to 1.8 to match Hadoop dependencies.</description>
      <version>0.90.7,0.92.2,0.94.2,0.95.2</version>
      <fixedVersion>0.94.1,0.95.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2012-7-24 01:00:00" id="6445" opendate="2012-7-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>rat check fails if hs_err_pid26514.log dropped in tests</summary>
      <description>Let test fail because jvm crashed rather than because of rat license complaint</description>
      <version>None</version>
      <fixedVersion>0.94.1,0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-12-30 01:00:00" id="6476" opendate="2012-7-30 00:00:00" resolution="Won&amp;#39;t Fix">
    <buginformation>
      <summary>Replace all occurrances of System.currentTimeMillis() with EnvironmentEdge equivalent</summary>
      <description>There are still some areas where System.currentTimeMillis() is used in HBase. In order to make all parts of the code base testable and (potentially) to be able to configure HBase's notion of time, this should be generally be replaced with EnvironmentEdgeManager.currentTimeMillis().How hard would it be to add a maven task that checks for that, so we do not introduce System.currentTimeMillis back in the future?</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.HLog.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.zookeeper.ZooKeeperNodeTracker.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.zookeeper.ZKUtil.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.Sleeper.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.RegionSplitter.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.MetaUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.Merge.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.JVMClusterUtil.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.HMerge.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.HBaseFsckRepair.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.HBaseFsck.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.FSUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.FSHDFSUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.tool.Canary.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift.TBoundedThreadPoolServer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.ScannerResultGenerator.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.client.Client.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.replication.regionserver.metrics.ReplicationSourceMetrics.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.replication.regionserver.metrics.ReplicationSinkMetrics.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.RegionTransition.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.util.Threads.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.catalog.CatalogTracker.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.Chore.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.ClientScanner.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.Delete.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.HConnectionManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.MetaScanner.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.ScannerCallable.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.ServerCallable.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coprocessor.CoprocessorHost.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.HRegionInfo.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.HServerInfo.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.ipc.HBaseClient.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.ipc.HBaseRPC.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.ipc.HBaseServer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.ipc.ProtobufRpcEngine.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.HFileOutputFormat.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.ImportTsv.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.TableRecordReaderImpl.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapred.TableRecordReaderImpl.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.AssignmentManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.balancer.DefaultLoadBalancer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.cleaner.TimeToLiveLogCleaner.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.GeneralBulkAssigner.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.DeleteTableHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.DisableTableHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.EnableTableHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.HMaster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.RegionState.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.RegionStates.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.ServerManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.metrics.MetricsRate.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.monitoring.MemoryBoundedLogMessageBuffer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.monitoring.MonitoredRPCHandlerImpl.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.monitoring.MonitoredTaskImpl.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.monitoring.TaskMonitor.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.CompactSplitThread.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.GetClosestRowBeforeTracker.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HStore.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.Leases.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.LogRoller.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.MemStoreFlusher.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.metrics.RegionServerMetrics.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.SplitLogWorker.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.SplitRequest.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.SplitTransaction.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2012-8-1 01:00:00" id="6489" opendate="2012-8-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incorrect TaskTracker logfile name</summary>
      <description>http://hbase.apache.org/book/trouble.log.html"TaskTracker: $HADOOP_HOME/logs/hadoop-&lt;user&gt;jobtracker&lt;hostname&gt;.log"should be "TaskTracker: $HADOOP_HOME/logs/hadoop-&lt;user&gt;tasktracker&lt;hostname&gt;.log"</description>
      <version>0.90.7,0.92.2,0.92.3,0.94.2,0.95.2</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.docbkx.troubleshooting.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2008-6-16 01:00:00" id="691" opendate="2008-6-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>get* and getScanner are different in how they treat column parameter</summary>
      <description>From the list, cure at xg dot pl there are group of methods "getRow" and group "getScanner" - both get as param array of collumns but in "getRow" methods we have to put it without ":" at the end of column family name, and for "getScanner" the colon is necessary. i think that it will be good to make it identical.</description>
      <version>None</version>
      <fixedVersion>0.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.HTableDescriptor.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-10-2 01:00:00" id="6926" opendate="2012-10-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cleanup some of the javadoc warnings.</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.RegionTransition.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.MasterAdminProtocol.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.HTableDescriptor.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.HServerInfo.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.HRegionInfo.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.HColumnDescriptor.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.HBaseIOException.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.HBaseException.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.ClusterId.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.HConnection.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.HBaseAdmin.java</file>
      <file type="M">hbase-hadoop2-compat.src.main.java.org.apache.hadoop.metrics2.lib.DynamicMetricsRegistry.java</file>
      <file type="M">hbase-hadoop1-compat.src.main.java.org.apache.hadoop.hbase.metrics.BaseMetricsSourceImpl.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.KeyValue.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.io.hfile.BlockType.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.HConstants.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-10-4 01:00:00" id="6951" opendate="2012-10-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow the master info server to be started in a read only mode.</summary>
      <description>There are some cases that a user could want a web ui to be accessible but might not want the split and compact functionality to be usable.Allowing the web ui to start in a readOnly mode would be good.</description>
      <version>None</version>
      <fixedVersion>0.92.3,0.94.3,0.95.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.TestInfoServers.java</file>
      <file type="M">hbase-server.src.main.resources.hbase-webapps.master.table.jsp</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-10-9 01:00:00" id="6962" opendate="2012-10-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade hadoop 1 dependency to hadoop 1.1</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-10-11 01:00:00" id="6979" opendate="2012-10-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>recovered.edits file should not break distributed log splitting</summary>
      <description>Distributed log splitting fails in creating the recovered.edits folder during upgrade because there is a file called recovered.edits there.Instead of checking if the patch exists, we need to check if it exists and is a path.</description>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.wal.TestHLogSplit.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.HLogSplitter.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2007-6-17 01:00:00" id="7" opendate="2007-12-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[hbase] Provide a HBase checker and repair tool similar to fsck</summary>
      <description>We need a tool to verify (and repair) HBase much like fsck</description>
      <version>None</version>
      <fixedVersion>0.90.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.hbase</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.check.meta.rb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-10-22 01:00:00" id="7027" opendate="2012-10-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use the correct port of info server of region servers</summary>
      <description>Right now the master ui just guesses that the port of the info server will always be the same on all servers. This is not a good assumption setting it for each server is possible, also setting the conf variable to 0 will make the info server choose a port randomly.</description>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.protobuf.hbase.proto</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.ServerLoad.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.java</file>
      <file type="M">hbase-server.src.main.jamon.org.apache.hadoop.hbase.tmpl.master.RegionServerListTmpl.jamon</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-6-30 01:00:00" id="7074" opendate="2012-10-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document Metrics 2</summary>
      <description>Explain why this work was done. Explain how the data flows from the core classes into hadoop metrics2, and on to jmx. Explain naming metrics.</description>
      <version>None</version>
      <fixedVersion>0.95.2</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.developer.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-11-6 01:00:00" id="7103" opendate="2012-11-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Need to fail split if SPLIT znode is deleted even before the split is completed.</summary>
      <description>This came up after the following mail in dev list'infinite loop of RS_ZK_REGION_SPLIT on .94.2'.The following is the reason for the problemThe following steps happen-&gt; Initially the parent region P1 starts splitting.-&gt; The split is going on normally.-&gt; Another split starts at the same time for the same region P1. (Not sure why this started).-&gt; Rollback happens seeing an already existing node.-&gt; This node gets deleted in rollback and nodeDeleted Event starts.-&gt; In nodeDeleted event the RIT for the region P1 gets deleted.-&gt; Because of this there is no region in RIT.-&gt; Now the first split gets over. Here the problem is we try to transit the node to SPLITTING to SPLIT. But the node even does not exist.But we don take any action on this. We think it is successful.-&gt; Because of this SplitRegionHandler never gets invoked.</description>
      <version>None</version>
      <fixedVersion>0.94.3,0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestSplitTransactionOnCluster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.SplitTransaction.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2012-11-10 01:00:00" id="7143" opendate="2012-11-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>TestMetaMigrationRemovingHTD fails when used with Hadoop 0.23/2.x</summary>
      <description>TestMetaMigrationRemovingHTD fails when build is done with "-Dhadoop.profile=23" option. The reason is the changes of defaults in "-mkdir" CLI call. In 0.23/2.x, it doesn't create parent directories by default anymore.The patch will be submitted shortly.</description>
      <version>0.94.2</version>
      <fixedVersion>0.94.3,0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.catalog.TestMetaMigrationConvertingToPB.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-12-21 01:00:00" id="7202" opendate="2012-11-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Family Store Files are not archived on admin.deleteColumn()</summary>
      <description>using HBaseAdmin.deleteColumn() the files are not archived but deleted directory.This causes problems with snapshots, and other systems that relies on files to be archived.</description>
      <version>0.94.2,0.95.2</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.backup.TestHFileArchiving.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.MasterFileSystem.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.backup.HFileArchiver.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2008-11-4 01:00:00" id="722" opendate="2008-7-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Shutdown and Compactions</summary>
      <description>Currently I thank the region server closes the region spits in a set order this same order is used in the compaction/spit thread after a startup and all regions need compaction.This causes the shutdown time to take a vary long time depending on what region the server is compacting.I have seen my cluster take more then 60 mins to shutdown waiting for several regions to finish compaction.The problem I am seeing is say the compaction thread is working on a on region 2 of 4 in the list.When the region server get the MSG_REGIONSERVER_QUIESCE from the master it closes in order from 1-4So it closes region 1 and waits for region 2 to finish compaction before closing it.The problem is it never closes region split 3 or 4 while waiting for region 2 to complete the compaction.So example say 3 and 4 regions are waiting to be compacted also. When region 2 is done region 3 start compaction within milliseconds of 2's finished compaction.This happens faster then the region server can close region 3 so the region server hangs around compacting regions until it run out of open regions needing compact.With a lot of regions this could hang some region server a long time to Shutdown the cluster.Solutions 1 or 2 below will work I thank1. Close all regions not currently getting compaction so when the compaction thread complete it has no other regions open to compact 2. Empty the compaction que so it has no other regions to compact when done with the current one.</description>
      <version>None</version>
      <fixedVersion>0.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.CompactSplitThread.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-12-2 01:00:00" id="7256" opendate="2012-12-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Quick Start Guide shows stable version as 0.95, in the stable folder it is 0.94</summary>
      <description>In the Quick Start Guide for HBase - http://hbase.apache.org/book/quickstart.htmlThe stable version is mentioned as - 0.95 in the line -"Choose a download site from this list of Apache Download Mirrors. Click on the suggested top link. This will take you to a mirror of HBase Releases. Click on the folder named stable and then download the file that ends in .tar.gz to your local filesystem; e.g. hbase-0.95-SNAPSHOT.tar.gz."But in the download folder at - http://apache.techartifact.com/mirror/hbase/stable/The version that can be found is - hbase-0.94.2-security.tar.gz i.e. 0.94So either the documentation or the download folder needs to be updated.</description>
      <version>0.94.2</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.docbkx.getting.started.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2013-3-12 01:00:00" id="8080" opendate="2013-3-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>refactor default compactor to make its parts easier to reuse</summary>
      <description>Refactor default compactor to make its parts easier to reuse. To make eventual HBASE-7967 patch smaller.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.95.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.StoreFile.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.compactions.DefaultCompactor.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.compactions.Compactor.java</file>
    </fixedFiles>
  </bug>
  
  
</bugrepository>