<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="HBASE">
  <bug fixdate="2008-12-3 01:00:00" id="1043" opendate="2008-12-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Removing @Override attributes where they are no longer needed.</summary>
      <description>There seem to be some left-over @Override attributes from when classes were extending and overriding methods prior to interface refactoring.</description>
      <version>0.19.0</version>
      <fixedVersion>0.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.mapred.HRegionPartitioner.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.filter.SubstringComparator.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.filter.RegexStringComparator.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2014-7-18 01:00:00" id="11540" opendate="2014-7-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document HBASE-11474</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.thrift.filter.language.xml</file>
      <file type="M">src.main.docbkx.security.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-7-22 01:00:00" id="11560" opendate="2014-7-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>hbase.regionserver.global.memstore.size is documented twice</summary>
      <description>On the documentation at http://hbase.apache.org/book/config.files.html we describe twice hbase.regionserver.global.memstore.size.</description>
      <version>None</version>
      <fixedVersion>2.0.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-common.src.main.resources.hbase-default.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-8-1 01:00:00" id="11640" opendate="2014-8-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add syntax highlighting support to HBase Ref Guide programlistings</summary>
      <description/>
      <version>None</version>
      <fixedVersion>2.0.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">src.main.docbkx.zookeeper.xml</file>
      <file type="M">src.main.docbkx.upgrading.xml</file>
      <file type="M">src.main.docbkx.troubleshooting.xml</file>
      <file type="M">src.main.docbkx.tracing.xml</file>
      <file type="M">src.main.docbkx.thrift.filter.language.xml</file>
      <file type="M">src.main.docbkx.security.xml</file>
      <file type="M">src.main.docbkx.schema.design.xml</file>
      <file type="M">src.main.docbkx.preface.xml</file>
      <file type="M">src.main.docbkx.performance.xml</file>
      <file type="M">src.main.docbkx.ops.mgt.xml</file>
      <file type="M">src.main.docbkx.hbase.apis.xml</file>
      <file type="M">src.main.docbkx.getting.started.xml</file>
      <file type="M">src.main.docbkx.developer.xml</file>
      <file type="M">src.main.docbkx.customization.xsl</file>
      <file type="M">src.main.docbkx.cp.xml</file>
      <file type="M">src.main.docbkx.configuration.xml</file>
      <file type="M">src.main.docbkx.case.studies.xml</file>
      <file type="M">src.main.docbkx.book.xml</file>
      <file type="M">src.main.docbkx.appendix.contributing.to.documentation.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-9-1 01:00:00" id="11643" opendate="2014-8-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Read and write MOB in HBase</summary>
      <description>The read/write MOB in HBase are implemented in this JIRA. Normally, the Cells are saved in the MemStore, and flushed to the HFiles when necessary. For MOB, the Cells are saved in the MemStore as well, but they're flushed to elsewhere out of HBase in the format of HFiles.</description>
      <version>None</version>
      <fixedVersion>hbase-11339,2.0.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.StoreFile.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HStore.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.DefaultStoreEngine.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.DeleteTableHandler.java</file>
      <file type="M">hbase-common.src.main.resources.hbase-default.xml</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.TagType.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2009-4-2 01:00:00" id="1176" opendate="2009-2-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Javadocs in HBA should be clear about which functions are asynchronous and which are synchronous</summary>
      <description>Since we don't name all of our functions as sync/async, we should at least be explicit in javadoc about the behavior of each.</description>
      <version>0.19.0</version>
      <fixedVersion>0.20.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.client.HBaseAdmin.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2014-9-15 01:00:00" id="11761" opendate="2014-8-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a FAQ item for updating a maven-managed application from 0.94 -&gt; 0.96+</summary>
      <description>In 0.96 we changed artifact structure, so that clients need to rely on an artifact specific to some module (hopefully hbase-client) instead of a single fat jar.We should add a FAQ item that points people towards hbase-client, to ease those updating downstream applications from 0.94 to 0.98+.Showing an example pom entry for e.g. org.apache.hbase:hbase:0.94.22 and one for e.g. org.apache.hbase:hbase-client:0.98.5 should be sufficient.</description>
      <version>None</version>
      <fixedVersion>0.99.1</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.book.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2009-2-8 01:00:00" id="1191" opendate="2009-2-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>ZooKeeper ensureParentExists calls fail on absolute path</summary>
      <description>If user specifies absolute path for one of the files in ZooKeeper, the following will not do what it's supposed to:if (!ensureZNodeExists(parentZNode)) { ...Because the user specified path is not a child of parentZNode, all operations on it will fail.</description>
      <version>0.19.0</version>
      <fixedVersion>0.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.hadoop.hbase.TestZooKeeper.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.zookeeper.ZooKeeperWrapper.java</file>
      <file type="M">conf.hbase-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-2-8 01:00:00" id="11910" opendate="2014-9-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document Premptive Call Me Maybe HBase findings in the online manual</summary>
      <description>Document the Premptive Call Me Maybe HBase findings in the online manual.</description>
      <version>None</version>
      <fixedVersion>2.0.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.asciidoc..chapters.performance.adoc</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2009-6-20 01:00:00" id="1206" opendate="2009-2-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Scanner spins when there are concurrent inserts to column family</summary>
      <description>I had a MR job that would launch multiple scanners on a region that made updates to the same column family as they were scanning on (but not the same column). As a result, there were lots of processes that had to grep through all of the irrelevent inserts many times as flushes occurred.However, if I put the column that I was outputting to in the list of columns to scan for, everything worked quickly.The code that's causing this is:01:13 &lt; BenM&gt; keys&amp;#91;i&amp;#93; = new HStoreKey(HConstants.EMPTY_BYTE_ARRAY, this.store.getHRegionInfo());01:13 &lt; BenM&gt; if (firstRow != null &amp;&amp; firstRow.length != 0) {01:13 &lt; BenM&gt; if (findFirstRow(i, firstRow)) {01:13 &lt; BenM&gt; continue;01:13 &lt; BenM&gt; }01:13 &lt; BenM&gt; }01:13 &lt; BenM&gt; while (getNext) {01:13 &lt; BenM&gt; if (columnMatch) {01:13 &lt; BenM&gt; break;01:13 &lt; BenM&gt; }01:13 &lt; BenM&gt; }columnMatch() on the stuff that just got flushed out never returns true. This caused lots of problems to build up.The fix for this is:(10:58:30 PM) BenM: IMHO, this is a somewhat easier issue to fix(10:58:38 PM) BenM: i think it could be done in a way that cleans up the code(10:58:50 PM) BenM: right now, the code just scans through each of the map files(10:59:02 PM) BenM: without regard to the relative key positions(10:59:12 PM) BenM: i think it could use a priority queue so that it only works on the relevent files(11:01:22 PM) St^Ack_: BenM: please expand, I don't follow exactly(11:01:50 PM) BenM: lets say we have two map files(11:02:09 PM) BenM: one with 1/foo:bar 2/foo:bar 3/foo:bar(11:02:17 PM) BenM: (row/family:col)(11:02:31 PM) BenM: and the other with 1000/blah:blah 1001/blah:blah(11:02:39 PM) BenM: the curent logic is(11:02:44 PM) BenM: for each map file:(11:02:56 PM) BenM: find the first potential row in this file(11:03:08 PM) BenM: look at min(all potential rows)(11:03:34 PM) BenM: the algorith should be:(11:03:43 PM) BenM: q = new PriorityQueue()(11:04:05 PM) BenM: for each map file: insert the HStoreKey of the first key in the file(11:04:17 PM) BenM: while(k = q.pop()) {(11:04:37 PM) BenM: if (k is intersting) break;(11:04:37 PM) BenM: advance k(11:04:37 PM) BenM: q.push(k)(11:04:38 PM) BenM: }</description>
      <version>0.19.0</version>
      <fixedVersion>0.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2009-3-2 01:00:00" id="1230" opendate="2009-3-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document installation of HBase on Windows</summary>
      <description>Provide documentation on how to run HBase on Windows.</description>
      <version>0.18.1,0.19.0,0.19.1,0.20.0</version>
      <fixedVersion>0.20.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.overview.html</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2009-3-4 01:00:00" id="1238" opendate="2009-3-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Under upload, region servers are unable to compact when loaded with hundreds of regions</summary>
      <description>We have a situation where each region server is loaded with 100+ regions, most of them in the same table. During a long upload of webpages, each memcache gets filled near equally fast so that the global memcache limit is usually triggered before the max memcache size. Since that emergency flush does not trigger compactions, the number of store files just keeps growing until it fails on all kinds of errors.We need a better story for this as this is a "normal" situation.</description>
      <version>0.19.0</version>
      <fixedVersion>0.19.1,0.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.MemcacheFlusher.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-12-18 01:00:00" id="12511" opendate="2014-11-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>namespace permissions - add support from table creation privilege in a namespace &amp;#39;C&amp;#39;</summary>
      <description>As discussed in namespace permission Jira. A user granted a 'C' on a namespace enables a user to create tables within the namespace. 'C' on a namespace does not enable a user to create/drop the namespace.</description>
      <version>None</version>
      <fixedVersion>1.0.0,1.1.0,0.98.19</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.security.access.TestNamespaceCommands.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.security.access.TestAccessController.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.security.access.AccessController.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-11-18 01:00:00" id="12526" opendate="2014-11-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove unused imports</summary>
      <description>Even if we relax the import checker to include javadocs in HBASE-12523, we still get ~250 remaining. Find and fix. Try to avoid reorganizing.</description>
      <version>None</version>
      <fixedVersion>0.99.2</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.HFileDataBlockEncoderImpl.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.zookeeper.ZKSplitLog.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.zookeeper.RegionServerTracker.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.zookeeper.ClusterStatusTracker.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.wal.WALProvider.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.wal.WALFactory.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.wal.DisabledWALProvider.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.wal.DefaultWALProvider.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.ZKDataMigrator.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.SortedCopyOnWriteSet.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.ShutdownHookManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.ModifyRegionUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.MetaUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.Merge.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.HFileArchiveUtil.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.hbck.OfflineMetaRepair.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.FSUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.FSTableDescriptors.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.FSTableDescriptorMigrationToSubdir.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.FSRegionScanner.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.CompressionTest.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.BoundedPriorityBlockingQueue.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.BloomFilterFactory.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.SplitLogTask.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.snapshot.SnapshotInfo.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.snapshot.SnapshotDescriptionUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.snapshot.ExportSnapshot.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.security.token.AuthenticationTokenSecretManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.security.access.HbaseObjectWritableFor96Migration.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.replication.regionserver.Replication.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.replication.regionserver.RegionReplicaReplicationEndpoint.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.replication.regionserver.HBaseInterClusterReplicationEndpoint.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.MetricsWALEditsReplay.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.HLogPrettyPrinter.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.FSHLog.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.Store.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.SplitLogWorker.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.snapshot.RegionServerSnapshotManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.ServerNonceManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.RSRpcServices.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.RegionScanner.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.MultiRowMutationProcessor.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.MiniBatchOperationInProgress.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.compactions.StripeCompactor.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.quotas.TimeBasedLimiter.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.quotas.RegionServerQuotaManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.quotas.QuotaLimiterFactory.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.quotas.OperationQuota.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.quotas.NoopOperationQuota.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.quotas.DefaultOperationQuota.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.procedure.ZKProcedureCoordinatorRpcs.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.procedure.RegionServerProcedureManagerHost.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.procedure.ProcedureMemberRpcs.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.procedure.MasterProcedureManagerHost.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.procedure.MasterProcedureManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.procedure.flush.FlushTableSubprocedure.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.TableStateManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.SplitLogManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.snapshot.MasterSnapshotVerifier.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.ServerManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.ServerListener.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.MasterStatusServlet.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.HMaster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.TruncateTableHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.TotesHRegionInfo.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.TableModifyFamilyHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.TableEventHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.TableAddFamilyHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.LogReplayHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.DeleteTableHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.ClusterStatusPublisher.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.balancer.SimpleLoadBalancer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.balancer.FavoredNodeLoadBalancer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.balancer.BalancerChore.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.AssignmentListener.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapred.TableRecordReaderImpl.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapred.TableRecordReader.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapred.TableInputFormatBase.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapred.RowCounter.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.TableSnapshotInputFormat.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.TableRecordReaderImpl.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.TableOutputFormat.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.MultiTableInputFormatBase.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.IdentityTableReducer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.HLogInputFormat.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.CellCounter.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.ipc.BalancedQueueRpcExecutor.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.LruBlockCache.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.HFileScanner.java</file>
      <file type="M">hbase-annotations.src.main.java.org.apache.hadoop.hbase.classification.InterfaceStability.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.Admin.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.ClusterStatusListener.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.ConnectionFactory.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.HConnectionManager.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.NoServerForRegionException.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.replication.ReplicationAdmin.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.RetryingCallerInterceptorFactory.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.ReversedScannerCallable.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.ScannerCallable.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.coprocessor.ColumnInterpreter.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.filter.QualifierFilter.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.filter.RowFilter.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.filter.SingleColumnValueFilter.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.ipc.CoprocessorRpcChannel.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.ipc.RemoteWithExtrasException.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.ipc.ServerRpcController.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.replication.ReplicationPeers.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.util.PoolMap.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.codec.Codec.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.io.CellOutputStream.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.types.DataType.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.types.RawBytesFixedLength.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.types.RawBytesTerminated.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.types.RawStringFixedLength.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.types.RawStringTerminated.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.util.AbstractPositionedByteRange.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.util.ByteBufferUtils.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.util.ConcurrentIndex.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.util.OrderedBytes.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.util.PositionedByteRange.java</file>
      <file type="M">hbase-examples.src.main.java.org.apache.hadoop.hbase.coprocessor.example.ZooKeeperScanPolicyObserver.java</file>
      <file type="M">hbase-prefix-tree.src.main.java.org.apache.hadoop.hbase.codec.prefixtree.PrefixTreeCodec.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.backup.example.HFileArchiveManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.backup.example.LongTermArchivingHFileCleaner.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.ClientSideRegionScanner.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.CoprocessorHConnection.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.TableSnapshotScanner.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.constraint.Constraint.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.constraint.ConstraintException.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coordination.SplitLogManagerCoordination.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coordination.SplitLogWorkerCoordination.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coordination.ZKSplitLogManagerCoordination.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coordination.ZkSplitLogWorkerCoordination.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coprocessor.CoprocessorHost.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coprocessor.RegionObserver.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.errorhandling.ForeignExceptionSnare.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.bucket.BucketCache.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.HFileBlock.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.HFileBlockIndex.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-12-18 01:00:00" id="12528" opendate="2014-11-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document the newly introduced params for providing principal and keytabs.</summary>
      <description>As per the description.</description>
      <version>None</version>
      <fixedVersion>2.0.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.ops.mgt.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-11-20 01:00:00" id="12550" opendate="2014-11-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Check all storefiles are referenced before splitting</summary>
      <description>Make double extra sure all storefiles are referenced before</description>
      <version>None</version>
      <fixedVersion>0.98.9,0.99.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestStoreFile.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestSplitTransaction.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.FSUtils.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.SplitTransaction.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionFileSystem.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2014-1-3 01:00:00" id="12620" opendate="2014-12-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add HBASE-11639 related items to Ref Guide</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.1.0,2.0.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.asciidoc..chapters.security.adoc</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-2-26 01:00:00" id="12920" opendate="2015-1-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>hadoopqa should compile with different hadoop versions</summary>
      <description>From time to time, we break compilation with hadoop-2.4 or other earlier versions, and only realize that at the time of a release candidate. We should fix hadoopqa to do the compilation for us. What I have locally is something like this: HADOOP2_VERSIONS="2.2.0 2.3.0 2.4.0 2.5.0 2.6.0"function buildWithHadoop2 { for HADOOP2_VERSION in $HADOOP2_VERSIONS ; do echo "" echo "##### BUILDING $ARTIFACT WITH HADOOP 2 VERSION $HADOOP2_VERSION #####" echo "" echo mvn clean install -DskipTests -Dhadoop-two.version=$HADOOP2_VERSION mvn clean install -DskipTests -Dhadoop-two.version=$HADOOP2_VERSION done}</description>
      <version>None</version>
      <fixedVersion>2.0.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-support.test-patch.properties</file>
      <file type="M">dev-support.test-patch.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-2-6 01:00:00" id="12980" opendate="2015-2-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Delete of a table may not clean all rows from hbase:meta</summary>
      <description>One such case is if we miswrite the info:regioninfo column and it comes up empty, this row will remain in the table. We have a set of 'finally' cleanup tasks on table delete. Let me add one that for sure purges any rows to do with the deleted table.</description>
      <version>None</version>
      <fixedVersion>1.0.0,1.1.0,0.98.11</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.handler.TestEnableTableHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.DeleteTableHandler.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-4-23 01:00:00" id="13546" opendate="2015-4-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>NPE on region server status page if all masters are down</summary>
      <description>while trying to debug a cluster with all masters down, I noticed going to the region server status page failed with NPE.</description>
      <version>None</version>
      <fixedVersion>1.1.0,0.98.13,1.0.2,2.0.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestMasterAddressTracker.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.zookeeper.MasterAddressTracker.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2008-12-28 01:00:00" id="782" opendate="2008-7-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The DELETE key in the hbase shell deletes the wrong character</summary>
      <description>Within the hbase shell, if you type "monkey", then place the cursor on the letter 'k' and hit the key 'DELETE' several times it will do this:monkeymokeymkeykeykeykey...</description>
      <version>0.19.0</version>
      <fixedVersion>0.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.hirb.rb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-3-7 01:00:00" id="8030" opendate="2013-3-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>znode path of online region servers is hard coded in rolling_restart.sh</summary>
      <description>znode path of online region servers($zparent/rs) is hard coded. We need to use configured value of zookeeper.znode.rs as child path. # gracefully restart all online regionservers online_regionservers=`$bin/hbase zkcli ls $zparent/rs 2&gt;&amp;1 | tail -1 | sed "s/\[//" | sed "s/\]//"`</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.94.7,0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.rolling-restart.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-3-7 01:00:00" id="8031" opendate="2013-3-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Adopt goraci as an Integration test</summary>
      <description>As you might know, I am a big fan of the goraci test that Keith Turner has developed, which in turn is inspired by the Accumulo test called Continuous Ingest. As much as I hate to say it, having to rely on gora and and external github library makes using this lib cumbersome. And lately we had to use this for testing against secure clusters and with Hadoop2, which gora does not support for now. So, I am proposing we add this test as an IT in the HBase code base so that all HBase devs can benefit from it.The original source code can be found here: https://github.com/keith-turner/goraci https://github.com/enis/goraci/From the javadoc:Apache Accumulo [0] has a simple test suite that verifies that data is not * lost at scale. This test suite is called continuous ingest. This test runs * many ingest clients that continually create linked lists containing 25 * million nodes. At some point the clients are stopped and a map reduce job is * run to ensure no linked list has a hole. A hole indicates data was lost.·· * * The nodes in the linked list are random. This causes each linked list to * spread across the table. Therefore if one part of a table loses data, then it * will be detected by references in another part of the table. *Below is rough sketch of how data is written. For specific details look at * the Generator code. * * 1 Write out 1 million nodes· 2 Flush the client· 3 Write out 1 million that * reference previous million· 4 If this is the 25th set of 1 million nodes, * then update 1st set of million to point to last· 5 goto 1 * * The key is that nodes only reference flushed nodes. Therefore a node should * never reference a missing node, even if the ingest client is killed at any * point in time. * * Some ASCII art time: * [ . . . ] represents one batch of random longs of length WIDTH * * _________________________ * | ______ | * | | || * __+_________________+_____ || * v v v ||| * first = [ . . . . . . . . . . . ] ||| * ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ||| * | | | | | | | | | | | ||| * prev = [ . . . . . . . . . . . ] ||| * ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ||| * | | | | | | | | | | | ||| * current = [ . . . . . . . . . . . ] ||| * ||| * ... ||| * ||| * last = [ . . . . . . . . . . . ] ||| * | | | | | | | | | | |-----||| * | |--------|| * |___________________________|</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.94.6,0.95.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-common.src.main.resources.hbase-default.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-3-8 01:00:00" id="8034" opendate="2013-3-8 00:00:00" resolution="Won&amp;#39;t Fix">
    <buginformation>
      <summary>record on-disk data size for store file and make it available during writing</summary>
      <description>To better estimate the size of data in the file, and to be able to split files intelligently during any multi-file compactor like stripe or level.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.StoreFile.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.HFile.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.AbstractHFileWriter.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-9-8 01:00:00" id="8035" opendate="2013-3-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add site target check to precommit tests</summary>
      <description>We should check that the Maven 'site' target passes as part of precommit testing. See HBASE-8022.</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-support.test-patch.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-7-28 01:00:00" id="8826" opendate="2013-6-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure HBASE-8695 is covered in Thrift 2</summary>
      <description>HBASE-8695 is about using the config file, make sure Thrift 2 is doing the same.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.95.2,0.94.10</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.ThriftServer.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-7-28 01:00:00" id="8832" opendate="2013-6-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure HBASE-4658 is supported by Thrift 2</summary>
      <description>HBASE-4658 adds support for "attributes" for certain operations. Make sure Thrift 2 supports them where ever available in the native API.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.95.2,0.94.10</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.thrift2.TestThriftHBaseServiceHandler.java</file>
      <file type="M">hbase-server.src.main.resources.org.apache.hadoop.hbase.thrift2.hbase.thrift</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.ThriftUtilities.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.TScan.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.TPut.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.TIncrement.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.THBaseService.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.TGet.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.TDelete.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2013-9-16 01:00:00" id="9547" opendate="2013-9-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Surefire steals focus on mac osx</summary>
      <description>When I run builds on mac osx, the focus is stolen as we go through tests; surefire is launching a little app named variously: "forkedbooter" is one, "mapred.Child" another. The little app goes away when the test is done but meantime it robs the focus making desktop unusable.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.96.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.resources.mapred-site.xml</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.TestNamespace.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.TestMasterNoCluster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.TableNamespaceManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.HMaster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.AssignmentManager.java</file>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-9-17 01:00:00" id="9560" opendate="2013-9-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bin/hbase clean --cleanAll should not skip data cleaning if in local mode</summary>
      <description>I don't see a reason why we are skipping cleaning in local mode:Eniss-MacBook-Pro:hbase-0.96$ bin/hbase clean --cleanAllSkipping hbase data clearing in standalone mode.I use this often for standalone mode.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.96.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.hbase-cleanup.sh</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-11-17 01:00:00" id="9792" opendate="2013-10-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Region states should update last assignments when a region is opened.</summary>
      <description>Currently, we update a region's last assignment region server when the region is online. We should do this sooner, when the region is moved to OPEN state. CM could kill this region server before we delete the znode and online the region.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.96.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.TestAssignmentManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.RegionStates.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.AssignmentManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-10-17 01:00:00" id="9793" opendate="2013-10-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Offline a region before it&amp;#39;s closed could cause double assignment</summary>
      <description>The fix for HBASE-9773 could cause double assignment, as jeffreyz pointed out. Let's fix it in a separate jira instead of an addendum since there are different opinions on how to fix it.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.96.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.TestAssignmentManagerOnCluster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.AssignmentManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2008-11-7 01:00:00" id="984" opendate="2008-11-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix javadoc warnings</summary>
      <description>There are a number of javadoc warnings: @see pointing to the wrong place, etc. These need to be fixed before 0.19 is released.</description>
      <version>0.19.0</version>
      <fixedVersion>0.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.util.InfoServer.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.io.HalfMapFileReader.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
</bugrepository>