<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="HBASE">
  
  
  <bug fixdate="2011-10-14 01:00:00" id="3444" opendate="2011-1-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Test to prove Bytes.toBytesBinary and Bytes.toStringBinary() is reversible</summary>
      <description>Bytes.toStringBinary() doesn't escape \.Otherwise the transformation isn't reversiblebyte[] a = {'\', 'x' , '0', '0'}Bytes.toBytesBinary(Bytes.toStringBinary(a)) won't be equal to a</description>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-common.src.test.java.org.apache.hadoop.hbase.util.TestBytes.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-4-12 01:00:00" id="3768" opendate="2011-4-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add best practice to book for loading row key only</summary>
      <description>Book and wiki FAQs are missing guidance on the recommended practice for loading row keys only during a scan.Patch attached based on jdcryans' feedback from IRC.</description>
      <version>0.90.3</version>
      <fixedVersion>0.92.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.docbkx.performance.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-10-26 01:00:00" id="3925" opendate="2011-5-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make Shell&amp;#39;s -d and debug cmd behave the same</summary>
      <description>The -d option switches log4j to DEBUG and leaves the backtrace level at the default. When using the supplied debug command we only switch the backtrace, but I would think this also should set the log4j levels:# Debugging methoddef debug if @shell.debug @shell.debug = false conf.back_trace_limit = 0 else @shell.debug = true conf.back_trace_limit = 100 end debug?endcould be something like # Debugging methoddef debug if @shell.debug @shell.debug = false conf.back_trace_limit = 0 log_level = org.apache.log4j.Level::ERROR else @shell.debug = true conf.back_trace_limit = 100 log_level = org.apache.log4j.Level::DEBUG end org.apache.log4j.Logger.getLogger("org.apache.zookeeper").setLevel(log_level) org.apache.log4j.Logger.getLogger("org.apache.hadoop.hbase").setLevel(log_level) debug?end</description>
      <version>0.90.3,0.90.7,0.92.2,0.94.3,0.98.0,0.95.2</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.hirb.rb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-1-2 01:00:00" id="3949" opendate="2011-6-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add "Master" link to RegionServer pages</summary>
      <description>Use the ZK info where the master is to add a UI link on the top of each RegionServer page. Currently you cannot navigate directly to the Master UI once you are on a RS page.Not sure if the info port is exposed OTTOMH, but we could either use the RS local config setting for that or add it to ZK to enable lookup.</description>
      <version>0.90.3,0.92.0</version>
      <fixedVersion>0.94.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.java.org.apache.hadoop.hbase.regionserver.TestRSStatusServlet.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">src.main.jamon.org.apache.hbase.tmpl.regionserver.RSStatusTmpl.jamon</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2011-6-16 01:00:00" id="3995" opendate="2011-6-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>HBASE-3946 broke TestMasterFailover</summary>
      <description>TestMasterFailover is all about a new master coming up on an existing cluster. Previous to HBASE-3946, the new master joining a cluster processing any dead servers would assign all regions found on the dead server even if they were split parents. We don't want that.But TestMasterFailover mocks up some pretty interesting conditions. The one we were failing on was that while the master was offine, we'd manually add a region to zk that was in CLOSING state. We'd then go and disable the table up in zk (while master was offline). Finally, we'd' kill the server that was supposed to be hosting the region from the disabled table in CLOSING state. Then we'd have the master join the cluster. It had to figure it out.Before HBASE-3946, we'd just force offline every region that had been on the dead server. This would call all to be assigned only on assign, regions from disabled tables are skipped, so it all "worked" (except would online parent of a split should there be one).</description>
      <version>None</version>
      <fixedVersion>0.90.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-2-16 01:00:00" id="3996" opendate="2011-6-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support multiple tables and scanners as input to the mapper in map/reduce jobs</summary>
      <description>It seems that in many cases feeding data from multiple tables or multiple scanners on a single table can save a lot of time when running map/reduce jobs.I propose a new MultiTableInputFormat class that would allow doing this.</description>
      <version>None</version>
      <fixedVersion>0.94.5,0.95.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.TableSplit.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.TableMapReduceUtil.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.Scan.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2011-9-2 01:00:00" id="4057" opendate="2011-7-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement HBase version of "show processlist"</summary>
      <description>One of the features that our DBAs use for MySQL analysis is "show processlist", which gives application-level stats about the RPC threads. Right now, we use jstack but that is very core-developer-centric. We need to create a similar tool that DBA/Ops/AppDevs can use.</description>
      <version>None</version>
      <fixedVersion>0.92.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.java.org.apache.hadoop.hbase.monitoring.TestTaskMonitor.java</file>
      <file type="M">src.main.resources.hbase-webapps.static.hbase.css</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.regionserver.RSStatusServlet.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.monitoring.TaskMonitor.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.monitoring.MonitoredTaskImpl.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.monitoring.MonitoredTask.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.master.MasterStatusServlet.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.ipc.WritableRpcEngine.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.ipc.RpcServer.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.ipc.HBaseServer.java</file>
      <file type="M">src.main.jamon.org.apache.hbase.tmpl.regionserver.RSStatusTmpl.jamon</file>
      <file type="M">src.main.jamon.org.apache.hbase.tmpl.master.MasterStatusTmpl.jamon</file>
      <file type="M">src.main.jamon.org.apache.hbase.tmpl.common.TaskMonitorTmpl.jamon</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2008-2-5 01:00:00" id="407" opendate="2008-2-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Client should cache region locations in an LRU structure</summary>
      <description>Instead of keeping the region locations cached client side in a TreeMap, we should use an LRU mechanism to help manage memory more dynamically.</description>
      <version>None</version>
      <fixedVersion>0.2.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.HConnectionManager.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-10-7 01:00:00" id="4078" opendate="2011-7-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Silent Data Offlining During HDFS Flakiness</summary>
      <description>See HBASE-1436 . The bug fix for this JIRA is a temporary workaround for improperly moving partially-written files from TMP into the region directory when a FS error occurs. Unfortunately, the fix is to ignore all IO exceptions, which masks off-lining due to FS flakiness. We need to permanently fix the problem that created HBASE-1436 &amp; then at least have the option to not open a region during times of flakey FS.</description>
      <version>0.89.20100924,0.90.3,0.92.0</version>
      <fixedVersion>0.92.0,0.94.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.java.org.apache.hadoop.hbase.regionserver.TestCompaction.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.regionserver.Store.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-7-7 01:00:00" id="4079" opendate="2011-7-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>HTableUtil - helper class for loading data</summary>
      <description>A pattern that we use at Explorys is to chunk up Puts, and then bucket Puts by RegionServer. This reduces the number of RPC calls per writeBuffer flush, because the flushes will typically be going to one region with this approach.I didn't think adding such utility methods to HTable was the right approach, so I created an HTableUtil (in the .client package) that contained such functionality.</description>
      <version>None</version>
      <fixedVersion>0.92.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2008-2-5 01:00:00" id="409" opendate="2008-2-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add build path to svn:ignore list</summary>
      <description>After ant build has been executed, build folder will be created.</description>
      <version>None</version>
      <fixedVersion>0.2.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-7-18 01:00:00" id="4115" opendate="2011-7-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>HBase shell assign and unassign unusable if region name includes binary-encoded data</summary>
      <description>When using the hbase shell assign and unassign commands, we should be able to copy region names from the hbck utility or the web page hosted by the HMaster process. But if these names have encoded binary data, they region name won't match and the command will fail.This is easily fixed by using Bytes.toBytesBinary on the region name in these commands rather than the raw Bytes.ToBytes.</description>
      <version>0.90.2,0.90.3</version>
      <fixedVersion>0.90.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.ruby.hbase.admin.rb</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-7-22 01:00:00" id="4126" opendate="2011-7-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make timeoutmonitor timeout after 30 minutes instead of 3</summary>
      <description>See J-D comment here https://issues.apache.org/jira/browse/HBASE-4064?focusedCommentId=13069098&amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13069098 where he thinks we should just turn off timeout monitor because it only ever wrecks havoc. Lets make it 30 minutes for 0.90.4.</description>
      <version>None</version>
      <fixedVersion>0.90.4</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.master.AssignmentManager.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-7-26 01:00:00" id="4140" opendate="2011-7-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>book: Update our hadoop vendor section</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.92.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.docbkx.configuration.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-12-4 01:00:00" id="4163" opendate="2011-8-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create Split Strategy for YCSB Benchmark</summary>
      <description>Talked with Lars about how we can make it easier for users to run the YCSB benchmarks against HBase &amp; get realistic results. Currently, HBase is optimized for the random/uniform read/write case, which is the YCSB load. The initial reason why we perform bad when users test against us is because they do not presplit regions &amp; have the split ratio really low. We need a one-line way for a user to create a table that is pre-split to 200 regions (or some decent number) by default &amp; disable splitting. Realistically, this is how a uniform load cluster should scale, so it's not a hack. This will also give us a good use case to point to for how users should pre-split regions.</description>
      <version>0.90.3,0.92.0</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.book.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-8-5 01:00:00" id="4168" opendate="2011-8-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>A client continues to try and connect to a powered down regionserver</summary>
      <description>Experiment-1Started a dev cluster - META is on the same regionserver as my key-value. I kill the regionserver process but donot power down the machine.The META is able to migrate to a new regionserver and the regions are also able to reopen elsewhere.The client is able to talk to the META and find the new kv location and get it.Experiment-2Started a dev cluster - META is on a different regionserver as my key-value. I kill the regionserver process but donot power down the machine.The META remains where it is and the regions are also able to reopen elsewhere.The client is able to talk to the META and find the new kv location and get it.Experiment-3Started a dev cluster - META is on a different regionserver as my key-value. I power down the machine hosting this regionserver.The META remains where it is and the regions are also able to reopen elsewhere.The client is able to talk to the META and find the new kv location and get it.Experiment-4 (This is the problematic one)Started a dev cluster - META is on the same regionserver as my key-value. I power down the machine hosting this regionserver.The META is able to migrate to a new regionserver - however - it takes a really long time (~30 minutes)The regions on that regionserver DONOT reopen (I waited for 1 hour)The client is able to find the new location of the META, however, the META keeps redirecting the client to powered downregionserver as the location of the key-value it is trying to get. Thus the client's get is unsuccessful.</description>
      <version>None</version>
      <fixedVersion>0.90.5</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.catalog.CatalogTracker.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-9-7 01:00:00" id="4338" opendate="2011-9-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Package build for rpm and deb are broken</summary>
      <description>Environment variable final.name was removed in HBASE-3629, and this prevents rpm/deb packaging from building.</description>
      <version>0.90.3</version>
      <fixedVersion>0.92.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
</bugrepository>