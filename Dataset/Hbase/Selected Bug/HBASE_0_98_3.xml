<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="HBASE">
  <bug fixdate="2014-6-2 01:00:00" id="11280" opendate="2014-6-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document distributed log replay and distributed log splitting</summary>
      <description>Enable 'distributed log replay' by default. Depends on hfilev3 being enabled.</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.book.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-7-3 01:00:00" id="11285" opendate="2014-6-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Expand coprocs info in Ref Guide</summary>
      <description/>
      <version>0.98.3</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.cp.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2014-6-13 01:00:00" id="11350" opendate="2014-6-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[PE] Allow random value size</summary>
      <description>Allow PE to write random value sizes. Helpful mimic'ing 'real' sizings.</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.PerformanceEvaluation.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat2.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.mapreduce.TestHFileOutputFormat.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-6-14 01:00:00" id="11353" opendate="2014-6-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Wrong Write Request Count</summary>
      <description>See title...</description>
      <version>0.99.0,0.98.3</version>
      <fixedVersion>0.99.0,0.98.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestHRegion.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2014-6-23 01:00:00" id="11403" opendate="2014-6-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix race conditions around Object#notify</summary>
      <description>We do have some race conditions there. We don't see them fail in the unit tests, because our #wait are bounded. But from a performance point of view, they do occur. I've reviewed them and fix all the issue I found excepted in the AM (haven't reviewed this one, may be it's fine).On a perf test, this seems to improve the max latency.</description>
      <version>0.99.0,0.98.3</version>
      <fixedVersion>0.99.0,0.98.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.LogRoller.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.ServerManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.HMaster.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.bucket.BucketCache.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.ipc.RpcClient.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.AsyncProcess.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-12-25 01:00:00" id="11412" opendate="2014-6-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Minimize a number of hbase-client transitive dependencies</summary>
      <description>hbase-client has a number of transitive dependencies not needed for a client mode execution. In my test I've added the following exclusions:&lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt; &lt;artifactId&gt;jersey-server&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt; &lt;artifactId&gt;jersey-core&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;com.sun.jersey&lt;/groupId&gt; &lt;artifactId&gt;jersey-json&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;com.sun.jersey.contribs&lt;/groupId&gt; &lt;artifactId&gt;jersey-guice&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;com.google.inject&lt;/groupId&gt; &lt;artifactId&gt;guice&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;com.google.inject.extensions&lt;/groupId&gt; &lt;artifactId&gt;guice-servlet&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt; &lt;artifactId&gt;jetty&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt; &lt;artifactId&gt;jetty-util&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;commons-httpclient&lt;/groupId&gt; &lt;artifactId&gt;commons-httpclient&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt;Proposal: add related exclusions to some of the dependencies hbase-client depends upon.</description>
      <version>0.98.3</version>
      <fixedVersion>1.0.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-client.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2014-6-27 01:00:00" id="11418" opendate="2014-6-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>build target "site" doesn&amp;#39;t respect hadoop-two.version property</summary>
      <description>Running build with mvn clean site -Dhadoop-two.version=2.3.0 I see that it pulls in Hadoop 2.2.0 dependencies (when building 0.98.x); and Hadoop 2.3.0 on the master. The reason of the behavior is the bug in configuration of userapi reportset, namely: &lt;docletArtifact&gt; &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt; &lt;!-- doclet lives in hadoop 2's hadoop-common module --&gt; &lt;artifactId&gt;hadoop-common&lt;/artifactId&gt; &lt;version&gt;2.3.0&lt;/version&gt; &lt;/docletArtifact&gt;(the snipped is from the master branch)</description>
      <version>0.98.3</version>
      <fixedVersion>0.99.0,0.98.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2014-7-2 01:00:00" id="11459" opendate="2014-7-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add more doc on compression codecs, how to hook up native lib, lz4, etc.</summary>
      <description/>
      <version>None</version>
      <fixedVersion>2.0.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.book.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2009-1-21 01:00:00" id="1146" opendate="2009-1-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replace the HRS leases with Zookeeper</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.20.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.hadoop.hbase.TestHBaseCluster.java</file>
      <file type="M">src.test.org.apache.hadoop.hbase.regionserver.TestLogRolling.java</file>
      <file type="M">src.test.org.apache.hadoop.hbase.filter.TestRowFilterAfterWrite.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.zookeeper.ZooKeeperWrapper.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.ServerManager.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.RegionManager.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.master.HMaster.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.HConstants.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-7-10 01:00:00" id="11489" opendate="2014-7-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>ClassNotFoundException while running IT tests in trunk using &amp;#39;mvn verify&amp;#39;</summary>
      <description>Trying to run mvn verify -Dit.test=IntegrationTestBigLinkedList -Dtest.output.tofile=falsecauses this ClassNotFoundException issuetestContinuousIngest(org.apache.hadoop.hbase.test.IntegrationTestBigLinkedList): org/jboss/netty/channel/ChannelFactory</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-it.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-7-10 01:00:00" id="11496" opendate="2014-7-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>HBASE-9745 broke cygwin CLASSPATH translation</summary>
      <description>HBASE-9745 put HBASE_CLASSPATH back at the end of the Java classpath, but also moved it to happen after the cygwin translation which broke it.</description>
      <version>None</version>
      <fixedVersion>0.99.0,0.96.3,0.98.4,0.94.22</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.hbase</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2014-8-7 01:00:00" id="11701" opendate="2014-8-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Start and end of memstore flush log should be on the same level</summary>
      <description>Currently the start of the memstore flush is done in DEBUG level and when it finishes is done in INFO. Both should be done in the same level.</description>
      <version>None</version>
      <fixedVersion>0.99.0,0.98.6</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2014-9-3 01:00:00" id="11886" opendate="2014-9-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The creator of the table should have all permissions on the table</summary>
      <description>In our testing of 0.98.4 with security ON, we found that table creator doesn't have RWXCA on the created table. Instead, the user representing the HBase daemon gets all permissions. Due to this the table creator can't write to the table he just created. I am suspecting HBASE-11275 introduced the problem.</description>
      <version>0.98.3</version>
      <fixedVersion>0.99.0,0.98.6</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.handler.CreateTableHandler.java</file>
    </fixedFiles>
  </bug>
  
</bugrepository>