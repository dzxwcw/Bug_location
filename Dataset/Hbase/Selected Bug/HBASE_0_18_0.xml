<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="HBASE">
  
  <bug fixdate="2008-1-13 01:00:00" id="65" opendate="2008-1-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Thrift Server should have an option to bind to ip address</summary>
      <description>The Thrift server can be bound to a port by calling./bin/hbase thrift --port PORTAs in all other server in hadoop everything is option to bind to a set ip address this will help with security issuesexample ./bin/hbase rest --bind 0.0.0.0As of now thrift is on all ip's on the server making it a security risk. so it would be nice to have the option to bind to a ip so we can limit access to the server.</description>
      <version>0.18.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2008-9-16 01:00:00" id="836" opendate="2008-8-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update thrift examples to work with changed IDL (HBASE-697)</summary>
      <description>Examples are now out of date since HBASE-697 went in.</description>
      <version>0.2.1,0.18.0</version>
      <fixedVersion>0.18.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.examples.thrift.DemoClient.py</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2013-5-24 01:00:00" id="8420" opendate="2013-4-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Port HBASE-6874 Implement prefetching for scanners from 0.89-fb</summary>
      <description>This should help scanner performance. We should have it in trunk.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.95.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestRegionServerMetrics.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.protobuf.TestProtobufUtil.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.coprocessor.TestRowProcessorEndpoint.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.client.TestScannersFromClientSide.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">hbase-protocol.src.main.protobuf.Client.proto</file>
      <file type="M">hbase-protocol.src.main.java.org.apache.hadoop.hbase.protobuf.generated.ClientProtos.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.util.Threads.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.protobuf.ProtobufUtil.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.ScannerCallable.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.Scan.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.ClientScanner.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-6-3 01:00:00" id="8680" opendate="2013-6-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>distributedLogReplay performance regression</summary>
      <description>The JIRA is to check in changes to address performance issues found during my performance testing as following:1) When WALEdits belongs to a region which split/merged later, replay incurs extra waitUntilRegionOnline RPC call2) Using a single shared connection for replaying achieves better performance. Everytime creating a new connection, it incurs 4+ seconds to establish a connection to ZK.3) other small modifications to mitigate excessive logging</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.95.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestSplitLogWorker.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.HLogSplitter.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.SplitLogWorker.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.RegionStates.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2008-9-4 01:00:00" id="871" opendate="2008-9-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Major compaction periodicity should be specifyable at the column family level, not cluster wide</summary>
      <description>jon gray has a table of ten rows and a couple of columns that is constantly being updated. Has max versions of 2. This table is growing fast because all versions written are kept until a major compaction. The way this table is being used is different than that of others. Would be good if he could have major compactions run more often than the default once a day.</description>
      <version>0.2.1,0.18.0</version>
      <fixedVersion>0.2.1,0.18.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HStoreFile.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2013-3-19 01:00:00" id="8770" opendate="2013-6-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>deletes and puts with the same ts should be resolved according to mvcc/seqNum</summary>
      <description>This came up during HBASE-8721. Puts with the same ts are resolved by seqNum. It's not clear why deletes with the same ts as a put should always mask the put, rather than also being resolve by seqNum.What do you think?</description>
      <version>None</version>
      <fixedVersion>2.0.0</fixedVersion>
      <type>Brainstorming</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.asciidoc..chapters.datamodel.adoc</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-7-28 01:00:00" id="8826" opendate="2013-6-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure HBASE-8695 is covered in Thrift 2</summary>
      <description>HBASE-8695 is about using the config file, make sure Thrift 2 is doing the same.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.95.2,0.94.10</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.ThriftServer.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-7-28 01:00:00" id="8832" opendate="2013-6-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure HBASE-4658 is supported by Thrift 2</summary>
      <description>HBASE-4658 adds support for "attributes" for certain operations. Make sure Thrift 2 supports them where ever available in the native API.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.95.2,0.94.10</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.thrift2.TestThriftHBaseServiceHandler.java</file>
      <file type="M">hbase-server.src.main.resources.org.apache.hadoop.hbase.thrift2.hbase.thrift</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.ThriftUtilities.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.TScan.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.TPut.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.TIncrement.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.THBaseService.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.TGet.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift2.generated.TDelete.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2008-10-18 01:00:00" id="936" opendate="2008-10-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>REST Interface: enable to get numbers of rows from scanner interface</summary>
      <description>The scanner request will return one row for each request defaultly. But due to reduce the network bandwidth also the usability of the api, it should allow return multiple rows at once.</description>
      <version>0.18.0</version>
      <fixedVersion>0.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.rest.ScannerHandler.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.rest.GenericHandler.java</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">src.java.org.apache.hadoop.hbase.client.Scanner.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-8-29 01:00:00" id="9380" opendate="2013-8-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>StoreFile.Reader is not being closed on memstore flush</summary>
      <description>We are not closing the StoreFile.Reader upon memstore flush.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.96.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HStore.java</file>
    </fixedFiles>
  </bug>
  
  
</bugrepository>