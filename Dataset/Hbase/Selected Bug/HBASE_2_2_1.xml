<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="HBASE">
  <bug fixdate="2019-9-8 01:00:00" id="22012" opendate="2019-3-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>SpaceQuota DisableTableViolationPolicy will cause cycles of enable/disable table</summary>
      <description>Space Quota: Policy state is getting changed from disable to Observance after sometime automatically.Steps:1: Create a table with space quota policy as Disable2: Put some data so that table state is in space quota violation3: So observe that table state is in violation4: Now wait for some time5: Observe that after some time table state is changing to to Observance however table is still disablededit (elserj): The table is automatically moved back from the violation state because of the code added that tried to ride over RITs. When a Region is not online (whether normally or abnormally), the RegionSizeReports are not sent from RS to Master. Eventually, enough Regions are not reported which dips below the acceptable threshold and we automatically move the table back to the "acceptable" space quota state (not in violation). We could skip this failsafe when we're checking for a quota that has the DisableTable violation policy.</description>
      <version>3.0.0-alpha-1,2.2.1</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,2.1.7,2.2.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.quotas.TestSpaceQuotaBasicFunctioning.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.quotas.TestMasterQuotaManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.quotas.QuotaObserverChore.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.quotas.MasterQuotaManager.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-4-8 01:00:00" id="22020" opendate="2019-3-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>upgrade to yetus 0.9.0</summary>
      <description>branch-1/jdk7 checkstyle dtd xml parse complaint; "script engine for language js can not be found"See parent for some context. Checkstyle references dtds that were hosted on puppycrawl, then on sourceforge up until ten days ago. Nightlies are failing for among other reasons, complaint that there is bad xml in the build... notably, the unresolvable DTDs.I'd just update the DTDs but there is a need for a js engine some where and openjdk7 doesn't ship with one (openjdk8 does). That needs addressing and then we can backport the parent issue...See https://builds.apache.org/view/H-L/view/HBase/job/HBase%20Nightly/job/branch-1/710/artifact/output-general/xml.txt ... which in case its rolled away, is filled with this message:"script engine for language js can not be found"</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.2.0,1.4.10,2.3.0,2.0.6,2.1.5,1.3.5</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-support.Jenkinsfile</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-3-11 01:00:00" id="22025" opendate="2019-3-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>RAT check fails in nightlies; fails on (old) test data files.</summary>
      <description>The nightly runs where we check RM steps fails in branch-2.1 because the rat test complains about old test data files not having licenses. See HBASE-22022 for how we turned up this issue. This JIRA adds exclusions for these files that cause failure.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.2.0,2.0.5,2.3.0,2.1.4</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-5-8 01:00:00" id="22379" opendate="2019-5-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix Markdown for "Voting on Release Candidates" in book</summary>
      <description>The Markdown in the section "Voting on Release Candidates" of the HBase book seems to be broken. It looks like that there should be a quote, which isn't displayed correctly. Same is true for the formatting of the Maven RAT command.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.2.0,1.4.10,2.3.0,2.0.6,2.1.5,1.3.5</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.asciidoc..chapters.developer.adoc</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2010-2-24 01:00:00" id="2262" opendate="2010-2-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>ZKW.ensureExists should check for existence</summary>
      <description>The fact that ZKW.ensureExists relies on KeeperException.NodeExistsException creates a lot of chatter in HBase and Zookeeper logs and also confuses users. We should use ZooKeeper.exists instead.</description>
      <version>None</version>
      <fixedVersion>0.20.4,0.90.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.hadoop.hbase.zookeeper.ZooKeeperWrapper.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-7-13 01:00:00" id="22689" opendate="2019-7-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Line break for fix version in documentation</summary>
      <description>The section describing the policy for the fix version in JIRA is missing line breaks.</description>
      <version>3.0.0-alpha-1,1.5.0,2.3.0,2.0.6,2.2.1,2.1.6,1.3.6,1.4.11</version>
      <fixedVersion>3.0.0-alpha-1,1.5.0,2.3.0,2.0.6,2.2.1,2.1.6,1.3.6,1.4.11</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.asciidoc..chapters.developer.adoc</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-8-6 01:00:00" id="22800" opendate="2019-8-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add mapreduce dependencies to hbase-shaded-testing-util</summary>
      <description>MiniMRCluster is missing from the generated hbase-shaded-testing-util artifact.</description>
      <version>3.0.0-alpha-1,2.2.1,2.1.6</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,2.2.1,2.1.6</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-shaded.hbase-shaded-testing-util.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-8-6 01:00:00" id="22801" opendate="2019-8-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Maven build issue on Github PRs</summary>
      <description>PreCommit job for GitHub pull requests started to fail frequently with maven issues.[ERROR] Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.5.2:install (default-install) on project hbase-http: Failed to install metadata org.apache.hbase:hbase-http/maven-metadata.xml: Could not parse metadata /home/jenkins/.m2/repository/org/apache/hbase/hbase-http/maven-metadata-local.xml: in epilog non whitespace content is not allowed but got a (position: END_TAG seen ...&lt;/metadata&gt;\na... @12:2) -&gt; [Help 1]The local .m2 repository might be used by concurrent builds.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,1.5.0,2.3.0,2.0.6,2.2.1,2.1.6,1.3.6,1.4.11</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-support.Jenkinsfile.GitHub</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-8-9 01:00:00" id="22824" opendate="2019-8-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Show filesystem path for the orphans regions on filesystem</summary>
      <description/>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,2.0.6,2.2.1,2.1.6</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.assignment.TestHbckChore.java</file>
      <file type="M">hbase-server.src.main.resources.hbase-webapps.master.hbck.jsp</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.HbckChore.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-9-17 01:00:00" id="23035" opendate="2019-9-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Retain region to the last RegionServer make the failover slower</summary>
      <description>Now if one RS crashed, the regions will try to use the old location for the region deploy. But one RS only have 3 threads to open region by default. If a RS have hundreds of regions, the failover is very slower. Assign to same RS may have good locality if the Datanode is deploied on same host. But slower failover make the availability worse. And the locality is not big deal when deploy HBase on cloud.This was introduced by HBASE-18946.</description>
      <version>3.0.0-alpha-1,2.3.0,2.2.1,2.1.6</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,2.1.7,2.2.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestRegionReplicasWithRestartScenarios.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.TestRetainAssignmentOnRestartSplitWithoutZk.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.TestRetainAssignmentOnRestart.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.TestMasterOperationsForRegionReplicas.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.master.procedure.TestSCPBase.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.procedure.ServerCrashProcedure.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.assignment.TransitRegionStateProcedure.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-10-29 01:00:00" id="23092" opendate="2019-9-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make the RM tooling in dev-tools/create-release generic</summary>
      <description>The dev-tools/create-release scripts were originally about creating hbase core RCs (Original idea and script versions were copied over from apache spark). Subsequently, they were checked into hbase-operator-tools repo and genericized so they worked in that context. Today, after a few mods, the create-release scripts from hbase-operator-tools w/ some edits generated an RC of hbase-thirdparty.This issue is edits on the dev-tools/create-tools on master branch so the scripts can create RCs across these three repos at least (with more to follow).</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-support.create-release.vote.tmpl</file>
      <file type="M">dev-support.create-release.release-util.sh</file>
      <file type="M">dev-support.create-release.release-tag.sh</file>
      <file type="M">dev-support.create-release.release-build.sh</file>
      <file type="M">dev-support.create-release.README.txt</file>
      <file type="M">dev-support.create-release.do-release.sh</file>
      <file type="M">dev-support.create-release.do-release-docker.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-10-14 01:00:00" id="23172" opendate="2019-10-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>HBase Canary region success count metrics reflect column family successes, not region successes</summary>
      <description>HBase Canary reads once per column family per region. The current "region success count" should actually be "column family success count," which means we need another metric that actually reflects region success count. Additionally, the region read and write latencies only store the latencies of the last column family of the region read. Instead of a map of regions to a single latency value and success value, we should map each region to a list of such values.</description>
      <version>3.0.0-alpha-1,1.3.0,1.4.0,1.5.0,2.0.0,2.1.5,2.2.1</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,1.6.0,2.1.8,2.2.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.tool.TestCanaryTool.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.tool.CanaryTool.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-11-17 01:00:00" id="23182" opendate="2019-10-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The create-release scripts are broken</summary>
      <description>Only several small bugs but it does make the releasing fail...Mostly introduced by HBASE-23092.Will upload the patch after I successully published 2.2.2RC0...</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-support.create-release.release-util.sh</file>
      <file type="M">dev-support.create-release.release-build.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-10-18 01:00:00" id="23187" opendate="2019-10-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update parent region state to SPLIT in meta</summary>
      <description>When split, the parent region set to SPLIT in memory, but the meta do not, so in some circumstances will bring back the parent region.</description>
      <version>2.2.1</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,2.2.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.assignment.RegionStates.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-11-19 01:00:00" id="23318" opendate="2019-11-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>LoadTestTool doesn&amp;#39;t start</summary>
      <description>./bin/hbase ltt after unpacking a binary tarball distribution doesn't start with a CNFE. We are missing the tests jar from hbase-zookeeper. The client tarball includes this but if one wants to launch it on a server or a general purpose deploy (i.e. not the client tarball) the test jar has to be in the server classpath as well.</description>
      <version>2.2.1</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,2.1.8,2.2.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-assembly.src.main.assembly.components.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-12-19 01:00:00" id="23320" opendate="2019-11-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade surefire plugin to 3.0.0-M4</summary>
      <description/>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1,2.3.0,2.2.3,2.1.9</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2020-4-14 01:00:00" id="24180" opendate="2020-4-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Edit test doc around forkcount and speeding up test runs</summary>
      <description>Give the 'Running unit tests' section an edit. Fold in findings of late around how to speed up tests, hardware limits and sizings, etc.</description>
      <version>None</version>
      <fixedVersion>3.0.0-alpha-1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.asciidoc..chapters.developer.adoc</file>
    </fixedFiles>
  </bug>
</bugrepository>