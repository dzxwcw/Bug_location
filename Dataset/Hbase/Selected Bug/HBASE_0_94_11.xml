<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="HBASE">
  <bug fixdate="2014-3-4 01:00:00" id="10669" opendate="2014-3-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[hbck tool] Usage is wrong for hbck tool for -sidelineCorruptHfiles option</summary>
      <description>Usage is wrong for hbck tool for -sidelineCorruptHfiles option: it is like:-sidelineCorruptHfiles Quarantine corrupted HFiles. implies -checkCorruptHfileshere in "sidelineCorruptHfiles" and "checkCorruptHfiles" small 'f' is used but actually in code it is like else if (cmd.equals("-checkCorruptHFiles")) { checkCorruptHFiles = true; } else if (cmd.equals("-sidelineCorruptHFiles")) { sidelineCorruptHFiles = true; }so if we use sidelineCorruptHfiles option for hbck then it will give error Unrecognized option:-sidelineCorruptHfiles</description>
      <version>0.94.11,0.96.0</version>
      <fixedVersion>0.96.2,0.98.1,0.99.0,0.94.18</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.HBaseFsck.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2015-1-26 01:00:00" id="12922" opendate="2015-1-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Post-asciidoc conversion fix-ups part 2</summary>
      <description>I did read through large parts of the documentation and fixed what I found. Some of it is AsciiDoc stuff, some is contents, some is grammar, some typos fixed etc.</description>
      <version>None</version>
      <fixedVersion>2.0.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.asciidoc..chapters.upgrading.adoc</file>
      <file type="M">src.main.asciidoc..chapters.troubleshooting.adoc</file>
      <file type="M">src.main.asciidoc..chapters.thrift.filter.language.adoc</file>
      <file type="M">src.main.asciidoc..chapters.shell.adoc</file>
      <file type="M">src.main.asciidoc..chapters.security.adoc</file>
      <file type="M">src.main.asciidoc..chapters.schema.design.adoc</file>
      <file type="M">src.main.asciidoc..chapters.preface.adoc</file>
      <file type="M">src.main.asciidoc..chapters.performance.adoc</file>
      <file type="M">src.main.asciidoc..chapters.orca.adoc</file>
      <file type="M">src.main.asciidoc..chapters.ops.mgt.adoc</file>
      <file type="M">src.main.asciidoc..chapters.mapreduce.adoc</file>
      <file type="M">src.main.asciidoc..chapters.hbase.apis.adoc</file>
      <file type="M">src.main.asciidoc..chapters.getting.started.adoc</file>
      <file type="M">src.main.asciidoc..chapters.external.apis.adoc</file>
      <file type="M">src.main.asciidoc..chapters.datamodel.adoc</file>
      <file type="M">src.main.asciidoc..chapters.cp.adoc</file>
      <file type="M">src.main.asciidoc..chapters.configuration.adoc</file>
      <file type="M">src.main.asciidoc..chapters.case.studies.adoc</file>
      <file type="M">src.main.asciidoc..chapters.architecture.adoc</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-7-26 01:00:00" id="9049" opendate="2013-7-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Generalize ServerCallable creation to support custom callables</summary>
      <description>Currently, sever callables are instantiated via direct calls. Instead, we can use a single factory and that allows more specialized callable implementations, for instance, using a circuit-breaker pattern (or the Hystrix implementation!) to minimize attempts to contact the server.</description>
      <version>0.98.0,0.95.2,0.94.11</version>
      <fixedVersion>0.98.0,0.95.2,0.94.11</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestHRegionServerBulkLoad.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.WALEditsReplaySink.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.LoadIncrementalHFiles.java</file>
      <file type="M">hbase-client.src.test.java.org.apache.hadoop.hbase.client.TestAsyncProcess.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.ipc.RegionCoprocessorRpcChannel.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.ScannerCaller.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.RpcRetryingCaller.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.HTable.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.HConnectionManager.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.HBaseAdmin.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.ClientScanner.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.AsyncProcess.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-8-15 01:00:00" id="9232" opendate="2013-8-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix javadoc warning and a few findbugs items.</summary>
      <description>Findbugs and javadoc are complaining in hadoopqa builds. Try and fix.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.95.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.security.access.TablePermission.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.ipc.RpcClient.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.RpcRetryingCaller.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-8-20 01:00:00" id="9279" opendate="2013-8-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Thrift should use listTableNames to list tables</summary>
      <description/>
      <version>0.98.0,0.95.2,0.94.11,0.96.0</version>
      <fixedVersion>0.98.0,0.94.12,0.96.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.thrift.ThriftServerRunner.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-1-26 01:00:00" id="9343" opendate="2013-8-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement stateless scanner for Stargate</summary>
      <description>The current scanner implementation for scanner stores state and hence not very suitable for REST server failure scenarios. The current JIRA proposes to implement a stateless scanner. In the first version of the patch, a new resource class "ScanResource" has been added and all the scan parameters will be specified as query params. The following are the scan parametersstartrow - The start row for the scan.endrow - The end row for the scan.columns - The columns to scan. starttime, endtime - To only retrieve columns within a specific range of version timestamps,both start and end time must be specified.maxversions - To limit the number of versions of each column to be returned.batchsize - To limit the maximum number of values returned for each call to next().limit - The number of rows to return in the scan operation. More on start row, end row and limit parameters.1. If start row, end row and limit not specified, then the whole table will be scanned.2. If start row and limit (say N) is specified, then the scan operation will return N rows from the start row specified.3. If only limit parameter is specified, then the scan operation will return N rows from the start of the table.4. If limit and end row are specified, then the scan operation will return N rows from start of table till the end row. If the end row is reached before N rows ( say M and M &lt; N ), then M rows will be returned to the user.5. If start row, end row and limit (say N ) are specified and N &lt; number of rows between start row and end row, then N rows from start rowwill be returned to the user. If N &gt; (number of rows between start row and end row (say M), then M number of rows will be returned to theuser.</description>
      <version>0.94.11</version>
      <fixedVersion>0.98.0,0.99.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.rest.TestScannerResource.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.rest.TestGetAndPutResource.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.TableResource.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.MetricsREST.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.Constants.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.client.Response.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.client.Client.java</file>
      <file type="M">hbase-hadoop2-compat.src.main.java.org.apache.hadoop.hbase.rest.MetricsRESTSourceImpl.java</file>
      <file type="M">hbase-hadoop1-compat.src.main.java.org.apache.hadoop.hbase.rest.MetricsRESTSourceImpl.java</file>
      <file type="M">hbase-hadoop-compat.src.main.java.org.apache.hadoop.hbase.rest.MetricsRESTSource.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-6-26 01:00:00" id="9345" opendate="2013-8-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add support for specifying filters in scan</summary>
      <description>In the implementation of stateless scanner from HBase-9343, the support for specifying filters is missing. This JIRA aims to implement support for filter specification.</description>
      <version>0.94.11</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.rest.TestTableScan.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.TableResource.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.RESTServlet.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.Constants.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-9-28 01:00:00" id="9364" opendate="2013-8-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Get request with multiple columns returns partial results</summary>
      <description>When a GET request is issue for a table row with multiple columns and columns have empty qualifier like f1: , results for empty qualifiers is being ignored.</description>
      <version>0.94.11</version>
      <fixedVersion>0.98.0,0.96.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.rest.TestRowResource.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.rest.client.TestRemoteTable.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.RowSpec.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.RowResource.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.rest.client.RemoteHTable.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2013-9-10 01:00:00" id="9487" opendate="2013-9-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>create_namespace with property value throws error</summary>
      <description>Creating a namespace with properties fails from shell: hbase(main):002:0&gt; create_namespace 'ns1',{'PROERTY_NAME'=&gt;'PROPERTY_VALUE'}ERROR: undefined method `addProperty' for #&lt;Java::OrgApacheHadoopHbase::NamespaceDescriptor::Builder:0x71b98cbb&gt;Here is some help for this command:Create namespace; pass namespace name,and optionally a dictionary of namespace configuration.Examples:hbase&gt; create_namespace 'ns1'hbase&gt; create_namespace 'ns1', {'PROERTY_NAME'=&gt;'PROPERTY_VALUE'}</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.96.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.ruby.hbase.admin.rb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-12-10 01:00:00" id="9489" opendate="2013-9-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add cp hooks in online merge before and after setting PONR</summary>
      <description>As we need to merge index region along with user region we need the hooks before and after setting PONR in region merge transtion.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.99.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.security.access.TestAccessController.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.TestRegionMergeTransaction.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.security.access.AccessController.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.RegionServerCoprocessorHost.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.RegionMergeTransaction.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coprocessor.RegionServerObserver.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2008-10-22 01:00:00" id="949" opendate="2008-10-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add an HBase Manual</summary>
      <description>HBase needs a Manual. Manual can be checked in under docs and evolve as hbase does (Hopefully we get to a state where new feature can't be closed unless manual has been updated to include mention and howto). Let this issue be about adding under docs an outline with some basic getting started info. Thereafter, we can open individual issues to add "chapters" or topics.Made it a blocker on 0.20.0.</description>
      <version>None</version>
      <fixedVersion>0.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.docs.src.documentation.content.xdocs.site.xml</file>
      <file type="M">docs.skin.images.rc-t-r-5-1header-2tab-unselected-3tab-unselected.png</file>
      <file type="M">docs.skin.images.rc-t-r-5-1header-2tab-selected-3tab-selected.png</file>
      <file type="M">docs.skin.images.rc-t-r-5-1header-2searchbox-3searchbox.png</file>
      <file type="M">docs.skin.images.rc-t-r-15-1body-2menu-3menu.png</file>
      <file type="M">docs.skin.images.rc-t-l-5-1header-2tab-unselected-3tab-unselected.png</file>
      <file type="M">docs.skin.images.rc-t-l-5-1header-2tab-selected-3tab-selected.png</file>
      <file type="M">docs.skin.images.rc-t-l-5-1header-2searchbox-3searchbox.png</file>
      <file type="M">docs.skin.images.rc-b-r-5-1header-2tab-selected-3tab-selected.png</file>
      <file type="M">docs.skin.images.rc-b-r-15-1body-2menu-3menu.png</file>
      <file type="M">docs.skin.images.rc-b-l-15-1body-2menu-3menu.png</file>
      <file type="M">docs.linkmap.pdf</file>
      <file type="M">docs.linkmap.html</file>
      <file type="M">docs.index.html</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-9-18 01:00:00" id="9577" opendate="2013-9-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log process environment variable on HBase service startup</summary>
      <description>HBase services already logs information related to JVM properties and command line arguments used to start the services which have been immensely helpful to investigate issues.One thing that they do not log is the environment variables and an unintended variable in the environment could lead to a scenario not reproducible anywhere else including its original location if the service is restarted differently.We should log environment variables (excluding those which may contains credentials) on service startup with option to disable this logging.</description>
      <version>0.95.2,0.94.11</version>
      <fixedVersion>0.96.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.util.ServerCommandLine.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServerCommandLine.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.HMasterCommandLine.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-10-11 01:00:00" id="9745" opendate="2013-10-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Append HBASE_CLASSPATH to end of Java classpath and use another env var for prefix</summary>
      <description>HBASE-9097 changed the behavior to prefix HBASE_CLASSPATH to end of Java classpath instead of appending it. This break existing behavior (read more on HBASE-9097).We should revert to existing behavior and provide another way to prefix certain jars to the classpath.</description>
      <version>0.98.0,0.95.2,0.94.11</version>
      <fixedVersion>0.98.0,0.94.13,0.96.1,0.99.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.hbase</file>
    </fixedFiles>
  </bug>
</bugrepository>