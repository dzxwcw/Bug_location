<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="HBASE">
  
  <bug fixdate="2013-7-27 01:00:00" id="9062" opendate="2013-7-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove TestReplicationKillRs* tests temporarily</summary>
      <description>Removing this suite of tests for now. jdcryans is working on fixing these over in HBASE-8615 but currently he is off in "exotic location". Removing meantime to get in some clean builds. Will put back in HBASE-9061 which is critical for 0.95.2</description>
      <version>None</version>
      <fixedVersion>0.95.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.replication.TestReplicationKillSlaveRS.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.replication.TestReplicationKillRS.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.replication.TestReplicationKillMasterRSCompressed.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.replication.TestReplicationKillMasterRS.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2013-8-8 01:00:00" id="9163" opendate="2013-8-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add timeouts to HBaseAdmin because hanging/zombying</summary>
      <description>Let me add timeouts. HBaseAdmin is acting up since namespaces went in. Add timeouts so hopefully fails faster.</description>
      <version>None</version>
      <fixedVersion>0.95.2</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.client.TestAdmin.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-8-15 01:00:00" id="9234" opendate="2013-8-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Rebuilding user regions should ignore system tables</summary>
      <description>System tables are already assigned when rebuilding user regions. So we don't need to consider system table regions in rebuilding user regions.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.96.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.master.AssignmentManager.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.TableName.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-12-19 01:00:00" id="9261" opendate="2013-8-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add cp hooks after {start|close}RegionOperation</summary>
      <description>These hooks helps for checking Resources(blocking memstore size) and necessary locking on index region while performing batch of mutations.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.99.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.coprocessor.TestRegionObserverInterface.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.coprocessor.SimpleRegionObserver.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coprocessor.RegionObserver.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.coprocessor.BaseRegionObserver.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.client.ClientSideRegionScanner.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-11-7 01:00:00" id="9915" opendate="2013-11-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Performance: isSeeked() in EncodedScannerV2 always returns false</summary>
      <description>While debugging why reseek is so slow I found that it is quite broken for encoded scanners.The problem is this:AbstractScannerV2.reseekTo(...) calls isSeeked() to check whether scanner was seeked or not. If it was it checks whether the KV we want to seek to is in the current block, if not it always consults the index blocks again.isSeeked checks the blockBuffer member, which is not used by EncodedScannerV2 and thus always returns false, which in turns causes an index lookup for each reseek.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.96.1,0.94.14</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.io.hfile.HFileReaderV2.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-11-8 01:00:00" id="9921" opendate="2013-11-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>stripe compaction - findbugs and javadoc issues, some improvements</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.98.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.regionserver.compactions.TestStripeCompactionPolicy.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.StripeStoreFlusher.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.StripeStoreConfig.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.StoreFileManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.compactions.StripeCompactionPolicy.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.compactions.CompactionConfiguration.java</file>
    </fixedFiles>
  </bug>
</bugrepository>