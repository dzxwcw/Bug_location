<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="HBASE">
  
  
  <bug fixdate="2011-10-14 01:00:00" id="3444" opendate="2011-1-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Test to prove Bytes.toBytesBinary and Bytes.toStringBinary() is reversible</summary>
      <description>Bytes.toStringBinary() doesn't escape \.Otherwise the transformation isn't reversiblebyte[] a = {'\', 'x' , '0', '0'}Bytes.toBytesBinary(Bytes.toStringBinary(a)) won't be equal to a</description>
      <version>None</version>
      <fixedVersion>0.95.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-common.src.test.java.org.apache.hadoop.hbase.util.TestBytes.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2011-4-21 01:00:00" id="3678" opendate="2011-3-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Eclipse-based Apache Formatter to HBase Wiki</summary>
      <description>Currently, on http://wiki.apache.org/hadoop/Hbase/HowToContribute , we tell the user to follow Sun's code conventions and then add a couple things. For lazy people like myself, it would be much easier to just tell us to import an Apache formatter into your Eclipse project and not worry about it.</description>
      <version>None</version>
      <fixedVersion>0.92.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.docbkx.book.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-4-22 01:00:00" id="3684" opendate="2011-3-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support column range filter</summary>
      <description>Currently we have a ColumnPrefix filter which will seek to the proper column prefix. We also need a column range filter to query a range of columns. The proposed interface is the following: ColumnRangeFilter(final byte[] minColumn, boolean minColumnInclusive,final byte[] maxColumn, boolean maxColumnInclusive)</description>
      <version>None</version>
      <fixedVersion>0.92.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.io.HbaseObjectWritable.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-4-11 01:00:00" id="3764" opendate="2011-4-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Book.xml - adding 2 FAQs (SQL and arch question)</summary>
      <description>Adding 2 general FAQs.1) does HBase support SQL? (Hive, but not really for most cases)... 2) how does HBase work on HDFS? (if HDFS is for large files without fast lookup, how does HBase work?) Doesn't answer the question inline but refers to DataModel and Arch.</description>
      <version>None</version>
      <fixedVersion>0.92.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.docbkx.book.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-4-12 01:00:00" id="3773" opendate="2011-4-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Set ZK max connections much higher in 0.90</summary>
      <description>I think by now we can all acknowledge that 0.90 has an issue with ZK connections, in that we create too many of them and it's also too easy for our users to shoot themselves in the foot.For 0.90.3, I think we should change the default configuration of 30 that we ship with and set it much much higher, I'm thinking of 32k.</description>
      <version>0.90.2</version>
      <fixedVersion>0.90.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.client.HConnectionManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-4-14 01:00:00" id="3783" opendate="2011-4-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>hbase-0.90.2.jar exists in hbase root and in &amp;#39;lib/&amp;#39;</summary>
      <description>The official HBase 0.90.2 release contains a hbase-0.90.2.jar in'&lt;hbase root&gt;' and in '&lt;hbase-root&gt;/lib/'.</description>
      <version>0.90.2</version>
      <fixedVersion>0.90.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.assembly.all.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-4-18 01:00:00" id="3798" opendate="2011-4-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[REST] Allow representation to elide row key and column key</summary>
      <description>Row and column keys are extracted from the supplied representation (XML, JSON, protobuf) when the user PUTs or POSTs. The inclusion of the row key in the URI is redundant. It could be convenient to allow the user to leave out the row key when building the representation; in which case, the row key supplied in the URI can be used.Of course a representation that encodes more than one row wouldn't make sense for this case.Likewise, the column key(s) could be elided if supplied in the URI as well.</description>
      <version>None</version>
      <fixedVersion>0.90.3,0.92.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.rest.RowResource.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2011-5-2 01:00:00" id="3847" opendate="2011-5-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Turn off DEBUG logging of RPCs in WriteableRPCEngine on TRUNK</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.92.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.ipc.WritableRpcEngine.java</file>
      <file type="M">src.main.java.org.apache.hadoop.hbase.ipc.ExecRPCInvoker.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-2-3 01:00:00" id="3850" opendate="2011-5-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log more details when a scanner lease expires</summary>
      <description>The message logged by the RegionServer when a Scanner lease expires isn't as useful as it could be. Scanner 4765412385779771089 lease expired - most clients don't log their scanner ID, so it's really hard to figure out what was going on. I think it would be useful to at least log the name of the region on which the Scanner was open, and it would be great to have the ip:port of the client that had that lease too.</description>
      <version>None</version>
      <fixedVersion>0.94.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.regionserver.HRegionServer.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2011-7-18 01:00:00" id="4115" opendate="2011-7-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>HBase shell assign and unassign unusable if region name includes binary-encoded data</summary>
      <description>When using the hbase shell assign and unassign commands, we should be able to copy region names from the hbck utility or the web page hosted by the HMaster process. But if these names have encoded binary data, they region name won't match and the command will fail.This is easily fixed by using Bytes.toBytesBinary on the region name in these commands rather than the raw Bytes.ToBytes.</description>
      <version>0.90.2,0.90.3</version>
      <fixedVersion>0.90.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.ruby.hbase.admin.rb</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-7-22 01:00:00" id="4126" opendate="2011-7-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make timeoutmonitor timeout after 30 minutes instead of 3</summary>
      <description>See J-D comment here https://issues.apache.org/jira/browse/HBASE-4064?focusedCommentId=13069098&amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13069098 where he thinks we should just turn off timeout monitor because it only ever wrecks havoc. Lets make it 30 minutes for 0.90.4.</description>
      <version>None</version>
      <fixedVersion>0.90.4</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.java.org.apache.hadoop.hbase.master.AssignmentManager.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2011-1-31 01:00:00" id="5111" opendate="2011-12-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade zookeeper to 3.4.2 release</summary>
      <description>Zookeeper 3.4.2 has just been released.We should upgrade to this release.</description>
      <version>None</version>
      <fixedVersion>0.92.0,0.94.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
</bugrepository>