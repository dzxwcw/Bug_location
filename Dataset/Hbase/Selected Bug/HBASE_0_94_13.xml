<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="HBASE">
  <bug fixdate="2013-12-20 01:00:00" id="10010" opendate="2013-11-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>eliminate the put latency spike on the new log file beginning</summary>
      <description>In deed, the original finding came from fb, see HBASE-6813 for detailed discussion.Through this improvement doesn't expect obvious gain on 95th or 99th latency, it still could make the response time more stable to me.</description>
      <version>0.94.13</version>
      <fixedVersion>0.98.0,0.96.1,0.94.15,0.99.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.replication.regionserver.TestReplicationHLogReaderManager.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.FSHLog.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2008-5-19 01:00:00" id="1008" opendate="2008-11-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[performance] The replay of logs on server crash takes way too long</summary>
      <description>Watching recovery from a crash on streamy.com where there were 1048 logs and repay is running at rate of about 20 seconds each. Meantime these regions are not online. This is way too long to wait on recovery for a live site. Marking critical. Performance related so priority and in 0.20.0.</description>
      <version>None</version>
      <fixedVersion>0.20.0,0.19.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HLog.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.HConstants.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2008-10-25 01:00:00" id="844" opendate="2008-8-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Can&amp;#39;t pass script to hbase shell</summary>
      <description>Shell documentation says:~ stack$ ${HBASE_HOME}/bin/hbase shell PATH_TO_SCRIPTYour script can lean on the methods provided by the HBase Shell.This doesn't actually work.</description>
      <version>None</version>
      <fixedVersion>0.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.hirb.rb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2008-11-31 01:00:00" id="975" opendate="2008-10-31 00:00:00" resolution="Won&amp;#39;t Fix">
    <buginformation>
      <summary>Improve MapFile performance for start and end key</summary>
      <description>Keeping a MapFile's start and end key in cache would save us some seeks, see if it can be done.</description>
      <version>None</version>
      <fixedVersion>0.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.hadoop.hbase.regionserver.TestSplit.java</file>
      <file type="M">src.test.org.apache.hadoop.hbase.regionserver.TestHStoreFile.java</file>
      <file type="M">src.test.org.apache.hadoop.hbase.HBaseClusterTestCase.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HStoreFile.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HStore.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.regionserver.HRegion.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.io.ImmutableBytesWritable.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.io.BlockFSInputStream.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.client.HTable.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-10-11 01:00:00" id="9750" opendate="2013-10-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add retries around Action server stop/start</summary>
      <description>These can fail on occasion (my upping ConnectionTimeout is not enough). Lets just retry a few times at least rather than fail at least for server start. Losing a server makes tests run for longer and there is also the danger we could lose all servers and the long-running test would then outright fail.</description>
      <version>None</version>
      <fixedVersion>0.98.0,0.96.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.HBaseTestingUtility.java</file>
      <file type="M">hbase-it.src.test.java.org.apache.hadoop.hbase.HBaseClusterManager.java</file>
      <file type="M">hbase-it.src.test.java.org.apache.hadoop.hbase.chaos.monkies.PolicyBasedChaosMonkey.java</file>
      <file type="M">hbase-it.src.test.java.org.apache.hadoop.hbase.chaos.actions.MoveRegionsOfTableAction.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.util.RetryCounterFactory.java</file>
      <file type="M">hbase-common.src.main.java.org.apache.hadoop.hbase.util.RetryCounter.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper.java</file>
    </fixedFiles>
  </bug>
</bugrepository>