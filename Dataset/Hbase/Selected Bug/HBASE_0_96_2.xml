<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="HBASE">
  <bug fixdate="2013-12-11 01:00:00" id="10132" opendate="2013-12-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>sun.security.pkcs11.wrapper.PKCS11Exception: CKR_ARGUMENTS_BAD</summary>
      <description>Looks like RedHat broke OpenJDK 7 crypto: https://bugzilla.redhat.com/show_bug.cgi?id=1031145 I came across this today when setting up a Jenkins slave for OpenJDK 7. Looks like 1.7.0u25 is affected but 1.7.0u45 is not - a more recent RH package build I suspect. The issue manifests as exceptions caused ultimately by:Caused by: sun.security.pkcs11.wrapper.PKCS11Exception: CKR_ARGUMENTS_BAD at sun.security.pkcs11.wrapper.PKCS11.C_DecryptUpdate(Native Method) at sun.security.pkcs11.P11Cipher.implDoFinal(P11Cipher.java:795)The RH bug report for this problem includes a workaround that fixed the problem for me. Informational issue only, will attach a patch for the manual shortly.</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.troubleshooting.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-12-23 01:00:00" id="10226" opendate="2013-12-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[AccessController] Namespace grants not always checked</summary>
      <description>Namespace grants for a user are supposed to supercede table level permissions, a middle tier between table grants and global grants. We are not always checking.</description>
      <version>0.98.0,0.96.2,0.99.0</version>
      <fixedVersion>0.98.0,0.99.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.security.access.TestZKPermissionsWatcher.java</file>
      <file type="M">hbase-server.src.test.java.org.apache.hadoop.hbase.security.access.TestAccessController.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.security.access.TableAuthManager.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2009-1-1 01:00:00" id="1105" opendate="2009-1-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove duplicated code in HCM, add javadoc to RegionState, etc.</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.hadoop.hbase.master.RegionManager.java</file>
      <file type="M">src.java.org.apache.hadoop.hbase.client.HConnectionManager.java</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.HBase.rb</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2014-6-2 01:00:00" id="11280" opendate="2014-6-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document distributed log replay and distributed log splitting</summary>
      <description>Enable 'distributed log replay' by default. Depends on hfilev3 being enabled.</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.book.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2014-8-31 01:00:00" id="11629" opendate="2014-7-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Operational concerns for Replication should call out ZooKeeper</summary>
      <description>Our design invariants state that ZooKeeper data is safe to delete. However, replication only stores its data in zookeeper. This can lead to operators accidentally disabling their replication set up while attempting to recover from an unrelated issue by clearing the zk state.We should update the operational concerns section on replication to call out that the /hbase/replication tree should not be deleted. We should probably also add a warning to the set up steps.</description>
      <version>None</version>
      <fixedVersion>2.0.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.docbkx.ops.mgt.xml</file>
      <file type="M">src.main.docbkx.developer.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2014-9-4 01:00:00" id="11892" opendate="2014-9-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>configs contain stale entries</summary>
      <description>Configuration details that need to be cleaned up the documentation around configuring cleaner plugins have stale class names for customizing behavior. hbase.master.logcleaner.plugins has LogCleanerDelegate and I think the correct class is BaseLogCleanerDelegate. hbase.master.hfilecleaner.plugin has HFileCleanerDelegate instead of BaseHFileCleanerDelegate. hbase.rpc.server.engine doesn't appear anywhere other than hdfs-default.xml and the classes it references were removed by HBASE-8214</description>
      <version>None</version>
      <fixedVersion>0.99.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-common.src.main.resources.hbase-default.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-11-18 01:00:00" id="12516" opendate="2014-11-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Clean up master so QA Bot is in known good state</summary>
      <description>QA Bot is flagging new patches for errors they didn't introduce. clean it up.</description>
      <version>None</version>
      <fixedVersion>0.99.2</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.TableOutputFormat.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-4-14 01:00:00" id="13466" opendate="2015-4-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document deprecations in 1.x - Part 1</summary>
      <description>This documents deprecations for the following issues: HBASE-6038 HBASE-1502 HBASE-5453 HBASE-5357 HBASE-9870 HBASE-10870 HBASE-12363 HBASE-9508</description>
      <version>None</version>
      <fixedVersion>1.1.0,2.0.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.TableSplit.java</file>
      <file type="M">hbase-server.src.main.java.org.apache.hadoop.hbase.mapreduce.LoadIncrementalHFiles.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.HTableDescriptor.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.HRegionInfo.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.HColumnDescriptor.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.ClusterStatus.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.HTableInterface.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.HTable.java</file>
      <file type="M">hbase-client.src.main.java.org.apache.hadoop.hbase.client.ClientScanner.java</file>
    </fixedFiles>
  </bug>
</bugrepository>