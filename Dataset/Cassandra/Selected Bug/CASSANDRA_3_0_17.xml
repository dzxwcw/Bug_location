<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  
  
  <bug fixdate="2017-4-21 01:00:00" id="13891" opendate="2017-9-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>fromJson(null) throws java.lang.NullPointerException on Cassandra</summary>
      <description>Basically, fromJson throws a java.lang.NullPointerException when NULL is passed, instead of just returning a NULL itself. Say I create a UDT and a table as follows:create type type1(id int,name text);create table table1(id int,t FROZEN&lt;type1&gt;,primary key (id));And then try and insert a row as such:insert into table1 (id, t) VALUES (1, fromJson(null));I get the error: java.lang.NullPointerExceptionThis works as expected: insert into table1 (id, t) VALUES (1, null);Programmatically, one does not always know when a UDT will be null, hence me expecting fromJson to just return NULL.</description>
      <version>2.2.13,3.0.17,3.11.3,4.0-alpha1,4.0</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.cql3.validation.entities.JsonTest.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.functions.FunctionCall.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2018-4-23 01:00:00" id="14411" opendate="2018-4-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use Bounds instead of Range to represent sstable first/last token when checking how to anticompact sstables</summary>
      <description>There is currently a chance of missing marking a token as repaired due to the fact that we use Range which are (a, b] to represent first/last token in sstables instead of Bounds which are &amp;#91;a, b&amp;#93;.</description>
      <version>2.2.13,3.0.17,3.11.3,4.0-alpha1,4.0</version>
      <fixedVersion>Consistency/Repair</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.db.compaction.AntiCompactionTest.java</file>
      <file type="M">src.java.org.apache.cassandra.db.compaction.CompactionManager.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-5-30 01:00:00" id="14428" opendate="2018-4-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Run ant eclipse-warnings in circleci</summary>
      <description>We should run ant eclipse-warnings in circle-ci</description>
      <version>3.0.17,3.11.3,4.0-alpha1,4.0</version>
      <fixedVersion>CI</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">.circleci.config.yml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-6-12 01:00:00" id="14513" opendate="2018-6-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Reverse order queries in presence of range tombstones may cause permanent data loss</summary>
      <description>Slice queries in descending sort order can create oversized artificial range tombstones. At CL &gt; ONE, read repair can propagate these tombstones to all replicas, wiping out vast data ranges that they mistakenly cover.</description>
      <version>3.0.17,3.11.3,4.0-alpha1,4.0</version>
      <fixedVersion>Legacy/Core,Legacy/CQL,Legacy/LocalWrite-ReadPaths</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.columniterator.SSTableReversedIterator.java</file>
      <file type="M">src.java.org.apache.cassandra.db.columniterator.AbstractSSTableIterator.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
</bugrepository>