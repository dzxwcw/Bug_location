<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  
  <bug fixdate="2010-1-2 01:00:00" id="1805" opendate="2010-12-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>refactor and remove contrib/</summary>
      <description>Contrib is a mix of examples, tools, and miscellanea that probably doesn't belong in our source tree.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.StorageProxy.java</file>
      <file type="M">src.java.org.apache.cassandra.db.RowMutationVerbHandler.java</file>
      <file type="M">src.java.org.apache.cassandra.db.RowMutation.java</file>
      <file type="M">contrib.maven.pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-5-14 01:00:00" id="2477" opendate="2011-4-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQL support for describing keyspaces / column familes</summary>
      <description/>
      <version>1.1.0</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.service.StorageServiceServerTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.service.AntiEntropyServiceTestAbstract.java</file>
      <file type="M">test.unit.org.apache.cassandra.dht.BootStrapperTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.db.CleanupTest.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.service.LoadBroadcaster.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2011-11-17 01:00:00" id="3045" opendate="2011-8-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update ColumnFamilyOutputFormat to use new bulkload API</summary>
      <description>The bulk loading interface added in CASSANDRA-1278 is a great fit for Hadoop jobs.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.BulkLoader.java</file>
      <file type="M">src.java.org.apache.cassandra.streaming.StreamReplyVerbHandler.java</file>
      <file type="M">src.java.org.apache.cassandra.streaming.StreamInSession.java</file>
      <file type="M">src.java.org.apache.cassandra.streaming.IncomingStreamReader.java</file>
      <file type="M">src.java.org.apache.cassandra.streaming.FileStreamTask.java</file>
      <file type="M">src.java.org.apache.cassandra.net.OutboundTcpConnection.java</file>
      <file type="M">src.java.org.apache.cassandra.net.Message.java</file>
      <file type="M">src.java.org.apache.cassandra.net.Header.java</file>
      <file type="M">src.java.org.apache.cassandra.io.sstable.SSTableLoader.java</file>
      <file type="M">src.java.org.apache.cassandra.config.DatabaseDescriptor.java</file>
      <file type="M">src.java.org.apache.cassandra.config.Config.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-1-15 01:00:00" id="3213" opendate="2011-9-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade Thrift</summary>
      <description/>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">lib.licenses.libthrift-0.5.txt</file>
      <file type="M">lib.libthrift-0.6.jar</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.UnavailableException.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.TokenRange.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.TimedOutException.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.SuperColumn.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.SliceRange.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.SlicePredicate.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.SchemaDisagreementException.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.NotFoundException.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.Mutation.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.KsDef.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.KeySlice.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.KeyRange.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.KeyCount.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.InvalidRequestException.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.IndexType.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.IndexOperator.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.IndexExpression.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.IndexClause.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.EndpointDetails.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.Deletion.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.CqlRow.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.CqlResultType.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.CqlResult.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.CqlPreparedResult.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.CqlMetadata.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.CounterSuperColumn.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.CounterColumn.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.Constants.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.ConsistencyLevel.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.Compression.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.ColumnPath.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.ColumnParent.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.ColumnOrSuperColumn.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.ColumnDef.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.Column.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.CfDef.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.Cassandra.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.AuthorizationException.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.AuthenticationRequest.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.AuthenticationException.java</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2011-11-27 01:00:00" id="3410" opendate="2011-10-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>inconsistent rejection of CL.ANY on reads</summary>
      <description/>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.thrift.ThriftValidation.java</file>
      <file type="M">src.java.org.apache.cassandra.thrift.CassandraServer.java</file>
      <file type="M">src.java.org.apache.cassandra.service.ReadCallback.java</file>
      <file type="M">NEWS.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2011-1-9 01:00:00" id="3479" opendate="2011-11-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add read from/write to file support to cqlsh</summary>
      <description/>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.pylexotron.py</file>
      <file type="M">pylib.cqlshlib.cqlhandling.py</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-3-18 01:00:00" id="3509" opendate="2011-11-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cassandra-cli shows org.apache.Cassandra.XXX in example help for replication strategy but it should be cassandra with a lowercase c</summary>
      <description>copying and pasting the example doesn't result in a working example and noticing the "C" v "c" is something easy to overlook</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.resources.org.apache.cassandra.cli.CliHelp.yaml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2009-8-6 01:00:00" id="351" opendate="2009-8-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>fixes for code review of #332</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.io.IndexHelper.java</file>
      <file type="M">src.java.org.apache.cassandra.db.filter.SSTableSliceIterator.java</file>
      <file type="M">src.java.org.apache.cassandra.db.filter.SSTableNamesIterator.java</file>
      <file type="M">test.unit.org.apache.cassandra.db.TableTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2011-12-2 01:00:00" id="3561" opendate="2011-12-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make incremental_backups setting mutable via JMX</summary>
      <description>This would be more useful as in the schema as a CF-level setting, but for 1.1 let's at least make it setting it via JMX possible.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.StorageServiceMBean.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.db.DataTracker.java</file>
      <file type="M">src.java.org.apache.cassandra.config.DatabaseDescriptor.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  
  
  <bug fixdate="2011-12-20 01:00:00" id="3651" opendate="2011-12-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Truncate shouldn&amp;#39;t rethrow timeouts as UA</summary>
      <description>Truncate is a very easy operation to timeout, but the timeouts rethrow as UnavailableException which is somewhat confusing. Instead it should throw TimedOutException.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.thrift.CassandraServer.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.Constants.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.Cassandra.java</file>
      <file type="M">interface.cassandra.thrift</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-12-23 01:00:00" id="3664" opendate="2011-12-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[patch] fix some obvious javadoc issues generated via ant javadoc</summary>
      <description/>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.utils.BloomFilterSerializer.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.service.CassandraDaemon.java</file>
      <file type="M">src.java.org.apache.cassandra.scheduler.IRequestScheduler.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.AbstractReplicationStrategy.java</file>
      <file type="M">src.java.org.apache.cassandra.db.RowIteratorFactory.java</file>
      <file type="M">src.java.org.apache.cassandra.db.commitlog.CommitLogSegment.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-2-27 01:00:00" id="3675" opendate="2011-12-27 00:00:00" resolution="Won&amp;#39;t Fix">
    <buginformation>
      <summary>ship with -XX:+ExplicitGCInvokesConcurrent by default</summary>
      <description>It's so much easier if you can safely tell people to trigger a full GC to discover their live set (see CASSANDRA-3574), instead of explaining the behavior of CMS and what the memory usage graph looks like etc etc. Shipping with -XX:+ExplicitGCInvokesConcurrent means this is by default safe.For people that have special needs like some kind of rolling compacting GC with disablegossip, they are special enough that they can just change the VM options.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.cassandra-env.sh</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-4-27 01:00:00" id="3676" opendate="2011-12-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add snaptree dependency to maven central and update pom</summary>
      <description>Snaptree dependency needs to be added to maven before we can release 1.1</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">lib.snaptree-0.1-SNAPSHOT.jar</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2012-4-12 01:00:00" id="3732" opendate="2012-1-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update POM generation after migration to git</summary>
      <description/>
      <version>1.0.10,1.1.0</version>
      <fixedVersion>Packaging</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2012-2-19 01:00:00" id="3754" opendate="2012-1-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add TTL support to BulkOutputFormat</summary>
      <description/>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.hadoop.BulkRecordWriter.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-1-19 01:00:00" id="3757" opendate="2012-1-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cqlsh: update syntax for tab completions</summary>
      <description>Several recent additions to CQL syntax have yet to be reflected in cqlsh's tab completion capability, such as CASSANDRA-3419, CASSANDRA-3374, and CASSANDRA-3523.Update those bits of syntax definition.</description>
      <version>1.1.0</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.pylexotron.py</file>
      <file type="M">pylib.cqlshlib.cqlhandling.py</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2012-2-25 01:00:00" id="3781" opendate="2012-1-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQL support for changing row key type in ALTER TABLE</summary>
      <description>There is currently no way to alter the key_validation_class from CQL. jbellis suggested that this could be done by being able to ALTER the type of the KEY alias.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql.AlterTableStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.AlterTableStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-4-25 01:00:00" id="3785" opendate="2012-1-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support slice with exclusive start and stop</summary>
      <description>Currently, slices are always start and end inclusive. However, for CQL 3.0, we already differenciate between inclusivity/exclusivity for the row key and for the component of composite columns. It would be nice to always support that distinction.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.SelectStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-1-26 01:00:00" id="3786" opendate="2012-1-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[patch] fix bad comparison of IColumn to ByteBuffer</summary>
      <description>Code doesfirstColumn.equals(startKey)changed to firstColumn.name().equals(startKey)</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.index.keys.KeysSearcher.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2012-2-26 01:00:00" id="3791" opendate="2012-1-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support query by names for compact CF</summary>
      <description>Current code don't allow doing a query by names on wide rows (compact CF). I.e. with:CREATE TABLE test1 ( k int, c int, v int, PRIMARY KEY (k, c)) WITH COMPACT STORAGE;you cannot do:SELECT v FROM test1 WHERE k = 0 AND c IN (5, 2, 8)even though this is a simple name query.This ticket proposes to allow it.</description>
      <version>1.1.0</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.SelectStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.CFDefinition.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  
  
  <bug fixdate="2012-2-1 01:00:00" id="3823" opendate="2012-2-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[patch] remove bogus assert - never false</summary>
      <description>code asserts that SSTableScanner is Closeable final SSTableScanner scanner = sstable.getScanner(filter); scanner.seekTo(startWith); assert scanner instanceof Closeable; // otherwise we leak FDsalways is, unless null, but of course the line before would throw NPE. Just confusing.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.RowIteratorFactory.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-2-1 01:00:00" id="3824" opendate="2012-2-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[patch] add missing break in nodecmd&amp;#39;s command dispatching for SETSTREAMTHROUGHPUT</summary>
      <description>code falls thru SETSTREAMTHROUGHPUT into REBUILD case.</description>
      <version>1.1.0</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.NodeCmd.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-2-1 01:00:00" id="3826" opendate="2012-2-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pig cannot use output formats other than CFOF</summary>
      <description>Pig has ColumnFamilyOutputFormat hard coded.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.hadoop.pig.CassandraStorage.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2012-2-8 01:00:00" id="3873" opendate="2012-2-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cqlsh: tab-complete key alias along with column names for ALTER COLUMNFAMILY [name] ALTER</summary>
      <description>This change is appropriate after CASSANDRA-3781.</description>
      <version>1.1.0</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.cqlhandling.py</file>
      <file type="M">doc.cql.CQL.textile</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2012-2-12 01:00:00" id="3891" opendate="2012-2-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[patch] reduce duplicate lookups, allocations, interaction with threadlocals</summary>
      <description>some trivial reduction of duplicate code for eliminating map lookups, and threadlocal interactions. etc.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.thrift.CassandraServer.java</file>
      <file type="M">src.java.org.apache.cassandra.db.SystemTable.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2012-2-16 01:00:00" id="3922" opendate="2012-2-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>streaming from all (not one) neighbors during rebuild/bootstrap</summary>
      <description>The last round of changes that happened in CASSANDRA-3483 before it went in actually changed behavior - we now stream from ALL neighbors that have a range, rather than just one. This leads to data size explosion.Attaching patch to revert to intended behavior.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.dht.RangeStreamer.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-2-16 01:00:00" id="3925" opendate="2012-2-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>ORDER BY syntax</summary>
      <description>I think we should switch to standard ORDER BY x &amp;#91;DESC&amp;#93; syntax, for several reasons.First, because ORDER &amp;#91;DESC&amp;#93; is not very readable. By that I mean, you have no idea what it means unless you cross reference with the CF definition.Second, because it's not a sufficiently better fit than the SQL syntax to justify inventing our own.Third (and this is the big one) I strongly suspect that we're going to start supporting at least limited run-time ordering in the near future, and this gives us some future proofing while working reasonably well in the meantime: we can simply reject with IRE ORDER BY requests that aren't compatible with the comparator, similarly to what we used to do with unindexed WHERE expressions. (Which is also a good example of us being dragged kicking and screaming into being more flexible at query time...)</description>
      <version>1.1.0</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.SelectStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.Cql.g</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-3-16 01:00:00" id="3926" opendate="2012-2-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>all column validator options are not represented in cli help</summary>
      <description>The options added to column validators from CASSANDRA-2530 are not shown as options in the CLI help. I was going to create a column family with a float validator and double checked the help and it wasn't shown. So I just had to double check that I could. Would be nice to have those added to those docs, even though CQL is the way forward.</description>
      <version>1.1.0</version>
      <fixedVersion>Legacy/DocumentationandWebsite</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.resources.org.apache.cassandra.cli.CliHelp.yaml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  
  
  <bug fixdate="2012-2-24 01:00:00" id="3956" opendate="2012-2-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[patch] minor javadoc fixes</summary>
      <description>minor fixes against trunk</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.CassandraDaemon.java</file>
      <file type="M">src.java.org.apache.cassandra.hadoop.pig.CassandraStorage.java</file>
      <file type="M">src.java.org.apache.cassandra.db.Table.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStoreMBean.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.UpdateStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.CreateColumnFamilyStatement.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-2-24 01:00:00" id="3958" opendate="2012-2-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove random HH delay</summary>
      <description>. // sleep a random amount to stagger handoff delivery from different replicas. // (if we had to wait, then gossiper randomness took care of that for us already.) if (waited == 0) { // use a 'rounded' sleep interval because of a strange bug with windows: CASSANDRA-3375 int sleep = FBUtilities.threadLocalRandom().nextInt(2000) * 30; logger_.debug("Sleeping {}ms to stagger hint delivery", sleep); Thread.sleep(sleep); }This is obsolete now that we have the per-hint configurable delay. And large hint loads (which are the ones that matter most) are going to overlap anyway even with the maximum 60s difference.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.HintedHandOffManager.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2012-2-28 01:00:00" id="3972" opendate="2012-2-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>HintedHandoff fails to deliver any hints</summary>
      <description>Summary says it all. Whether in a memtable or sstable, no hints are delivered.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.HintedHandOffManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-3-29 01:00:00" id="3976" opendate="2012-2-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[patch[ don&amp;#39;t compare byte arrays with ==</summary>
      <description>code compares byte arrays with ==, use Arrays.equalspatch against trunk</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.hadoop.ColumnFamilyRecordReader.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2012-3-9 01:00:00" id="4033" opendate="2012-3-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cqlsh: double wide unicode chars cause incorrect padding in select output</summary>
      <description>CREATE COLUMNFAMILY cf3 (KEY text primary key);INSERT INTO cf3 (KEY, col1, col2) VALUES ('a', '1234 1234 1234 1234', 'abcd');INSERT INTO cf3 (KEY, col1, col2) VALUES ('b', '愛愛愛愛 愛愛愛愛 愛愛愛愛 愛愛愛愛', 'abcd');SELECT * FROM cf3 WHERE key in ('a', 'b');produces this output: KEY | col1 | col2-----+-----------------------------------------------------+------ a | 1234 1234 1234 1234 | abcd b | 愛愛愛愛 愛愛愛愛 愛愛愛愛 愛愛愛愛 | abcdnote the extra spaces before the "love" glyphs.</description>
      <version>1.0.9,1.1.0</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2012-3-27 01:00:00" id="4087" opendate="2012-3-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve out-of-the-box cache settings</summary>
      <description>The default key cache of 2MB is significantly smaller than &lt;= 1.0 (200 rows per CF) and much smaller than most production uses. How about min(5% of the heap, 100MB)?</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">src.java.org.apache.cassandra.config.DatabaseDescriptor.java</file>
      <file type="M">src.java.org.apache.cassandra.config.Config.java</file>
      <file type="M">conf.cassandra.yaml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-3-27 01:00:00" id="4088" opendate="2012-3-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Respect 1.0 cache settings as much as possible when upgrading</summary>
      <description>When converting a 1.0 schema to 1.1, we should look at the key and row caches (just whether they are en- or dis-abled) and set the caching setting accordingly. I think right now upgrading means all your row caching is gone until you update it manually.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.config.Avro.java</file>
      <file type="M">src.avro.internode.genavro</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2012-4-2 01:00:00" id="4110" opendate="2012-4-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Relax path length requirement for non-Windows platforms</summary>
      <description>As described at the bottom of CASSANDRA-2749, we only need to worry about total path length on Windows. For other platforms we only need to check the filename length.</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.Directories.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2012-4-16 01:00:00" id="4156" opendate="2012-4-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQL should support CL.TWO</summary>
      <description>CL.TWO was overlooked in creating the CQL language spec. It should probably be added.</description>
      <version>1.1.0</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql.Cql.g</file>
      <file type="M">src.java.org.apache.cassandra.cql3.Cql.g</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-4-16 01:00:00" id="4157" opendate="2012-4-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow KS + CF names up to 48 characters</summary>
      <description>CASSANDRA-2749 imposed a 32-character limit on KS and CF names. We can be a little more lenient than that and still be safe for path names (see CASSANDRA-4110).</description>
      <version>1.1.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.Directories.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.CreateKeyspaceStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.CreateColumnFamilyStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.config.Schema.java</file>
      <file type="M">src.java.org.apache.cassandra.config.KSMetaData.java</file>
      <file type="M">src.java.org.apache.cassandra.config.CFMetaData.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-4-17 01:00:00" id="4161" opendate="2012-4-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQL 3.0 does not work in cqlsh with uppercase SELECT</summary>
      <description>Uppercase SELECT prevents usage of CQL 3.0 features like ORDER BYExample:select * from test ORDER BY number; # worksSELECT * from test ORDER BY number; # fails</description>
      <version>1.1.0</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  
  
  
  
</bugrepository>