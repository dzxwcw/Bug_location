<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  <bug fixdate="2011-11-2 01:00:00" id="3131" opendate="2011-9-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cqlsh doesn&amp;#39;t work on windows (no readline)</summary>
      <description>Saulius Menkevicius reports in CASSANDRA-3010 that cqlsh doesn't start on Windows because the readline module is not present.cqlsh should be fixed to only use readline if it is present.</description>
      <version>1.0.3</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-9-4 01:00:00" id="3135" opendate="2011-9-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Tighten class accessibility in JDBC Suite</summary>
      <description>Tighten up class accessibility by making classes in the suite that are not intended to be instantiated by a client directly remove the public modifier. In addition make abstract named classes use the abstract modifier. And finally make methods that are not part of public interfaces but shared in the package be marked protected.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">drivers.java.src.org.apache.cassandra.cql.jdbc.CResultSet.java</file>
      <file type="M">drivers.java.src.org.apache.cassandra.cql.jdbc.ColumnDecoder.java</file>
      <file type="M">drivers.java.src.org.apache.cassandra.cql.jdbc.CassandraPreparedStatement.java</file>
      <file type="M">drivers.java.src.org.apache.cassandra.cql.jdbc.CassandraDatabaseMetaData.java</file>
      <file type="M">drivers.java.src.org.apache.cassandra.cql.jdbc.CassandraConnection.java</file>
      <file type="M">drivers.java.src.org.apache.cassandra.cql.jdbc.AbstractStatement.java</file>
      <file type="M">drivers.java.src.org.apache.cassandra.cql.jdbc.AbstractResultSet.java</file>
      <file type="M">drivers.java.src.org.apache.cassandra.cql.jdbc.AbstractCassandraConnection.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-11-28 01:00:00" id="3418" opendate="2011-10-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Counter decrements require a space around the minus sign but not around the plus sign</summary>
      <description>UPDATE validation_cf_counter SET test=test+1 WHERE id='test_key' =&gt; SuccessUPDATE validation_cf_counter SET test=test + 1 WHERE id='test_key' =&gt; SuccessUPDATE validation_cf_counter SET test=test - 1 WHERE id='test_key' =&gt; SuccessUPDATE validation_cf_counter SET test=test-1 WHERE id='test_key' =&gt; Failure (line 1:38 no viable alternative at input 'test')</description>
      <version>1.0.3</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql.Term.java</file>
      <file type="M">src.java.org.apache.cassandra.cql.UpdateStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.cql.Cql.g</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  
  <bug fixdate="2011-11-14 01:00:00" id="3493" opendate="2011-11-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cqlsh complains when you try to do UPDATE with counter columns</summary>
      <description>trying to do a counter column UPDATE in cqlsh causes an "Invalid syntax" error:cqlsh:foo&gt; update brongo SET boo = boo+1 where key='hi';Invalid syntax at line 1, char 28 update brongo SET boo = boo+1 where key='hi'; ^This is cause cqlsh's lexer doesn't know that + and - are valid operators in CQL. Don't worry, I'm not trying to make cqlsh be able to parse all CQL with exactness- it tries, in order to provide the best tab completion, but when it fails to parse it can still pass on CQL text to the server. This case is different because it's the lexer that can't understand the operators, before we even get to the parser. We do need a working and correct lexer, along with at least minimal parsing capability, in order to reliably split up statements, tell when the user is changing the keyspace, or SELECTing on a columnfamily with ASSUMEd types.Also, the parser should be tweaked in a manner similar to CASSANDRA-3418.</description>
      <version>1.0.3</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.pylexotron.py</file>
      <file type="M">pylib.cqlshlib.cqlhandling.py</file>
    </fixedFiles>
  </bug>
</bugrepository>