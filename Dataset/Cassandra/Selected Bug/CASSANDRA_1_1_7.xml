<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  
  <bug fixdate="2012-10-19 01:00:00" id="3756" opendate="2012-1-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cqlsh: allow configuration of value display formats</summary>
      <description>With CASSANDRA-3726, cqlsh now formats some types of query result data to be more human-readable, such as timestamps and hex data. The format of timestamps and the precision of floating point values should be configurable by cqlshrc and/or command line.see the Shell.display_time_format and Shell.display_float_precision attributes.</description>
      <version>1.1.7</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-10-13 01:00:00" id="4664" opendate="2012-9-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Rename permission USE to DESCRIBE.</summary>
      <description>We should change USE permission to DESCRIBE as it better reflects it's meaning.</description>
      <version>1.1.7</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql.QueryProcessor.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.QueryProcessor.java</file>
      <file type="M">src.java.org.apache.cassandra.thrift.CassandraServer.java</file>
      <file type="M">src.java.org.apache.cassandra.service.ClientState.java</file>
      <file type="M">src.java.org.apache.cassandra.auth.Permission.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-10-4 01:00:00" id="4765" opendate="2012-10-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>StackOverflowError in CompactionExecutor thread</summary>
      <description>Seeing the following error:Exception in thread Thread&amp;#91;CompactionExecutor:21,1,RMI Runtime&amp;#93;java.lang.StackOverflowError at com.google.common.collect.Sets$1.iterator(Sets.java:578) at com.google.common.collect.Sets$1.iterator(Sets.java:578) at com.google.common.collect.Sets$1.iterator(Sets.java:578) at com.google.common.collect.Sets$1.iterator(Sets.java:578) at com.google.common.collect.Sets$1.iterator(Sets.java:578) at com.google.common.collect.Sets$1.iterator(Sets.java:578) at com.google.common.collect.Sets$1.iterator(Sets.java:578) at com.google.common.collect.Sets$1.iterator(Sets.java:578) at com.google.common.collect.Sets$1.iterator(Sets.java:578) at com.google.common.collect.Sets$1.iterator(Sets.java:578) at com.google.common.collect.Sets$1.iterator(Sets.java:578) at com.google.common.collect.Sets$1.iterator(Sets.java:578) at com.google.common.collect.Sets$1.iterator(Sets.java:578) at com.google.common.collect.Sets$1.iterator(Sets.java:578)</description>
      <version>1.1.7,1.2.0beta2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2012-10-16 01:00:00" id="4811" opendate="2012-10-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Some cqlsh help topics don&amp;#39;t work (select, create, insert and anything else that is a cql statement)</summary>
      <description>cqlsh&gt; help selectImproper help command.Same will happen if you look up a help topic for any other cql statement.38748b43d8de17375c7cc16e7a4969ca4c1a2aa1 broke it (#4198) 5 months ago.</description>
      <version>1.1.7,1.2.0beta2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-10-16 01:00:00" id="4816" opendate="2012-10-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Broken get_paged_slice</summary>
      <description>get_paged_slice doesn't reset the start column filter for the second returned row sometimes. So instead of getting a slice:row 0: &lt;start_column&gt;...&lt;last_column_in_row&gt;row 1: &lt;first column in a row&gt;...&lt;last_column_in_row&gt;row 2: &lt;first column in a row&gt;...you sometimes get:row 0: &lt;start_column&gt;...&lt;last_column_in_row&gt;row 1: &lt;start_column&gt;...&lt;last_column_in_row&gt;row 2: &lt;first column in a row&gt;...</description>
      <version>1.1.7,1.2.0beta2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.io.sstable.SSTableScanner.java</file>
      <file type="M">src.java.org.apache.cassandra.db.RowIteratorFactory.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2012-10-17 01:00:00" id="4828" opendate="2012-10-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>default cache provider does not match default yaml</summary>
      <description>The yaml indicates SerializingCacheProvider is the default, however the default when not present in the yaml is actually ConcurrentLinkedHashCacheProvider.</description>
      <version>1.1.7</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.config.Config.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2012-10-24 01:00:00" id="4855" opendate="2012-10-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Debian packaging doesn&amp;#39;t do auto-reloading of log4j properties file</summary>
      <description>Cassandra isn't starting the log4j auto-reload thread because it requires -Dlog4j.defaultInitOverride=true on initialization. Is there a reason to not do this when installed from the Debian package?</description>
      <version>1.1.7</version>
      <fixedVersion>Packaging</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">debian.init</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2012-11-5 01:00:00" id="4910" opendate="2012-11-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQL3 doesn&amp;#39;t allow static CF definition with compact storage in C* 1.1</summary>
      <description>In Cassandra 1.1, the following CQL3 definition:CREATE TABLE user_profiles ( user_id text PRIMARY KEY, first_name text, last_name text, year_of_birth int) WITH COMPACT STORAGE;yields:Bad Request: COMPACT STORAGE requires at least one column part of the clustering key, none foundThis works fine in 1.2 however.</description>
      <version>1.1.7</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.CreateColumnFamilyStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-11-6 01:00:00" id="4921" opendate="2012-11-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>improve cqlsh COPY FROM performance</summary>
      <description>Profiling shows that prepare_inline takes the vast majority of cqlsh COPY FROM time, particularly on csv rows with many columns.</description>
      <version>1.1.7</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">lib.cql-internal-only-1.0.10.zip</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
</bugrepository>