<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  
  <bug fixdate="2011-11-11 01:00:00" id="3347" opendate="2011-10-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>include bloomfilter stats in nodeCmd output</summary>
      <description/>
      <version>1.0.4</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.NodeCmd.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-11-15 01:00:00" id="3495" opendate="2011-11-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>capture BloomFilter memory size in Cassandra (JMX)</summary>
      <description>Maybe this could be done in https://issues.apache.org/jira/browse/CASSANDRA-3347 also, but not sure what's the scope in that jira. It'd be great if the BF memory size can be captured in the JMX monitoring. Though not sure how you would capture the "heap size" (easily that is) of the object. There is a BF.serializedSize() , can this be exposed to the BloomFilterTracker and DataTracker... and use this instead? Anyway, will let the implementor to decide/design</description>
      <version>1.0.4</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.NodeCmd.java</file>
      <file type="M">src.java.org.apache.cassandra.io.sstable.SSTableReader.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStoreMBean.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-11-15 01:00:00" id="3496" opendate="2011-11-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Load from `nodetool ring` does not update after cleanup.</summary>
      <description>Repro:Bring up a node.Insert 1M rows:127.0.0.1 datacenter1 rack1 Up Normal 406.92 MB 100.00% 77747037169725419723056812679314618801(Already looks wrong, 406.92 is higher than I'm used to seeing from a single run of stress)Bootstrap a second node into the cluster:162877269496252595336256012556853953561127.0.0.1 datacenter1 rack1 Up Normal 407.03 MB 49.96% 77747037169725419723056812679314618801127.0.0.2 datacenter1 rack1 Up Normal 157.91 MB 50.04% 162877269496252595336256012556853953561Cleanup162877269496252595336256012556853953561127.0.0.1 datacenter1 rack1 Up Normal 551.2 MB 49.96% 77747037169725419723056812679314618801127.0.0.2 datacenter1 rack1 Up Normal 157.91 MB 50.04% 162877269496252595336256012556853953561Looks like each operation that adds and removes SSTables only adds to the total and doesn't remove the old sstables from the total size count.</description>
      <version>1.0.4</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.DataTracker.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
</bugrepository>