<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  
  
  <bug fixdate="2011-3-31 01:00:00" id="2080" opendate="2011-1-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to release of Whirr 0.3.0</summary>
      <description>Whirr 0.3.0 has been released.</description>
      <version>0.7.5</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build.xml</file>
      <file type="M">build.properties.default</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-3-1 01:00:00" id="2258" opendate="2011-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>service.SerializationsTest failes under cobertura</summary>
      <description>ant codecoverage -Dtest.name=SerializationsTest gives [junit] Testcase: testTreeResponseRead(org.apache.cassandra.service.SerializationsTest): Caused an ERROR [junit] java.io.InvalidClassException: org.apache.cassandra.dht.BigIntegerToken; local class incompatible: stream classdesc serialVersionUID = -5833589141319293006, local class serialVersionUID = 2280189098581028124 [junit] java.lang.RuntimeException: java.io.InvalidClassException: org.apache.cassandra.dht.BigIntegerToken; local class incompatible: stream classdesc serialVersionUID = -5833589141319293006, local class serialVersionUID = 2280189098581028124 [junit] at org.apache.cassandra.service.AntiEntropyService$TreeResponseVerbHandler.deserialize(AntiEntropyService.java:634) [junit] at org.apache.cassandra.service.SerializationsTest.testTreeResponseRead(SerializationsTest.java:90) [junit] Caused by: java.io.InvalidClassException: org.apache.cassandra.dht.BigIntegerToken; local class incompatible: stream classdesc serialVersionUID = -5833589141319293006, local class serialVersionUID = 2280189098581028124 [junit] at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:562) [junit] at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1582) [junit] at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1495) [junit] at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1731) [junit] at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328) [junit] at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1946) [junit] at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1870) [junit] at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752) [junit] at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328) [junit] at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1946) [junit] at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1870) [junit] at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752) [junit] at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328) [junit] at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1946) [junit] at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1870) [junit] at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752) [junit] at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328) [junit] at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1946) [junit] at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1870) [junit] at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752) [junit] at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328) [junit] at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1946) [junit] at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1870) [junit] at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752) [junit] at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328) [junit] at java.io.ObjectInputStream.readObject(ObjectInputStream.java:350) [junit] at org.apache.cassandra.service.AntiEntropyService$TreeResponseVerbHandler.deserialize(AntiEntropyService.java:630)</description>
      <version>0.7.5</version>
      <fixedVersion>Legacy/Testing</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2011-3-13 01:00:00" id="2320" opendate="2011-3-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Dropping an index leaves index in Built state in system table</summary>
      <description/>
      <version>0.7.5</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.db.ColumnFamilyStoreTest.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  
  <bug fixdate="2011-3-16 01:00:00" id="2345" opendate="2011-3-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CLI: Units on show keyspaces output</summary>
      <description>Memtable thresholds don't give units/designations:Memtable thresholds: 0.0375/8/60By comparison, cache info fully qualifies the numbers.Key cache size / save period: 0.01/14400</description>
      <version>0.7.5,0.8beta1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cli.CliClient.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-3-18 01:00:00" id="2354" opendate="2011-3-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CLI should allow users to chose consistency level</summary>
      <description>Currently the CLI runs at CL.ONE. If the CLI can operate at other levels it makes it easier to test multi-dc and failure scenarios</description>
      <version>0.7.5</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cli.CliUserHelp.java</file>
      <file type="M">src.java.org.apache.cassandra.cli.CliCompleter.java</file>
      <file type="M">src.java.org.apache.cassandra.cli.CliClient.java</file>
      <file type="M">src.java.org.apache.cassandra.cli.Cli.g</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-3-20 01:00:00" id="2358" opendate="2011-3-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CLI doesn&amp;#39;t handle inserting negative integers</summary>
      <description>The CLI raises a syntax error when trying to insert negative integers:[default@Keyspace1] set StandardInteger['key'][-12] = 'val';Syntax error at position 28: mismatched character '1' expecting '-'</description>
      <version>0.7.5</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.cli.CliTest.java</file>
      <file type="M">src.java.org.apache.cassandra.cli.Cli.g</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-3-24 01:00:00" id="2376" opendate="2011-3-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Both name an index iterators cast block offset to int</summary>
      <description>This means that performing random access to the end of a large row will not work.</description>
      <version>0.7.5</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.utils.ByteBufferUtil.java</file>
      <file type="M">src.java.org.apache.cassandra.io.util.FileUtils.java</file>
      <file type="M">src.java.org.apache.cassandra.io.sstable.SSTable.java</file>
      <file type="M">src.java.org.apache.cassandra.io.sstable.IndexHelper.java</file>
      <file type="M">src.java.org.apache.cassandra.hadoop.streaming.AvroOutputReader.java</file>
      <file type="M">src.java.org.apache.cassandra.db.columniterator.SSTableNamesIterator.java</file>
      <file type="M">src.java.org.apache.cassandra.db.columniterator.IndexedSliceReader.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2011-4-1 01:00:00" id="2413" opendate="2011-4-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Reduce default memtable size</summary>
      <description>I'm going to wimp out on targeting CASSANDRA-2006 for 0.7.5 so to mitigate OOMing by newcomers let's reduce the default memtable size &amp;#8211; what we have now predates indexes, which can dramatically increase memory requirements.</description>
      <version>0.7.5</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.config.CFMetaData.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-4-5 01:00:00" id="2418" opendate="2011-4-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>default gc log settings overwrite previous log</summary>
      <description>For those spoiled by nice rolling and appending syslogs log4js etc the JVM gc log can be jarring: # GC logging options -- uncomment to enable# JVM_OPTS="$JVM_OPTS -XX:+PrintGCDetails"# JVM_OPTS="$JVM_OPTS -XX:+PrintGCTimeStamps"# JVM_OPTS="$JVM_OPTS -XX:+PrintClassHistogram"# JVM_OPTS="$JVM_OPTS -XX:+PrintTenuringDistribution"# JVM_OPTS="$JVM_OPTS -XX:+PrintGCApplicationStoppedTime"# JVM_OPTS="$JVM_OPTS -Xloggc:/var/log/cassandra/gc.log" Will result in gc.log with days of data being overwritten on restart, which leads to sad faces.The simplest change would be along these lines: GC_LOG_TS=`date +%s`JVM_OPTS="$JVM_OPTS -XX:+PrintGCDetails"JVM_OPTS="$JVM_OPTS -XX:+PrintGCTimeStamps"JVM_OPTS="$JVM_OPTS -XX:+PrintClassHistogram"JVM_OPTS="$JVM_OPTS -XX:+PrintTenuringDistribution"JVM_OPTS="$JVM_OPTS -XX:+PrintGCApplicationStoppedTime"JVM_OPTS="$JVM_OPTS -Xloggc:/var/log/cassandra/gc-$GC_LOG_TS.log" There are probably prettier approaches.</description>
      <version>0.7.5</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.cassandra-env.sh</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2011-4-8 01:00:00" id="2442" opendate="2011-4-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>For &amp;#39;describe keyspace ks&amp;#39; - it should output the default_validation_class for each column family</summary>
      <description>Even when a default_validation_class is set for a column family, describe keyspace doesn't output its value. It would be nice to see the value to verify that it is what it was set to.</description>
      <version>0.7.5</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cli.CliClient.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2011-4-18 01:00:00" id="2502" opendate="2011-4-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>disable cache saving on system CFs</summary>
      <description/>
      <version>0.7.5</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.config.CFMetaData.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2011-4-20 01:00:00" id="2516" opendate="2011-4-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow LOCAL_QUORUM, EACH_QUORUM CLs to work w/ any Strategy class</summary>
      <description/>
      <version>0.7.5</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.locator.NetworkTopologyStrategy.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.AbstractReplicationStrategy.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
</bugrepository>