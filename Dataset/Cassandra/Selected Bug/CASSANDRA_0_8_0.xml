<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  
  <bug fixdate="2011-5-26 01:00:00" id="2566" opendate="2011-4-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQL: Batch Updates: some consistency levels not working</summary>
      <description>Testing the batch updates, and running into some issues with different consistency levelsSummary UNTESTED: CONSISTENCY ANY PASS: CONSISTENCY ONE PASS: CONSISTENCY QUORUM PASS: CONSISTENCY ALL CQL ERROR: CONSISTENCY LOCAL_QUORUM CQL ERROR: CONSISTENCY EACH_QUORUMTest SetupCREATE KEYSPACE cqldb with strategy_class = 'org.apache.cassandra.locator.SimpleStrategy' and strategy_options:replication_factor=1;use cqldb;CREATE COLUMNFAMILY users (KEY varchar PRIMARY KEY, password varchar, gender varchar, session_token varchar, state varchar, birth_year bigint);INSERT INTO users (KEY, password, gender, state, birth_year) VALUES ('user1', 'ch@ngem3', 'f', 'CA', '1971');INSERT INTO users (KEY, password, gender, state, birth_year) VALUES ('user2', 'ch@ngem3', 'f', 'CA', '1972');INSERT INTO users (KEY, password, gender, state, birth_year) VALUES ('user3', 'ch@ngem3', 'f', 'CA', '1973');Bug DetailsCONSISTENCY LOCAL_QUORUMBEGIN BATCH USING CONSISTENCY LOCAL_QUORUMUPDATE users SET state = 'UT' WHERE KEY = 'user1';UPDATE users SET state = 'UT' WHERE KEY = 'user2';UPDATE users SET state = 'UT' WHERE KEY = 'user3';APPLY BATCHcqlsh&gt; Bad Request: line 1:31 mismatched input 'LOCAL_QUORUM' expecting K_LEVELCONSISTENCY EACH_QUORUMBEGIN BATCH USING CONSISTENCY EACH_QUORUMUPDATE users SET state = 'TX' WHERE KEY = 'user1';UPDATE users SET state = 'TX' WHERE KEY = 'user2';UPDATE users SET state = 'TX' WHERE KEY = 'user3';APPLY BATCHcqlsh&gt; Bad Request: line 1:31 mismatched input 'EACH_QUORUM' expecting K_LEVEL</description>
      <version>0.8.0</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql.Cql.g</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2011-5-6 01:00:00" id="2613" opendate="2011-5-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQL test failures</summary>
      <description>FAIL: delete columns from a row----------------------------------------------------------------------Traceback (most recent call last): File "/Library/Python/2.6/site-packages/nose-0.11.3-py2.6.egg/nose/case.py", line 186, in runTest self.test(*self.arg) File "/Users/jonathan/projects/cassandra/svn-0.8/test/system/test_cql.py", line 360, in test_delete_columns assert ['kd', None, None] == r, rAssertionError: [u'kd']======================================================================FAIL: delete columns from multiple rows----------------------------------------------------------------------Traceback (most recent call last): File "/Library/Python/2.6/site-packages/nose-0.11.3-py2.6.egg/nose/case.py", line 186, in runTest self.test(*self.arg) File "/Users/jonathan/projects/cassandra/svn-0.8/test/system/test_cql.py", line 379, in test_delete_columns_multi_rows assert ['kc', None] == r, rAssertionError: [u'kc']======================================================================FAIL: delete entire rows----------------------------------------------------------------------Traceback (most recent call last): File "/Library/Python/2.6/site-packages/nose-0.11.3-py2.6.egg/nose/case.py", line 186, in runTest self.test(*self.arg) File "/Users/jonathan/projects/cassandra/svn-0.8/test/system/test_cql.py", line 397, in test_delete_rows assert ['kd', None, None] == r, rAssertionError: [u'kd']======================================================================FAIL: retrieve multiple columns----------------------------------------------------------------------Traceback (most recent call last): File "/Library/Python/2.6/site-packages/nose-0.11.3-py2.6.egg/nose/case.py", line 186, in runTest self.test(*self.arg) File "/Users/jonathan/projects/cassandra/svn-0.8/test/system/test_cql.py", line 149, in test_select_columns assert ['Row Key', 'ca1', 'col', 'cd1'] == [col_dscptn[0] for col_dscptn in d], dAssertionError: [('Row Key', 'org.apache.cassandra.db.marshal.UTF8Type', None, None, None, None, None, False), ('col', 'org.apache.cassandra.db.marshal.AsciiType', None, None, None, None, True), ('cd1', 'org.apache.cassandra.db.marshal.AsciiType', None, None, None, None, True)]======================================================================FAIL: range should not fail when keys were not set----------------------------------------------------------------------Traceback (most recent call last): File "/Library/Python/2.6/site-packages/nose-0.11.3-py2.6.egg/nose/case.py", line 186, in runTest self.test(*self.arg) File "/Users/jonathan/projects/cassandra/svn-0.8/test/system/test_cql.py", line 252, in test_select_range_with_single_column_results assert len(r) == 2AssertionError</description>
      <version>0.8.0</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">drivers.py.cql.decoders.py</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-5-8 01:00:00" id="2624" opendate="2011-5-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>SimpleStrategy w/o replication_factor</summary>
      <description>It is possible to create a new keyspace using SimpleStrategy without specifying the replication_factor option. Things get more interesting if you shut the node down, since it will refuse to restart (throwing a ConfigurationException).</description>
      <version>0.8.0</version>
      <fixedVersion>Legacy/CQL,Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql.QueryProcessor.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2011-6-13 01:00:00" id="2649" opendate="2011-5-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>work-around schema disagreements from cqlsh</summary>
      <description>It is handy to be able to put CQL statements in a flat-file and load them by redirecting to cqlsh stdin, but this can fail on a cluster when executing statements that modify schema.The attached patch works around this problem by retrying up to 3 times, with a progressive delay after each attempt. A better solution would probably be to compare schema versions, but this seems to work well enough, and is better than not handling it at all.</description>
      <version>0.8.0</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">drivers.py.cqlsh</file>
    </fixedFiles>
  </bug>
</bugrepository>