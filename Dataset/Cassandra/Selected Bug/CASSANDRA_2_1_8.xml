<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  <bug fixdate="2015-6-27 01:00:00" id="9064" opendate="2015-3-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[LeveledCompactionStrategy] cqlsh can&amp;#39;t run cql produced by its own describe table statement</summary>
      <description>Here's how to reproduce:1) Create a table with LeveledCompactionStrategyCREATE keyspace foo WITH REPLICATION = {'class': 'SimpleStrategy', 'replication_factor' : 3};CREATE TABLE foo.bar ( spam text PRIMARY KEY) WITH compaction = {'class': 'LeveledCompactionStrategy'};2) Describe the table and save the outputcqlsh -e "describe table foo.bar"Output should be something likeCREATE TABLE foo.bar ( spam text PRIMARY KEY) WITH bloom_filter_fp_chance = 0.1 AND caching = '{"keys":"ALL", "rows_per_partition":"NONE"}' AND comment = '' AND compaction = {'min_threshold': '4', 'class': 'org.apache.cassandra.db.compaction.LeveledCompactionStrategy', 'max_threshold': '32'} AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'} AND dclocal_read_repair_chance = 0.1 AND default_time_to_live = 0 AND gc_grace_seconds = 864000 AND max_index_interval = 2048 AND memtable_flush_period_in_ms = 0 AND min_index_interval = 128 AND read_repair_chance = 0.0 AND speculative_retry = '99.0PERCENTILE';3) Save the output to repro.cql4) Drop the table foo.barcqlsh -e "drop table foo.bar"5) Run the create table statement we savedcqlsh -f "repro.cql"6) Expected: normal execution without an error7) Reality:ConfigurationException: &lt;ErrorMessage code=2300 &amp;#91;Query invalid because of configuration issue&amp;#93; message="Properties specified &amp;#91;min_threshold, max_threshold&amp;#93; are not understood by LeveledCompactionStrategy"&gt;</description>
      <version>2.1.8,2.2.0rc2</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">lib.cassandra-driver-internal-only-2.6.0c1.zip</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-6-14 01:00:00" id="9385" opendate="2015-5-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cqlsh autocomplete does not work for DTCS min_threshold</summary>
      <description>Confirmed that min_threshold is a valid parameter for DTCS:create TABLE test1 (key text, col1 text, primary key (key)) WITH compaction = {'class': 'DateTieredCompactionStrategy', 'min_threshold': '4' };But the min_threshold does not appear in the tab auto complete options.</description>
      <version>2.0.17,2.1.8,2.2.0rc2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.cql3handling.py</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-6-1 01:00:00" id="9527" opendate="2015-6-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cannot create secondary index on a table WITH COMPACT STORAGE</summary>
      <description>In CASSANDRA-8156 it is said that secondary indexes are not allowed on clustering columns in COMPACT tables.However, I found that it is not possible to create a secondary index on the value column in a COMPACT table:CREATE TABLE t ( a INT, b INT, c INT, PRIMARY KEY (a, b)) WITH COMPACT STORAGE;CREATE INDEX ON t (c);Bad Request: Secondary indexes are not supported on PRIMARY KEY columns in COMPACT STORAGE tables</description>
      <version>2.0.17,2.1.8,2.2.0rc2</version>
      <fixedVersion>Feature/2iIndex,Legacy/CQL</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.CreateIndexStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-7-16 01:00:00" id="9603" opendate="2015-6-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Expose private listen_address in system.local</summary>
      <description>We had some hopes CASSANDRA-9436 would add it, yet it added rpc_address instead of both rpc_address and listen_address. We really need listen_address here, because we need to get information on the private IP C* binds to. Knowing this we could better match Spark nodes to C* nodes and process data locally in environments where rpc_address != listen_address like EC2. See, Spark does not know rpc addresses nor it has a concept of broadcast address. It only knows the hostname / IP its workers bind to. In case of cloud environments, these are private IPs. Now if we give Spark a set of C* nodes identified by rpc_addresses, Spark doesn't recognize them as belonging to the same cluster. It treats them as "remote" nodes and has no idea where to send tasks optimally. Current situation (example):Spark worker nodes: &amp;#91;10.0.0.1, 10.0.0.2, 10.0.0.3&amp;#93;C* nodes: &amp;#91;10.0.0.1 / node1.blah.ec2.com, 10.0.0.2 / node2.blah.ec2.com, 10.0.0.3 / node3.blah.ec2.com&amp;#93;What the application knows about the cluster: &amp;#91;node1.blah.ec2.com, node2.blah.ec2.com, node3.blah.ec2.com&amp;#93;What the application sends to Spark for execution: Task1 - please execute on node1.blah.ec2.com Task2 - please execute on node2.blah.ec2.com Task3 - please execute on node3.blah.ec2.comHow Spark understands it: "I have no idea what node1.blah.ec2.com is, let's assign Task1 it to a random node" Expected:Spark worker nodes: &amp;#91;10.0.0.1, 10.0.0.2, 10.0.0.3&amp;#93;C* nodes: &amp;#91;10.0.0.1 / node1.blah.ec2.com, 10.0.0.2 / node2.blah.ec2.com, 10.0.0.3 / node3.blah.ec2.com&amp;#93;What the application knows about the cluster: &amp;#91;10.0.0.1 / node1.blah.ec2.com, 10.0.0.2 / node2.blah.ec2.com, 10.0.0.3 / node3.blah.ec2.com&amp;#93;What the application sends to Spark for execution: Task1 - please execute on node1.blah.ec2.com or 10.0.0.1 Task2 - please execute on node2.blah.ec2.com or 10.0.0.2 Task3 - please execute on node3.blah.ec2.com or 10.0.0.3How Spark understands it: "10.0.0.1? - I have a worker on that node, lets put Task 1 there"</description>
      <version>2.0.17,2.1.8,2.2.0rc2</version>
      <fixedVersion>Legacy/DistributedMetadata</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.SystemKeyspace.java</file>
      <file type="M">src.java.org.apache.cassandra.config.CFMetaData.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2015-7-1 01:00:00" id="9693" opendate="2015-7-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cqlsh DESCRIBE KEYSPACES reporting error &amp;#39;None not found in keyspaces&amp;#39; after keyspaces</summary>
      <description>This was introduced by CASSANDRA-7814</description>
      <version>2.1.8,2.2.0rc2</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
</bugrepository>