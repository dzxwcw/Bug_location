<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  <bug fixdate="2015-12-22 01:00:00" id="10917" opendate="2015-12-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>better validator randomness</summary>
      <description>get better randomness by reusing a Random object rather than recreating it.Also reuse keys list to avoid reallocations.</description>
      <version>3.11.5</version>
      <fixedVersion>Legacy/LocalWrite-ReadPaths</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.repair.Validator.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-12-22 01:00:00" id="10918" opendate="2015-12-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>remove leftover code from refactor</summary>
      <description>code seems to have been left over from refactor from 2.2 to 3.0. removed.</description>
      <version>3.11.5</version>
      <fixedVersion>Legacy/LocalWrite-ReadPaths</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.commitlog.CommitLogSegmentManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-1-5 01:00:00" id="10966" opendate="2016-1-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>guard against legacy migration failure due to non-existent index name</summary>
      <description>code checks for whether an index has a name, but then blindly goes ahead and tries creates the index regardless. That would cause an NPE. Simple guard against that.</description>
      <version>3.11.5</version>
      <fixedVersion>Legacy/DistributedMetadata</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.schema.LegacySchemaMigrator.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-23 01:00:00" id="11210" opendate="2016-2-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unresolved hostname in replace address</summary>
      <description>If you provide a hostname which could not be resolved by DNS, it leads to replace args being ignored. If you provide an IP which is not in the cluster, it does the right thing and complain.</description>
      <version>2.2.6,3.0.5,3.5,3.11.5</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.config.DatabaseDescriptor.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-4-10 01:00:00" id="11339" opendate="2016-3-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>WHERE clause in SELECT DISTINCT can be ignored</summary>
      <description>I've tested this out on 2.1-head. I'm not sure if it's the same behavior on newer versions.For a given table t, with PRIMARY KEY (id, v) the following two queries return the same result:SELECT DISTINCT id FROM t WHERE v &gt; X ALLOW FILTERINGSELECT DISTINCT id FROM tThe WHERE clause in the former is silently ignored, and all id are returned, regardless of the value of v in any row. It seems like this has been a known issue for a while:http://stackoverflow.com/questions/26548788/select-distinct-cql-ignores-where-clauseHowever, if we don't support filtering on anything but the partition key, we should reject the query, rather than silently dropping the where clause</description>
      <version>2.2.x,3.11.5</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.cql3.validation.operations.SelectTest.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.SelectStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.restrictions.StatementRestrictions.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2018-2-29 01:00:00" id="14916" opendate="2018-11-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add missing commands to nodetool_completion</summary>
      <description>Since CASSANDRA-6421, the file nodetool_completion haven't been modified in order to add the new features of nodetool command.I propose this patch to add those missing features.I tried to follow the logic of the code, I hope I did not miss anything. cscetbon , I would be happy if you have a look to the patch.</description>
      <version>3.0.19,3.11.5,4.0-alpha1,4.0</version>
      <fixedVersion>Tool/nodetool</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">debian.nodetool-completion</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-7-3 01:00:00" id="14948" opendate="2019-1-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Backport dropped column checks to 3.0 and 3.11</summary>
      <description>This is a follow on from CASSANDRA-14913 and CASSANDRA-14843 that introduced some fixes to prevent and mitigate data corruption caused by dropping a column then re-adding it with the same name but an incompatible type (e.g. simple int to a complex map&lt;&gt;) or different kind (regular/static). This patch backports the checks that now exist in trunk. This does include adding a column to the dropped_columns table to keep track of static columns like trunk, not sure it we are able to make that change in 3.11.x. Also not sure what our stance on backporting just the isValueCompatibleWith check to 3.0 is. I'd be for it since it prevents recreating a simple column as a map (or vice-versa) which will basically always lead to corruption.C* 3.11.xPatch</description>
      <version>3.0.19,3.11.5</version>
      <fixedVersion>Cluster/Schema</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.schema.LegacySchemaMigratorTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.cql3.validation.operations.AlterTest.java</file>
      <file type="M">src.java.org.apache.cassandra.utils.NativeSSTableLoaderClient.java</file>
      <file type="M">src.java.org.apache.cassandra.schema.SchemaKeyspace.java</file>
      <file type="M">src.java.org.apache.cassandra.schema.LegacySchemaMigrator.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.AlterTableStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.config.CFMetaData.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-3-1 01:00:00" id="15039" opendate="2019-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Documentation claims copyright for future years</summary>
      <description>See attached patch for details and fix. See also on this topic:https://stackoverflow.com/questions/2390230/do-copyright-dates-need-to-be-updated </description>
      <version>3.11.5,4.0-alpha1,4.0</version>
      <fixedVersion>Documentation/Javadoc</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">NOTICE.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2019-5-17 01:00:00" id="15090" opendate="2019-4-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Customize cassandra log directory</summary>
      <description>Add a new variable CASSANDRA_LOG_DIR (default: $CASSANDRA_HOME/logs) so that we could customize log directory such as ‘/var/log/cassandra’ .  </description>
      <version>3.0.19,3.11.5,4.0-alpha1,4.0</version>
      <fixedVersion>Local/Config</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cassandra</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  
</bugrepository>