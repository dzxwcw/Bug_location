<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  <bug fixdate="2014-3-12 01:00:00" id="8301" opendate="2014-11-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create a tool that given a bunch of sstables creates a "decent" sstable leveling</summary>
      <description>In old versions of cassandra (i.e. not trunk/3.0), when bootstrapping a new node, you will end up with a ton of files in L0 and it might be extremely painful to get LCS to compact into a new levelingWe could probably exploit the fact that we have many non-overlapping sstables in L0, and offline-bump those sstables into higher levels. It does not need to be perfect, just get the majority of the data into L1+ without creating overlaps.So, suggestion is to create an offline tool that looks at the range each sstable covers and tries to bump it as high as possible in the leveling.</description>
      <version>2.0.13</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-1-19 01:00:00" id="8645" opendate="2015-1-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>sstableloader reports nonsensical bandwidth</summary>
      <description>When restoring a snapshot I see sstableloader reporting this:[total: 0% - 5MB/s (avg: 0MB/s)] [total: 0% - 31MB/s (avg: 0MB/s)] [total: 1% - 2147483647MB/s (avg: 0MB/s)] [total: 1% - 2147483647MB/s (avg: 0MB/s)] [total: 1% - 31MB/s (avg: 0MB/s)] [total: 1% - 31MB/s (avg: 0MB/s)] [total: 1% - 2147483647MB/s (avg: 0MB/s)] [total: 1% - 2147483647MB/s (avg: 0MB/s)] [total: 1% - 2147483647MB/s (avg: 0MB/s)] [total: 1% - 2147483647MB/s (avg: 0MB/s)] [total: 1% - 2147483647MB/s (avg: 0MB/s)] ...2147483647MB/s doesnâ€™t look right.</description>
      <version>2.0.13</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.BulkLoader.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-1-24 01:00:00" id="8678" opendate="2015-1-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CREATE TABLE accepts value for default_time_to_live on counter table</summary>
      <description>I can create a counter table (via cqlsh) with a default_time_to_live:CREATE TABLE IF NOT EXISTS metrics2( time timestamp, value counter, PRIMARY KEY ((time))) WITH default_time_to_live=10;Upsert a row that increments the counter:UPDATE metrics2 SET value=value+1 WHERE timestamp='2015-01-24 10:48 -0600';Wait 10 seconds, and select, and the row is (of course) still there. There should probably be a warning or error preventing the creation of a table that has both counter columns and a value set for default_time_to_live.</description>
      <version>2.0.13,2.1.3</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.marshal.CounterColumnType.java</file>
      <file type="M">src.java.org.apache.cassandra.db.marshal.AbstractType.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.CreateTableStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.CFPropDefs.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.AlterTableStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.config.CFMetaData.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-2-5 01:00:00" id="8748" opendate="2015-2-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Backport memory leak fix from CASSANDRA-8707 to 2.0</summary>
      <description>There are multiple elements in CASSANDRA-8707 but the memory leak is common to Cassandra 2.0. This ticket is to fix the memory leak specifically for 2.0.</description>
      <version>2.0.13</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.io.sstable.SSTableWriter.java</file>
      <file type="M">src.java.org.apache.cassandra.io.sstable.SSTableSimpleWriter.java</file>
      <file type="M">src.java.org.apache.cassandra.io.sstable.SSTableSimpleUnsortedWriter.java</file>
      <file type="M">src.java.org.apache.cassandra.io.sstable.SSTableReader.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
</bugrepository>