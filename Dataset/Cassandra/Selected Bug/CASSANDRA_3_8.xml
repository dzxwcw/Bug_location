<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  
  
  
  
  
  
  
  
  <bug fixdate="2016-6-2 01:00:00" id="11481" opendate="2016-4-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Example metrics config has DroppedMetrics</summary>
      <description>Noticed this when setting up metrics reporting on a new cluster. I assume it is meant to be DroppedMessage</description>
      <version>3.0.8,3.8</version>
      <fixedVersion>Legacy/DocumentationandWebsite</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.metrics-reporter-config-sample.yaml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-5-5 01:00:00" id="11503" opendate="2016-4-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Need a tool to detect what percentage of SSTables on a node have been repaired when using incremental repairs.</summary>
      <description>When using incremental repair, we should be able to look at SSTables and understand how many sstables are in the repaired and unrepaired buckets on each machine. This can help us track the repair progress and if we are hitting any issues.</description>
      <version>3.8</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.nodetool.TableStats.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.nodetool.stats.TableStatsPrinter.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.nodetool.stats.StatsTable.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.nodetool.stats.StatsHolder.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.nodetool.Info.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.NodeProbe.java</file>
      <file type="M">src.java.org.apache.cassandra.metrics.TableMetrics.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-6-2 01:00:00" id="11696" opendate="2016-5-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incremental repairs can mark too many ranges as repaired</summary>
      <description>Incremental repairs are tracked using a parent session - a subordinate repair session is created for each range in the repair. When a node participating in the repair receives a validation request, it will reference the sstables in the parent repair session. When all subordinate sessions conclude, each node anticompacts SSTables based on the parent repair session for the whole range of the repair, but these referenced SSTables may have only been present for the validation of some subset of the ranges because the SSTables were created concurrent with the parent repair session.</description>
      <version>2.1.15,2.2.7,3.0.8,3.8</version>
      <fixedVersion>Legacy/StreamingandMessaging</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.service.ActiveRepairServiceTest.java</file>
      <file type="M">src.java.org.apache.cassandra.service.ActiveRepairService.java</file>
      <file type="M">src.java.org.apache.cassandra.db.compaction.CompactionManager.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-8-2 01:00:00" id="11701" opendate="2016-5-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[windows] dtest failure in cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest.test_reading_with_skip_and_max_rows</summary>
      <description>looks to be an assertion problem, so could be test or cassandra related:e.g.:10000 != 331http://cassci.datastax.com/job/trunk_dtest_win32/404/testReport/cqlsh_tests.cqlsh_copy_tests/CqlshCopyTest/test_reading_with_skip_and_max_rowsFailed on CassCI build trunk_dtest_win32 #404</description>
      <version>2.2.8,3.0.9,3.8</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.copyutil.py</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-6-11 01:00:00" id="11749" opendate="2016-5-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQLSH gets SSL exception following a COPY FROM</summary>
      <description>When running Cassandra and cqlsh with SSL, the following command occasionally results in the exception below:cqlsh --ssl -f kv.cqlERROR [SharedPool-Worker-2] 2016-05-11 12:41:03,583 Message.java:538 - Unexpected exception during request; channel = [id: 0xeb75e05d, /127.0.0.1:51083 =&gt; /127.0.0.1:9042]io.netty.handler.codec.DecoderException: javax.net.ssl.SSLException: bad record MAC at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:280) ~[netty-all-4.0.23.Final.jar:4.0.23.Final] at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:149) ~[netty-all-4.0.23.Final.jar:4.0.23.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:333) ~[netty-all-4.0.23.Final.jar:4.0.23.Final] at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:319) ~[netty-all-4.0.23.Final.jar:4.0.23.Final] at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:787) ~[netty-all-4.0.23.Final.jar:4.0.23.Final] at io.netty.channel.epoll.EpollSocketChannel$EpollSocketUnsafe.epollInReady(EpollSocketChannel.java:722) ~[netty-all-4.0.23.Final.jar:4.0.23.Final] at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:326) ~[netty-all-4.0.23.Final.jar:4.0.23.Final] at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:264) ~[netty-all-4.0.23.Final.jar:4.0.23.Final] at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:116) ~[netty-all-4.0.23.Final.jar:4.0.23.Final] at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137) ~[netty-all-4.0.23.Final.jar:4.0.23.Final] at java.lang.Thread.run(Thread.java:745) [na:1.8.0_91]Caused by: javax.net.ssl.SSLException: bad record MAC at sun.security.ssl.Alerts.getSSLException(Alerts.java:208) ~[na:1.8.0_91] at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1728) ~[na:1.8.0_91] at sun.security.ssl.SSLEngineImpl.readRecord(SSLEngineImpl.java:981) ~[na:1.8.0_91] at sun.security.ssl.SSLEngineImpl.readNetRecord(SSLEngineImpl.java:907) ~[na:1.8.0_91] at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:781) ~[na:1.8.0_91] at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:624) ~[na:1.8.0_91] at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:982) ~[netty-all-4.0.23.Final.jar:4.0.23.Final] at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:908) ~[netty-all-4.0.23.Final.jar:4.0.23.Final] at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:854) ~[netty-all-4.0.23.Final.jar:4.0.23.Final] at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:249) ~[netty-all-4.0.23.Final.jar:4.0.23.Final] ... 10 common frames omittedCaused by: javax.crypto.BadPaddingException: bad record MAC at sun.security.ssl.InputRecord.decrypt(InputRecord.java:219) ~[na:1.8.0_91] at sun.security.ssl.EngineInputRecord.decrypt(EngineInputRecord.java:177) ~[na:1.8.0_91] at sun.security.ssl.SSLEngineImpl.readRecord(SSLEngineImpl.java:974) ~[na:1.8.0_91] ... 17 common frames omittedwherecat kv.cql create keyspace if not exists cvs_copy_ks with replication = {'class': 'SimpleStrategy', 'replication_factor':1};create table if not exists cvs_copy_ks.kv (key int primary key, value text);truncate cvs_copy_ks.kv;copy cvs_copy_ks.kv (key, value) from 'kv.csv' with header='true';select * from cvs_copy_ks.kv;drop keyspace cvs_copy_ks;stefi@cuoricina:~/git/cstar/cassandra$ cat kv.ckv.cql kv.csv cat kv.csv key,value1,'a'2,'b'3,'c'The COPY FROM succeeds, however the following select does not. The easiest way to reproduce this is to restart the Cassandra process, it seems to happen in preference after a restart.</description>
      <version>2.1.15,2.2.7,3.0.8,3.8</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.copyutil.py</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2016-7-20 01:00:00" id="11850" opendate="2016-5-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cannot use cql since upgrading python to 2.7.11+</summary>
      <description>OS: Debian GNU/Linux stretch/sid Kernel: 4.5.0-2-amd64 #1 SMP Debian 4.5.4-1 (2016-05-16) x86_64 GNU/LinuxPython version: 2.7.11+ (default, May 9 2016, 15:54:33)&amp;#91;GCC 5.3.1 20160429&amp;#93;cqlsh --version: cqlsh 5.0.1cassandra -v: 3.5 (also occurs with 3.0.6)Issue:when running cqlsh, it returns the following error:cqlsh -u dbarpt_usr01Password: *****Connection error: ('Unable to connect to any servers', {'odbasandbox1': TypeError('ref() does not take keyword arguments',)})I cleared PYTHONPATH:python -c "import json; print dir(json); print json._version_"&amp;#91;&amp;#39;JSONDecoder&amp;#39;, &amp;#39;JSONEncoder&amp;#39;, &amp;#39;__all__&amp;#39;, &amp;#39;__author__&amp;#39;, &amp;#39;__builtins__&amp;#39;, &amp;#39;__doc__&amp;#39;, &amp;#39;__file__&amp;#39;, &amp;#39;__name__&amp;#39;, &amp;#39;__package__&amp;#39;, &amp;#39;__path__&amp;#39;, &amp;#39;__version__&amp;#39;, &amp;#39;_default_decoder&amp;#39;, &amp;#39;_default_encoder&amp;#39;, &amp;#39;decoder&amp;#39;, &amp;#39;dump&amp;#39;, &amp;#39;dumps&amp;#39;, &amp;#39;encoder&amp;#39;, &amp;#39;load&amp;#39;, &amp;#39;loads&amp;#39;, &amp;#39;scanner&amp;#39;&amp;#93;2.0.9Java based clients can connect to Cassandra with no issue. Just CQLSH and Python clients cannot.nodetool status also works.Thank you for your help.</description>
      <version>2.1.16,2.2.8,3.0.9,3.8</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">lib.cassandra-driver-internal-only-2.7.2-5d33cb4.zip</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-6-7 01:00:00" id="11967" opendate="2016-6-7 00:00:00" resolution="Won&amp;#39;t Fix">
    <buginformation>
      <summary>Export metrics for prometheus in its native format</summary>
      <description>https://github.com/snazy/prometheus-metrics-exporter allows to export codahale metrics for prometheus.io. In order to integrate this, a minor change to C* is necessary to load the library.This eliminates the need to use the additional graphite-exporter tool and therefore also allows prometheus to track the up/down status of C*.(Will provide the patch soon)</description>
      <version>3.8</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.CassandraDaemon.java</file>
      <file type="M">NEWS.txt</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-6-10 01:00:00" id="11991" opendate="2016-6-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>On clock skew, paxos may "corrupt" the node clock</summary>
      <description>W made a mistake in CASSANDRA-9649 so that a temporal clock skew on one node can "corrupt" other node clocks through Paxos. That wasn't intended and we should fix that. I'll attach a patch later.</description>
      <version>2.1.15,2.2.7,3.0.8,3.8</version>
      <fixedVersion>Feature/LightweightTransactions</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.utils.UUIDGen.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageProxy.java</file>
      <file type="M">src.java.org.apache.cassandra.service.ClientState.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-7-19 01:00:00" id="12032" opendate="2016-6-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update to Netty 4.0.39</summary>
      <description>Update Netty to 4.0.37(no C* code changes in this ticket)</description>
      <version>3.8</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">lib.netty-all-4.0.36.Final.jar</file>
      <file type="M">lib.licenses.netty-all-4.0.36.Final.txt</file>
      <file type="M">conf.cassandra-env.sh</file>
      <file type="M">conf.cassandra-env.ps1</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-7-21 01:00:00" id="12044" opendate="2016-6-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Materialized view definition regression in clustering key</summary>
      <description>This bug was reported on the users mailing list. The following definitions work in 3.0.3 but fail in 3.0.7.CREATE TABLE ks.pa ( id bigint, sub_id text, name text, class text, r_id bigint, k_id bigint, created timestamp, priority int, updated timestamp, value text, PRIMARY KEY (id, sub_id, name));CREATE ks.mv_pa AS SELECT k_id, name, value, sub_id, id, class, r_id FROM ks.pa WHERE k_id IS NOT NULL AND name IS NOT NULL AND value IS NOT NULL AND sub_id IS NOT NULL AND id IS NOT NULL PRIMARY KEY ((k_id, name), value, sub_id, id);After running bisect, I've narrowed it down to commit 86ba227 from CASSANDRA-11475.</description>
      <version>3.0.9,3.8</version>
      <fixedVersion>Feature/MaterializedViews,Legacy/CQL</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.cql3.ViewTest.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.CreateViewStatement.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-6-23 01:00:00" id="12077" opendate="2016-6-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>NPE when trying to get sstables for anticompaction</summary>
      <description>This was introduced in CASSANDRA-11739 - we need to avoid trying to get sstables for tables we are not repairing</description>
      <version>2.1.15,2.2.7,3.0.8,3.8</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.ActiveRepairService.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2016-7-13 01:00:00" id="12189" opendate="2016-7-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>$$ escaped string literals are not handled correctly in cqlsh</summary>
      <description>The syntax rules for pg ($$) escaped string literals in cqlsh do not match the lexer rule for this type in Lexer.g. The unclosedPgString rule is not correctly matching pg string literals in multi-line statements so:INSERT INTO test.test (id) values (...$$&lt;xml/&gt;fails with a syntax error at the forward slash.Both pgStringLiteral and unclosedPgString fail with the following string$$a$b$$where this is allowed by the CQL lexer rule.</description>
      <version>3.8</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.cql3handling.py</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2016-7-20 01:00:00" id="12247" opendate="2016-7-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>AssertionError with MVs on updating a row that isn&amp;#39;t indexed due to a null value</summary>
      <description>Complete steps to reproduce:https://gist.github.com/brstgt/4c3269eaec50a7d4abac5690157b238c</description>
      <version>3.0.9,3.8</version>
      <fixedVersion>Legacy/LocalWrite-ReadPaths</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.cql3.ViewTest.java</file>
      <file type="M">src.java.org.apache.cassandra.db.view.ViewUpdateGenerator.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-7-22 01:00:00" id="12278" opendate="2016-7-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cassandra not working with Java 8u102 on Windows</summary>
      <description>With the latest upgrade of Java to 8u102, Cassandra will no longer run and states "Cassandra 3.0 and later require Java 8u40 or later. Please see attached screenshot.</description>
      <version>3.0.9,3.8</version>
      <fixedVersion>Legacy/Core</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.cassandra-env.ps1</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-8-3 01:00:00" id="12371" opendate="2016-8-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>INSERT JSON - numbers not accepted for smallint and tinyint</summary>
      <description>Contrary to what is written down on http://cassandra.apache.org/doc/latest/cql/json.html#json-encoding-of-cassandra-data-types, numbers are not an accepted format for tinyints and smallints.Steps to reproduce on CQLSH:&gt; create table default.test(id text PRIMARY KEY, small smallint, tiny tinyint);&gt; INSERT INTO default.test JSON '{"id":"123","small":11}';InvalidRequest: Error from server: code=2200 &amp;#91;Invalid query&amp;#93; message="Error decoding JSON value for small: Expected a short value, but got a Integer: 11"&gt; INSERT INTO default.test JSON '{"id":"123","tiny":11}';InvalidRequest: Error from server: code=2200 &amp;#91;Invalid query&amp;#93; message="Error decoding JSON value for tiny: Expected a byte value, but got a Integer: 11"The good news is that when you wrap the numeric values into strings - it works like a charm.</description>
      <version>2.2.8,3.0.9,3.8</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.cql3.validation.entities.JsonTest.java</file>
      <file type="M">src.java.org.apache.cassandra.db.marshal.ShortType.java</file>
      <file type="M">src.java.org.apache.cassandra.db.marshal.ByteType.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-8-12 01:00:00" id="12449" opendate="2016-8-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: Cassandra Development Section</summary>
      <description>The new documentation already contains some user specific topics, but details on developing Cassandra are still missing. I'd like to create a new "Cassandra Development" section that would be initially created based on the following content: How to contribute (should probably be split up into sub pages) &amp;#91;~iamaleksey&amp;#93;'s On how to submit patches and have Cassandra committers like you (some overlapping content with "How to contribute" here) Code Style Running Cassandra in IDEA / Running Cassandra in Eclipse (needs to be reviewed for latest IDE versions)Additional content would be nice to have as well, e.g. on contributing documentation.</description>
      <version>None</version>
      <fixedVersion>Legacy/DocumentationandWebsite</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">doc.source..templates.indexcontent.html</file>
      <file type="M">doc.source.index.rst</file>
      <file type="M">doc.source.bugs.rst</file>
      <file type="M">doc.source.development.images.eclipse.debug6.png</file>
      <file type="M">doc.source.development.images.eclipse.debug5.png</file>
      <file type="M">doc.source.development.images.eclipse.debug4.png</file>
      <file type="M">doc.source.development.images.eclipse.debug3.png</file>
      <file type="M">doc.source.development.images.eclipse.debug2.png</file>
      <file type="M">doc.source.development.images.eclipse.debug1.png</file>
      <file type="M">doc.source.development.images.eclipse.debug0.png</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-6-14 01:00:00" id="9811" opendate="2015-7-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Tie counter shards&amp;#39; logical clock value to timestamps</summary>
      <description>CASSANDRA-6506 will get rid of counter shards, turning them into elements of a map. And we'll be using the logical clock values as map element timestamps.To avoid unpleasant initial performance (being unable to perform certain sstable optimisations on the read path), we should switch the shards to use max(timestamp, clock + 1) now, in advance of CASSANDRA-6506 switch.</description>
      <version>3.8</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.db.CounterMutationTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.db.CounterCacheTest.java</file>
      <file type="M">src.java.org.apache.cassandra.db.CounterMutation.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
</bugrepository>