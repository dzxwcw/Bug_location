<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  
  
  <bug fixdate="2014-2-4 01:00:00" id="7688" opendate="2014-8-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add data sizing to a system table</summary>
      <description>Currently you can't implement something similar to describe_splits_ex purely from the a native protocol driver. https://datastax-oss.atlassian.net/browse/JAVA-312 is open to expose easily getting ownership information to a client in the java-driver. But you still need the data sizing part to get splits of a given size. We should add the sizing information to a system table so that native clients can get to it.</description>
      <version>2.1.5</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.SystemKeyspace.java</file>
      <file type="M">src.java.org.apache.cassandra.config.KSMetaData.java</file>
      <file type="M">src.java.org.apache.cassandra.service.CassandraDaemon.java</file>
      <file type="M">src.java.org.apache.cassandra.db.SizeEstimatesRecorder.java</file>
      <file type="M">src.java.org.apache.cassandra.db.DataTracker.java</file>
      <file type="M">src.java.org.apache.cassandra.config.CFMetaData.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-3-7 01:00:00" id="7712" opendate="2014-8-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>temporary files need to be cleaned by unit tests</summary>
      <description>There are many unit test temporary files left behind after test runs. In the case of CI servers, I have seen &gt;70,000 files accumulate in /tmp over a period of time. Each unit test should make an effort to remove its temporary files when the test is completed.My current unit test cleanup block:# clean up after unit tests..rm -rf /tmp/140*-0 /tmp/CFWith* /tmp/Counter1* /tmp/DescriptorTest* /tmp/Keyspace1* \ /tmp/KeyStreamingTransferTestSpace* /tmp/SSTableExportTest* /tmp/SSTableImportTest* \ /tmp/Standard1* /tmp/Statistics.db* /tmp/StreamingTransferTest* /tmp/ValuesWithQuotes* \ /tmp/cassandra* /tmp/jna-* /tmp/ks-cf-ib-1-* /tmp/lengthtest* /tmp/liblz4-java*.so /tmp/readtest* \ /tmp/set_length_during_read_mode* /tmp/set_negative_length* /tmp/snappy-*.so</description>
      <version>2.0.15,2.1.5</version>
      <fixedVersion>Legacy/Testing</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-3-21 01:00:00" id="7816" opendate="2014-8-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Duplicate DOWN/UP Events Pushed with Native Protocol</summary>
      <description>Added "MOVED_NODE" as a possible type of topology change and also specified that it is possible to receive the same event multiple times.</description>
      <version>2.0.15,2.1.5</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.transport.Server.java</file>
      <file type="M">doc.native.protocol.v2.spec</file>
      <file type="M">doc.native.protocol.v1.spec</file>
      <file type="M">src.java.org.apache.cassandra.gms.Gossiper.java</file>
      <file type="M">src.java.org.apache.cassandra.gms.EndpointState.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-2-20 01:00:00" id="8154" opendate="2014-10-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>desc table output shows key-only index ambiguously</summary>
      <description>When creating a secondary index on a map type, for keys, the DESC TABLE output does not create correct DDL (it omits the keys part). So if someone uses describe to recreate a schema they could end up with a values index instead of a keys index.First, create a table and add an index:CREATE TABLE test.foo ( id1 text, id2 text, categories map&lt;text, text&gt;, PRIMARY KEY (id1, id2));create index on foo(keys(categories));|Now DESC TABLE and you'll see the incomplete index DDL:CREATE TABLE test.foo ( id1 text, id2 text, categories map&lt;text, text&gt;, PRIMARY KEY (id1, id2)) WITH CLUSTERING ORDER BY (id2 ASC).......................snip..............................................CREATE INDEX foo_categories_idx ON test.foo (categories);</description>
      <version>2.1.5</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">lib.cassandra-driver-internal-only-2.1.3.post.zip</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2014-2-2 01:00:00" id="8406" opendate="2014-12-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add option to set max_sstable_age in fractional days in DTCS</summary>
      <description>Using days as the unit for max_sstable_age in DTCS might be too much, add option to set it in seconds</description>
      <version>2.1.5</version>
      <fixedVersion>Local/Compaction</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.db.compaction.DateTieredCompactionStrategyTest.java</file>
      <file type="M">src.java.org.apache.cassandra.db.compaction.DateTieredCompactionStrategyOptions.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-2-16 01:00:00" id="8495" opendate="2014-12-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add data type serialization formats to native protocol specs</summary>
      <description>We currently describe the serialization format for collections, UDTs, and tuples in the native protocol spec. We should expand that to include all data types supported by Cassandra.</description>
      <version>2.1.5</version>
      <fixedVersion>Legacy/DocumentationandWebsite</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">doc.native.protocol.v2.spec</file>
      <file type="M">doc.native.protocol.v1.spec</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-3-13 01:00:00" id="8613" opendate="2015-1-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Regression in mixed single and multi-column relation support</summary>
      <description>In 2.0.6 through 2.0.8, a query like the following was supported:SELECT * FROM mytable WHERE clustering_0 = ? AND (clustering_1, clustering_2) &gt; (?, ?)However, after CASSANDRA-6875, you'll get the following error:Clustering columns may not be skipped in multi-column relations. They should appear in the PRIMARY KEY order. Got (c, d) &gt; (0, 0)</description>
      <version>2.0.15,2.1.5</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.cql3.MultiColumnRelationTest.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.SelectStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-2-13 01:00:00" id="8614" opendate="2015-1-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Select optimal CRC32 implementation at runtime</summary>
      <description>JDK 8 has support for an intrinsic for CRC32 that runs at 12-13 gigabytes/sec per core in my quick and dirty test. PureJavaCRC32 is &lt; 800 megabytes/sec if I recall and it has a lookup table that evicts random cache lines every time it runs.In order to capture the benefit of that when it is available we can select a CRC32 implementation at startup in a static block.If JDK 8 is not what is running we can fall back to the existing PureJavaCRC32 implementation.</description>
      <version>None</version>
      <fixedVersion>Legacy/LocalWrite-ReadPaths,Local/Compaction</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.utils.PureJavaCrc32.java</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  
  
  
  <bug fixdate="2015-2-18 01:00:00" id="8829" opendate="2015-2-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add extra checks to catch SSTable ref counting bugs</summary>
      <description>There have been some bad affects from ref counting bugs (see e.g. CASSANDRA-7704). We should add extra checks so we can more easily diagnose any future problems and avoid some of the side effects.</description>
      <version>2.1.5</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-3-19 01:00:00" id="8834" opendate="2015-2-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Top partitions reporting wrong cardinality</summary>
      <description>It always reports a cardinality of 1. Patch also includes a try/catch around the conversion of partition keys that isn't always handled well in thrift cfs.</description>
      <version>2.1.5</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.utils.TopKSamplerTest.java</file>
      <file type="M">src.java.org.apache.cassandra.utils.TopKSampler.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-2-20 01:00:00" id="8842" opendate="2015-2-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade java-driver used for stress</summary>
      <description>There are a number of java-driver issues I've been hitting while using stress on large clusters. These issues are fixed in the later driver releases. Mainly race conditions.https://github.com/datastax/java-driver/blob/2.0/driver-core/CHANGELOG.rst#2010</description>
      <version>2.1.5</version>
      <fixedVersion>Local/Config</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">tools.lib.cassandra-driver-core-2.0.5.jar</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2015-3-2 01:00:00" id="8886" opendate="2015-3-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>nodetool netstats shows the progress of every streaming session</summary>
      <description>Now if there is a streaming session in one node, the nodetool netstats only shows how many files and bytes should be sent or received. I think users may want to know how many files and bytes have been sent or received without counting the receiving/sending files themselves. It is a very small patch to show the progress of a session.</description>
      <version>2.1.5</version>
      <fixedVersion>Tool/nodetool</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.NodeTool.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-3-5 01:00:00" id="8913" opendate="2015-3-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use long for key count estimate in cfstats</summary>
      <description>We use an int to get estimated key count in cfstats</description>
      <version>2.1.5</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.NodeTool.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-3-9 01:00:00" id="8934" opendate="2015-3-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>COPY command has inherent 128KB field size limit</summary>
      <description>In using the COPY command as follows:cqlsh -e "COPY test.test1mb(pkey, ccol, data) FROM 'in/data1MB/data1MB_9.csv'"the following error is thrown:&lt;stdin&gt;:1:field larger than field limit (131072)The data file contains a field that is greater than 128KB (it's more like almost 1MB).A work-around (thanks to jjordan and thobbs is to modify the cqlsh script and add the linecsv.field_size_limit(1000000000)anywhere after the lineimport csv</description>
      <version>2.0.15,2.1.5</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-3-11 01:00:00" id="8948" opendate="2015-3-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cassandra-stress does not honour consistency level (cl) parameter when used in combination with user command</summary>
      <description>The stress test tool does not honour "cl" parameter when used in combination with the "user" command. Consistency level will be default ONE no matter what is set by "cl=".Works fine with "write" command.How to reproduce:1. Create a suitable yaml-file to use in test2. Run e.g. ./cassandra-stress user profile=./file.yaml cl=ALL no-warmup duration=10s ops\(insert=1\) -rate threads=4 -port jmx=71003. Observe that cl=ONE in trace logs</description>
      <version>2.1.5</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.userdefined.SchemaStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2015-4-31 01:00:00" id="9077" opendate="2015-3-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Deleting an element from a List which is null throws a NPE</summary>
      <description>I am seeing an NPE on the latest 2.1 branch with this sequence of deletes from a list - first delete the entire list, then attempt to delete one element.I expected to see List index 0 out of bound, list has size 0 but instead got an NPE../bin/cqlshConnected to Test Cluster at 127.0.0.1:9042.[cqlsh 5.0.1 | Cassandra 2.1.3-SNAPSHOT | CQL spec 3.2.0 | Native protocol v3]Use HELP for help.cqlsh&gt; use frozen_collections ;cqlsh:frozen_collections&gt; DROP TABLE IF EXISTS t;cqlsh:frozen_collections&gt; CREATE TABLE t (id text PRIMARY KEY, l list&lt;text&gt;, s set&lt;text&gt;);cqlsh:frozen_collections&gt; INSERT INTO t (id, l, s) VALUES ('user', ['1'], {'1'});cqlsh:frozen_collections&gt;cqlsh:frozen_collections&gt; DELETE l FROM t WHERE id ='user';cqlsh:frozen_collections&gt; //INSERT INTO t (id, l) VALUES ('user', ['1']);cqlsh:frozen_collections&gt; DELETE l[0] FROM t WHERE id = 'user';ServerError: &lt;ErrorMessage code=0000 [Server error] message="java.lang.NullPointerException"&gt;cqlsh:frozen_collections&gt;cqlsh:frozen_collections&gt; DELETE s FROM t WHERE id ='user';cqlsh:frozen_collections&gt; DELETE s['1'] FROM t WHERE id = 'user';It appears the DELETE emails... directly followed by DELETE emails&amp;#91;0&amp;#93;... is the offending sequence. Either one alone works fine, as does adding an intervening insert/update.The same sequence performed on a Set rather than List works (as shown above).</description>
      <version>2.1.5</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.cql3.CollectionsTest.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.Lists.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-4-31 01:00:00" id="9080" opendate="2015-3-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cqlsh: COPY FROM doesn&amp;#39;t quote column names</summary>
      <description>The changes in CASSANDRA-8225 had one bug: column names aren't quoted in the insert statement (when needed).</description>
      <version>2.1.5</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-4-31 01:00:00" id="9081" opendate="2015-3-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix display of triggers in cqlsh</summary>
      <description>https://datastax-oss.atlassian.net/browse/PYTHON-231, included in 2.5.0, prevents triggers from being displayed in cqlsh</description>
      <version>2.1.5</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">lib.cassandra-driver-internal-only-2.1.4.post.zip</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-4-7 01:00:00" id="9128" opendate="2015-4-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Flush system.IndexInfo after index state changed</summary>
      <description>We don't force a flush of system.IndexInfo after updating it by marking an index as built. This may lead to indexes being unnecessarily rebuilt following a disorderly shutdown.We also don't update it after an index is removed, but that's probably less of an issue as we do flush system.schema_columns after removing the index, so those won't get rebuilt.</description>
      <version>2.0.15,2.1.5</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.SystemKeyspace.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2015-4-16 01:00:00" id="9203" opendate="2015-4-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Removing cold_reads_to_omit is not backwards compatible</summary>
      <description>While doing some tests on cassandra-2.1.5-tentative I found the cold_reads_to_omit parameter in SizeTieredCompactionStrategy was removed, this breaks our CREATE TABLE statements. This was done in CASSANDRA-8860 and if I understand Marcus comment in that JIRA, the intention was to keep the parameter in 2.1 but ignore it to avoid breaking existing code. But the patch actually removes the parameter.</description>
      <version>2.1.5</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.compaction.SizeTieredCompactionStrategyOptions.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
</bugrepository>