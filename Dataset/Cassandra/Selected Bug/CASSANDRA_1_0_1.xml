<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  <bug fixdate="2011-10-27 01:00:00" id="2961" opendate="2011-7-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Expire dead gossip states based on time</summary>
      <description>Currently dead states are held until aVeryLongTime, 3 days. The problem is that if a node reboots within this period, it begins a new 3 days and will repopulate the ring with the dead state. While mostly harmless, perpetuating the state forever is at least wasting a small amount of bandwidth. Instead, we can expire states based on a ttl, which will require that the cluster be loosely time synced; within the quarantine period of 60s.</description>
      <version>1.0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.service.LeaveAndBootstrapTest.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.gms.VersionedValue.java</file>
      <file type="M">src.java.org.apache.cassandra.gms.Gossiper.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2009-4-11 01:00:00" id="3" opendate="2009-3-11 00:00:00" resolution="Duplicate">
    <buginformation>
      <summary>Allow non-hash-based partitioning schemes to allow truly order-preserving storage</summary>
      <description>An order-preserving hash has too many limitations to be useful in production where key lengths tend to have low variance. We need to make Cassandra more flexible and define a partitioner as responsible for String -&gt; EndPoint instead of String -&gt; BigInteger.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.transport.Server.java</file>
      <file type="M">src.java.org.apache.cassandra.transport.Message.java</file>
      <file type="M">src.java.org.apache.cassandra.config.DatabaseDescriptor.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.StandaloneScrubber.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.nodetool.Scrub.java</file>
      <file type="M">src.java.org.apache.cassandra.config.Config.java</file>
      <file type="M">conf.cassandra.yaml</file>
      <file type="M">test.unit.org.apache.cassandra.service.MoveTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.dht.BootStrapperTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.cql3.validation.operations.CreateTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.cql3.validation.operations.AlterTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.cql3.CQLTester.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.NetworkTopologyStrategy.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.AbstractReplicationStrategy.java</file>
      <file type="M">NEWS.txt</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-9-27 01:00:00" id="3089" opendate="2011-8-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support RowId in ResultSet</summary>
      <description>Support the JDBC concept of RowId by using the C* row index value.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">drivers.java.src.org.apache.cassandra.cql.jdbc.CResultSet.java</file>
      <file type="M">drivers.java.src.org.apache.cassandra.cql.jdbc.CassandraPreparedStatement.java</file>
      <file type="M">drivers.java.src.org.apache.cassandra.cql.jdbc.CassandraDatabaseMetaData.java</file>
      <file type="M">drivers.java.src.org.apache.cassandra.cql.jdbc.AbstractResultSet.java</file>
      <file type="M">drivers.java.CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-10-2 01:00:00" id="3126" opendate="2011-9-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>unable to remove column metadata via CLI</summary>
      <description>I cant find way how to remove all columns definitions without CF import/export.&amp;#91;default@int4&amp;#93; update column family sipdb with column_metadata = [];Syntax error at position 51: required (...)+ loop did not match anything at input ']'&amp;#91;default@int4&amp;#93; update column family sipdb with column_metadata = &amp;#91;{}&amp;#93;;Command not found: `update column family sipdb with column_metadata = &amp;#91;{}&amp;#93;;`. Type 'help;' or '?' for help.&amp;#91;default@int4&amp;#93;</description>
      <version>0.8.8,1.0.1</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.cli.CliTest.java</file>
      <file type="M">src.java.org.apache.cassandra.cli.Cli.g</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-10-5 01:00:00" id="3140" opendate="2011-9-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Expose server, api versions to CQL</summary>
      <description>Need to expose the CQL api version; might as well include the server version while we're at it.</description>
      <version>1.0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.AbstractCassandraDaemon.java</file>
      <file type="M">src.java.org.apache.cassandra.db.SystemTable.java</file>
      <file type="M">src.java.org.apache.cassandra.cql.QueryProcessor.java</file>
      <file type="M">src.java.org.apache.cassandra.config.DatabaseDescriptor.java</file>
      <file type="M">src.java.org.apache.cassandra.config.CFMetaData.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-10-9 01:00:00" id="3170" opendate="2011-9-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Schema versions output should be on separate lines for separate versions</summary>
      <description>On the CLI if you do a 'describe cluster;' it would be really nice to have different versions on different lines or some way to call out multiple versions more. Right now it's a UUID with a list of nodes for one, but with multiple versions, it's on the same line - another UUID and another list of nodes. That's hard to distinguish between one version and multiple versions at a glance.</description>
      <version>0.8.8,1.0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cli.CliClient.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-12-15 01:00:00" id="3214" opendate="2011-9-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make CFIF use rpc_endpoint prior to trying endpoint</summary>
      <description>Following up on CASSANDRA-3187 , we probably need to attempt to use the rpc_endpoint address first, and then fall back to the gossip endpoint if we don't get what we want.</description>
      <version>0.8.8,1.0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.hadoop.ColumnFamilyInputFormat.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-9-27 01:00:00" id="3261" opendate="2011-9-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Thrift sockets are not buffered properly</summary>
      <description>workaround for THRIFT-1121adds back BufferedInputStream and BufferedOutputStream to TSocket in new TCustomSocket class</description>
      <version>1.0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.thrift.TCustomServerSocket.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2011-10-7 01:00:00" id="3331" opendate="2011-10-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Apache Daemon missing from the binary tarball</summary>
      <description>Apparently the tools used to run the binary release are missing from the binary tarball.I will verify that they are in the 1.0 branch, then update the ticket so we can ensure that they are included.Ben</description>
      <version>1.0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.daemon.RELEASE-NOTES.txt</file>
      <file type="M">bin.daemon.prunsrv.exe</file>
      <file type="M">bin.daemon.prunmgr.exe</file>
      <file type="M">bin.daemon.NOTICE.txt</file>
      <file type="M">bin.daemon.LICENSE.txt</file>
      <file type="M">tools.stress.bin.stress.bat</file>
      <file type="M">README.txt</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
      <file type="M">bin.cassandra.bat</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-10-11 01:00:00" id="3350" opendate="2011-10-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Can&amp;#39;t USE numeric keyspace names in CQL</summary>
      <description>Cassandra allows keyspace names to start with a digit or an underscore (see o.a.c.db.migration.Migration.isLegalName), but CQL's USE statement only accepts a CQL identifier, which must start with a letter. So there's no way to use a keyspace named "142" or "&amp;#95;hi&amp;#95;" in CQL, for example.The USE statement should accept string literals and integers as well as identifiers, and CQL identifiers (IDENT) should probably allow starting with the underscore.</description>
      <version>0.8.8,1.0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql.QueryProcessor.java</file>
      <file type="M">src.java.org.apache.cassandra.cql.Cql.g</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-10-13 01:00:00" id="3358" opendate="2011-10-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>2GB row size limit in ColumnIndex offset calculation</summary>
      <description>Index offset is calculated using int instead of long resulting in overflow at 2GB row size. As a result affected columns can not be retrieved. Fix: use long instead of int</description>
      <version>0.7.10,0.8.8,1.0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.ColumnIndexer.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-10-15 01:00:00" id="3365" opendate="2011-10-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[patch] don&amp;#39;t stutter exception messages</summary>
      <description>doinglog.error(e.getMessage(), e);just stutters the error message twice, which is annoying. Use a real message</description>
      <version>1.0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-10-15 01:00:00" id="3366" opendate="2011-10-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQL: Internal application error specifying &amp;#39;using consistency ...&amp;#39; in lower case; must be upper case</summary>
      <description>Robin hit this error, so I think he would consider it to be a usability issue.</description>
      <version>1.0.1</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql.Cql.g</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-10-17 01:00:00" id="3372" opendate="2011-10-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make HSHA cached threads.</summary>
      <description>JDK's newCachedTP does the following.... This is simillar to ACD.CleaningThreadPoolpublic static ExecutorService newCachedThreadPool(ThreadFactory threadFactory) { return new ThreadPoolExecutor(0, Integer.MAX_VALUE, 60L, TimeUnit.SECONDS, new SynchronousQueue&lt;Runnable&gt;(), threadFactory);}</description>
      <version>1.0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.thrift.CassandraDaemon.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-10-18 01:00:00" id="3375" opendate="2011-10-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Avoid clock drift on some Windows machines</summary>
      <description>Performing Thread.sleep() with non-rounded values increases the frequency of interrupts on Windows machines; this can cause performance problems, and on some machines even clock drift problems for the duration of the sleep.Fixing the issue is trivial: lower the degree of randomness by allowing only "rounded" sleep periods.http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6464007http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6435126</description>
      <version>1.0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.HintedHandOffManager.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-10-20 01:00:00" id="3390" opendate="2011-10-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>ReadResponseSerializer.serializedSize() calculation is wrong</summary>
      <description>in ReadResponse.javathe following code public long serializedSize(ReadResponse response, int version) { int size = DBConstants.intSize; size += (response.isDigestQuery() ? response.digest() : ByteBufferUtil.EMPTY_BYTE_BUFFER).remaining(); size += DBConstants.boolSize; if (response.isDigestQuery()) size += response.digest().remaining(); else size += Row.serializer().serializedSize(response.row(), version); return size; }adds the digest size 2 timesthis triggers assertion error in at least ReadVerbHandler</description>
      <version>0.8.8,1.0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-10-22 01:00:00" id="3396" opendate="2011-10-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[patch] push down assignments to scopes where they are needed</summary>
      <description>Code makes assignments at a scope where that assignment may not be needed, patch pushes these assignments down to where conditionals has prescribed that the assignment will be used.</description>
      <version>1.0.1</version>
      <fixedVersion>Legacy/DocumentationandWebsite</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.SSTableImport.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.SSTableExport.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.gms.Gossiper.java</file>
      <file type="M">src.java.org.apache.cassandra.gms.GossipDigestAck2VerbHandler.java</file>
      <file type="M">src.java.org.apache.cassandra.cql.QueryProcessor.java</file>
    </fixedFiles>
  </bug>
  
  
</bugrepository>