<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  
  
  
  
  
  
  
  <bug fixdate="2013-6-29 01:00:00" id="5524" opendate="2013-4-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow upgradesstables to be run against a specified directory</summary>
      <description>Currently, upgradesstables only modifies live SSTables. Because sstableloader cannot stream old SSTable formats, this makes it difficult to restore data from a snapshot taken in a previous major version of Cassandra.Allowing the user to specify a directory for upgradesstables would resolve this, but it may also be nice to upgrade SSTables in snapshot directories automatically or with a separate flag.</description>
      <version>1.2.6</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">NEWS.txt</file>
      <file type="M">debian.cassandra.install</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-5-6 01:00:00" id="5539" opendate="2013-5-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add custom prompt for cqlsh</summary>
      <description>Here is the pull request for the patch https://github.com/apache/cassandra/pull/16</description>
      <version>1.2.6</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2013-5-22 01:00:00" id="5588" opendate="2013-5-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add get commands to nodetool for things with set</summary>
      <description>Can we add:nodetool getcompactionthroughputnodetool getstreamthroughputTo go with the set commands? You currently have to fire up a JMX client to know what the current values are.</description>
      <version>1.2.6</version>
      <fixedVersion>Tool/nodetool</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.resources.org.apache.cassandra.tools.NodeToolHelp.yaml</file>
      <file type="M">src.java.org.apache.cassandra.tools.NodeProbe.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.NodeCmd.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-5-29 01:00:00" id="5597" opendate="2013-5-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow switching to vertical output for SELECTs in cqlsh</summary>
      <description>I sometimes find it quite useful to present SELECT's output in cqlsh vertically (equivalent of PostgreSQL's \x or --expand), so I wrote a patch that adds an "EXPAND" command to cqlsh which allows user to switch between vertical and horizontal output.</description>
      <version>1.2.6</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.test.test.cqlsh.completion.py</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-6-3 01:00:00" id="5610" opendate="2013-6-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>ORDER BY desc breaks cqlsh COPY</summary>
      <description>If you have a reversed text field, COPY chokes on it because the type is"'org.apache.cassandra.db.marshal.ReversedType'&lt;text&gt;" not just 'text' so the strings don't get quoted in the generated CQL. def do_import_row(self, columns, nullval, layout, row): rowmap = {} for name, value in zip(columns, row): if value != nullval: type = layout.get_column(name).cqltype.cql_parameterized_type() if type in ('ascii', 'text', 'timestamp', 'inet'): rowmap[name] = self.cql_protect_value(value) else: rowmap[name] = value else: rowmap[name] = 'null' return self.do_import_insert(layout, rowmap)</description>
      <version>1.2.6</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-6-5 01:00:00" id="5615" opendate="2013-6-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow Custom Indexes to Index Collections</summary>
      <description>Creating a custom index type that will index collections. Attaching a patch that bypasses an internal validation check preventing this type of index for custom indexes.</description>
      <version>1.2.6</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.CreateIndexStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2013-6-13 01:00:00" id="5634" opendate="2013-6-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>relocatingTokens should be ConcurrentMap</summary>
      <description/>
      <version>1.2.6</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.locator.TokenMetadata.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-6-16 01:00:00" id="5647" opendate="2013-6-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Typo in error message in cqlsh (CQL3) when using more than one relation with a IN</summary>
      <description>When performing a query such asselect * from foo where bucket in (1) and id in ('O1', 'O2') and bucket in (2) and id in ('O3', 'O4') ;the error message in cqlsh is:Bad Request: bucket cannot be restricted by more than one reation if it includes a INExpected:Bad Request: bucket cannot be restricted by more than one relation if it includes a IN</description>
      <version>1.2.6</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.SelectStatement.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-6-20 01:00:00" id="5681" opendate="2013-6-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor IESCS in Snitches</summary>
      <description>Reduce/refactor duplicated IESCS implementations in Ec2MRS, GPFS, and YPNTS.</description>
      <version>1.2.6,2.0beta1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.locator.YamlFileNetworkTopologySnitchTest.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.YamlFileNetworkTopologySnitch.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.GossipingPropertyFileSnitch.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.Ec2MultiRegionSnitch.java</file>
    </fixedFiles>
  </bug>
  
</bugrepository>