<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  <bug fixdate="2012-5-6 01:00:00" id="3865" opendate="2012-2-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cassandra-cli returns &amp;#39;command not found&amp;#39; instead of syntax error</summary>
      <description>When creating a column family from the output of 'show schema' with an index, there is a trailing comma after "index_type: 0," The return from this is a 'command not found' This is misleading because the command is found, there is just a syntax error.'Command not found: `create column family $cfname ...`</description>
      <version>1.1.2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">src.java.org.apache.cassandra.cli.Cli.g</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-6-7 01:00:00" id="4012" opendate="2012-3-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Load-from-flat-file data import tool</summary>
      <description>Would like to be able to import data from a comma-delimited or tab-delimited file, one "row" per line. (That is, "row" can be "logical row" as in http://www.datastax.com/dev/blog/schema-in-cassandra-1-1.)</description>
      <version>1.1.2</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.cqlhandling.py</file>
      <file type="M">pylib.cqlshlib.cql3handling.py</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-6-13 01:00:00" id="4041" opendate="2012-3-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow updating column_alias types</summary>
      <description>CASSANDRA-3657 has added the ability to change comparators (including parts of a compositeType) when compatible. The code of CQL3 forbids it currently however so we should lift that limitation.</description>
      <version>1.1.2</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.AlterTableStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-6-2 01:00:00" id="4108" opendate="2012-4-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add an option to cqlsh to authenticate to a keyspace by default</summary>
      <description>As the cassandra-cli does, it would be nice to have an option for cqlsh to authenticate to a keyspace on startup. That way you can write aliases for logging in or put it in the .cqlshrc file so you never have to do the 'use blah;' command redundantly every time.</description>
      <version>1.1.2</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-6-26 01:00:00" id="4193" opendate="2012-4-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cql delete does not delete</summary>
      <description>tested in 1.1 and trunk branch on a single node:cqlsh:test&gt; create table testcf_old ( username varchar , id int , name varchar , stuff varchar, primary key(username,id,name)) with compact storage;cqlsh:test&gt; insert into testcf_old ( username , id , name , stuff ) values ('abc', 2, 'rst', 'some other bunch of craps');cqlsh:test&gt; select * from testcf_old; username | id | name | stuff---------------+-------------------------- abc | 2 | rst | some other bunch of craps abc | 4 | xyz | a bunch of crapscqlsh:test&gt; delete from testcf_old where username = 'abc' and id =2;cqlsh:test&gt; select * from testcf_old; username | id | name | stuff---------------+-------------------------- abc | 2 | rst | some other bunch of craps abc | 4 | xyz | a bunch of crapssame also when not using compact:cqlsh:test&gt; create table testcf ( username varchar , id int , name varchar , stuff varchar, primary key(username,id));cqlsh:test&gt; select * from testcf; username | id | name | stuff------------------------------------+----------------- abc | 2 | some other bunch of craps | rst abc | 4 | xyz | a bunch of crapscqlsh:test&gt; delete from testcf where username = 'abc' and id =2;cqlsh:test&gt; select * from testcf; username | id | name | stuff------------------------------------+----------------- abc | 2 | some other bunch of craps | rst abc | 4 | xyz | a bunch of craps</description>
      <version>1.1.2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.DeleteStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2012-11-23 01:00:00" id="4275" opendate="2012-5-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Oracle Java 1.7 u4 does not allow Xss128k</summary>
      <description>Problem: This happens when you try to start it with default Xss setting of 128k=======The stack size specified is too small, Specify at least 160kError: Could not create the Java Virtual Machine.Error: A fatal exception has occurred. Program will exit.Solution=======Set -Xss to 256kProblem: This happens when you try to start it with Xss = 160k========ERROR &amp;#91;Thrift:14&amp;#93; 2012-05-22 14:42:40,479 AbstractCassandraDaemon.java (line 139) Fatal exception in thread Thread&amp;#91;Thrift:14,5,main&amp;#93;java.lang.StackOverflowErrorSolution=======Set -Xss to 256k</description>
      <version>1.1.2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.cassandra-env.sh</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-6-5 01:00:00" id="4306" opendate="2012-6-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>enforce 1m min keycache for auto</summary>
      <description>when specifying 'auto' for key cache size make the minimum 1m.primarily so that KeyCacheTest passes</description>
      <version>1.1.2</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.config.DatabaseDescriptor.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2012-6-11 01:00:00" id="4328" opendate="2012-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQL client timeout when inserting data after creating index</summary>
      <description>After creating index on table inserts fails.steps (from cqlsh -3)create table myapp (pidh text, cn text, tn text, s text, m text, ts bigint, PRIMARY KEY (pidh, ts));INSERT INTO myapp(pidh, cn, tn, s, m, ts) VALUES ('4274@localhost','Test.tests','main','text','bzzzzz',2231897614162493);create index idx_cn on myapp(cn);Next insert from cql client time outs without showing error.Each insert in systemlog gives ERROR &amp;#91;MutationStage:xx&amp;#93; ....from log file: INFO &amp;#91;MigrationStage:1&amp;#93; 2012-06-11 12:28:35,715 ColumnFamilyStore.java (line 633) Enqueuing flush of Memtable-schema_columnfamilies@1502301540(1259/1573 serialized/live bytes, 20 ops) INFO &amp;#91;FlushWriter:4&amp;#93; 2012-06-11 12:28:35,716 Memtable.java (line 266) Writing Memtable-schema_columnfamilies@1502301540(1259/1573 serialized/live bytes, 20 ops) INFO &amp;#91;FlushWriter:4&amp;#93; 2012-06-11 12:28:35,868 Memtable.java (line 307) Completed flushing /var/lib/cassandra/data/system/schema_columnfamilies/system-schema_columnfamilies-hd-143-Data.db (1312 bytes) for commitlog position ReplayPosition(segmentId=2232837134267994, position=8651) INFO &amp;#91;MigrationStage:1&amp;#93; 2012-06-11 12:28:35,869 ColumnFamilyStore.java (line 633) Enqueuing flush of Memtable-schema_columns@1756291746(280/350 serialized/live bytes, 5 ops) INFO &amp;#91;CompactionExecutor:26&amp;#93; 2012-06-11 12:28:35,869 CompactionTask.java (line 109) Compacting &amp;#91;SSTableReader(path=&amp;#39;/var/lib/cassandra/data/system/schema_columnfamilies/system-schema_columnfamilies-hd-141-Data.db&amp;#39;), SSTableReader(path=&amp;#39;/var/lib/cassandra/data/system/schema_columnfamilies/system-schema_columnfamilies-hd-142-Data.db&amp;#39;), SSTableReader(path=&amp;#39;/var/lib/cassandra/data/system/schema_columnfamilies/system-schema_columnfamilies-hd-140-Data.db&amp;#39;), SSTableReader(path=&amp;#39;/var/lib/cassandra/data/system/schema_columnfamilies/system-schema_columnfamilies-hd-143-Data.db&amp;#39;)&amp;#93; INFO &amp;#91;FlushWriter:4&amp;#93; 2012-06-11 12:28:35,869 Memtable.java (line 266) Writing Memtable-schema_columns@1756291746(280/350 serialized/live bytes, 5 ops) INFO &amp;#91;FlushWriter:4&amp;#93; 2012-06-11 12:28:36,104 Memtable.java (line 307) Completed flushing /var/lib/cassandra/data/system/schema_columns/system-schema_columns-hd-65-Data.db (325 bytes) for commitlog position ReplayPosition(segmentId=2232837134267994, position=8651) INFO &amp;#91;CompactionExecutor:26&amp;#93; 2012-06-11 12:28:36,130 CompactionTask.java (line 221) Compacted to &amp;#91;/var/lib/cassandra/data/system/schema_columnfamilies/system-schema_columnfamilies-hd-144-Data.db,&amp;#93;. 42,461 to 38,525 (~90% of original) bytes for 3 keys at 0.140767MB/s. Time: 261ms. INFO &amp;#91;MigrationStage:1&amp;#93; 2012-06-11 12:28:36,140 SecondaryIndexManager.java (line 208) Creating new index : ColumnDefinition{name=636e, validator=org.apache.cassandra.db.marshal.UTF8Type, index_type=KEYS, index_name='idx_cn', component_index=1} INFO &amp;#91;Creating index: myapp.idx_cn&amp;#93; 2012-06-11 12:28:36,141 ColumnFamilyStore.java (line 633) Enqueuing flush of Memtable-myapp@207814912(171/213 serialized/live bytes, 4 ops) INFO &amp;#91;FlushWriter:4&amp;#93; 2012-06-11 12:28:36,141 Memtable.java (line 266) Writing Memtable-myapp@207814912(171/213 serialized/live bytes, 4 ops) INFO &amp;#91;FlushWriter:4&amp;#93; 2012-06-11 12:28:36,255 Memtable.java (line 307) Completed flushing /var/lib/cassandra/data/Logging/myapp/Logging-myapp-hd-2-Data.db (170 bytes) for commitlog position ReplayPosition(segmentId=2232837134267994, position=8651) INFO &amp;#91;Creating index: myapp.idx_cn&amp;#93; 2012-06-11 12:28:36,256 SecondaryIndex.java (line 159) Submitting index build of myapp.idx_cn for data in SSTableReader(path='/var/lib/cassandra/data/Logging/myapp/Logging-myapp-hd-1-Data.db'), SSTableReader(path='/var/lib/cassandra/data/Logging/myapp/Logging-myapp-hd-2-Data.db') INFO &amp;#91;Creating index: myapp.idx_cn&amp;#93; 2012-06-11 12:28:36,258 ColumnFamilyStore.java (line 633) Enqueuing flush of Memtable-IndexInfo@409882274(39/48 serialized/live bytes, 1 ops) INFO &amp;#91;FlushWriter:4&amp;#93; 2012-06-11 12:28:36,258 Memtable.java (line 266) Writing Memtable-IndexInfo@409882274(39/48 serialized/live bytes, 1 ops) INFO &amp;#91;FlushWriter:4&amp;#93; 2012-06-11 12:28:36,390 Memtable.java (line 307) Completed flushing /var/lib/cassandra/data/system/IndexInfo/system-IndexInfo-hd-14-Data.db (84 bytes) for commitlog position ReplayPosition(segmentId=2232837134267994, position=8744) INFO &amp;#91;Creating index: myapp.idx_cn&amp;#93; 2012-06-11 12:28:36,390 SecondaryIndex.java (line 200) Index build of myapp.idx_cn completeERROR &amp;#91;MutationStage:37&amp;#93; 2012-06-11 12:28:39,657 AbstractCassandraDaemon.java (line 134) Exception in thread Thread&amp;#91;MutationStage:37,5,main&amp;#93;java.lang.RuntimeException: java.lang.IllegalArgumentException at org.apache.cassandra.service.StorageProxy$DroppableRunnable.run(StorageProxy.java:1254) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603) at java.lang.Thread.run(Thread.java:722)Caused by: java.lang.IllegalArgumentException at java.nio.Buffer.limit(Buffer.java:267) at org.apache.cassandra.db.marshal.AbstractCompositeType.getBytes(AbstractCompositeType.java:51) at org.apache.cassandra.db.marshal.AbstractCompositeType.getWithShortLength(AbstractCompositeType.java:60) at org.apache.cassandra.db.marshal.AbstractCompositeType.compare(AbstractCompositeType.java:76) at org.apache.cassandra.db.marshal.AbstractCompositeType.compare(AbstractCompositeType.java:31) at java.util.TreeMap.getEntryUsingComparator(TreeMap.java:369) at java.util.TreeMap.getEntry(TreeMap.java:340) at java.util.TreeMap.containsKey(TreeMap.java:227) at java.util.TreeMap$KeySet.contains(TreeMap.java:1045) at org.apache.cassandra.db.Table.apply(Table.java:415) at org.apache.cassandra.db.Table.apply(Table.java:380) at org.apache.cassandra.db.RowMutation.apply(RowMutation.java:294) at org.apache.cassandra.service.StorageProxy$6.runMayThrow(StorageProxy.java:453) at org.apache.cassandra.service.StorageProxy$DroppableRunnable.run(StorageProxy.java:1250) ... 3 moreERROR &amp;#91;MutationStage:39&amp;#93; 2012-06-11 12:29:39,876 AbstractCassandraDaemon.java (line 134) Exception in thread Thread&amp;#91;MutationStage:39,5,main&amp;#93;java.lang.RuntimeException: java.lang.IllegalArgumentException at org.apache.cassandra.service.StorageProxy$DroppableRunnable.run(StorageProxy.java:1254) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603) at java.lang.Thread.run(Thread.java:722)Caused by: java.lang.IllegalArgumentException at java.nio.Buffer.limit(Buffer.java:267) at org.apache.cassandra.db.marshal.AbstractCompositeType.getBytes(AbstractCompositeType.java:51) at org.apache.cassandra.db.marshal.AbstractCompositeType.getWithShortLength(AbstractCompositeType.java:60) at org.apache.cassandra.db.marshal.AbstractCompositeType.compare(AbstractCompositeType.java:76) at org.apache.cassandra.db.marshal.AbstractCompositeType.compare(AbstractCompositeType.java:31) at java.util.TreeMap.getEntryUsingComparator(TreeMap.java:369) at java.util.TreeMap.getEntry(TreeMap.java:340) at java.util.TreeMap.containsKey(TreeMap.java:227) at java.util.TreeMap$KeySet.contains(TreeMap.java:1045) at org.apache.cassandra.db.Table.apply(Table.java:415) at org.apache.cassandra.db.Table.apply(Table.java:380) at org.apache.cassandra.db.RowMutation.apply(RowMutation.java:294) at org.apache.cassandra.service.StorageProxy$6.runMayThrow(StorageProxy.java:453) at org.apache.cassandra.service.StorageProxy$DroppableRunnable.run(StorageProxy.java:1250) ... 3 more</description>
      <version>1.1.2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.CreateIndexStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2012-6-14 01:00:00" id="4343" opendate="2012-6-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>fix sstable blacklisting for LCS</summary>
      <description/>
      <version>1.1.2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.compaction.LeveledManifest.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-6-16 01:00:00" id="4349" opendate="2012-6-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>PFS should give a friendlier error message when a node has not been configured</summary>
      <description>see CASSANDRA-4345</description>
      <version>1.1.2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.locator.PropertyFileSnitch.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.AbstractNetworkTopologySnitch.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2012-6-26 01:00:00" id="4379" opendate="2012-6-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cleanup optimization can delete data but not corresponding index entries</summary>
      <description>introduced by CASSANDRA-4079</description>
      <version>1.1.2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.compaction.CompactionManager.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
</bugrepository>