<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  <bug fixdate="2015-8-6 01:00:00" id="10004" opendate="2015-8-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow changing default encoding on cqlsh</summary>
      <description>Currently the encoding option is not exposed as a command line parameter, so users cannot specify a different encoding other than the System's default.</description>
      <version>2.1.9,2.2.1,3.0beta1</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-8-7 01:00:00" id="10015" opendate="2015-8-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create tool to debug why expired sstables are not getting dropped</summary>
      <description>Sometimes fully expired sstables are not getting dropped, and it is a real pain to manually find out why.A tool that outputs which sstable blocks (by having older data than the newest tombstone in an expired sstable) expired ones would save a lot of time.</description>
      <version>2.0.17,2.1.9,2.2.1,3.0beta1</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.db.compaction.TTLExpiryTest.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2014-8-2 01:00:00" id="7342" opendate="2014-6-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CAS writes do not have hint functionality.</summary>
      <description>When a dead node comes up, it gets the last commit but not anything which it has missed. This reduces the durability of those writes compared to other writes.</description>
      <version>2.1.9,2.2.1,3.0beta1</version>
      <fixedVersion>Feature/LightweightTransactions</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.StorageProxy.java</file>
      <file type="M">src.java.org.apache.cassandra.net.WriteCallbackInfo.java</file>
      <file type="M">src.java.org.apache.cassandra.net.MessagingService.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2015-7-3 01:00:00" id="9544" opendate="2015-6-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow specification of TLS protocol to use for cqlsh</summary>
      <description>Currently when using cqlsh with --ssl it tries to use TLS 1.0 to connect. I have my server only serving TLS 1.2 which means that I cannot connect.It would be nice if cqlsh allowed the TLS protocol it uses to connect to be configured.</description>
      <version>2.1.9,2.2.0</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.sslhandling.py</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-7-16 01:00:00" id="9601" opendate="2015-6-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow an initial connection timeout to be set in cqlsh</summary>
      <description>PYTHON-206 introduced the ability to change the initial connection timeout on connections from the default of 5s.This change was introduced because some auth providers (kerberos) can take longer than 5s to complete a first time negotiation for a connection. cqlsh should allow this setting to be changed.</description>
      <version>2.1.9,2.2.0rc2</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-7-29 01:00:00" id="9682" opendate="2015-6-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>setting log4j.logger.org.apache.cassandra=DEBUG causes keyspace username/password to show up in system.log</summary>
      <description>if using a third party log aggregator (which many cloud users use), this causes db credentials to be reproduced offsite, which has potential to be security issue. I would prefer the ability to disable the logging of this information while still setting log4j.logger.org.apache.cassandra=DEBUGexample system.log entry:DEBUG [Native-Transport-Requests:373] 2015-06-21 07:52:44,595 Message.java (line 326) Responding: AUTHENTICATE org.apache.cassandra.auth.PasswordAuthenticator, v=1DEBUG [Native-Transport-Requests:384] 2015-06-21 07:52:44,597 Message.java (line 319) Received: CREDENTIALS {username=redacted, password=redacted}, v=1</description>
      <version>2.0.17,2.1.9,2.2.0,3.0alpha1</version>
      <fixedVersion>Legacy/Observability</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.transport.messages.CredentialsMessage.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-7-13 01:00:00" id="9793" opendate="2015-7-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log when messages are dropped due to cross_node_timeout</summary>
      <description>When a node has clock skew and cross node timeouts are enabled, there's no indication that the messages were dropped due to the cross timeout, just that messages were dropped. This can errantly lead you down a path of troubleshooting a load shedding situation when really you just have clock drift on one node. This is also not simple to troubleshoot, since you have to determine that this node will answer requests, but other nodes won't answer requests from it. If the problem goes away on a reboot (and the machine does one-shot time sync, not continuous) it becomes even harder to detect because you're left with a weird piece of evidence such as "it's fine after a reboot, but comes back in about X days every time."It would help tremendously if there were a log message indicating how many messages (don't need them broken down by type) were eagerly dropped due to the cross node timeout.</description>
      <version>2.0.17,2.1.9,2.2.1</version>
      <fixedVersion>Legacy/StreamingandMessaging</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.net.MessageDeliveryTask.java</file>
      <file type="M">src.java.org.apache.cassandra.net.IncomingTcpConnection.java</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">src.java.org.apache.cassandra.net.MessagingService.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-7-20 01:00:00" id="9849" opendate="2015-7-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Paging changes to 2.1/2.2 for backward compatibilty with 3.0</summary>
      <description>Quoting thobbs from CASSANDRA-9704:I forgot to attach a patch for the required 2.1/2.2 changes as well. Basically, when paging in 2.x, our check to see if a new page contains the same row that the previous page ended on looks for an exact cell name match. This is fine in 2.x because we will return partial rows at the end of the page (just the row marker cell). However, in 3.0, we always return full rows. While we could make some very hacky changes to 3.0 to enable returning a partial row at the end of the page, this seems like the cleanest solution.Tyler's patch is there</description>
      <version>2.1.9,2.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.pager.SliceQueryPager.java</file>
      <file type="M">src.java.org.apache.cassandra.service.pager.RangeSliceQueryPager.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-8-24 01:00:00" id="9898" opendate="2015-7-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>cqlsh crashes if it load a utf-8 file.</summary>
      <description>cqlsh crashes when it load a cql script file encoded in utf-8.This is a reproduction procedure.$cat ./test.cql// 日本語のコメントuse system;select * from system.peers;$cqlsh --versioncqlsh 5.0.1$cqlsh -f ./test.cqlTraceback (most recent call last): File "./cqlsh", line 2459, in &lt;module&gt; main(*read_options(sys.argv[1:], os.environ)) File "./cqlsh", line 2451, in main shell.cmdloop() File "./cqlsh", line 940, in cmdloop line = self.get_input_line(self.prompt) File "./cqlsh", line 909, in get_input_line self.lastcmd = self.stdin.readline() File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/codecs.py", line 675, in readline return self.reader.readline(size) File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/codecs.py", line 530, in readline data = self.read(readsize, firstline=True) File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/codecs.py", line 477, in read newchars, decodedbytes = self.decode(data, self.errors)UnicodeDecodeError: 'ascii' codec can't decode byte 0xe6 in position 3: ordinal not in range(128)</description>
      <version>2.1.9,2.2.1,3.0beta2</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.util.py</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-8-3 01:00:00" id="9963" opendate="2015-8-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Compaction not starting for new tables</summary>
      <description>Something committed since 2.1.8 broke cassandra-2.1 HEADcreate keyspace test with replication = {'class': 'SimpleStrategy', 'replication_factor': 1};create table test.stcs ( a int PRIMARY KEY , b int);repeat more than 4 times:insert into test.stcs (a, b) VALUES ( 1, 1);nodetool flush test stcsls &lt;data dir&gt;/test/stcs-*See a bunch of sstables where STCS should have kicked in and compacted them down some.</description>
      <version>2.1.9,2.2.1,3.0beta1</version>
      <fixedVersion>Local/Compaction</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.compaction.WrappingCompactionStrategy.java</file>
    </fixedFiles>
  </bug>
  
</bugrepository>