<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CASSANDRA">
  
  <bug fixdate="2016-12-6 01:00:00" id="13006" opendate="2016-12-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Disable automatic heap dumps on OOM error</summary>
      <description>With CASSANDRA-9861, a change was added to enable collecting heap dumps by default if the process encountered an OOM error. These heap dumps are stored in the Apache Cassandra home directory unless configured otherwise (see Cassandra Support Document for this feature). The creation and storage of heap dumps aides debugging and investigative workflows, but is not be desirable for a production environment where these heap dumps may occupy a large amount of disk space and require manual intervention for cleanups.  Managing heap dumps on out of memory errors and configuring the paths for these heap dumps are available as JVM options in JVM. The current behavior conflicts with the Boolean JVM flag HeapDumpOnOutOfMemoryError.  A patch can be proposed here that would make the heap dump on OOM error honor the HeapDumpOnOutOfMemoryError flag. Users who would want to still generate heap dumps on OOM errors can set the -XX:+HeapDumpOnOutOfMemoryError JVM option.</description>
      <version>2.2.12,3.0.16,3.11.2,4.0-alpha1,4.0</version>
      <fixedVersion>Local/Config</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.utils.JVMStabilityInspectorTest.java</file>
      <file type="M">src.java.org.apache.cassandra.utils.JVMStabilityInspector.java</file>
      <file type="M">src.java.org.apache.cassandra.utils.HeapUtils.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StartupChecks.java</file>
      <file type="M">NEWS.txt</file>
      <file type="M">conf.cassandra-env.sh</file>
      <file type="M">conf.cassandra-env.ps1</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cassandra</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2017-12-28 01:00:00" id="13916" opendate="2017-9-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove OpenJDK log warning</summary>
      <description>The following warning message will appear in the logs when using OpenJDKWARN [main] ... OpenJDK is not recommended. Please upgrade to the newest Oracle Java releaseThe above warning dates back to when OpenJDK 6 was released and there were some issues in early releases of this version. The OpenJDK implementation is used as a reference for the OracleJDK which means the implementations are very close. In addition, most users have moved off Java 6 so we can probably remove this warning message.</description>
      <version>3.11.2,4.0-alpha1,4.0</version>
      <fixedVersion>Legacy/Core</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.StartupChecks.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  
  <bug fixdate="2017-1-15 01:00:00" id="14021" opendate="2017-11-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>test_pycodestyle_compliance - cqlsh_tests.cqlsh_tests.TestCqlsh code style errors</summary>
      <description>Once we commit CASSANDRA-14020, we'll need to cleanup all of the errors that pycodestyle has found to get the test passing</description>
      <version>2.1.20,2.2.12,3.0.16,3.11.2,4.0-alpha1,4.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.wcwidth.py</file>
      <file type="M">pylib.cqlshlib.pylexotron.py</file>
      <file type="M">pylib.cqlshlib.formatting.py</file>
      <file type="M">pylib.cqlshlib.displaying.py</file>
      <file type="M">pylib.cqlshlib.cql3handling.py</file>
      <file type="M">pylib.cqlshlib.copyutil.py</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2017-12-1 01:00:00" id="14091" opendate="2017-12-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>DynamicSnitch creates a lot of garbage</summary>
      <description>The ExponentiallyDecayingReservoir snapshots we take during score updates generate a lot of garbage, and we call getSnapshot twice per endpoint when we only need to call it once.</description>
      <version>3.0.16,3.11.2,4.0-alpha1,4.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.locator.DynamicEndpointSnitch.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2017-12-13 01:00:00" id="14112" opendate="2017-12-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The inspectJvmOptions startup check can trigger some Exception on some JRE versions</summary>
      <description>adelapena pointed out that the Startup check added by CASSANDRA-13006 can cause some Exception if Cassandra is run on a non GA version.After investigation it seems that it can also be the case for major versions or some JRE 9 versions.</description>
      <version>2.2.12,3.0.16,3.11.2,4.0-alpha1,4.0</version>
      <fixedVersion>Legacy/Core</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.StartupChecks.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-12-21 01:00:00" id="14133" opendate="2017-12-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log file names of files streamed in to a node</summary>
      <description>We should log the file names of sstables streamed in to a node</description>
      <version>3.0.16,3.11.2,4.0-alpha1,4.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.streaming.StreamReceiveTask.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-1-27 01:00:00" id="14140" opendate="2017-12-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add unittest for Schema migration change (CASSANDRA-14109)</summary>
      <description>It's a fairly big change, would be better to have a few unittest.</description>
      <version>3.11.2</version>
      <fixedVersion>Legacy/Testing</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.schema.SchemaKeyspaceTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.gms.GossiperTest.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.schema.SchemaKeyspace.java</file>
      <file type="M">src.java.org.apache.cassandra.gms.VersionedValue.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-1-28 01:00:00" id="14141" opendate="2017-12-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enable CDC unittest</summary>
      <description>Follow up for CASSANDRA-140662 CDC unittests are skipped in the normal test run, it has to be $ ant test-cdc to run the cdc test.The fix enables them in normal $ ant test</description>
      <version>3.11.2,4.0-alpha1,4.0</version>
      <fixedVersion>Legacy/Testing</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.db.commitlog.CommitLogSegmentManagerCDCTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.cql3.CDCStatementTest.java</file>
      <file type="M">src.java.org.apache.cassandra.config.DatabaseDescriptor.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2014-2-20 01:00:00" id="8527" opendate="2014-12-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Account for range tombstones wherever we account for tombstones</summary>
      <description>As discussed in CASSANDRA-8477, we should make sure the tombstone thresholds also apply to range tombstones, since they poses the same problems than cell tombstones.</description>
      <version>3.11.2,4.0-alpha1,4.0</version>
      <fixedVersion>Legacy/Observability</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.db.ReadCommandTest.java</file>
      <file type="M">src.java.org.apache.cassandra.metrics.TableMetrics.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ReadCommand.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
</bugrepository>