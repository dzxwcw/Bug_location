<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CASSANDRA">
  <bug id="3977" opendate="2012-2-29 00:00:00" fixdate="2012-11-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[patch] choose a constant for &amp;#39;no compression ration&amp;#39; that is outside the valid range of compression ratios</summary>
      <description>code used Double.MIN_VALUE to represent a 'no compression ratio' constant. Since Double.MIN_Value is a valid compression ratio (albeit unlikely) switch the constant to -1 which is out of range.</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.metrics.ColumnFamilyMetrics.java</file>
      <file type="M">src.java.org.apache.cassandra.io.sstable.SSTableMetadata.java</file>
    </fixedFiles>
  </bug>
  <bug id="4750" opendate="2012-10-2 00:00:00" fixdate="2012-1-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add jmx/nodetool methods to enable/disable hinted handoff</summary>
      <description>Title says it all.</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.resources.org.apache.cassandra.tools.NodeToolHelp.yaml</file>
      <file type="M">src.java.org.apache.cassandra.tools.NodeProbe.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.NodeCmd.java</file>
      <file type="M">src.java.org.apache.cassandra.db.HintedHandOffManagerMBean.java</file>
      <file type="M">src.java.org.apache.cassandra.db.HintedHandOffManager.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="4767" opendate="2012-10-4 00:00:00" fixdate="2012-1-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Need some indication of node repair success or failure</summary>
      <description>We are currently verifying node repair status via basic log analysis. In order to automatically track the status of periodic node repair jobs, it would be better to have an indicator (through JMX perhaps).</description>
      <version>1.1.9,1.2.1</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.NodeProbe.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.NodeCmd.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageServiceMBean.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.service.AntiEntropyService.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="4795" opendate="2012-10-11 00:00:00" fixdate="2012-3-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>replication, compaction, compression? options are not validated</summary>
      <description>When creating a keyspace and specifying strategy options, you can pass any k/v pair you like.</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.locator.ReplicationStrategyEndpointCacheTest.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.SimpleStrategy.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.OldNetworkTopologyStrategy.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.NetworkTopologyStrategy.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.LocalStrategy.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.AbstractReplicationStrategy.java</file>
      <file type="M">src.java.org.apache.cassandra.db.Table.java</file>
      <file type="M">src.java.org.apache.cassandra.db.DefsTable.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.CreateKeyspaceStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.AlterKeyspaceStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.config.KSMetaData.java</file>
      <file type="M">src.java.org.apache.cassandra.thrift.CassandraServer.java</file>
      <file type="M">src.java.org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.java</file>
      <file type="M">src.java.org.apache.cassandra.db.compaction.LeveledCompactionStrategy.java</file>
      <file type="M">src.java.org.apache.cassandra.db.compaction.AbstractCompactionStrategy.java</file>
      <file type="M">src.java.org.apache.cassandra.cql.CreateColumnFamilyStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.cql.CFPropDefs.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.CFPropDefs.java</file>
      <file type="M">src.java.org.apache.cassandra.config.CFMetaData.java</file>
      <file type="M">NEWS.txt</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="4894" opendate="2012-11-1 00:00:00" fixdate="2012-1-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>log number of combined/merged rows during a compaction</summary>
      <description>we already log some details about compactions but it would be useful to know how many rows were merged (resulting in "useful" work) and how many were unique (representing "wasted work").the simple approach requires two additional counters (one for unique rows, one for merged rows). As the merge join is progressing if two or more rows are combined, tick the joined counter. If a row is simply copied tick the unique counter.a more complete solution would be to keep a separate count for each number of merges. This would require number_of_files_being_merged counters. If no rows were merged, tick counters&amp;#91;0&amp;#93;, if two rows were merged tick counters&amp;#91;1&amp;#93; and so on</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.compaction.ParallelCompactionIterable.java</file>
      <file type="M">src.java.org.apache.cassandra.db.compaction.CompactionTask.java</file>
      <file type="M">src.java.org.apache.cassandra.db.compaction.CompactionIterable.java</file>
      <file type="M">src.java.org.apache.cassandra.db.compaction.AbstractCompactionIterable.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="4927" opendate="2012-11-7 00:00:00" fixdate="2012-1-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>E notation is not implemented for floating point numbers.</summary>
      <description>'E' notation is not implemented for floating point numbers.Inserting some float value like -2.6034345E+38 results in:Bad Request: line 1:123 mismatched input 'E' expecting ')'</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.Cql.g</file>
      <file type="M">doc.cql3.CQL.textile</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="4972" opendate="2012-11-19 00:00:00" fixdate="2012-1-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Move "add a default limit" logic to cqlsh</summary>
      <description></description>
      <version>1.2.1</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.cqlhandling.py</file>
      <file type="M">pylib.cqlshlib.cql3handling.py</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug id="5005" opendate="2012-11-30 00:00:00" fixdate="2012-12-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a latency histogram option to stress</summary>
      <description>Averages just aren't always enough and it should be easy to wire our existing histogram utils into stress.</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.StressAction.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.Session.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.Reader.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.RangeSlicer.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.MultiGetter.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.Inserter.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.IndexedRangeSlicer.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.CqlReader.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.CqlRangeSlicer.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.CqlInserter.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.CqlIndexedRangeSlicer.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.CqlCounterGetter.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.CqlCounterAdder.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.CounterGetter.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.CounterAdder.java</file>
    </fixedFiles>
  </bug>
  <bug id="5031" opendate="2012-12-5 00:00:00" fixdate="2012-1-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add ssl support to binary protocol</summary>
      <description>CASSANDRA-4239 added support in Thrift</description>
      <version>1.2.1</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.transport.SimpleClient.java</file>
      <file type="M">src.java.org.apache.cassandra.transport.Server.java</file>
      <file type="M">src.java.org.apache.cassandra.transport.Client.java</file>
      <file type="M">src.java.org.apache.cassandra.security.SSLFactory.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5044" opendate="2012-12-7 00:00:00" fixdate="2012-12-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow resizing of threadpools via JMX</summary>
      <description>Currently changing the size of threadpools is done using the config files. If resizing a threadpool, the node needs to be taken offline.Adding resizing via JMX allows online tweaking. TPEs allow for moving the number of threads up and down; moving down will take effect after a thread in the pool becomes idle.</description>
      <version>1.2.1</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.net.MatcherResponse.java</file>
      <file type="M">test.unit.org.apache.cassandra.cql3.ViewTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.cql3.ViewSchemaTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.cql3.ViewFilteringTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.cql3.ViewComplexTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.concurrent.SEPExecutorTest.java</file>
      <file type="M">test.long.org.apache.cassandra.cql3.ViewLongTest.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.Instance.java</file>
      <file type="M">src.java.org.apache.cassandra.transport.Message.java</file>
      <file type="M">src.java.org.apache.cassandra.tracing.TracingImpl.java</file>
      <file type="M">src.java.org.apache.cassandra.tracing.TraceStateImpl.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.NodeTool.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.NodeProbe.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageServiceMBean.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageProxy.java</file>
      <file type="M">src.java.org.apache.cassandra.service.reads.ShortReadPartitionsProtection.java</file>
      <file type="M">src.java.org.apache.cassandra.service.reads.repair.AbstractReadRepair.java</file>
      <file type="M">src.java.org.apache.cassandra.service.reads.AbstractReadExecutor.java</file>
      <file type="M">src.java.org.apache.cassandra.service.CacheService.java</file>
      <file type="M">src.java.org.apache.cassandra.schema.SchemaPushVerbHandler.java</file>
      <file type="M">src.java.org.apache.cassandra.schema.MigrationManager.java</file>
      <file type="M">src.java.org.apache.cassandra.repair.Validator.java</file>
      <file type="M">src.java.org.apache.cassandra.repair.RepairRunnable.java</file>
      <file type="M">src.java.org.apache.cassandra.net.RequestCallbacks.java</file>
      <file type="M">src.java.org.apache.cassandra.net.MessagingService.java</file>
      <file type="M">src.java.org.apache.cassandra.net.InboundMessageHandler.java</file>
      <file type="M">src.java.org.apache.cassandra.gms.Gossiper.java</file>
      <file type="M">src.java.org.apache.cassandra.db.SinglePartitionReadCommand.java</file>
      <file type="M">src.java.org.apache.cassandra.db.Keyspace.java</file>
      <file type="M">src.java.org.apache.cassandra.db.commitlog.CommitLogReplayer.java</file>
      <file type="M">src.java.org.apache.cassandra.config.DatabaseDescriptor.java</file>
      <file type="M">src.java.org.apache.cassandra.concurrent.Stage.java</file>
      <file type="M">src.java.org.apache.cassandra.concurrent.SharedExecutorPool.java</file>
      <file type="M">src.java.org.apache.cassandra.concurrent.SEPWorker.java</file>
      <file type="M">src.java.org.apache.cassandra.concurrent.SEPExecutor.java</file>
      <file type="M">src.java.org.apache.cassandra.concurrent.LocalAwareExecutorService.java</file>
      <file type="M">src.java.org.apache.cassandra.concurrent.JMXEnabledSingleThreadExecutor.java</file>
      <file type="M">src.java.org.apache.cassandra.concurrent.JMXConfigurableThreadPoolExecutorMBean.java</file>
      <file type="M">src.java.org.apache.cassandra.concurrent.JMXConfigurableThreadPoolExecutor.java</file>
      <file type="M">src.java.org.apache.cassandra.concurrent.ImmediateExecutor.java</file>
      <file type="M">src.java.org.apache.cassandra.db.compaction.CompactionManagerMBean.java</file>
      <file type="M">src.java.org.apache.cassandra.db.compaction.CompactionManager.java</file>
      <file type="M">src.java.org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutorMBean.java</file>
      <file type="M">src.java.org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5057" opendate="2012-12-11 00:00:00" fixdate="2012-12-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cache reads don&amp;#39;t need to be mutable if we&amp;#39;re using the off-heap (copying) cache</summary>
      <description></description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5090" opendate="2012-12-26 00:00:00" fixdate="2012-12-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Minimize byte array allocation by AbstractData{Input, Output}.</summary>
      <description>read/write methods for short, char and long could do without byte array allocation especially as we do custom buffering or mmap for readers and writers.</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.io.util.AbstractDataOutput.java</file>
      <file type="M">src.java.org.apache.cassandra.io.util.AbstractDataInput.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5097" opendate="2013-1-2 00:00:00" fixdate="2013-1-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>cassandra-shuffle fails as system keyspace is not user-modifiable</summary>
      <description>cassandra-shuffle tool fails to insert calculated relocations into the system keyspace as it is not user-modifiable. When run, the following exception is thrown after printing out the list of relocations for the first node in ring:Exception in thread "main" java.lang.RuntimeException: InvalidRequestException(why:system keyspace is not user-modifiable.) at org.apache.cassandra.tools.Shuffle.executeCqlQuery(Shuffle.java:516) at org.apache.cassandra.tools.Shuffle.shuffle(Shuffle.java:359) at org.apache.cassandra.tools.Shuffle.main(Shuffle.java:678)Caused by: InvalidRequestException(why:system keyspace is not user-modifiable.) at org.apache.cassandra.thrift.Cassandra$execute_cql3_query_result.read(Cassandra.java:37849) at org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:78) at org.apache.cassandra.thrift.Cassandra$Client.recv_execute_cql3_query(Cassandra.java:1562) at org.apache.cassandra.thrift.Cassandra$Client.execute_cql3_query(Cassandra.java:1547) at org.apache.cassandra.tools.CassandraClient.execute_cql_query(Shuffle.java:733) at org.apache.cassandra.tools.Shuffle.executeCqlQuery(Shuffle.java:502) ... 2 moreBy quickly checking the code it seems that the patch set for CASSANDRA-4874 disallows modifications to system keyspace again (they were previously allowed by CASSANDRA-4664) thus rendering cassandra-shuffle unable to do its job.</description>
      <version>1.2.1</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.ClientState.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5099" opendate="2013-1-2 00:00:00" fixdate="2013-1-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Since 1.1, get_count sometimes returns value smaller than actual column count</summary>
      <description>We have a CF where rows have thousands of TTLd columns. The columns are continually added at a regular rate, and TTL out after 15 minutes. We continually run a 'get_count' on these keys to get a count of the number of live columns.Since we upgrade from 1.0 to 1.1.7, "get_count" regularly returns much smaller values than are possible. For example, with roughly 15,000 columns that have well-distributed TTLs, running a get_count 10 times will result in 1 or 2 results that are up to half the actual column count. Using a normal 'get' to count those columns always results in proper values. For example:(all of these counts were ran within a second or less of eachother)[default@reddit] count AccountsActiveBySR['2qh0u'];13665 columns[default@reddit] count AccountsActiveBySR['2qh0u'];13665 columns[default@reddit] count AccountsActiveBySR['2qh0u'];13666 columns[default@reddit] count AccountsActiveBySR['2qh0u'];3069 columns[default@reddit] count AccountsActiveBySR['2qh0u'];13660 columns[default@reddit] count AccountsActiveBySR['2qh0u'];13661 columnsI should note that this issue happens much more frequently with larger (&gt;10k columns) rows than smaller rows. It never seems to happen with rows having fewer than 1k columns.There are no supercolumns in use. The key names and column names are very short, and there are no column values. The CF is LCS, and due to the TTL only hovers around a few MB in size. GC grace is normally at zero, but the problem is consistent with non-zero gc grace times.It appears that there was an issue (CASSANDRA-4833) fixed in 1.1.7 regarding get_count. Some logic was added to prevent an infinite loop case. Could that change have resulted in this problem somehow? I can't find any other relevant 1.1 changes that might explain this issue.</description>
      <version>1.1.9,1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.thrift.CassandraServer.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5101" opendate="2013-1-3 00:00:00" fixdate="2013-1-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>describe commands fail in cql3 when previously created with cql2</summary>
      <description>column families and keyspaces created with cassandra-cli/cql2 cannot be described with cql3describe table cfname fails with: "expected string or buffer"describe schema fails with "expected string or buffer" as well</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.cql3handling.py</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5102" opendate="2013-1-3 00:00:00" fixdate="2013-1-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>upgrading from 1.1.7 to 1.2.0 caused upgraded nodes to only know about other 1.2.0 nodes</summary>
      <description>I upgraded as I have since 0.86 and things didn't go very smoothly.I did a nodetool drain to my 1.1.7 node and changed my puppet config to use the new merged config. When it came back up (without any errors in the log) a nodetool ring only showed itself. I upgraded another node and sure enough now nodetool ring showed two nodes.I tried resetting the local schema. The upgraded node happily grabbed the schema again but still only 1.2 nodes were visible in the ring to any upgraded nodes.</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.gms.GossipDigestAck.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5106" opendate="2013-1-3 00:00:00" fixdate="2013-1-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Stock example for using pig throws InvalidRequestException(why:Start token sorts after end token)</summary>
      <description>The setup:This is from printenvHADOOP_HOME=/home/Downloads/hadoop-1.1.1PIG_HOME=/home/Downloads/pig-0.10.0PIG_INITIAL_ADDRESS=localhostPIG_RPC_PORT=9160PIG_PARTITIONER=org.apache.cassandra.dht.Murmur3PartitionerThis is from cassandra-cli&amp;#91;default@PigTest&amp;#93; describe cluster;Cluster Information: Snitch: org.apache.cassandra.locator.SimpleSnitch Partitioner: org.apache.cassandra.dht.Murmur3Partitioner Schema versions: b5fc9a82-fbdd-3cf5-af16-9c498c9f9a5c: &amp;#91;127.0.0.1&amp;#93;Running test_storage.pig asbin/pig_cassandra -x local test/test_storage.pigafter populating the cf ascassandra-cli --host localhost --port 9160 &lt; populate-cli.txtthrows 2013-01-03 02:20:47,626 &amp;#91;Thread-4&amp;#93; INFO org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader - Current split being processed ColumnFamilySplit((-1, '-1728690256123413808] @&amp;#91;localhost.localdomain&amp;#93;)2013-01-03 02:20:47,758 &amp;#91;Thread-4&amp;#93; WARN org.apache.hadoop.mapred.FileOutputCommitter - Output path is null in cleanup2013-01-03 02:20:47,760 &amp;#91;Thread-4&amp;#93; WARN org.apache.hadoop.mapred.LocalJobRunner - job_local_0001java.lang.RuntimeException: InvalidRequestException(why:Start token sorts after end token) at org.apache.cassandra.hadoop.ColumnFamilyRecordReader$StaticRowIterator.maybeInit(ColumnFamilyRecordReader.java:384) at org.apache.cassandra.hadoop.ColumnFamilyRecordReader$StaticRowIterator.computeNext(ColumnFamilyRecordReader.java:390) at org.apache.cassandra.hadoop.ColumnFamilyRecordReader$StaticRowIterator.computeNext(ColumnFamilyRecordReader.java:313) at com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:143) at com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:138) at org.apache.cassandra.hadoop.ColumnFamilyRecordReader.nextKeyValue(ColumnFamilyRecordReader.java:184) at org.apache.cassandra.hadoop.pig.CassandraStorage.getNext(CassandraStorage.java:226) at org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigRecordReader.nextKeyValue(PigRecordReader.java:194) at org.apache.hadoop.mapred.MapTask$NewTrackingRecordReader.nextKeyValue(MapTask.java:532) at org.apache.hadoop.mapreduce.MapContext.nextKeyValue(MapContext.java:67) at org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:143) at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:764) at org.apache.hadoop.mapred.MapTask.run(MapTask.java:370) at org.apache.hadoop.mapred.LocalJobRunner$Job.run(LocalJobRunner.java:212)Caused by: InvalidRequestException(why:Start token sorts after end token) at org.apache.cassandra.thrift.Cassandra$get_range_slices_result.read(Cassandra.java:12916) at org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:78) at org.apache.cassandra.thrift.Cassandra$Client.recv_get_range_slices(Cassandra.java:734) at org.apache.cassandra.thrift.Cassandra$Client.get_range_slices(Cassandra.java:718) at org.apache.cassandra.hadoop.ColumnFamilyRecordReader$StaticRowIterator.maybeInit(ColumnFamilyRecordReader.java:346) ... 13 more</description>
      <version>1.1.9,1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.thrift.ThriftValidation.java</file>
    </fixedFiles>
  </bug>
  <bug id="5109" opendate="2013-1-4 00:00:00" fixdate="2013-1-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>convert default marshallers list to map for better readability</summary>
      <description>Code uses index 0, 1, 2, 3 of a list to mean specific things.. difficult to read and is brittle, changed to a map.</description>
      <version>1.1.9,1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.hadoop.pig.CassandraStorage.java</file>
    </fixedFiles>
  </bug>
  <bug id="5117" opendate="2013-1-4 00:00:00" fixdate="2013-1-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQL 3 ALTER TABLE ... ADD causes OOB</summary>
      <description>To reproduce:./cqlshConnected to Test Cluster at localhost:9160.&amp;#91;cqlsh 2.3.0 | Cassandra 1.2.0-SNAPSHOT | CQL spec 3.0.0 | Thrift protocol 19.35.0&amp;#93;Use HELP for help.cqlsh&gt; create keyspace music with replication = {'CLASS' : ... 'SimpleStrategy', 'replication_factor' : 3};cqlsh&gt; use music ... ;cqlsh:music&gt; CREATE TABLE songs ( ... id uuid PRIMARY KEY, ... title text, ... album text, ... artist text, ... data blob ... );cqlsh:music&gt; insert into songs (id, title, artist, album) values ('a3e64f8f-bd44-4f28-b8d9-6938726e34d4', 'La Grange', 'ZZ Top', 'Tres Hombres');cqlsh:music&gt; insert into songs (id, title, artist, album) values ('8a172618-b121-4136-bb10-f665cfc469eb', 'Moving in Stereo', 'Fu Manchu', 'We Must Obey');cqlsh:music&gt; insert into songs (id, title, artist, album) values ('62c36092-82a1-3a00-93d1-46196ee77204', 'Outside Woman Blues', 'Back Door Slam', 'Roll Away');cqlsh:music&gt; CREATE TABLE song_tags ( ... id uuid, ... tag_name text, ... PRIMARY KEY (id, tag_name) ... );cqlsh:music&gt; select * from song_tags;cqlsh:music&gt; INSERT INTO song_tags (id, tag_name) VALUES ('a3e64f8f-bd44-4f28-b8d9-6938726e34d4', 'blues');cqlsh:music&gt; INSERT INTO song_tags (id, tag_name) VALUES ('8a172618-b121-4136-bb10-f665cfc469eb', 'covers');cqlsh:music&gt; INSERT INTO song_tags (id, tag_name) VALUES ('a3e64f8f-bd44-4f28-b8d9-6938726e34d4', '1973');cqlsh:music&gt; INSERT INTO song_tags (id, tag_name) VALUES ('8a172618-b121-4136-bb10-f665cfc469eb', '2007');cqlsh:music&gt; select * from song_tags; id | tag_name-------------------------------------+--------- a3e64f8f-bd44-4f28-b8d9-6938726e34d4 | 1973 a3e64f8f-bd44-4f28-b8d9-6938726e34d4 | blues 8a172618-b121-4136-bb10-f665cfc469eb | 2007 8a172618-b121-4136-bb10-f665cfc469eb | coverscqlsh:music&gt; drop table song_tags;cqlsh:music&gt; ALTER TABLE songs ADD tags set&lt;text&gt;;TSocket read 0 bytes</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.AlterTableStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5118" opendate="2013-1-5 00:00:00" fixdate="2013-1-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>user defined compaction is broken</summary>
      <description>currently forceUserDefinedCompaction takes (keyspace, datafile)cassandra tries to look for ks/ks-cf-hf-80-Data.db when the sstable actually exists at ks/cf/ks-cf-hf-80-Data.dbfix would be for user defined compaction to look for the sstable datafile in the correct location</description>
      <version>1.1.9,1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.db.compaction.CompactionsTest.java</file>
      <file type="M">src.java.org.apache.cassandra.db.compaction.CompactionManager.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5121" opendate="2013-1-6 00:00:00" fixdate="2013-1-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>system.peers.tokens is empty after node restart</summary>
      <description>Using a 2 nodes fresh cluster (127.0.0.1 &amp; 127.0.0.2) running latest 1.2, I’m querying system.peers to get the nodes of the cluster and their respective token. But it seems there is a problem after either node restart.When both node starts up, querying system.peers seems ok:127.0.0.1&gt; select * from system.peers;+-----------------+------------------------------------------+---------------+-----------+---------------------+-----------------+------------------------------------------+-------------------------------------------+| data_center | host_id | peer | rack | release_version | rpc_address | schema_version | tokens |+=================+==========================================+===============+===========+=====================+=================+==========================================+===========================================+| datacenter1 | 4819cbb0-9741-4fe0-8d7d-95941b0247bf | 127.0.0.2 | rack1 | 1.2.0 | 127.0.0.2 | 59adb24e-f3cd-3e02-97f0-5b395827453f | 56713727820156410577229101238628035242 |+-----------------+------------------------------------------+---------------+-----------+---------------------+-----------------+------------------------------------------+-------------------------------------------+But as soon as one node is restarted (let’s say 127.0.0.2), tokens column is then empty:127.0.0.1&gt; select * from system.peers;+-----------------+------------------------------------------+---------------+-----------+---------------------+-----------------+------------------------------------------+-------------+| data_center | host_id | peer | rack | release_version | rpc_address | schema_version | tokens |+=================+==========================================+===============+===========+=====================+=================+==========================================+=============+| datacenter1 | 4819cbb0-9741-4fe0-8d7d-95941b0247bf | 127.0.0.2 | rack1 | 1.2.0 | 127.0.0.2 | 59adb24e-f3cd-3e02-97f0-5b395827453f | |+-----------------+------------------------------------------+---------------+-----------+---------------------+-----------------+------------------------------------------+-------------+Log server side:DEBUG 22:08:01,608 Responding: ROWS [peer(system, peers), org.apache.cassandra.db.marshal.InetAddressType][data_center(system, peers), org.apache.cassandra.db.marshal.UTF8Type][host_id(system, peers), org.apache.cassandra.db.marshal.UUIDType][rack(system, peers), org.apache.cassandra.db.marshal.UTF8Type][release_version(system, peers), org.apache.cassandra.db.marshal.UTF8Type][rpc_address(system, peers), org.apache.cassandra.db.marshal.InetAddressType][schema_version(system,peers), org.apache.cassandra.db.marshal.UUIDType][tokens(system, peers), org.apache.cassandra.db.marshal.SetType(org.apache.cassandra.db.marshal.UTF8Type)] | 127.0.0.2 | datacenter1 | 4819cbb0-9741-4fe0-8d7d-95941b0247bf | rack1 | 1.2.0 | 127.0.0.2 | 59adb24e-f3cd-3e02-97f0-5b395827453f | nullRestarting the other node (127.0.0.1) restore back the tokens column.</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.db.SystemTable.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5122" opendate="2013-1-7 00:00:00" fixdate="2013-1-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Select on composite partition keys are not validated correctly</summary>
      <description>From Kais Ahmed on the mailing list:----------------------------------------------------------------------------------------------------------------------[cqlsh 2.3.0 | Cassandra 1.2.0-SNAPSHOT | CQL spec 3.0.0 | Thrift protocol19.35.0]cqlsh:test&gt; CREATE TABLE foo ( a int, b text, c uuid, PRIMARY KEY((a, b)) );cqlsh:test&gt; INSERT INTO foo (a, b , c ) VALUES ( 1 , 'aze','4d481800-4c5f-11e1-82e0-3f484de45426');cqlsh:test&gt; INSERT INTO foo (a, b , c ) VALUES ( 1 , 'ert','693f5800-8acb-11e3-82e0-3f484de45426');cqlsh:test&gt; INSERT INTO foo (a, b , c ) VALUES ( 1 , 'opl','d4815800-2d8d-11e0-82e0-3f484de45426');-----------------------------------------------------------------------------------------------------------------------------------------------------cqlsh:test&gt; SELECT * FROM foo; a | b | c---+-----+-------------------------------------- 1 | ert | 693f5800-8acb-11e3-82e0-3f484de45426 1 | opl | d4815800-2d8d-11e0-82e0-3f484de45426 1 | aze | 4d481800-4c5f-11e1-82e0-3f484de45426-----------------------------------------------------------------------------------------------------------------------------------------------------cqlsh:test&gt; SELECT * FROM foo where a=1; a | b | c---+-----+-------------------------------------- 1 | ert | 693f5800-8acb-11e3-82e0-3f484de45426 1 | opl | d4815800-2d8d-11e0-82e0-3f484de45426The last request should be invalid (since we don't have a good way to do it, at least not with a random partitioner).</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.SelectStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5126" opendate="2013-1-7 00:00:00" fixdate="2013-1-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure Jackson dependency matches lib</summary>
      <description>Older version of Jackson ASL has a concurrency issue. See http://jira.codehaus.org/browse/JACKSON-237This can be triggered in some environments when running M/R tasks and the wrong version of jackson gets picked up.</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="5130" opendate="2013-1-8 00:00:00" fixdate="2013-1-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>streaming from another node results in a bogus % streamed on that sstable</summary>
      <description>reproducible thru a repair -pr5689557% from node 10.8.25.132 ??root@scl-cas06:~# nodetool netstatsMode: NORMALStreaming to: /10.8.25.132 /data2/cassandra/evidence/messages/evidence-messages-ia-2378-Data.db sections=1504 progress=10877426741/11376970910 - 95% /data/cassandra/evidence/messages/evidence-messages-ia-2396-Data.db sections=1326 progress=0/747963031 - 0% /data/cassandra/evidence/messages/evidence-messages-ia-2412-Data.db sections=342 progress=0/29791995 - 0% /data/cassandra/evidence/messages/evidence-messages-ia-2413-Data.db sections=307 progress=0/42375841 - 0% /data/cassandra/evidence/messages/evidence-messages-ia-2375-Data.db sections=702 progress=0/5138101708 - 0% /data/cassandra/evidence/messages/evidence-messages-ia-2416-Data.db sections=220 progress=0/21729661 - 0% /data2/cassandra/evidence/messages/evidence-messages-ia-2382-Data.db sections=1498 progress=0/7731727694 - 0% /data2/cassandra/evidence/messages/evidence-messages-ia-2388-Data.db sections=698 progress=0/2097813910 - 0% /data2/cassandra/evidence/messages/evidence-messages-ia-2401-Data.db sections=889 progress=0/154218729 - 0% /data/cassandra/evidence/messages/evidence-messages-ia-2411-Data.db sections=290 progress=0/45457960 - 0% /data2/cassandra/evidence/messages/evidence-messages-ia-2414-Data.db sections=22 progress=0/1809989 - 0% /data/cassandra/evidence/messages/evidence-messages-ia-2407-Data.db sections=423 progress=0/55302683 - 0% /data/cassandra/evidence/messages/evidence-messages-ia-2409-Data.db sections=73 progress=0/6366250 - 0% /data2/cassandra/evidence/messages/evidence-messages-ia-2377-Data.db sections=1298 progress=0/815617310 - 0% /data/cassandra/evidence/messages/evidence-messages-ia-2389-Data.db sections=167 progress=0/7307457 - 0% /data/cassandra/evidence/messages/evidence-messages-ia-2415-Data.db sections=126 progress=0/9260301 - 0% Nothing streaming to /10.8.30.16Streaming from: /10.8.25.132 evidence: /data2/cassandra/evidence/messages/evidence-messages-ia-1091-Data.db sections=328 progress=0/52507334 - 0% evidence: /data/cassandra/evidence/messages/evidence-messages-ia-1084-Data.db sections=1029 progress=0/198699737 - 0% evidence: /data2/cassandra/evidence/messages/evidence-messages-ia-1097-Data.db sections=35 progress=0/731705 - 0% evidence: /data/cassandra/evidence/messages/evidence-messages-ia-1079-Data.db sections=1504 progress=1126955908333568/19807443126 - 5689557%Pool Name Active Pending CompletedCommands n/a 0 459801Responses n/a 0 1061826</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.streaming.IncomingStreamReader.java</file>
      <file type="M">src.java.org.apache.cassandra.streaming.compress.CompressedInputStream.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5132" opendate="2013-1-8 00:00:00" fixdate="2013-1-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>unfriendly error message during create table map collection</summary>
      <description>cqlsh:music&gt; create table test (id uuid PRIMARY KEY, testmap map&lt;timestamp, nonsense&gt;);Bad Request: Failed parsing statement: &amp;#91;create table test (id uuid PRIMARY KEY, testmap map&lt;timestamp, nonsense&gt;);&amp;#93; reason: NullPointerException null</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.Cql.g</file>
    </fixedFiles>
  </bug>
  <bug id="5134" opendate="2013-1-9 00:00:00" fixdate="2013-1-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>sstable2json always returns default value validator</summary>
      <description>When exporting to JSON tables created using cqlsh, values are always exported to hexa : the serializeColumn function fails to get the correct value validator from the cfMetaData, since getColumnDefinition(column) returns null.I'm not a java expert and doesn't really understand the use of ByteBuffer for Map : the workaround I found is to pass to cfMetaData.getValueValidator a new wrapped ByteBuffer of the column.name argument, then the validator is correctly found from the cfMetaData.column_metadata.</description>
      <version>1.2.1</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.SSTableExport.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5137" opendate="2013-1-9 00:00:00" fixdate="2013-1-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make sure SSTables left over from compaction get deleted and logged</summary>
      <description>When opening ColumnFamily, cassandra checks SSTable files' ancestors and skips loading already compacted ones. Those files are expected to be deleted, but currently that never happens.Also, there is no indication of skipping loading file in the log, so it is confusing especially doing upgradesstables.</description>
      <version>1.1.9,1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.compaction.CompactionTask.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5141" opendate="2013-1-10 00:00:00" fixdate="2013-1-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Can not insert an empty map.</summary>
      <description>It is not possible to insert an empty map. It looks like the "{}" is reserved only for Set.So when for table:CREATE TABLE users ( id text PRIMARY KEY, surname text, favs map&lt;text, text&gt;)I try to insert map without any elements:cqlsh:test&gt; insert into users(id,surname,favs) values('aaa','aaa',{});I get: Bad Request: Set operations are only supported on Set typed columns, but org.apache.cassandra.db.marshal.MapType(org.apache.cassandra.db.marshal.UTF8Type,org.apache.cassandra.db.marshal.UTF8Type) given.text could not be lexed at line 1, char 63</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.UpdateStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.operations.SetOperation.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5144" opendate="2013-1-10 00:00:00" fixdate="2013-1-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Validate login for Thrift describe_keyspace, describe_keyspaces and set_keyspace methods</summary>
      <description>Not validating login leaks info about keyspaces and columnfamilies if the configured authenticator requires validation.This change does not affect AllowAllAuthenticator, but if an implementation forbids anonymous access, we should deny this information to unauthenticated users.</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.thrift.CassandraServer.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5148" opendate="2013-1-11 00:00:00" fixdate="2013-1-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add option to disable tcp_nodelay</summary>
      <description>Add option to disable TCP_NODELAY for cross-dc communication.Reason is we are seeing huge amounts of packets being sent over our poor firewalls.For us, disabling this for inter-dc communication increases average packet size from ~400 bytes to ~1300 bytes.</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.net.OutboundTcpConnection.java</file>
      <file type="M">src.java.org.apache.cassandra.config.DatabaseDescriptor.java</file>
      <file type="M">src.java.org.apache.cassandra.config.Config.java</file>
      <file type="M">conf.cassandra.yaml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5155" opendate="2013-1-14 00:00:00" fixdate="2013-1-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make Ec2Region&amp;#39;s datacenter name configurable</summary>
      <description>Ec2Region sets a one-to-one mapping between the EC2 region name and the datacenter name. I'd like to be able to make the DC name configurable.The use case here is running DataStax Enterprise in EC2 and the need to have a plain c* datacenter and a c*/solr cluster datacenter running within the same region (for the same cluster). Can't make the two (or more) datacenters in the region with the one-to-one mapping of EC2 region to c* DC.</description>
      <version>1.1.10,1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.locator.GossipingPropertyFileSnitch.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.Ec2Snitch.java</file>
      <file type="M">conf.cassandra-rackdc.properties</file>
    </fixedFiles>
  </bug>
  <bug id="5159" opendate="2013-1-15 00:00:00" fixdate="2013-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Expose droppable tombstone ratio stats over JMX</summary>
      <description>Could be nice to be able to jmx-monitor the tombstone histogram collected during compactions to see how many gc-able tombstones there are left due to the row existing in other sstables</description>
      <version>1.2.1</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.io.sstable.SSTableReader.java</file>
      <file type="M">src.java.org.apache.cassandra.io.sstable.SSTableMetadata.java</file>
      <file type="M">src.java.org.apache.cassandra.db.DataTracker.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStoreMBean.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5160" opendate="2013-1-15 00:00:00" fixdate="2013-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CFS.allUserDefined() doesn&amp;#39;t exclude system_auth and system_traces keysapces</summary>
      <description>Make sure CFS.allUserDefined() excludes all system-related keyspaces.</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
    </fixedFiles>
  </bug>
  <bug id="5165" opendate="2013-1-16 00:00:00" fixdate="2013-1-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Need to trim DC and RACK names in cassandra-topology.properties file</summary>
      <description>Some misprints in cassandra-topology.properties file can be painful for debugging. For example extra symbols at the end of line like a space. So difference between "DC1:RACK1" and "DC1:RACK1 " couldn't be detected using nodetool ring command.I think that symbols like a space shouldn't be allowed in DC/RACK names. So I suggest to trim them.The patch has been attached.</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.locator.PropertyFileSnitch.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.GossipingPropertyFileSnitch.java</file>
    </fixedFiles>
  </bug>
  <bug id="5167" opendate="2013-1-17 00:00:00" fixdate="2013-1-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Node isn&amp;#39;t removed from system.peers after &amp;#39;nodetool removenode&amp;#39;</summary>
      <description>In a 3 node live cluster - After a replacement of a dead node, the old node remains in the system.peers table, even after running 'nodetool removenode &lt;ID&gt;'.</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.db.SystemTableTest.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.db.SystemTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="5172" opendate="2013-1-18 00:00:00" fixdate="2013-1-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Detect (and warn) unintentional use of the cql2 thrift methods when cql3 was the intention</summary>
      <description>In 1.2.0 we've separated the thrift methods for CQL2 and CQL3 (due to CASSANDRA-4734). In doing so, we've made set_cql_version a silent no-op.However it means that the 1.1 way of querying CQL3 now silently end up calling CQL2 in 1.2.0. So I suggest that if someone calls set_cql_version, we record the version set and warn if (throw an invalid exception) if someone asks for CQL3 but later use the CQL2 methods.</description>
      <version>1.2.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.ClientState.java</file>
      <file type="M">src.java.org.apache.cassandra.thrift.CassandraServer.java</file>
      <file type="M">NEWS.txt</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
</bugrepository>
