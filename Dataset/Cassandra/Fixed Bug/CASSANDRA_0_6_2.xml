<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CASSANDRA">
  <bug id="1090" opendate="2010-5-13 00:00:00" fixdate="2010-5-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>make it possible to tell when repair has finished</summary>
      <description>Stu said in IRC,"forceTableRepair sends TreeRequests everywhere, but doesn't wait for responses and repairs to actually happen. so you'd need to record which neighbors had responded for which cfs."</description>
      <version>0.6.2,0.7beta1</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.service.AntiEntropyServiceTest.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.service.AntiEntropyService.java</file>
    </fixedFiles>
  </bug>
  <bug id="1096" opendate="2010-5-16 00:00:00" fixdate="2010-5-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Sequential splits causing unbalanced MapReduce load</summary>
      <description>Since CassandraInputFormat returns an ordered list of splits, when there are many splits (e.g. hundreds or more) the load on cassandra is horribly unbalanced. e.g. if I have 30 tasks processing 600 splits, then the rows for the first 30 splits are all located on the same one or two nodes.</description>
      <version>0.6.2</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.hadoop.ColumnFamilyInputFormat.java</file>
    </fixedFiles>
  </bug>
  <bug id="1114" opendate="2010-5-20 00:00:00" fixdate="2010-5-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>start script occasionally causes flapping when used with runit</summary>
      <description>Starting cassandra in the foreground is the preferred way of running it under something like runit or daemontools. Currently, the start script will execute java in a subprocess when starting in the foreground. This is a problem for runit and daemontools since they both register the pid of start script. Occasionally the start script process will fail, leaving the java process running. The runit supervisor will then start flapping since it thinks cassandra is down even though there is a java process running.The attached patch will run cassandra in the same process as the start script when run in the foreground. This will cause runit and daemontools to have the correct behavior.</description>
      <version>0.6.2</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.cassandra</file>
    </fixedFiles>
  </bug>
</bugrepository>
