<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CASSANDRA">
  <bug id="1777" opendate="2010-11-25 00:00:00" fixdate="2010-8-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The describe_host API method is misleading in that it returns the interface associated with gossip traffic</summary>
      <description>If the hardware is configured to use separate interfaces for thrift and gossip, the gossip interface will be returned, given the results come out of the ReplicationStrategy eventually.I understand the approach, but given this is on the API, it effective worthless in situations of host auto discovery via describe_ring from a client. I actually see this as the primary use case of this method - why else would I care about the gossip iface from the client perspective? It's current form should be relegated to JMX only. At the same time, we should add port information as well. describe_splits probably has similar issues.I see the potential cart-before-horse issues here and that this will probably be non-trivial to fix, but I think "give me a set of all the hosts to which I can talk" is pretty important from a client perspective.</description>
      <version>0.8.4</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.thrift.CassandraServer.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.gms.VersionedValue.java</file>
      <file type="M">src.java.org.apache.cassandra.gms.ApplicationState.java</file>
    </fixedFiles>
  </bug>
  <bug id="2221" opendate="2011-2-22 00:00:00" fixdate="2011-8-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>&amp;#39;show create&amp;#39; commands on the CLI to export schema</summary>
      <description>It would be nice to have 'show create' type of commands on the command-line so that it would generate the DDL for the schema.A scenario that would make this useful is where a team works out a data model over time with a dev cluster. They want to use parts of that schema for new clusters that they create, like a staging/prod cluster. It would be very handy in this scenario to have some sort of export mechanism.Another use case is for testing purposes - you want to replicate a problem.We currently have schematool for import/export but that is deprecated and it exports into yaml.This new feature would just be able to 'show' - or export if they want the entire keyspace - into a script or commands that could be used in a cli script. It would need to be able to regenerate everything about the keyspace including indexes and metadata.</description>
      <version>0.8.4</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.cli.CliTest.java</file>
      <file type="M">src.resources.org.apache.cassandra.cli.CliHelp.yaml</file>
      <file type="M">src.java.org.apache.cassandra.cli.CliCompleter.java</file>
      <file type="M">src.java.org.apache.cassandra.cli.CliClient.java</file>
      <file type="M">src.java.org.apache.cassandra.cli.Cli.g</file>
    </fixedFiles>
  </bug>
  <bug id="2523" opendate="2011-4-20 00:00:00" fixdate="2011-8-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Distributed test scripts not working with Whirr 0.4.0</summary>
      <description>I suspect that our runurl based script execution is not working with Whirr 0.4.0, which is causing distributed tests that kill/wipe nodes to timeout. See this FAQ entry for a description of the change.</description>
      <version>0.8.4</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.distributed.org.apache.cassandra.TestBase.java</file>
      <file type="M">test.distributed.org.apache.cassandra.MutationTest.java</file>
      <file type="M">test.distributed.org.apache.cassandra.CassandraServiceController.java</file>
    </fixedFiles>
  </bug>
  <bug id="2892" opendate="2011-7-12 00:00:00" fixdate="2011-8-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Don&amp;#39;t "replicate_on_write" with RF=1</summary>
      <description>For counters with RF=1, we still do a read to replicate, even though there is nothing to replicate it too.</description>
      <version>0.8.4</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.StorageProxy.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2972" opendate="2011-7-30 00:00:00" fixdate="2011-8-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>nodetool netstats progress does not update on receiving side</summary>
      <description>when you add/remove node to cluster, nodetool netstats show correct results only on sending side - on receiving side you can see only 0% progress</description>
      <version>0.8.4</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.streaming.StreamInSession.java</file>
      <file type="M">src.java.org.apache.cassandra.streaming.IncomingStreamReader.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2990" opendate="2011-8-3 00:00:00" fixdate="2011-8-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>We should refuse query for counters at CL.ANY</summary>
      <description>We currently do not reject writes for counters at CL.ANY, even though this is not supported (and rightly so).</description>
      <version>0.8.4</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.system.test.thrift.server.py</file>
      <file type="M">test.system.test.cql.py</file>
      <file type="M">src.java.org.apache.cassandra.thrift.ThriftValidation.java</file>
      <file type="M">src.java.org.apache.cassandra.cql.UpdateStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2992" opendate="2011-8-4 00:00:00" fixdate="2011-8-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cassandra doesn&amp;#39;t start on Red Hat Linux due to hardcoded JAVA_HOME</summary>
      <description>On CentOS /etc/init.d/cassandra hasexport JAVA_HOME=/usr/lib/jvm/java-1.6.0-openjdk-1.6.0.0/While there is no such a directory on our server it was ok for 0.8.2, because /usr/sbin/cassandra checked the executableif [ -x $JAVA_HOME/bin/java ]; then JAVA=$JAVA_HOME/bin/javaelse JAVA=`which java`fiBut 0.8.3 builds replaced the above code with one that doesn't check if JAVA_HOME is set correctly.if [ -n "$JAVA_HOME" ]; then JAVA="$JAVA_HOME/bin/java"else JAVA=javafiThat's why cassandra doesn't start anymore.The correct fix would be to remove "export JAVA_HOME" from /etc/init.d/cassandra or set it only to correct path and only if it hasn't already been set.It would also be nice to revert to "[ -x $JAVA_HOME/bin/java ]" in /usr/sbin/cassandra</description>
      <version>0.8.4</version>
      <fixedVersion>Packaging</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">redhat.cassandra</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2993" opendate="2011-8-4 00:00:00" fixdate="2011-8-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Issues with parameters being escaped correctly in Python CQL</summary>
      <description>When using parameterised queries in Python CQL strings are not being escaped correctly.Query and Parameters:'UPDATE sites SET :col = :val WHERE KEY = :site_id'{'col': 'feed_stats:1312493736688033024', 'site_id': '899d15e8-bd4a-11e0-bc8c-001fe14cba06', 'val': "(dp0\nS'1'\np1\n(lp2\nI1\naI2\naI3\naI4\nasS'0'\np3\n(lp4\nI1\naI2\naI3\naI4\nasS'3'\np5\n(lp6\nI1\naI2\naI3\naI4\nasS'2'\np7\n(lp8\nI1\naI2\naI3\naI4\nas."}Query trying to be executed after processing parameters "UPDATE sites SET 'feed_stats:1312493736688033024' = '(dp0\nS''1''\np1\n(lp2\nI1\naI2\naI3\naI4\nasS''0''\np3\n(lp4\nI1\naI2\naI3\naI4\nasS''3''\np5\n(lp6\nI1\naI2\naI3\naI4\nasS''2''\np7\n(lp8\nI1\naI2\naI3\naI4\nas.' WHERE KEY = '899d15e8-bd4a-11e0-bc8c-001fe14cba06'"</description>
      <version>0.8.4</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.system.test.cql.py</file>
      <file type="M">src.java.org.apache.cassandra.cql.Cql.g</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3004" opendate="2011-8-8 00:00:00" fixdate="2011-8-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Once a message has been dropped, cassandra logs total messages dropped and tpstats every 5s forever</summary>
      <description></description>
      <version>0.8.4</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.net.MessagingService.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3006" opendate="2011-8-9 00:00:00" fixdate="2011-8-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enormous counter</summary>
      <description>I have two-node cluster with the following keyspace and column family settings.Cluster Information: Snitch: org.apache.cassandra.locator.SimpleSnitch Partitioner: org.apache.cassandra.dht.RandomPartitioner Schema versions: 63fda700-c243-11e0-0000-2d03dcafebdf: &amp;#91;172.17.19.151, 172.17.19.152&amp;#93;Keyspace: test: Replication Strategy: org.apache.cassandra.locator.NetworkTopologyStrategy Durable Writes: true Options: &amp;#91;datacenter1:2&amp;#93; Column Families: ColumnFamily: testCounter (Super) "APP status information." Key Validation Class: org.apache.cassandra.db.marshal.BytesType Default column value validator: org.apache.cassandra.db.marshal.CounterColumnType Columns sorted by: org.apache.cassandra.db.marshal.BytesType/org.apache.cassandra.db.marshal.BytesType Row cache size / save period in seconds: 0.0/0 Key cache size / save period in seconds: 200000.0/14400 Memtable thresholds: 1.1578125/1440/247 (millions of ops/MB/minutes) GC grace seconds: 864000 Compaction min/max thresholds: 4/32 Read repair chance: 1.0 Replicate on write: true Built indexes: []Then, I use a test program based on hector to add a counter column (testCounter&amp;#91;sc&amp;#93;&amp;#91;column&amp;#93;) 1000 times. In the middle the adding process, I intentional shut down the node 172.17.19.152. In addition to that, the test program is smart enough to switch the consistency level from Quorum to One, so that the following adding actions would not fail. After all the adding actions are done, I start the cassandra on 172.17.19.152, and I use cassandra-cli to check if the counter is correct on both nodes, and I got a result 1001 which should be reasonable because hector will retry once. However, when I shut down 172.17.19.151 and after 172.17.19.152 is aware of 172.17.19.151 is down, I try to start the cassandra on 172.17.19.151 again. Then, I check the counter again, this time I got a result 481387 which is so wrong.I use 0.8.3 to reproduce this bug, but I think this also happens on 0.8.2 or before also.</description>
      <version>0.8.4</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.RowMutation.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3011" opendate="2011-8-10 00:00:00" fixdate="2011-8-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Error upgrading when replication_factor is stored in strategy_options</summary>
      <description>&amp;#91;from the ML&amp;#93;When I upgraded from 0.8.2 to 0.8.3 I encountered a exception during startup:...Caused by: org.apache.cassandra.config.ConfigurationException:replication_factor is an option for SimpleStrategy, notNetworkTopologyStrategy at org.apache.cassandra.locator.NetworkTopologyStrategy.&lt;init&gt;(NetworkTopologyStrategy.java:70)...</description>
      <version>0.8.4</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
      <file type="M">src.java.org.apache.cassandra.config.KSMetaData.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
</bugrepository>
