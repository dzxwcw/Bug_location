<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CASSANDRA">
  <bug id="2777" opendate="2011-6-15 00:00:00" fixdate="2011-9-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pig storage handler should implement LoadMetadata</summary>
      <description>The reason for this is many builtin functions like SUM won't work on longs (you can workaround using LongSum, but that's lame) because the query planner doesn't know about the types beforehand, even though we are casting to native longs.There is some impact to this, though. With LoadMetadata implemented, existing scripts that specify schema will need to remove it (since LM is doing it for them) and they will need to conform to LM's terminology (key, columns, name, value) within the script. This is trivial to change, however, and the increased functionality is worth the switch.</description>
      <version>0.8.7</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">contrib.pig.src.java.org.apache.cassandra.hadoop.pig.CassandraStorage.java</file>
    </fixedFiles>
  </bug>
  <bug id="2778" opendate="2011-6-16 00:00:00" fixdate="2011-6-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unable to set compaction strategy in cli using create column family command</summary>
      <description>The following command does not set compaction strategy and its options:create column family Standard1 with comparator = BytesType and compaction_strategy = 'org.apache.cassandra.db.compaction.TimestampBucketedCompactionStrategy' and compaction_strategy_options = [{max_sstable_size:504857600, retention_in_seconds:60}];</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
      <file type="M">src.java.org.apache.cassandra.config.CFMetaData.java</file>
      <file type="M">src.java.org.apache.cassandra.cli.CliClient.java</file>
    </fixedFiles>
  </bug>
  <bug id="3137" opendate="2011-9-5 00:00:00" fixdate="2011-10-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement wrapping intersections for ConfigHelper&amp;#39;s InputKeyRange</summary>
      <description>Before there was no support for multiple intersections between the split's range and the job's configured range.After CASSANDRA-3108 it is now possible.</description>
      <version>0.8.7,1.0.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.hadoop.ColumnFamilyInputFormat.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3201" opendate="2011-9-13 00:00:00" fixdate="2011-9-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>When a mmap fails, Cassandra should exit.</summary>
      <description>When a mmap fails, Cassandra should exit. See https://wiki.apache.org/cassandra/ArchitectureInternals#line-60Here is an example stack trace:ERROR 17:11:36,258 Fatal exception in thread Thread&amp;#91;FlushWriter:2003,5,main&amp;#93;java.io.IOError: java.io.IOException: Map failed at org.apache.cassandra.io.util.MmappedSegmentedFile$Builder.createSegments(MmappedSegmentedFile.java:170) at org.apache.cassandra.io.util.MmappedSegmentedFile$Builder.complete(MmappedSegmentedFile.java:147) at org.apache.cassandra.io.sstable.SSTableWriter.closeAndOpenReader(SSTableWriter.java:194) at org.apache.cassandra.io.sstable.SSTableWriter.closeAndOpenReader(SSTableWriter.java:173) at org.apache.cassandra.db.Memtable.writeSortedContents(Memtable.java:253) at org.apache.cassandra.db.Memtable.access$400(Memtable.java:49) at org.apache.cassandra.db.Memtable$3.runMayThrow(Memtable.java:270) at org.apache.cassandra.utils.WrappedRunnable.run(WrappedRunnable.java:30) at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) at java.lang.Thread.run(Thread.java:662)Caused by: java.io.IOException: Map failed at sun.nio.ch.FileChannelImpl.map(FileChannelImpl.java:748) at org.apache.cassandra.io.util.MmappedSegmentedFile$Builder.createSegments(MmappedSegmentedFile.java:162) ... 10 moreCaused by: java.lang.OutOfMemoryError: Map failed at sun.nio.ch.FileChannelImpl.map0(Native Method) at sun.nio.ch.FileChannelImpl.map(FileChannelImpl.java:745) ... 11 more</description>
      <version>0.8.7,1.0.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.AbstractCassandraDaemon.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3206" opendate="2011-9-14 00:00:00" fixdate="2011-9-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>increase file descriptor limit in deb, rpm packages</summary>
      <description>We can use a lot of file descriptors (one per socket, 5? per sstable). People hit this regularly on the user list and it will get worse with Leveled compaction, which limits sstable size to a relatively low size (currently 5MB).</description>
      <version>0.8.7</version>
      <fixedVersion>Packaging</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">redhat.cassandra.conf</file>
      <file type="M">debian.init</file>
      <file type="M">debian.cassandra.conf</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3207" opendate="2011-9-14 00:00:00" fixdate="2011-9-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log message at INFO when a global or keyspace level repair operation completes</summary>
      <description>If JMX times out it's difficult to tell when repair completes.Right now we log at DEBUG for each column family but we need a way to tell when the repair operation completes as a whole.</description>
      <version>0.8.7</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.service.AntiEntropyService.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3208" opendate="2011-9-14 00:00:00" fixdate="2011-9-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>USE &lt;keyspace&gt; doesn&amp;#39;t work for numeric keyspaces</summary>
      <description>In the CLI, USE &lt;keyspace&gt;; doesn't work for keyspaces' names that contain only digits.The error I'm getting is:Syntax error at position 4: mismatched input '20110914' expecting Identifier</description>
      <version>0.8.7</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cli.CliClient.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3211" opendate="2011-9-15 00:00:00" fixdate="2011-10-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enhanced IP resolution for machines with multiple network interfaces</summary>
      <description>On unix machines that have multiple network interfaces whereby the IP associated with the split is not on the network interface associated with localhost, the getLocation method cannot find the proper IP and throws an exception "no connection available".I changed the implementation to use NetworkInterface instead of InetAddress using getLocalHost().This is more reliable. See the following references:http://stackoverflow.com/questions/5813194/inetaddress-getlocalhost-does-not-return-expected-ip-address-from-c-windows-syhttp://stackoverflow.com/questions/4871451/inetaddress-getlocalhost-returns-wrong-result-when-hostname-is-64-charshttp://www.jguru.com/faq/view.jsp?EID=790132</description>
      <version>0.8.7</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.hadoop.ColumnFamilyRecordReader.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3222" opendate="2011-9-16 00:00:00" fixdate="2011-9-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>cfhistograms is transposed/wrong again</summary>
      <description>Read/write latencies are transposed, row size is always equal the column count. I think we've fixed this at least twice before, but here it is again.</description>
      <version>0.7.10,0.8.7</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.NodeCmd.java</file>
    </fixedFiles>
  </bug>
  <bug id="3231" opendate="2011-9-20 00:00:00" fixdate="2011-9-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQL does not throw an error when invalid hex is supplied</summary>
      <description>As reported on irc, if you try to create an index on a CF with a default comparator of BytesType, but you supply invalid hex, weird things happen. Namely if you try to create one on 'category' you instead get one on '\xca\xfe\xff\xff', which is 4 bytes that appears to coincide with attempting to interpret 'ca', 'te', 'go', 'ry' as hex.</description>
      <version>0.8.7</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.utils.FBUtilities.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3239" opendate="2011-9-22 00:00:00" fixdate="2011-9-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>can&amp;#39;t use RackInferringSnitch and CQL JDBC&amp;#39;s "CREATE KEYSPACE" with NetworkTopologyStrategy</summary>
      <description>If using the CQL JDBC driver, there's a problem with using RackInferringSnitch1. With RackInferringSnitch, the datacenter names are numeric2. With CQL and NetworkTopologyStrategy, the data center replicas are specified as strategy_options:&lt;dc-name&gt;=&lt;#-of-replicas&gt;3. Using a number for &lt;dc-name&gt; fails4. Using a quoted number for &lt;dc-name&gt; fails</description>
      <version>0.8.7</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql.Cql.g</file>
    </fixedFiles>
  </bug>
  <bug id="3243" opendate="2011-9-22 00:00:00" fixdate="2011-9-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Node which was decommissioned and shut-down reappears on a single node</summary>
      <description>I decommissioned a node several days ago. It was no longer in the ring list on any node in the ring. However, it was in the dead gossip list.In an attempt to clean it out of the dead gossip list so I could truncate, I shut down the entire ring and bought it back up. Once the ring came back up, one node showed the decommissioned node as still in the ring in a state of 'Down'. No other node in the ring shows this info.I successfully ran removetoken on the node to get that phantom node out. However, it is back in the dead gossip list, preventing me from truncating.Where might the info on this decommissioned node be being stored? Is HH possibly trying to deliver to the removed node, thus putting it back in the ring on one node?I find it extremely curious that none of the other nodes in the ring showed the phantom node. Shouldn't gossip have propagated the node everywhere, even if it was down?</description>
      <version>0.8.7</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.SystemTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="3247" opendate="2011-9-23 00:00:00" fixdate="2011-9-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>sstableloader ignores option doesn&amp;#39;t work correctly</summary>
      <description>The --ignores option is supposed to take an argument but it doesn't.</description>
      <version>0.8.7,1.0.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.BulkLoader.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3255" opendate="2011-9-24 00:00:00" fixdate="2011-9-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Sstable scrub status persists in compactionstats after scrub is complete</summary>
      <description>When scrubbing the sstables on a node, the 'Scrub' info persists in the 'compactionstats' nodetool utility, even after the scrub is complete.</description>
      <version>0.8.7</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.compaction.CompactionManager.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3257" opendate="2011-9-25 00:00:00" fixdate="2011-9-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enabling SSL on a fairly light cluster leaks Open files.</summary>
      <description>To reproduce:Enable SSL encryption and let the server be idle for a day or so you will see the below....&amp;#91;vijay_tcasstest@vijay_tcass--1c-i-1568885c ~&amp;#93;$ /usr/sbin/lsof |grep -i cassandra-app.jks |wc -l ;date16333Sun Sep 25 17:23:29 UTC 2011&amp;#91;vijay_tcasstest@vijay_tcass--1c-i-1568885c ~&amp;#93;$ java -jar cmdline-jmxclient-0.10.3.jar - localhost:7501 java.lang:type=Memory gc&amp;#91;vijay_tcasstest@vijay_tcass--1c-i-1568885c ~&amp;#93;$ /usr/sbin/lsof |grep -i cassandra-app.jks |wc -l ;date64Sun Sep 25 17:23:53 UTC 2011&amp;#91;vijay_tcasstest@vijay_tcass--1c-i-1568885c ~&amp;#93;$ After running GC manually the issue goes away.</description>
      <version>0.8.7,1.0.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.security.SSLFactory.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3259" opendate="2011-9-26 00:00:00" fixdate="2011-9-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replace token leaves the old node state in tact causing problems in cli</summary>
      <description>in the replace token patch we dont evict the node from the Gossip which will leave the node lingering around and causes issues in cli (UNReachable nodes)As a part of the replace token if the token is replaced with another token we should remove the old nodes Gossip states.</description>
      <version>0.8.7,1.0.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.gms.Gossiper.java</file>
    </fixedFiles>
  </bug>
  <bug id="3301" opendate="2011-10-4 00:00:00" fixdate="2011-10-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Java Stress Tool: COUNTER_GET reads from CounterSuper1 instead of SuperCounter1</summary>
      <description>Output from stress tool - COUNTER_ADD works fine bug COUNTER_GET does not./stress --operation=COUNTER_ADD --family-type=Super --num-keys=1 --consistency-level=TWO --replication-factor=3 --nodes=cathy1Unable to create stress keyspace: Keyspace already exists.total,interval_op_rate,interval_key_rate,avg_latency,elapsed_time1,0,0,0.0060,0END./stress --operation=COUNTER_GET --family-type=Super --num-keys=1 --consistency-level=QUORUM --nodes=cathy1total,interval_op_rate,interval_key_rate,avg_latency,elapsed_timeOperation [0] retried 10 times - error reading counter key 0 ((InvalidRequestException): unconfigured columnfamily CounterSuper1)0,0,0,NaN,0ENDThe CF created is called SuperCounter1 and not CounterSuper1 INFO 00:34:21,344 ColumnFamilyStore(table='Keyspace1', columnFamily='SuperCounter1') liveRatio is 9.167798032786886 (just-counted was 9.167798032786886). calculation took 1281ms for 9883 columns</description>
      <version>0.8.7,1.0.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.CounterGetter.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3309" opendate="2011-10-4 00:00:00" fixdate="2011-10-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Nodetool Doesnt close the open JMX connection causing it to leak Threads</summary>
      <description>When nodetool is used intensively we will see 1000's of "JMX server connection timeout"Fix is to close the connections when no longer needed.</description>
      <version>0.8.7,1.0.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.NodeCmd.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
</bugrepository>
