<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CASSANDRA">
  <bug id="15347" opendate="2019-10-8 00:00:00" fixdate="2019-11-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add client testing capabilities to in-jvm tests</summary>
      <description>Allow testing native transport code path using in-jvm tests.</description>
      <version>2.2.16,3.0.20,3.11.6,4.0-alpha3,4.0</version>
      <fixedVersion>Test/dtest/java</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.distributed.org.apache.cassandra.distributed.test.ResourceLeakTest.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.test.DistributedTestBase.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.RowUtil.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.Listen.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.InstanceConfig.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.InstanceClassLoader.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.Instance.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.AbstractCluster.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.api.IListen.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.api.IInstance.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.api.Feature.java</file>
      <file type="M">src.java.org.apache.cassandra.transport.Server.java</file>
      <file type="M">src.java.org.apache.cassandra.thrift.ThriftServer.java</file>
      <file type="M">src.java.org.apache.cassandra.service.CassandraDaemon.java</file>
    </fixedFiles>
  </bug>
  <bug id="15371" opendate="2019-10-22 00:00:00" fixdate="2019-10-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incorrect messaging service version breaks in-JVM upgrade tests on trunk</summary>
      <description>The in-JVM upgrade tests on trunk currently fail because the messaging version for internode messaging is selected asÂ MessagingService.current_version, a regression from the implementation in CASSANDRA-15078.</description>
      <version>2.2.16,3.0.20,3.11.6,4.0-alpha3,4.0</version>
      <fixedVersion>Test/dtest/java</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.Instance.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="15435" opendate="2019-11-21 00:00:00" fixdate="2019-12-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SELECT JSON does not return the correct value for empty blobs</summary>
      <description>In an attempt to fix the side effect of a problem CASSANDRA-13868 was committed in 2.2.11, 3.0.15, 3.11.1 and trunk.This patch introduced an issue on how empty values were rendered by SELECT JSON queries.Instead of returning the correct value for the type a null value was now returned.A user detected that problem for text column and opened CASSANDRA-14245 to request a fix for that problem. Unfortunately, I misunderstood the problem and the fix did not solve the real problem. It only made the code return 'an empty string instead of null values.The proper fix is to rollback the changes made for CASSANDRA-13868 and CASSANDRA-14245.Some unit tests also need to be added to test the behavior.</description>
      <version>2.2.16,3.0.20,3.11.6,4.0-alpha3,4.0</version>
      <fixedVersion>CQL/Interpreter</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.cql3.validation.entities.JsonTest.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.selection.Selection.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="15460" opendate="2019-12-19 00:00:00" fixdate="2019-1-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix missing call to enable RPC after native transport is started in in-jvm dtests</summary>
      <description>When starting the native transport, the original patch missed the step of calling StorageService.instance.setRpcReady(true);. This appears to only be required for counter columns, but without it you can't update a counter value.We should add this call after starting up the native transport, and set it to false during the shutdown sequence to mimic the production code.</description>
      <version>2.2.16,3.0.20,3.11.6,4.0-alpha3,4.0</version>
      <fixedVersion>Test/dtest/java</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.distributed.org.apache.cassandra.distributed.test.NativeProtocolTest.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.Instance.java</file>
    </fixedFiles>
  </bug>
  <bug id="15489" opendate="2020-1-7 00:00:00" fixdate="2020-1-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow dtest jar directory to be configurable</summary>
      <description>In some circumstances, we may want to use a non-hard-coded directory as the source for dtest jars. We should allow for a system property to change the default `build` directory.</description>
      <version>2.2.16,3.0.20,3.11.6,4.0-alpha3,4.0</version>
      <fixedVersion>Test/dtest/java</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.Versions.java</file>
    </fixedFiles>
  </bug>
  <bug id="15497" opendate="2020-1-10 00:00:00" fixdate="2020-2-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement node bootstrap in in-JVM tests</summary>
      <description>Currently, we do not have an ability to add nodes to the running in-jvm cluster, either by bootstrap or replacement process. We need to add an ability to add nodes in inactive state, start them up, and bootstrap to test streaming, range movements, and operations that occur during these processes.</description>
      <version>2.2.16,3.0.20,3.11.6,4.0-alpha4,4.0</version>
      <fixedVersion>Test/dtest/java</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.distributed.org.apache.cassandra.distributed.test.NetworkTopologyTest.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.test.DistributedTestBase.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.NetworkTopology.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.InstanceConfig.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.DistributedTestSnitch.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.AbstractCluster.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.api.IInstanceConfig.java</file>
      <file type="M">src.java.org.apache.cassandra.service.GCInspector.java</file>
    </fixedFiles>
  </bug>
  <bug id="15505" opendate="2020-1-15 00:00:00" fixdate="2020-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add message interceptors to in-jvm dtests</summary>
      <description>Currently we only have means to filter messages in in-jvm tests. We need a facility to intercept and modify the messages between nodes for testing purposes.</description>
      <version>2.2.16,3.0.20,3.11.6,4.0-alpha4,4.0</version>
      <fixedVersion>Test/dtest/java</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.MessageFilters.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.Instance.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.IInvokableInstance.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.AbstractCluster.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.api.IMessageFilters.java</file>
      <file type="M">test.distributed.org.apache.cassandra.distributed.api.IMessage.java</file>
    </fixedFiles>
  </bug>
  <bug id="15508" opendate="2020-1-16 00:00:00" fixdate="2020-1-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Failing jvm dtest: FailingRepairTest.testFailingMessage</summary>
      <description>It seems we can't run parameterized unit tests with ant testsome:$ ant testsome -Dtest.name=org.apache.cassandra.distributed.test.FailingRepairTest -Dtest.methods=testFailingMessage....[junit-timeout] Testcase: initializationError(org.junit.runner.manipulation.Filter): Caused an ERROR[junit-timeout] No tests found matching Method testFailingMessage(org.apache.cassandra.distributed.test.FailingRepairTest) from org.junit.internal.requests.ClassRequest@4d95d2a2[junit-timeout] java.lang.Exception: No tests found matching Method testFailingMessage(org.apache.cassandra.distributed.test.FailingRepairTest) from org.junit.internal.requests.ClassRequest@4d95d2a2[junit-timeout] at java.lang.reflect.Constructor.newInstance(Constructor.java:423)</description>
      <version>2.2.16,3.0.20,3.11.6,4.0-alpha3,4.0</version>
      <fixedVersion>Test/unit</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">.circleci.config.yml.LOWRES</file>
      <file type="M">.circleci.config.yml.HIGHRES</file>
      <file type="M">.circleci.config.yml</file>
      <file type="M">.circleci.config-2.1.yml.high.res.patch</file>
      <file type="M">.circleci.config-2.1.yml</file>
    </fixedFiles>
  </bug>
  <bug id="15509" opendate="2020-1-16 00:00:00" fixdate="2020-1-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In-jvm upgrade dtest version parsing does not support 4.0 alpha/beta/rc builds</summary>
      <description>for example:https://circleci.com/gh/krummas/cassandra/2686</description>
      <version>2.2.16,3.0.20,3.11.6,4.0-alpha3,4.0</version>
      <fixedVersion>Test/dtest/java</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.distributed.org.apache.cassandra.distributed.impl.Versions.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
