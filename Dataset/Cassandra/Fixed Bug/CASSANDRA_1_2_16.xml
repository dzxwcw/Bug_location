<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CASSANDRA">
  <bug id="5631" opendate="2013-6-12 00:00:00" fixdate="2013-2-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>NPE when creating column family shortly after multinode startup</summary>
      <description>I'm testing a 2-node cluster and creating a column family right after the nodes startup. I am using the Astyanax client. Sometimes column family creation fails and I see NPEs on the cassandra server:2013-06-12 14:55:31,773 ERROR CassandraDaemon [MigrationStage:1] - Exception in thread Thread[MigrationStage:1,5,main]java.lang.NullPointerException at org.apache.cassandra.db.DefsTable.addColumnFamily(DefsTable.java:510) at org.apache.cassandra.db.DefsTable.mergeColumnFamilies(DefsTable.java:444) at org.apache.cassandra.db.DefsTable.mergeSchema(DefsTable.java:354) at org.apache.cassandra.db.DefinitionsUpdateVerbHandler$1.runMayThrow(DefinitionsUpdateVerbHandler.java:55) at org.apache.cassandra.utils.WrappedRunnable.run(WrappedRunnable.java:28) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) at java.util.concurrent.FutureTask.run(FutureTask.java:166) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) at java.lang.Thread.run(Thread.java:722)2013-06-12 14:55:31,880 ERROR CassandraDaemon [MigrationStage:1] - Exception in thread Thread[MigrationStage:1,5,main]java.lang.NullPointerException at org.apache.cassandra.db.DefsTable.mergeColumnFamilies(DefsTable.java:475) at org.apache.cassandra.db.DefsTable.mergeSchema(DefsTable.java:354) at org.apache.cassandra.db.DefinitionsUpdateVerbHandler$1.runMayThrow(DefinitionsUpdateVerbHandler.java:55) at org.apache.cassandra.utils.WrappedRunnable.run(WrappedRunnable.java:28) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) at java.util.concurrent.FutureTask.run(FutureTask.java:166) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) at java.lang.Thread.run(Thread.java:722)</description>
      <version>1.2.16,2.0.6,2.1beta1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.MigrationManager.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="6168" opendate="2013-10-8 00:00:00" fixdate="2013-3-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>nodetool status should issue a warning when no keyspace is specified</summary>
      <description>Seen in 1.2.10.Apologies if this is expected behavior. Nodetool status reports 0% ownership unless I add a keyspace name.nodetool help docs says:..." status - Print cluster information (state, load, IDs, ...)"...output without keyspace nameDatacenter: DC1===============Status=Up/Down|/ State=Normal/Leaving/Joining/Moving-- Address Load Tokens Owns Host ID RackUN 10.x.x.146 81.96 GB 256 0.0% a70c59b3-a667-4d76-ba5b-ba849ad672da r1UN 10.x.x.63 95.32 GB 256 0.0% f8cb7b10-4ebe-484a-a1c0-6cb2d053901b r1UN 10.x.x.184 89.54 GB 256 0.1% cd86c420-55e2-4d99-8ed9-d9ee8d6a9d9c r1UN 10.x.x.190 79.68 GB 256 0.0% 544c3906-bc02-400d-9fd2-1e39ecadd6ff r1UN 10.x.x.168 93.44 GB 256 0.7% 33be316f-1276-475d-90cf-2667950d3a2c r1UN 10.x.x.132 84.4 GB 256 0.0% b327d9f1-cab0-4583-8e5e-95c50b4074fd r1Datacenter: DCOFFLINE=====================Status=Up/Down|/ State=Normal/Leaving/Joining/Moving-- Address Load Tokens Owns Host ID RackUN 10.x.x.62 56.09 GB 256 32.4% c8994d27-767b-431f-bdc2-9196eeeb6f44 r1UN 10.x.x.131 60.11 GB 256 32.8% 0b9d3314-039e-4f88-8ba6-d0f2885d9a30 r1UN 10.x.x.167 56.45 GB 256 34.0% ba76f4fe-4250-4839-a37d-c1a7c24e585d r1and with keyspace. Example: nodetool status MYKSPSDatacenter: DC1===============Status=Up/Down|/ State=Normal/Leaving/Joining/Moving-- Address Load Tokens Owns (effective) Host ID RackUN 10.x.x.184 89.51 GB 256 50.0% cd86c420-55e2-4d99-8ed9-d9ee8d6a9d9c r1UN 10.x.x.146 81.96 GB 256 50.0% a70c59b3-a667-4d76-ba5b-ba849ad672da r1UN 10.x.x.168 93.44 GB 256 50.0% 33be316f-1276-475d-90cf-2667950d3a2c r1UN 10.x.x.63 95.32 GB 256 50.0% f8cb7b10-4ebe-484a-a1c0-6cb2d053901b r1UN 10.x.x.190 79.68 GB 256 50.0% 544c3906-bc02-400d-9fd2-1e39ecadd6ff r1UN 10.x.x.132 84.4 GB 256 50.0% b327d9f1-cab0-4583-8e5e-95c50b4074fd r1Datacenter: DCOFFLINE=====================Status=Up/Down|/ State=Normal/Leaving/Joining/Moving-- Address Load Tokens Owns (effective) Host ID RackUN 10.x.x.131 60.11 GB 256 32.8% 0b9d3314-039e-4f88-8ba6-d0f2885d9a30 r1UN 10.x.x.167 56.45 GB 256 34.7% ba76f4fe-4250-4839-a37d-c1a7c24e585d r1UN 10.x.x.62 56.09 GB 256 32.5% c8994d27-767b-431f-bdc2-9196eeeb6f44 r1</description>
      <version>1.2.16,2.0.7,2.1beta2</version>
      <fixedVersion>Tool/nodetool</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.NodeCmd.java</file>
    </fixedFiles>
  </bug>
  <bug id="6376" opendate="2013-11-19 00:00:00" fixdate="2013-3-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pig tests are failing</summary>
      <description>On my box, all pig tests are failing with the following stack: [junit] Testcase: org.apache.cassandra.pig.CqlTableDataTypeTest: Caused an ERROR [junit] null [junit] java.lang.ExceptionInInitializerError [junit] at org.apache.cassandra.pig.PigTestBase.startHadoopCluster(PigTestBase.java:104) [junit] at org.apache.cassandra.pig.CqlTableDataTypeTest.setup(CqlTableDataTypeTest.java:198) [junit] Caused by: java.lang.NullPointerException [junit] at org.apache.hadoop.hdfs.MiniDFSCluster.startDataNodes(MiniDFSCluster.java:422) [junit] at org.apache.hadoop.hdfs.MiniDFSCluster.&lt;init&gt;(MiniDFSCluster.java:280) [junit] at org.apache.hadoop.hdfs.MiniDFSCluster.&lt;init&gt;(MiniDFSCluster.java:124) [junit] at org.apache.pig.test.MiniCluster.setupMiniDfsAndMrClusters(MiniCluster.java:50) [junit] at org.apache.pig.test.MiniGenericCluster.&lt;init&gt;(MiniGenericCluster.java:49) [junit] at org.apache.pig.test.MiniCluster.&lt;init&gt;(MiniCluster.java:31) [junit] at org.apache.pig.test.MiniGenericCluster.&lt;clinit&gt;(MiniGenericCluster.java:45)On CASSANDRA-6375, Brandon reported that it was the case on his box too, so I don't think it's a local to my machine. Seems to be a relatively basic setup thing though, not an actual test failure.I'll also note that we have a specific target for pig tests and that this target uses a longer timeout than the one for the test target. If that's because pig tests typically don't finish within the test timeout, then it would be nice to exclude them from the normal test target (and maybe include them in the long-test target).</description>
      <version>1.2.16,2.0.7,2.1beta2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.pig.CqlTableTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6649" opendate="2014-2-4 00:00:00" fixdate="2014-2-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQL: disallow counter update with "USING TIMESTAMP" and "USING TTL"</summary>
      <description>Timestamps are not used by counters and TTL are not supported, but it appears we don't reject counter updates that have "USING TIMESTAMP X" or "USING TTL X". We should since both are non-sensical (the value is completely ignored currently).Note: we should also refuse "USING TIMESTAMP" on "DELETE" statements on counters table: even though we kind of do use a timestamp internally, it's more of an implementation detail and in fact may go away with CASSANDRA-6506 (there is also nothing clever you can do with it by providing it client side).Note bis: strictly speaking doing that could break a few users that where setting those thinking it does something. I think that the lack of validation is more of a bug and that user that think it's doing something probably ought to know it's not sooner than later, but I could be fine with just warning in the log file for 1.2 and 2.0, and only rejecting in 2.1 if someone thinks it's safer.</description>
      <version>1.2.16,2.0.6,2.1beta1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.ModificationStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="6667" opendate="2014-2-6 00:00:00" fixdate="2014-2-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Mean cells per sstable is calculated incorrectly</summary>
      <description>We currently take the average of the mean for each partition, rather than correctly weighting by cell count. This affects hint paging as well as index selectivity calculation.</description>
      <version>1.2.16,2.0.6</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.metrics.ColumnFamilyMetrics.java</file>
      <file type="M">src.java.org.apache.cassandra.db.DataTracker.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStoreMBean.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="6678" opendate="2014-2-7 00:00:00" fixdate="2014-2-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unwanted schema pull while upgrading nodes from 1.2 to 2.0</summary>
      <description>While upgrading from 1.2 to 2.0, the 1.2 nodes are not supposed to pull schemas from upgraded 2.0 nodes to avoid conflicts.This relies on network version checks between the two nodes, but there's a bit of a race between the Gossiper, which is activated first, and the MessagingService, which is activated after the Gossiper and handles network version exchange: if a 1.2 node Gossiper gets a gossip message from a newly 2.0 node before opening connections from the MessagingService, the version will still be 1.2, and the schema will be pulled from the new node.A possible solution may be to have the Gossiper update the network version upon receiving the first gossip message of an upgraded node: thoughts?</description>
      <version>1.2.16,2.0.6</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.MigrationManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="6695" opendate="2014-2-12 00:00:00" fixdate="2014-2-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Don&amp;#39;t exchange schema between nodes with different versions (no pull, no push)</summary>
      <description>Subject. Don't push schema to unknown-, or differently major-versioned nodes, and don't pull schema from them, either.Since we don't support schema altering during upgrade, and adding nodes during cluster upgrades is also a non-recommended thing, this is what we are going to do.Until CASSANDRA-6038, that is.</description>
      <version>1.2.16,2.0.6,2.1beta1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.MigrationManager.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="6701" opendate="2014-2-13 00:00:00" fixdate="2014-2-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>IN on the last clustering columns + ORDER BY DESC yield no results</summary>
      <description>That's not a very common mix but well, the following return no results which is obviously bogus:CREATE TABLE test (k int, c1 int, c2 int, PRIMARY KEY (k, c1, c2));INSERT INTO test(k, c1, c2) VALUES (0, 0, 0);INSERT INTO test(k, c1, c2) VALUES (0, 0, 1);INSERT INTO test(k, c1, c2) VALUES (0, 0, 2);SELECT * FROM test WHERE k=0 AND c1 = 0 AND c2 IN (2, 0) ORDER BY c1 DESCNote: it's pretty useless to order on a column which has an equal restriction, and that's probably why nobody ran into this yet, but that's really just due to a minor typo so there is no reason not to fix.</description>
      <version>1.2.16,2.0.6</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.SelectStatement.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="6713" opendate="2014-2-14 00:00:00" fixdate="2014-2-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Snapshot based repair does not send snapshot command to itself</summary>
      <description>Due to this, the Merkle tree created will differ a lot causing lot of streaming to happen.</description>
      <version>1.2.16,2.0.6,2.1beta1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.AntiEntropyService.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="6732" opendate="2014-2-19 00:00:00" fixdate="2014-2-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cross DC writes not compatible 1.2-&gt;1.1 during rolling upgrade</summary>
      <description>During a rolling upgrade from 1.1.12 to 1.2.15 one DC at a time only 1/3 of the writes to the first DC to be upgraded actually make it to the other DC, and LOTS of hints attempt to get made.Looks like the header for forwarded writes changed from 1.1-&gt;1.2 so the 1.1 nodes can't read it.</description>
      <version>1.2.16</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.StorageProxy.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="6735" opendate="2014-2-19 00:00:00" fixdate="2014-2-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Exceptions during memtable flushes on shutdown hook prevent process shutdown</summary>
      <description>If an exception occurs while flushing memtables during the shutdown hook, the process is left hanging due to non-daemon threads still running.</description>
      <version>1.2.16,2.0.6</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="6773" opendate="2014-2-26 00:00:00" fixdate="2014-3-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Delimiter not working for special characters in COPY command from CQLSH</summary>
      <description>COPY command from CQLSH which can be used to load data from CSV files is not working with option delimiter='\t'cqlsh&gt;CREATE TABLE airplanes (name text PRIMARY KEY,manufacturer ascii,year int,mach float);cqlsh&gt;INSERT INTO airplanes (name, manufacturer, year, mach) VALUES ('P38-Lightning', 'Lockheed', 1937, 7);cqlsh&gt; SELECT * FROM airplanes; name | mach | manufacturer | year -----------------------------+----- P38-Lightning | 0.7 | Lockheed | 1937cqlsh&gt; COPY airplanes (name, manufacturer, year, mach) TO 'temp.tsv' WITH DELIMITER = '\t';"delimiter" must be an 1-character stringcqlsh&gt; COPY airplanes (name, manufacturer, year, mach) FROM 'temp.csv' WITH DELIMITER = '\t';"delimiter" must be an 1-character string</description>
      <version>1.2.16,2.0.7,2.1beta2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug id="6803" opendate="2014-3-5 00:00:00" fixdate="2014-3-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>nodetool getsstables converts key from String incorrectly</summary>
      <description>Trivial fix, just need to get the bytebuffer from the CfMetaData's key validator as opposed to just calling String#getBytes (which is broken for most data types).</description>
      <version>1.2.16,2.0.7</version>
      <fixedVersion>Tool/nodetool</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="6811" opendate="2014-3-6 00:00:00" fixdate="2014-3-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>nodetool no longer shows node joining</summary>
      <description>When we added effective ownership output to nodetool ring/status, we accidentally began excluding joining nodes because we iterate the ownership maps instead of the the endpoint to token map when printing the output, and the joining nodes don't have any ownership. The simplest thing to do is probably iterate the token map instead, and not output any ownership info for joining nodes.</description>
      <version>1.2.16,2.0.7</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.NodeTool.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.NodeCmd.java</file>
    </fixedFiles>
  </bug>
  <bug id="6896" opendate="2014-3-20 00:00:00" fixdate="2014-3-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>status output is confused when hostname resolution is enabled</summary>
      <description>root@bw-2:/srv/cassandra# bin/nodetool status Datacenter: datacenter1=======================Status=Up/Down|/ State=Normal/Leaving/Joining/Moving-- Address Load Owns (effective) Host ID Token RackUN 10.208.35.225 40.85 KB 68.2% 57b21a16-3c71-4d20-a953-5c8ee84afc28 -9158741197235941893 rack1UN 10.208.8.123 73.33 KB 65.2% 2ce51e7c-0028-46d2-9177-23a506e6943c -8950424030780117621 rack1UN 10.208.8.63 40.93 KB 66.6% 830cd3cc-a609-4dec-90f5-65c65cc41816 -9133899597809185600 rack1root@bw-2:/srv/cassandra# bin/nodetool status -rDatacenter: datacenter1=======================Status=Up/Down|/ State=Normal/Leaving/Joining/Moving-- Address Load Owns (effective) Host ID Token Rack?N bw-2 ? 68.2% null -9158741197235941893 rack1?N bw-3 ? 66.6% null -9133899597809185600 rack1?N bw-1 ? 65.2% null -8950424030780117621 rack1Somewhere we must mistakenly be using the resolved name to look up endpoints.</description>
      <version>1.2.16,2.0.7</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.NodeCmd.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
