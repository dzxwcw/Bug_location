<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CASSANDRA">
  <bug id="2293" opendate="2011-3-8 00:00:00" fixdate="2011-9-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Rewrite nodetool help</summary>
      <description>Once CASSANDRA-2008 is through and we are happy with the approach I would like to write similar help for nodetool. Both command line help of the form "nodetool help" and "nodetool help command."</description>
      <version>1.2.0</version>
      <fixedVersion>Legacy/DocumentationandWebsite</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.NodeCmd.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3761" opendate="2012-1-20 00:00:00" fixdate="2012-11-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQL 3.0</summary>
      <description>This ticket is a reformulation/generalization of CASSANDRA-2474. The core change of CQL 3.0 is to introduce the new syntaxes that were discussed in CASSANDRA-2474 that allow to: Provide a better/more native support for wide rows, using the idea of transposed vie. The generalization to composite columns.The attached text file create_cf_syntaxes.txt recall the new syntaxes introduced.The changes proposed above allow (and strongly suggest in some cases) a number of other changes to the language that this ticket proposes to explore/implement (more details coming in the comments).</description>
      <version>1.2.0</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.thrift.ThriftValidation.java</file>
      <file type="M">src.java.org.apache.cassandra.thrift.CassandraServer.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.service.ClientState.java</file>
      <file type="M">src.java.org.apache.cassandra.db.SystemTable.java</file>
      <file type="M">src.java.org.apache.cassandra.db.RowMutation.java</file>
      <file type="M">src.java.org.apache.cassandra.db.marshal.CompositeType.java</file>
      <file type="M">src.java.org.apache.cassandra.db.marshal.AbstractCompositeType.java</file>
      <file type="M">src.java.org.apache.cassandra.db.IMutation.java</file>
      <file type="M">src.java.org.apache.cassandra.db.CounterMutation.java</file>
      <file type="M">src.java.org.apache.cassandra.cql.QueryProcessor.java</file>
      <file type="M">src.java.org.apache.cassandra.config.CFMetaData.java</file>
      <file type="M">src.avro.internode.genavro</file>
      <file type="M">interface.cassandra.thrift</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.KsDef.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.CqlRow.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.CqlResult.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.CqlMetadata.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.Constants.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.CfDef.java</file>
      <file type="M">interface.thrift.gen-java.org.apache.cassandra.thrift.Cassandra.java</file>
    </fixedFiles>
  </bug>
  <bug id="3920" opendate="2012-2-15 00:00:00" fixdate="2012-12-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>tests for cqlsh</summary>
      <description>Cqlsh has become big enough and tries to cover enough situations that it's time to start acting like a responsible adult and make this bugger some unit tests to guard against regressions.</description>
      <version>1.2.0</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pylib.cqlshlib.formatting.py</file>
      <file type="M">pylib.cqlshlib.displaying.py</file>
      <file type="M">pylib.cqlshlib.cql3handling.py</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug id="4406" opendate="2012-7-3 00:00:00" fixdate="2012-9-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update stress for CQL3</summary>
      <description>Stress does not support CQL3. We should add support for it so that: we can benchmark CQL3 we can benchmark CASSANDRA-2478</description>
      <version>1.2.0</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.util.Operation.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.Session.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.CqlReader.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.CqlInserter.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="4474" opendate="2012-7-30 00:00:00" fixdate="2012-9-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Respect five-minute flush moratorium after initial CL replay</summary>
      <description>As noted in CASSANDRA-1967, the post-replay flush can kick off compactions before the five minute grace period introduced in CASSANDRA-3181 to avoid i/o contention while server is warming up.</description>
      <version>1.1.5,1.2.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.utils.DefaultInteger.java</file>
      <file type="M">src.java.org.apache.cassandra.service.AbstractCassandraDaemon.java</file>
      <file type="M">src.java.org.apache.cassandra.db.compaction.AbstractCompactionStrategy.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
    </fixedFiles>
  </bug>
  <bug id="4606" opendate="2012-9-3 00:00:00" fixdate="2012-9-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Recommends: ntp to Debian packages</summary>
      <description>NTP is important enough in correct operation of a cassandra cluster that we should at least Recommend it.</description>
      <version>1.1.5,1.2.0</version>
      <fixedVersion>Packaging</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">debian.control</file>
    </fixedFiles>
  </bug>
  <bug id="4633" opendate="2012-9-7 00:00:00" fixdate="2012-9-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>cassandra-stress: --enable-cql does not work with COUNTER_ADD</summary>
      <description>When I remove --enable-cql the following runs successfully.Note: INSERT/READ are fine../cassandra-stress --operation=COUNTER_ADD --enable-cql --replication-factor=3 --consistency-level=ONE --num-keys=10000 --columns=20 total,interval_op_rate,interval_key_rate,avg_latency,elapsed_timeOperation [1] retried 10 times - error incrementing key 0001 ((InvalidRequestException): cannot parse 'C58' as hex bytes)Operation [0] retried 10 times - error incrementing key 0000 ((InvalidRequestException): cannot parse 'C58' as hex bytes)0,0,0,NaN,0FAILURE</description>
      <version>1.2.0</version>
      <fixedVersion>Legacy/Tools</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.Session.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.CqlCounterGetter.java</file>
      <file type="M">tools.stress.src.org.apache.cassandra.stress.operations.CqlCounterAdder.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="4802" opendate="2012-10-12 00:00:00" fixdate="2012-10-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Regular startup log has confusing "Bootstrap/Replace/Move completed!" without boostrap, replace, or move</summary>
      <description>A regular startup completes successfully, but it has a confusing message the end of the startup:" INFO 15:19:29,137 Bootstrap/Replace/Move completed! Now serving reads."This happens despite no bootstrap, replace, or move.While purely cosmetic, this makes you wonder what the node just did - did it just bootstrap?! It should simply read something like "Startup completed! Now serving reads" unless it actually has done one of the actions in the error message.Complete log at the end:INFO 15:13:30,522 Log replay complete, 6274 replayed mutations INFO 15:13:30,527 Cassandra version: 1.0.12 INFO 15:13:30,527 Thrift API version: 19.20.0 INFO 15:13:30,527 Loading persisted ring state INFO 15:13:30,541 Starting up server gossip INFO 15:13:30,542 Enqueuing flush of Memtable-LocationInfo@1828864224(29/36 serialized/live bytes, 1 ops) INFO 15:13:30,543 Writing Memtable-LocationInfo@1828864224(29/36 serialized/live bytes, 1 ops) INFO 15:13:30,550 Completed flushing /data2/data-cassandra/system/LocationInfo-hd-274-Data.db (80 bytes) INFO 15:13:30,563 Starting Messaging Service on port 7000 INFO 15:13:30,571 Using saved token 31901471898837980949691369446728269823 INFO 15:13:30,572 Enqueuing flush of Memtable-LocationInfo@294410307(53/66 serialized/live bytes, 2 ops) INFO 15:13:30,573 Writing Memtable-LocationInfo@294410307(53/66 serialized/live bytes, 2 ops) INFO 15:13:30,579 Completed flushing /data2/data-cassandra/system/LocationInfo-hd-275-Data.db (163 bytes) INFO 15:13:30,581 Node kaos-cass02.xxxxxxx/1.2.3.4 state jump to normal INFO 15:13:30,598 Bootstrap/Replace/Move completed! Now serving reads. INFO 15:13:30,600 Will not load MX4J, mx4j-tools.jar is not in the classpath</description>
      <version>1.2.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
    </fixedFiles>
  </bug>
  <bug id="4913" opendate="2012-11-5 00:00:00" fixdate="2012-11-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>DESC KEYSPACE &lt;ks&gt; from cqlsh won&amp;#39;t show cql3 cfs</summary>
      <description>I'm assuming because we made 'describe_keyspaces' from thrift not return cql3 cfs.</description>
      <version>1.2.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug id="4996" opendate="2012-11-27 00:00:00" fixdate="2012-12-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>After changing the compaction strategy, compression_strategy always returning back to the "SnappyCompressor" through CQL 2.2.0</summary>
      <description>faced very strange behaviour when changing compression_parameters of exisiting CF. After changing the compaction strategy, compression_strategy returning back to the "SnappyCompressor".Using cassandra version 1.1.5.&amp;#91;cqlsh 2.2.0 | Cassandra 1.1.5 | CQL spec 2.0.0 | Thrift protocol 19.32.0&amp;#93;I have one column family with following paramters:cqlsh &gt; describe columnfamily auditlog_01;CREATE TABLE auditlog_01 (lid text PRIMARY KEY,dscn text,asid text,soapa text) WITHcomment='' ANDcomparator=text ANDread_repair_chance=0.100000 ANDgc_grace_seconds=864000 ANDdefault_validation=text ANDmin_compaction_threshold=4 ANDmax_compaction_threshold=32 ANDreplicate_on_write='true' ANDcompaction_strategy_class='SizeTieredCompactionStrategy' ANDcompaction_strategy_options:sstable_size_in_mb='5' ANDcompression_parameters:sstable_compression='SnappyCompressor';Changing compression strategy to 'DeflateCompressorcqlsh&gt; ALTER TABLE auditlog_01 WITH compression_parameters:sstable_compression = 'DeflateCompressor' AND compression_parameters:chunk_length_kb = 64;cqlsh&gt; describe columnfamily auditlog_01;CREATE TABLE auditlog_01 (lid text PRIMARY KEY,dscn text,asid text,soapa text) WITH comment='' AND comparator=text AND read_repair_chance=0.100000 AND gc_grace_seconds=864000 AND default_validation=text AND min_compaction_threshold=4 AND max_compaction_threshold=32 AND replicate_on_write='true' AND compaction_strategy_class='SizeTieredCompactionStrategy' AND compaction_strategy_options:sstable_size_in_mb='5' AND compression_parameters:chunk_length_kb='64' AND compression_parameters:sstable_compression='DeflateCompressor';it's sucessfuly changed the compression strategy to 'DeflateCompressor, after that when i am trying to change the compaction strategy, compression strategy returing back to "SnappyCompressor".cqlsh&gt; alter table auditlog_01 with compaction_strategy_class='LeveledCompactionStrategy' AND compaction_strategy_options:sstable_size_in_mb=5;cqlsh&gt; describe columnfamily auditlog_01;CREATE TABLE auditlog_01 ( lid text PRIMARY KEY,dscn text,asid text,soapa text) WITH comment='' AND comparator=text AND read_repair_chance=0.100000 AND gc_grace_seconds=864000 AND default_validation=text AND min_compaction_threshold=4 AND max_compaction_threshold=32 AND replicate_on_write='true' AND compaction_strategy_class='SizeTieredCompactionStrategy' AND compaction_strategy_options:sstable_size_in_mb='5' AND compression_parameters:sstable_compression='SnappyCompressor';</description>
      <version>1.1.8,1.2.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql.CreateColumnFamilyStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.cql.CFPropDefs.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.statements.CreateColumnFamilyStatement.java</file>
      <file type="M">src.java.org.apache.cassandra.cql3.CFPropDefs.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5060" opendate="2012-12-12 00:00:00" fixdate="2012-12-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>select keyspace_name from system.schema_keyspaces</summary>
      <description>It is currently possible to "describe tables" to list the tables in the current keyspace, or list all tables in all keyspaces if you are not currently in a keyspace. It is also possible to enumerate the keyspaces with a cql command to select from the system.schema_columnfamilies. There should be a simple "describe keyspaces" command that enumerates just the keyspaces and is syntactic sugar for "select keyspace name from schema_keyspaces".</description>
      <version>1.2.0</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">bin.cqlsh</file>
    </fixedFiles>
  </bug>
  <bug id="5066" opendate="2012-12-13 00:00:00" fixdate="2012-12-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Compression params validation assumes SnappyCompressor</summary>
      <description>This hasn't caused any issues yet since DeflateCompressor and SnappyCompressor have the same empty set for supportedOptions, but is a potential issue.Combined with CASSANDRA-4996 this also brings back CASSANDRA-4266.</description>
      <version>1.1.8,1.2.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.io.compress.CompressionParameters.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5082" opendate="2012-12-20 00:00:00" fixdate="2012-12-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Disallow counters in collection (CQL3)</summary>
      <description>We don't support counters in collections but we don't throw an error when someone tries to create such a thing. Attaching patch to return a validation error.</description>
      <version>1.2.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.cql3.ParsedType.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5089" opendate="2012-12-23 00:00:00" fixdate="2012-1-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>get_range_slices does not validate end_token</summary>
      <description>get_range_slices times out, java log has the following exception:ERROR &amp;#91;Thrift:1&amp;#93; 2012-12-22 08:14:30,120 AbstractCassandraDaemon.java (line 135) Exception in thread Thread&amp;#91;Thrift:1,5,main&amp;#93;java.lang.AssertionError: &amp;#91;DecoratedKey(28555413689034504124051437792156504, 6434313866653035643631663962323635323937343337653666636265616162),max(0)&amp;#93; at org.apache.cassandra.dht.Bounds.&lt;init&gt;(Bounds.java:45) at org.apache.cassandra.dht.Bounds.&lt;init&gt;(Bounds.java:38) at org.apache.cassandra.thrift.CassandraServer.get_range_slices(CassandraServer.java:698) at org.apache.cassandra.thrift.Cassandra$Processor$get_range_slices.getResult(Cassandra.java:3083) at org.apache.cassandra.thrift.Cassandra$Processor$get_range_slices.getResult(Cassandra.java:3071) at org.apache.thrift.ProcessFunction.process(ProcessFunction.java:32) at org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:34) at org.apache.cassandra.thrift.CustomTThreadPoolServer$WorkerProcess.run(CustomTThreadPoolServer.java:186) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603) at java.lang.Thread.run(Thread.java:722)We see it every time on the SECOND get_range_slices call when we clear start_token and set start_key in the key range.We noticed this in 1.1.7 first, 1.1.8 still affected. 1.1.6 is fine.Please contact me if you need more information.</description>
      <version>1.1.9,1.2.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.thrift.ThriftValidation.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
