<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CASSANDRA">
  <bug id="14377" opendate="2018-4-11 00:00:00" fixdate="2018-8-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Returning invalid JSON for NaN and Infinity float values</summary>
      <description>After inserting special float values like NaN and Infinity into a table:CREATE TABLE testme (t1 bigint, t2 float, t3 float, PRIMARY KEY (t1));INSERT INTO testme (t1, t2, t3) VALUES (7, NaN, Infinity);and returning them as JSON...cqlsh:demodb&gt; select json * from testme; &amp;#91;json&amp;#93;-------------------------------------- {"t1": 7, "t2": NaN, "t3": Infinity} ... the result will not be validated (e.g. with https://jsonlint.com/ ) because neither NaN nor Infinity is a valid JSON value. The consensus seems to be returning JSON's `null` in these cases, based on this article https://stackoverflow.com/questions/1423081/json-left-out-infinity-and-nan-json-status-in-ecmascript and other similar ones.</description>
      <version>2.2.14,3.0.18,3.11.4,4.0-alpha1,4.0</version>
      <fixedVersion>Legacy/CQL</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.cql3.validation.entities.JsonTest.java</file>
      <file type="M">src.java.org.apache.cassandra.db.marshal.FloatType.java</file>
      <file type="M">src.java.org.apache.cassandra.db.marshal.DoubleType.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="149" opendate="2009-5-7 00:00:00" fixdate="2009-5-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>regression in CF.digest causes NPE when CF contains no columns</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.db.ColumnFamilyTest.java</file>
      <file type="M">src.java.org.apache.cassandra.utils.FBUtilities.java</file>
      <file type="M">src.java.org.apache.cassandra.db.Row.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ReadVerbHandler.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ReadResponse.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamily.java</file>
      <file type="M">test.unit.org.apache.cassandra.service.MoveTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.dht.BootStrapperTest.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageLoadBalancer.java</file>
      <file type="M">src.java.org.apache.cassandra.service.MigrationManager.java</file>
      <file type="M">src.java.org.apache.cassandra.service.LoadDisseminator.java</file>
      <file type="M">src.java.org.apache.cassandra.gms.Gossiper.java</file>
      <file type="M">src.java.org.apache.cassandra.gms.FailureDetector.java</file>
      <file type="M">src.java.org.apache.cassandra.gms.EndpointState.java</file>
      <file type="M">src.java.org.apache.cassandra.gms.ApplicationState.java</file>
      <file type="M">src.java.org.apache.cassandra.db.migration.Migration.java</file>
    </fixedFiles>
  </bug>
  <bug id="14931" opendate="2018-12-12 00:00:00" fixdate="2018-1-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Backport In-JVM dtests to 2.2, 3.0 and 3.11</summary>
      <description>The In-JVM dtests are of significant value, and much of the testing we are exploring with it can easily be utilised on all presently maintained versions. We should backport the functionality to at least 3.0.x and 3.11.x - and perhaps even consider 2.2.</description>
      <version>2.2.14,3.0.18,3.11.4</version>
      <fixedVersion>Test/dtest/java</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.distributed.org.apache.cassandra.distributed.LegacyAdapter.java</file>
    </fixedFiles>
  </bug>
  <bug id="14956" opendate="2019-1-7 00:00:00" fixdate="2019-1-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Paged Range Slice queries with DISTINCT can drop rows from results</summary>
      <description>If we have a partition where the first CQL row is fully deleted (possibly via TTLs), and that partition happens to fall on the page boundary of a paged range query which is using SELECT DISTINCT, the next live partition after it is omitted from the result set. This is due to over fetching of the pages and a bug in trimming those pages where overlap occurs.This does not affect 3.0+.</description>
      <version>2.1.21,2.2.14</version>
      <fixedVersion>CQL/Interpreter</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.pager.RangeSliceQueryPager.java</file>
      <file type="M">src.java.org.apache.cassandra.service.pager.AbstractQueryPager.java</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">test.unit.org.apache.cassandra.cql3.PagingTest.java</file>
      <file type="M">test.conf.cassandra-murmur.yaml</file>
    </fixedFiles>
  </bug>
  <bug id="14985" opendate="2019-1-15 00:00:00" fixdate="2019-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CircleCI docker image should bake in more dependencies</summary>
      <description>It's pretty frequent especially in the upgrade tests for either maven or github to fail. I think they are detecting the thundering herd of containers all pulling stuff at the same time and opting out.We can reduce this especially for maven dependencies since most are hardly ever changing by downloading everything we can in advance and baking it into the image.When building the docker image Initialize the local maven repository by running ant maven-ant-tasks-retrieve-build for 2.1-trunk and do the same with CCM and the Apache repository.</description>
      <version>2.2.14,3.0.18,3.11.4,4.0-alpha1,4.0</version>
      <fixedVersion>CI,Test/dtest/python,Test/unit</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">.circleci.config.yml</file>
    </fixedFiles>
  </bug>
</bugrepository>
