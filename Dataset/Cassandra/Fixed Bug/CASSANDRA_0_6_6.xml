<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CASSANDRA">
  <bug id="1074" opendate="2010-5-10 00:00:00" fixdate="2010-9-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>check bloom filters to make minor compaction able to delete (some) tombstones</summary>
      <description>Given a tombstoned key which is older than GCGraceSeconds, current (0.6.1) compaction implementation still requires a major compaction for the key to actually be deleted. The major compaction is required is because we must know whether there is a version of the key inside all SSTables associated with the columnfamily, including ones not involved in minor compactions. However, as we have bloom filters into each one of these SSTables, minor compaction can relatively inexpensively check for existence of this key in SSTable files not involved in the current minor compaction, and thereby delete the key, assuming all bloom filters return negative. If the filter returns positive, a major compaction would of course still be required.For use cases like CASSANDRA-1041 where users are strongly motivated to not do a major compaction, this seems to answer the jbellis objection :"You don't want to skip large files in major compactions, since the definition of major is "compact everything so it is safe to remove tombstones." "The above described improvement appears to provide "safe to remove (some) tombstones" without requiring "compact everything", and so may be a useful optimization.=Rob</description>
      <version>0.6.6,0.7beta2</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.io.LazilyCompactedRowTest.java</file>
      <file type="M">test.unit.org.apache.cassandra.db.CompactionsPurgeTest.java</file>
      <file type="M">src.java.org.apache.cassandra.io.sstable.SSTableReader.java</file>
      <file type="M">src.java.org.apache.cassandra.io.sstable.SSTableIdentityIterator.java</file>
      <file type="M">src.java.org.apache.cassandra.io.PrecompactedRow.java</file>
      <file type="M">src.java.org.apache.cassandra.io.LazilyCompactedRow.java</file>
      <file type="M">src.java.org.apache.cassandra.io.CompactionIterator.java</file>
      <file type="M">src.java.org.apache.cassandra.db.CompactionManager.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1371" opendate="2010-8-9 00:00:00" fixdate="2010-9-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>replace createHardLink with JNA wrapper to link (posix) / CreateHardLink (windows)</summary>
      <description></description>
      <version>0.6.6,0.7beta2</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.service.StorageServiceServerTest.java</file>
      <file type="M">src.java.org.apache.cassandra.utils.FBUtilities.java</file>
      <file type="M">src.java.org.apache.cassandra.utils.CLibrary.java</file>
      <file type="M">src.java.org.apache.cassandra.io.util.FileUtils.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1429" opendate="2010-8-25 00:00:00" fixdate="2010-8-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The dynamic snitch can&amp;#39;t be used with network topology strategies</summary>
      <description>also ported to 0.6 and committed there</description>
      <version>0.6.6,0.7beta2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.service.DatacenterWriteResponseHandler.java</file>
      <file type="M">src.java.org.apache.cassandra.service.DatacenterSyncWriteResponseHandler.java</file>
      <file type="M">src.java.org.apache.cassandra.service.DatacenterQuorumResponseHandler.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.OldNetworkTopologyStrategy.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.NetworkTopologyStrategy.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1446" opendate="2010-8-30 00:00:00" fixdate="2010-8-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>cassandra-cli still relies on cassandra.in.sh instead of cassandra-env.sh</summary>
      <description>When we switched to cassandra-env.sh, we neglected to change the cli as well. This leads to people unable to launch to the client due to heap size, and not having any idea how to change the heap for the cli itself.</description>
      <version>0.6.6,0.7beta2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">bin.cassandra-cli</file>
    </fixedFiles>
  </bug>
  <bug id="14750" opendate="2018-9-13 00:00:00" fixdate="2018-9-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing check for receiving digest response from transient node</summary>
      <description>Range reads do not check for transient nodes returning a request. Read Command also currently allows a combination of transient node and digest query.</description>
      <version>None</version>
      <fixedVersion>Legacy/Coordination</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.locator.ReplicaUtils.java</file>
      <file type="M">test.unit.org.apache.cassandra.db.ReadCommandTest.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageProxy.java</file>
      <file type="M">src.java.org.apache.cassandra.service.reads.ResponseResolver.java</file>
      <file type="M">src.java.org.apache.cassandra.service.reads.DigestResolver.java</file>
      <file type="M">src.java.org.apache.cassandra.service.reads.AbstractReadExecutor.java</file>
      <file type="M">src.java.org.apache.cassandra.db.SinglePartitionReadCommand.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ReadCommand.java</file>
      <file type="M">src.java.org.apache.cassandra.db.PartitionRangeReadCommand.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1479" opendate="2010-9-8 00:00:00" fixdate="2010-9-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>nodetool compacts all keyspaces</summary>
      <description>nodetools compact &lt;keyspace&gt; actually invokes a compaction on all configured keyspaces.</description>
      <version>0.6.6</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.tools.NodeProbe.java</file>
      <file type="M">src.java.org.apache.cassandra.tools.NodeCmd.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageServiceMBean.java</file>
      <file type="M">src.java.org.apache.cassandra.service.StorageService.java</file>
    </fixedFiles>
  </bug>
  <bug id="1481" opendate="2010-9-8 00:00:00" fixdate="2010-9-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>PropertyFileEndPointSnitch synchronization is a bottleneck</summary>
      <description>the Properties class extends Hashtable, which is ancient and synchronized.(this is not really a problem in 0.7, since snitch results are cached.)</description>
      <version>0.6.6,0.7beta3</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.utils.FBUtilities.java</file>
      <file type="M">src.java.org.apache.cassandra.locator.PropertyFileSnitch.java</file>
      <file type="M">NEWS.txt</file>
      <file type="M">conf.cassandra-rack.properties</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1512" opendate="2010-9-17 00:00:00" fixdate="2010-9-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>cassandra will replay the last mutation in a commitlog when it shouldn&amp;#39;t</summary>
      <description></description>
      <version>0.6.6,0.7beta2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">test.unit.org.apache.cassandra.db.RecoveryManager2Test.java</file>
      <file type="M">test.unit.org.apache.cassandra.db.CommitLogTest.java</file>
      <file type="M">src.java.org.apache.cassandra.db.commitlog.CommitLog.java</file>
      <file type="M">src.java.org.apache.cassandra.db.ColumnFamilyStore.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1528" opendate="2010-9-21 00:00:00" fixdate="2010-9-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cassandra holds a socket in CLOSE_WAIT on the storage port</summary>
      <description>To repro: telnet to 7000, disconnect. You have a socket in CLOSE_WAIT that will stay there until the server is restarted.</description>
      <version>0.6.6,0.7beta2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.cassandra.net.IncomingTcpConnection.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
