<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="ARIES">
  <bug fixdate="2010-5-30 01:00:00" id="301" opendate="2010-4-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing &amp;#39;peristence.xml&amp;#39; does not trigger warning</summary>
      <description>If a bundle has a meta-persistence header, but is missing its persistence.xml, persistence doesn't work (obviously) but no diagnostic warning is given explaining why. Such a bundle is in an inconsistent state, so we probably should put out a warning.</description>
      <version>None</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jpa.jpa-container.src.main.java.org.apache.aries.jpa.container.impl.PersistenceBundleHelper.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2010-5-11 01:00:00" id="308" opendate="2010-5-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix licences in JS files in demo sample</summary>
      <description>Missing Apache licenses and missed some changes associated with ARIES-303 which need to be re-instated.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples-sandbox.demo-sample.demo-prototype.src.main.resources.web.demo.TwistieSection.js</file>
      <file type="M">samples-sandbox.demo-sample.demo-prototype.src.main.resources.web.demo.SimpleInitialLayout.js</file>
      <file type="M">samples-sandbox.demo-sample.demo-prototype.src.main.resources.web.demo.ProviderSelector.js</file>
      <file type="M">samples-sandbox.demo-sample.demo-prototype.src.main.resources.web.demo.Preferences.js</file>
      <file type="M">samples-sandbox.demo-sample.demo-prototype.src.main.resources.web.demo.DwrLoadingDialog.js</file>
      <file type="M">samples-sandbox.demo-sample.demo-prototype.src.main.resources.web.demo.Dependency.js</file>
      <file type="M">samples-sandbox.demo-sample.demo-prototype.src.main.resources.web.demo.BundleStatusGrid.js</file>
      <file type="M">samples-sandbox.demo-sample.demo-prototype.src.main.resources.web.demo.BundleAppearance.js</file>
      <file type="M">samples-sandbox.demo-sample.demo-prototype.src.main.resources.web.index.html</file>
      <file type="M">samples-sandbox.demo-sample.demo-prototype.src.main.resources.web.demo.LayoutManager.js</file>
      <file type="M">samples-sandbox.demo-sample.demo-prototype.src.main.resources.web.demo.Bundle.js</file>
      <file type="M">samples-sandbox.demo-sample.demo-assembly.src.main.filtered-resources.configuration.config.ini</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2009-1-21 01:00:00" id="31" opendate="2009-10-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement Bundle State MBean</summary>
      <description>Implement Bundle State MBean wich provides detailed access to the state of one bundle and aggregatedstate of a group of bundles.</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-itests.src.test.java.org.apache.aries.jmx.AbstractIntegrationTest.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.framework.BundleStateMBeanHandler.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.framework.BundleState.java</file>
      <file type="M">jmx.pom.xml</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.agent.JMXAgentImpl.java</file>
      <file type="M">jmx.jmx-core.pom.xml</file>
      <file type="M">jmx.jmx-bundle.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-5-11 01:00:00" id="310" opendate="2010-5-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>MBean exceptions</summary>
      <description>The exceptions raised by aries mbeans are not quite consistent with that the JMX OSGi specification defines. However, the specification itself is very inconsistent and unclear when to throw an IOException or IllegalArgumentException.</description>
      <version>0.2</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-core.src.test.java.org.apache.aries.jmx.util.FrameworkUtilsTest.java</file>
      <file type="M">jmx.jmx-core.src.test.java.org.apache.aries.jmx.useradmin.UserAdminTest.java</file>
      <file type="M">jmx.jmx-core.src.test.java.org.apache.aries.jmx.cm.ConfigurationAdminTest.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.provisioning.ProvisioningService.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.permissionadmin.PermissionAdmin.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.framework.PackageState.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.util.FrameworkUtils.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.useradmin.UserAdmin.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.framework.ServiceState.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.framework.Framework.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.cm.ConfigurationAdmin.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-5-12 01:00:00" id="311" opendate="2010-5-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>JNDI implementation does not follow the specification</summary>
      <description>The Aries JNDI implementation does not quite follow the specification.</description>
      <version>0.2</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">testsupport.testsupport-unit.src.main.java.org.apache.aries.mocks.BundleContextMock.java</file>
      <file type="M">jndi.jndi-url.src.test.java.org.apache.aries.jndi.url.ServiceRegistryContextTest.java</file>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.url.ServiceRegistryListContext.java</file>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.url.ServiceRegistryContext.java</file>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.url.OsgiURLContextFactory.java</file>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.url.AbstractServiceRegistryContext.java</file>
      <file type="M">jndi.jndi-core.src.test.java.org.apache.aries.jndi.ObjectFactoryTest.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.startup.Activator.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.ProviderAdminService.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.OSGiObjectFactoryBuilder.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.ObjectFactoryHelper.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.DirObjectFactoryHelper.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.DelegateContext.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.ContextManagerServiceFactory.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.ContextManagerService.java</file>
      <file type="M">jndi.jndi-bundle.pom.xml</file>
      <file type="M">jndi.pom.xml</file>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.url.Activator.java</file>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.services.ServiceHelper.java</file>
      <file type="M">jndi.jndi-url.pom.xml</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.OSGiInitialContextFactoryBuilder.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.DelegateContextFactory.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.ContextHelper.java</file>
      <file type="M">jndi.jndi-core.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2010-5-16 01:00:00" id="314" opendate="2010-5-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix various minor issues with the demo sample</summary>
      <description>1) Problem with VisibilitySwitch added in ARIES-3082) Crash when application bundle is stopped</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples-sandbox.wordassociation-sample.demoscript.html</file>
      <file type="M">samples-sandbox.demo-sample.demo-prototype.src.main.resources.web.demo.LayoutManager.js</file>
      <file type="M">samples-sandbox.demo-sample.demo-prototype.src.main.resources.web.index.html</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2009-3-21 01:00:00" id="32" opendate="2009-10-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement Permission Admin MBean</summary>
      <description>Implement Permission Admin MBean based on Permission Admin service.</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-core.src.test.java.org.apache.aries.jmx.permissionadmin.PermissionAdminTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-6-25 01:00:00" id="320" opendate="2010-5-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support ClassTransformers for PUs</summary>
      <description>One way of supporting runtime enhancement of JPA entity classes is via java agent approach. Aries JPA should allow for java agent based enhancement.</description>
      <version>0.2</version>
      <fixedVersion>0.2</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jpa.jpa-container.src.main.java.org.apache.aries.jpa.container.impl.PersistenceBundleManager.java</file>
      <file type="M">jpa.jpa-api.src.main.java.org.apache.aries.jpa.container.ManagedPersistenceUnitInfoFactory.java</file>
      <file type="M">jpa.jpa-container.src.main.java.org.apache.aries.jpa.container.unit.impl.TransformerWrapper.java</file>
      <file type="M">jpa.jpa-container.src.main.java.org.apache.aries.jpa.container.unit.impl.PersistenceUnitInfoImpl.java</file>
      <file type="M">jpa.jpa-container.src.main.java.org.apache.aries.jpa.container.unit.impl.ManagedPersistenceUnitInfoImpl.java</file>
      <file type="M">jpa.jpa-container.src.main.java.org.apache.aries.jpa.container.unit.impl.ManagedPersistenceUnitInfoFactoryImpl.java</file>
      <file type="M">jpa.jpa-api.src.main.java.org.apache.aries.jpa.transformer.TransformerAgent.java</file>
      <file type="M">jpa.jpa-api.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-6-2 01:00:00" id="329" opendate="2010-6-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add support for listeners to ManagedPersistenceUnitInfoFactory</summary>
      <description>Add support for service-based listeners for ManagedPersistenceUnitInfoFactory. The listeners can be used to perform additional actions as the persistence bundles are detected or untracked by the Aries JPA code.</description>
      <version>0.2</version>
      <fixedVersion>0.2</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jpa.jpa-container.src.main.java.org.apache.aries.jpa.container.unit.impl.ManagedPersistenceUnitInfoFactoryImpl.java</file>
      <file type="M">jpa.jpa-api.src.main.java.org.apache.aries.jpa.container.ManagedPersistenceUnitInfoFactoryListener.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2010-6-11 01:00:00" id="335" opendate="2010-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update OBR Application Resolver to use OBR 1.6</summary>
      <description>In the initial OBRApplicationResolver we had to do some pretty nasty things to get it to work because of the way OBR works. The two biggest are:1. We had to generate a repository.xml for the application by value content to resolve against, this had to be written to disk and then removed to add it to OBR.2. We had to add a private repository (the application by value content) as a global repository. This meant that if someone else used OBR they could have ended up with invalid results. Also it meant we could only resolve one application at a time.3. The application was resolved against the current framework, and the bundles in the current framework would be excluded from the results. Since the resolution info can be stored in the application in the DEPLOYMENT.MF which could be used in a different JVM with different bundles in the framework you could end up with an app not working in the target framework.The latest level of OBR has fixes for these 3 issues, so we should try to update it so it works against OBR 1.6.Oh and OBR 1.6 appears to be faster at parsing the repo.xml files, so every performance improvement helps.</description>
      <version>0.2</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-obr-resolver.src.main.resources.OSGI-INF.blueprint.obr-resolver.xml</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.OBRAriesResolver.java</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.impl.ResourceImpl.java</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.impl.RequirementImpl.java</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.impl.CapabilityImpl.java</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.impl.ApplicationResourceImpl.java</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.generator.RepositoryDescriptorGenerator.java</file>
      <file type="M">application.application-obr-resolver.pom.xml</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.OBRResolverTest.java</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.OBRAppManagerTest.java</file>
      <file type="M">application.application-itests.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2009-1-21 01:00:00" id="34" opendate="2009-10-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement Provisioning Service MBean</summary>
      <description>Implement Provisioning Service MBean which manages a Provisioning Service.</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.agent.JMXAgentImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-6-15 01:00:00" id="340" opendate="2010-6-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>All projects that use org.apache.felix.configadmin should define exclusions for this artifact</summary>
      <description>org.osgi.foundation is a transitive dependency of the org.apache.felix.configadmin artifact. Unfortunately, org.osgi.foundation contains classes that are normally shipped with JDK and this leads to problems with compiling projects under Eclipse (as 'mvn eclipse:eclipse' places the classpath entry for org.osgi.foundation above the one for the JDK). &lt;dependency&gt; &lt;groupId&gt;org.apache.felix&lt;/groupId&gt; &lt;artifactId&gt;org.apache.felix.configadmin&lt;/artifactId&gt; &lt;version&gt;1.2.4&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;org.apache.felix&lt;/groupId&gt; &lt;artifactId&gt;org.osgi.compendium&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;org.apache.felix&lt;/groupId&gt; &lt;artifactId&gt;org.osgi.core&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt; &lt;/dependency&gt;Should be used instead of: &lt;dependency&gt; &lt;groupId&gt;org.apache.felix&lt;/groupId&gt; &lt;artifactId&gt;org.apache.felix.configadmin&lt;/artifactId&gt; &lt;version&gt;1.2.4&lt;/version&gt; &lt;/dependency&gt;This change has already been applied to several Aries subprojects, but it hasn't for jpa, jmx, subsystem, and web.</description>
      <version>None</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">web.pom.xml</file>
      <file type="M">subsystem.pom.xml</file>
      <file type="M">jpa.pom.xml</file>
      <file type="M">jmx.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2010-7-29 01:00:00" id="345" opendate="2010-6-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make the blueprint tutorial wotk with the the post-release build</summary>
      <description>The tutorial needs updating to build with '0.2-incubating-SNAPSHOT' etc</description>
      <version>0.2</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">tutorials.blueprint.tutorial-assembly.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">tutorials.blueprint.tutorial-modules.pom.xml</file>
      <file type="M">tutorials.blueprint.tutorial-modules.greeter-server-osgi.pom.xml</file>
      <file type="M">tutorials.blueprint.tutorial-modules.greeter-server-blueprint.pom.xml</file>
      <file type="M">tutorials.blueprint.tutorial-modules.greeter-client-osgi.pom.xml</file>
      <file type="M">tutorials.blueprint.tutorial-modules.greeter-client-blueprint.pom.xml</file>
      <file type="M">tutorials.blueprint.tutorial-modules.greeter-api.pom.xml</file>
      <file type="M">tutorials.blueprint.tutorial-assembly.src.main.docs.instructions.html</file>
      <file type="M">tutorials.blueprint.pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2010-9-22 01:00:00" id="367" opendate="2010-7-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>AriesTrader - incompatible column warnings when reinitializing the db tables using jpa</summary>
      <description>We get warnings of incompatible columns when attempting to initialize the database using JPA annotations due to differences in the size of varchar columns (255 vs. 250).</description>
      <version>0.2</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.QuoteDataBeanImpl.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.OrderDataBeanImpl.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.HoldingDataBeanImpl.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.AccountProfileDataBeanImpl.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.AccountDataBeanImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2010-8-12 01:00:00" id="379" opendate="2010-8-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Samples to use Openjpa 2.0.0 rather than 2.0.0-beta3</summary>
      <description/>
      <version>0.2</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2009-11-22 01:00:00" id="38" opendate="2009-10-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Setup modules for JMX component</summary>
      <description>Project &amp; build setup for the JMX component + aries-jmx aries-jmx-api aries-jmx-core</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-10-17 01:00:00" id="381" opendate="2010-8-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove workaround for Equinox Bug 298894.</summary>
      <description>Remove workaround for https://bugs.eclipse.org/bugs/show_bug.cgi?id=298894. Call refreshPackages() on each bundle as it's uninstalled.</description>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-runtime-framework.src.main.java.org.apache.aries.application.runtime.framework.BundleFrameworkImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-8-18 01:00:00" id="382" opendate="2010-8-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Aries itests projects need to use version 1.2.1 of maven-paxexam-plugin</summary>
      <description>Similary to servicemix-depends-plugin maven-paxexam-plugin generates an incorrect dependencies.properties file if a SNAPSHOT version needs to be downloaded from a remote repo. The Aries Jira issue related to servicemix-depends-plugin is ARIES-364.The change that was made in maven-paxexam-plugin between version 1.2.0 and 1.2.1 is described here: http://issues.ops4j.org/browse/PAXEXAM-160</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">parent.default-parent.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-1-19 01:00:00" id="383" opendate="2010-8-19 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Implementation of option Blueprint Quiesce Participant</summary>
      <description>Implement Blueprint Quiesce Participant</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.pom.xml</file>
      <file type="M">blueprint.blueprint-itests.pom.xml</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.ServiceRecipe.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BlueprintExtender.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BlueprintContainerImpl.java</file>
      <file type="M">blueprint.blueprint-core.pom.xml</file>
      <file type="M">blueprint.blueprint-bundle.pom.xml</file>
      <file type="M">blueprint.blueprint-annotation-itest.src.test.java.org.apache.aries.blueprint.itests.BlueprintAnnotationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-7-24 01:00:00" id="387" opendate="2010-8-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure there is one setter that matches the type of the getter</summary>
      <description>Per discussion on devlist - http://mail-archives.apache.org/mod_mbox/incubator-aries-dev/201008.mbox/%3cAANLkTin8jmMkT2mSeX+PKqruG6=Et5z92ZFCbNM+J2c=@mail.gmail.com%3eIf there isn't one setter that matches the type of the getter, we need to throw ComponentDefinitionException and fail the creation of the bean.</description>
      <version>None</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.utils.ReflectionUtils.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2010-8-31 01:00:00" id="393" opendate="2010-8-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blog Assembly is broken again :(</summary>
      <description>Since integrating the changes for isolation the blog sample assembly has been broken because it now needs two additional bundles.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.ariestrader.assemblies.equinox-test-harness.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">samples.ariestrader.assemblies.equinox-test-harness.pom.xml</file>
      <file type="M">samples.blog.blog-assembly.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">samples.blog.blog-assembly.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-8-31 01:00:00" id="394" opendate="2010-8-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Tidy up some minor issues in the blog sample</summary>
      <description>I've noticed that the JPA BlogPersistence service contains some code relating to a DataSource that is never hit. I think this is a hold over from the JDBC implementation, so I'll remove the code here.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blog.blog-persistence-jpa.src.main.java.org.apache.aries.samples.blog.persistence.jpa.BlogPersistenceServiceImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-9-7 01:00:00" id="402" opendate="2010-9-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update AriesTrader so that it loads the sql files to create DBs using getResource</summary>
      <description>Currently there is some pretty crazy code in the AriesTrader sample that recreates the databases on demand as requested by the user. This needs to be cleaned up so that it loads the sql from the bundle rather than expecting it to be available directly in the Equinox assembly or an expanded WAR file as was the case in the former DayTrader code. Also need to clean up some of the sql and entity column lengths so that they are consistent.</description>
      <version>0.1,0.2</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.resources.dbscripts.other.Table.ddl</file>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.resources.dbscripts.oracle.Table.ddl</file>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.resources.dbscripts.derby.Table.ddl</file>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.resources.dbscripts.db2.Table.ddl</file>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.java.org.apache.aries.samples.ariestrader.web.TradeConfigServlet.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.java.org.apache.aries.samples.ariestrader.web.TradeBuildDB.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.QuoteDataBeanImpl.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.OrderDataBeanImpl.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.HoldingDataBeanImpl.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.AccountProfileDataBeanImpl.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.AccountDataBeanImpl.java</file>
      <file type="M">samples.ariestrader.assemblies.equinox-test-harness.src.main.resources.tradeDB.sql</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2010-11-29 01:00:00" id="430" opendate="2010-9-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Whiteboard registration support for JMX DynamicMBeans</summary>
      <description>As proposed on dev &amp;#91;1&amp;#93; I have hacked together a small piece of code which implements support for the whiteboard pattern for registering MBeans with MBean servers.The code is in my Sling whiteboard at http://svn.apache.org/repos/asf/sling/whiteboard/fmeschbe/jmx-whiteboard but is intended to be added to the Aries JMX functionality.The single-class implementation picks up DynamicMBean servies registered as "javax.management.DynamicMBean". Each such service is registered with each registered MBeanServer service (similar to how the framework MBeans are registered by jmx.core). The JMX ObjectName can either be provided with a "jmx.objectname" service registration property (String type) or the DynamicMBean may implement the MBeanRegistration interface in which case the ObjectName is provided by the preRegister method during registration.This is just a first hack which has not really been tested but mainly serves to show the idea. It is currently implemented as a Declarative Services component but may as well be implemented as a regular class using ServerTracker instances and instantiated by the BundleActivator (which may be a good idea to make this as widely usable as possible - for example in Sling we don't currently use Blueprint, so a Blueprint based implementation would be a no-go for us )If there would be interest in this, I would try to test and validate this piece with the hopes to get a release soon (may be released independently, hint hint )&amp;#91;1&amp;#93; http://markmail.org/message/p464v4gst2uifm5h</description>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.pom.xml</file>
      <file type="M">jmx.jmx-whiteboard.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-9-30 01:00:00" id="431" opendate="2010-9-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add support for "bad" OSGi Web container implementations</summary>
      <description>I was playing around with the Jetty implementation of the OSGi web container chapter. It has some interesting behaviours, the most significant is it sets the java.naming.initial.context system property, but doesn't register it in the service registry. It relies on the default JDK JNDI behaviour which uses the thread context classloader to load the initial context factory. Gemini Web has a similar bug. I can't fix those web container implementations, but since I want to be able to use these I need a solution. Rather than a bespoke solution that works for me with Jetty I'll check in a new project which will provide a bundle to fix these buggy OSGi Web container implementations.</description>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jndi.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-10-1 01:00:00" id="432" opendate="2010-10-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove the system.out.println in our production code</summary>
      <description>There are a couple of places we print out some messages by using system.out in our non-test code. This is not good.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-annotation-impl.src.main.java.org.apache.aries.blueprint.annotation.impl.BlueprintAnnotationScannerImpl.java</file>
      <file type="M">blueprint.blueprint-annotation-impl.src.main.java.org.apache.aries.blueprint.annotation.impl.Activator.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.ModelledResourceManagerImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-10-1 01:00:00" id="433" opendate="2010-10-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Equals method do not work when using JDK proxies</summary>
      <description/>
      <version>0.2</version>
      <fixedVersion>0.3,blueprint-0.2.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.proxy.Collaborator.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-10-1 01:00:00" id="434" opendate="2010-10-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Sort the imported package to make it easier to read</summary>
      <description/>
      <version>0.2</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">web.web-urlhandler.src.main.java.org.apache.aries.web.converter.impl.WarToWabConverterImpl.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2010-10-12 01:00:00" id="452" opendate="2010-10-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Provide ability for the JNDI environment to be augmented by an integrator</summary>
      <description>In my environment I need to be able to augment the JNDI environment with additional properties before a context is created. I will add a service based plug point for this.</description>
      <version>0.2</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.Utils.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.startup.Activator.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.OSGiInitialContextFactoryBuilder.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.ContextManagerService.java</file>
      <file type="M">jndi.jndi-bundle.pom.xml</file>
      <file type="M">jndi.jndi-api.pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2010-10-28 01:00:00" id="472" opendate="2010-10-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>BundleFramework not stopping bundles correctly</summary>
      <description>The BundleFramework.stop(Bundle b) method is not checking for fragments before stopping the given bundle. The behaviour should mirror the checking in the start method.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-runtime-framework.src.main.java.org.apache.aries.application.runtime.framework.BundleFrameworkImpl.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2010-11-25 01:00:00" id="500" opendate="2010-11-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Field injection does not consider fields defined on parent classes</summary>
      <description/>
      <version>0.2</version>
      <fixedVersion>0.3,blueprint-0.2.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.utils.ReflectionUtils.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-11-30 01:00:00" id="503" opendate="2010-11-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support for JNDI RMI URL handler</summary>
      <description>We should provide out-of-the-box support for RMI urls.</description>
      <version>0.2</version>
      <fixedVersion>0.3</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jndi.jndi-rmi.src.main.java.org.apache.aries.jndi.rmi.Activator.java</file>
      <file type="M">jndi.pom.xml</file>
      <file type="M">jndi.jndi-bundle.src.main.java.org.apache.aries.jndi.priv.Activator.java</file>
      <file type="M">jndi.jndi-bundle.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-12-2 01:00:00" id="505" opendate="2010-12-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Do not use System.err nor Throwable#printStackTraces() but rather use a jul Logger</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jndi.jndi-rmi.src.main.java.org.apache.aries.jndi.rmi.Activator.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.startup.Activator.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2011-7-23 01:00:00" id="584" opendate="2011-2-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blueprint Managed Service Factory Instantiates Duplicate Service</summary>
      <description>Creating a simple managed service factory, two services are instantiated for a single factory configuration.</description>
      <version>0.2,0.3</version>
      <fixedVersion>1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-itests.src.test.java.org.apache.aries.blueprint.itests.TestConfigAdmin.java</file>
      <file type="M">blueprint.blueprint-cm.src.test.java.org.apache.aries.blueprint.compendium.cm.ManagedServiceFactoryTest.java</file>
      <file type="M">blueprint.blueprint-cm.src.main.java.org.apache.aries.blueprint.compendium.cm.CmNamespaceHandler.java</file>
      <file type="M">blueprint.blueprint-cm.src.main.java.org.apache.aries.blueprint.compendium.cm.CmManagedServiceFactory.java</file>
    </fixedFiles>
  </bug>
</bugrepository>