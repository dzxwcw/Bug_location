<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="ARIES">
  <bug fixdate="2010-1-11 01:00:00" id="113" opendate="2010-1-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use headers when resolving dependencies for BundleStateMBean</summary>
      <description>The BundleStateMBean #getImportedPackages(long bundleId) &amp; #getRequiredBundles(long) methods resolve dependencies using iteration over all bundles in the framework.The performance of these methods can be improved by first checking the manifest headers and using these values for PackageAdmin queries.(Note: Bundles using DynamicImport still require full iteration)</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-core.src.test.java.org.apache.aries.jmx.util.FrameworkUtilsTest.java</file>
      <file type="M">jmx.jmx-core.src.test.java.org.apache.aries.jmx.codec.BundleDataTest.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.util.FrameworkUtils.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2013-1-4 01:00:00" id="1131" opendate="2013-11-4 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Extend blueprint.service import version range in blueprint.webosgi bundle</summary>
      <description>blueprint.webosgi 1.0.0 bundle imports org.apache.aries.blueprint.service package with version 1.3.0.Unfortunately, blueprint-core 1.3.0 exports this package with version 1.2.0 (which is not correct, I will create another Jira for that).In order to be able to use blueprint.webosgi with blueprint-core 1.3.0, the import version range should be extended to [1.2, 2).</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-web-osgi.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-5-17 01:00:00" id="292" opendate="2010-4-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unable to delete the *.eba file from the samples/blog/blog-assembly/target/load folder while it was running.</summary>
      <description>Moving to version 0.4</description>
      <version>0.3</version>
      <fixedVersion>0.4</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-management.src.main.java.org.apache.aries.application.management.impl.AriesApplicationManagerImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2009-10-23 01:00:00" id="40" opendate="2009-10-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Move Application Metadata Processing from contrib to trunk</summary>
      <description>Move Application Metadata Processing from contrib to trunk.The code processes an application description provided in a manifest format. I will document this on the wiki and post to the list to start a discussion.</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-3-6 01:00:00" id="400" opendate="2010-9-6 00:00:00" resolution="Not A Problem">
    <buginformation>
      <summary>Use Java Futures for Subsystem Admin</summary>
      <description>Subsystem Installation is asynchronous. The current API allows cancellations of an installation but this only cancels the current install. This can cause problems as what is "current" will change and can result in incorrect cancellations.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">subsystem.subsystem-itests.src.test.resources.subsystem2.META-INF.MANIFEST.MF</file>
      <file type="M">subsystem.subsystem-itests.src.test.java.org.apache.aries.subsystem.itests.SubsystemAdminTest.java</file>
      <file type="M">subsystem.subsystem-itests.src.test.java.org.apache.aries.subsystem.itests.SubsystemAdmin2Test.java</file>
      <file type="M">subsystem.subsystem-itests.pom.xml</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.SubsystemResourceProcessor.java</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.SubsystemAdminImpl.java</file>
      <file type="M">subsystem.subsystem-api.src.main.java.org.apache.aries.subsystem.SubsystemEvent.java</file>
      <file type="M">subsystem.subsystem-api.src.main.java.org.apache.aries.subsystem.SubsystemAdmin.java</file>
      <file type="M">subsystem.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-9-7 01:00:00" id="401" opendate="2010-9-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>maven bundle plugin update from v 2.0.1 to 2.1.0</summary>
      <description>I still hits a NPE occasionally with 2.0.1 so I think we should try to upgrade to the latest 2.1.0 to see if it improves.WARNING] Exception while updating local OBR: null.lang.NullPointerException at org.apache.felix.obrplugin.ObrUpdate.walkOnTree(ObrUpdate.java:541) at org.apache.felix.obrplugin.ObrUpdate.updateRepository(ObrUpdate.java:239) at org.apache.felix.obrplugin.ObrInstall.updateLocalBundleMetadata(ObrInstall.java:183) at org.apache.felix.obrplugin.ObrInstall.execute(ObrInstall.java:142) at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490) at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutora:694) at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecExecutor.java:556) at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.</description>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">parent.default-parent.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-2-9 01:00:00" id="403" opendate="2010-9-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add in new Blog itest to use quiesce</summary>
      <description/>
      <version>0.3</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blog.blog-itests.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-2-15 01:00:00" id="409" opendate="2010-9-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix samples to use version 1.1 of geronimo-jpa_2.0 spec.</summary>
      <description>The blog sample currently uses geronimo-jpa_2.0_spec-1.0.jar. There was an error in the packaging of this version which is corrected in geronimo-jpa_2.0_spec-1.1.jar. Fixing it will likely imply other minor changes in the blog sample JPA persistence project.</description>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.pom.xml</file>
      <file type="M">samples.blog.blog-persistence-jpa.pom.xml</file>
      <file type="M">samples.blog.blog-itests.pom.xml</file>
      <file type="M">samples.blog.blog-assembly.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">samples.blog.blog-assembly.pom.xml</file>
      <file type="M">samples.ariestrader.assemblies.equinox-test-harness.src.main.filtered-resources.configuration.config.ini</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2009-10-27 01:00:00" id="42" opendate="2009-10-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Compilation problem when using JDK 1.5</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.impl.ContentImpl.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.impl.ApplicationMetadataImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-1-22 01:00:00" id="423" opendate="2010-9-22 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Repair the GOAT sample and add enough to the platform to make running the JDBC blog sample possible</summary>
      <description>The GOAT sample assembly in missing application bundles after recent refactoring of application. It woulsd slso be convenient for demo purposes to add enough to the assembly platform to be able to run the blog sample and then use GOAT to look at the bundles.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.goat.goat-assembly.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">samples.goat.goat-assembly.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2010-9-26 01:00:00" id="427" opendate="2010-9-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Get rid of cglib which doesn&amp;#39;t provide anything compared to asm</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.pom.xml</file>
      <file type="M">blueprint.blueprint-sample.src.main.java.org.apache.aries.blueprint.sample.Foo.java</file>
      <file type="M">blueprint.blueprint-itests.src.test.java.org.apache.aries.blueprint.itests.QuiesceBlueprintTest.java</file>
      <file type="M">blueprint.blueprint-itests.src.test.java.org.apache.aries.blueprint.itests.MultiBundleWithCgLibTest.java</file>
      <file type="M">blueprint.blueprint-itests.src.test.java.org.apache.aries.blueprint.itests.MultiBundleWithAsmTest.java</file>
      <file type="M">blueprint.blueprint-itests.src.test.java.org.apache.aries.blueprint.itests.AbstractIntegrationTest.java</file>
      <file type="M">blueprint.blueprint-itests.pom.xml</file>
      <file type="M">blueprint.blueprint-core.src.test.java.org.apache.aries.blueprint.proxy.ProxySubclassGeneratorTest.java</file>
      <file type="M">blueprint.blueprint-core.src.test.java.org.apache.aries.blueprint.container.AbstractServiceReferenceTest.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.proxy.WrapperedObject.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.proxy.Collaborator.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.proxy.CgLibInterceptorWrapper.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.proxy.AsmInterceptorWrapper.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.ServiceRecipe.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.ReferenceRecipe.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BeanRecipe.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe.java</file>
      <file type="M">blueprint.blueprint-core.pom.xml</file>
      <file type="M">blueprint.blueprint-bundle.pom.xml</file>
      <file type="M">blueprint.blueprint-annotation-itest.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2010-11-29 01:00:00" id="430" opendate="2010-9-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Whiteboard registration support for JMX DynamicMBeans</summary>
      <description>As proposed on dev &amp;#91;1&amp;#93; I have hacked together a small piece of code which implements support for the whiteboard pattern for registering MBeans with MBean servers.The code is in my Sling whiteboard at http://svn.apache.org/repos/asf/sling/whiteboard/fmeschbe/jmx-whiteboard but is intended to be added to the Aries JMX functionality.The single-class implementation picks up DynamicMBean servies registered as "javax.management.DynamicMBean". Each such service is registered with each registered MBeanServer service (similar to how the framework MBeans are registered by jmx.core). The JMX ObjectName can either be provided with a "jmx.objectname" service registration property (String type) or the DynamicMBean may implement the MBeanRegistration interface in which case the ObjectName is provided by the preRegister method during registration.This is just a first hack which has not really been tested but mainly serves to show the idea. It is currently implemented as a Declarative Services component but may as well be implemented as a regular class using ServerTracker instances and instantiated by the BundleActivator (which may be a good idea to make this as widely usable as possible - for example in Sling we don't currently use Blueprint, so a Blueprint based implementation would be a no-go for us )If there would be interest in this, I would try to test and validate this piece with the hopes to get a release soon (may be released independently, hint hint )&amp;#91;1&amp;#93; http://markmail.org/message/p464v4gst2uifm5h</description>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.pom.xml</file>
      <file type="M">jmx.jmx-whiteboard.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-9-30 01:00:00" id="431" opendate="2010-9-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add support for "bad" OSGi Web container implementations</summary>
      <description>I was playing around with the Jetty implementation of the OSGi web container chapter. It has some interesting behaviours, the most significant is it sets the java.naming.initial.context system property, but doesn't register it in the service registry. It relies on the default JDK JNDI behaviour which uses the thread context classloader to load the initial context factory. Gemini Web has a similar bug. I can't fix those web container implementations, but since I want to be able to use these I need a solution. Rather than a bespoke solution that works for me with Jetty I'll check in a new project which will provide a bundle to fix these buggy OSGi Web container implementations.</description>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jndi.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-10-1 01:00:00" id="432" opendate="2010-10-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove the system.out.println in our production code</summary>
      <description>There are a couple of places we print out some messages by using system.out in our non-test code. This is not good.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-annotation-impl.src.main.java.org.apache.aries.blueprint.annotation.impl.BlueprintAnnotationScannerImpl.java</file>
      <file type="M">blueprint.blueprint-annotation-impl.src.main.java.org.apache.aries.blueprint.annotation.impl.Activator.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.ModelledResourceManagerImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2009-11-30 01:00:00" id="45" opendate="2009-10-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor Blueprint HelloWorld sample</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-helloworld.blueprint-helloworld-client.src.main.resources.OSGI-INF.blueprint.config.xml</file>
      <file type="M">blueprint.blueprint-helloworld.blueprint-helloworld-client.src.main.java.org.apache.aries.blueprint.helloworldclient.HelloWorldClientImpl.java</file>
      <file type="M">blueprint.blueprint-helloworld.blueprint-helloworld-client.src.main.java.org.apache.aries.blueprint.helloworldclient.HelloWorldClient.java</file>
      <file type="M">blueprint.blueprint-helloworld.blueprint-helloworld-client.pom.xml</file>
      <file type="M">blueprint.blueprint-helloworld.blueprint-helloworld-server.src.main.resources.OSGI-INF.blueprint.config.xml</file>
      <file type="M">blueprint.blueprint-helloworld.blueprint-helloworld-server.src.main.java.org.apache.aries.blueprint.helloworldserver.HelloWorldServerImpl.java</file>
      <file type="M">blueprint.blueprint-helloworld.blueprint-helloworld-server.src.main.java.org.apache.aries.blueprint.helloworldserver.HelloWorldServer.java</file>
      <file type="M">blueprint.blueprint-helloworld.blueprint-helloworld-server.pom.xml</file>
      <file type="M">blueprint.blueprint-helloworld.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-12-13 01:00:00" id="455" opendate="2010-10-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow the Aries JPA runtime to process WAB files</summary>
      <description>The Aries JPA runtime currently deliberately ignores WAB files because it isn't clear whether they should be processed according to Java EE rules or not.I propose the following: A WAB with a Meta-Persistence header should be treated like any other persistence bundle A WAB with no Meta-Persistence header should follow the rules of the OSGi Web Applications specification. Namely the JPA runtime should look for META-INF/persistence.xml in any locations listed on the bundle classpath (or in the root if no classpath is defined).This is not the normal Java EE behaviour. We will not find META-INF/persistence.xml in any jar in WEB-INF/lib, or in WEB-INF/classes unless it is explicitly on the bundle classpath. This is, however, consistent with normal WAB behaviour and I believe is therefore the correct approach.</description>
      <version>0.3</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jpa.jpa-container.src.test.java.org.apache.aries.jpa.container.PersistenceBundleLifecycleTest.java</file>
      <file type="M">jpa.jpa-container.src.main.java.org.apache.aries.jpa.container.impl.PersistenceBundleHelper.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2010-5-14 01:00:00" id="458" opendate="2010-10-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>${version} is deprecated in maven 3 - use ${project.version}</summary>
      <description>There are a lot of deprecation warnings when running with maven 3</description>
      <version>0.3</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">tutorials.blueprint.tutorial-assembly.pom.xml</file>
      <file type="M">subsystem.subsystem-example.subsystem-helloIsolationRef.pom.xml</file>
      <file type="M">sandbox.samples.words-sample.words-assembly.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">sandbox.samples.words-sample.pom.xml</file>
      <file type="M">sandbox.samples.transaction-sample.pom.xml</file>
      <file type="M">sandbox.samples.dgoat.pom.xml</file>
      <file type="M">sandbox.samples.dgoat.dgoat-eba.pom.xml</file>
      <file type="M">sandbox.samples.dgoat.dgoat-assembly.src.main.filtered-resources.serverConfigTuscany.config.ini</file>
      <file type="M">sandbox.samples.dgoat.dgoat-assembly.src.main.filtered-resources.clientConfigTuscany.config.ini</file>
      <file type="M">sandbox.samples.bank.pom.xml</file>
      <file type="M">samples.blog.blog-assembly.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">samples.ariestrader.assemblies.equinox-test-harness.src.main.filtered-resources.configuration.config.ini</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2010-11-22 01:00:00" id="465" opendate="2010-10-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Application itests - testTwitter test improvement</summary>
      <description>At the moment, the test reads a 7.5M repository.xml from an internet location. It slows test run and also the test will fail if you run test offline.</description>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2010-10-29 01:00:00" id="474" opendate="2010-10-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Test failure in build 722</summary>
      <description>org.osgi.framework.BundleException: Exception in org.apache.aries.application.itest.twitter.TwitterQuery.start() of bundle org.apache.aries.application.itest.twitter.bundle. at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:805) at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:754) at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:352) at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:280) at org.apache.aries.application.runtime.impl.ApplicationContextImpl.start(ApplicationContextImpl.java:177) at org.apache.aries.application.runtime.itests.OBRResolverAdvancedTest.testTwitter(OBRResolverAdvancedTest.java:450) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.injectContextAndInvoke(CallableTestMethodImpl.java:134) at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.call(CallableTestMethodImpl.java:101) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.ops4j.pax.exam.rbc.internal.RemoteBundleContextImpl.remoteCall(RemoteBundleContextImpl.java:80) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:305) at sun.rmi.transport.Transport$1.run(Transport.java:159) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:155) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:535) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649) at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) at java.lang.Thread.run(Thread.java:619)Caused by: java.lang.IncompatibleClassChangeError: Found interface twitter4j.QueryResult, but class was expected at org.apache.aries.application.itest.twitter.TwitterQuery.start(TwitterQuery.java:43) at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run(BundleContextImpl.java:782) at java.security.AccessController.doPrivileged(Native Method) at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:773) ... 30 more</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-itest-twitter.twitter-bundle.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2010-11-2 01:00:00" id="479" opendate="2010-11-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to geronimo transaction manager 2.2</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">transaction.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-11-5 01:00:00" id="482" opendate="2010-11-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Move jmx-whiteboard pattern itests to shared pax-exam level (1.2.0)</summary>
      <description/>
      <version>0.3</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-whiteboard.src.test.java.org.apache.aries.jmx.whiteboard.integration.helper.MyTinyBundle.java</file>
      <file type="M">jmx.jmx-whiteboard.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-11-8 01:00:00" id="485" opendate="2010-11-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>On IBM J9 JVM Blog itests hang</summary>
      <description>With Geronimo transaction manager 2.2, on the J9 JVM we see consistent hangs in the JpaBlogSampleWithEbaTest, which is just the first itest to use the real transaction manager. Moving back to 2.1.3 fixes the problem, so almost certainly it is in some form related to the new level.Concretely this has been seen when building the trunk with:mvn -fae -e -B clean install</description>
      <version>0.3</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">transaction.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-2-8 01:00:00" id="486" opendate="2010-11-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>JMX Whiteboard itests fail on IBM JVM</summary>
      <description>JMX Itests need to add the pax-exam-junit to work on the IBM JVM.</description>
      <version>0.3</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-whiteboard.src.test.java.org.apache.aries.jmx.whiteboard.integration.helper.IntegrationTestBase.java</file>
      <file type="M">jmx.jmx-itests.src.test.java.org.apache.aries.jmx.AbstractIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2010-2-22 01:00:00" id="499" opendate="2010-11-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Check in remote services sample using SCA</summary>
      <description>Banking samples which uses Tuscany/SCA for remote services</description>
      <version>0.3</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples-sandbox.bank.bank-assembly.src.main.filtered-resources.serverConfig.config.ini</file>
      <file type="M">samples-sandbox.bank.bank-assembly.src.main.filtered-resources.clientConfig.config.ini</file>
      <file type="M">samples-sandbox.bank.bank-assembly.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2009-1-19 01:00:00" id="50" opendate="2009-11-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement Package State MBean</summary>
      <description>This MBean provides information about the package state of the framework.</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.agent.JMXAgentImpl.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2010-12-3 01:00:00" id="507" opendate="2010-12-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Proxy impl and proxy bundle build against proxy.api with old group id</summary>
      <description>Currently the proxy-impl and proxy-bundle projects build against org.apache.aries/org.apache.aries.proxy.api rather than org.apache.aries.proxy/org.apache.aries.proxy.api, which is where the code now lives.</description>
      <version>0.3</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">proxy.proxy-impl.pom.xml</file>
      <file type="M">proxy.proxy-bundle.pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2010-12-9 01:00:00" id="513" opendate="2010-12-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>JNDI implementation does not interact well with InitialLdapContext</summary>
      <description>There appears to be no particular provision in the spec to make sure that proxied contexts returned from the OSGi InitialContextFactoryBuilder should be instances of LdapContext. This may likely be an omission.Typical exception:javax.naming.NotContextException: Expected an LdapContext object.at javax.naming.ldap.InitialLdapContext.getDefaultInitLdapContext(InitialLdapContext.java:109)at javax.naming.ldap.InitialLdapContext.setRequestControls(InitialLdapContext.java:132)...</description>
      <version>0.3</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jndi.jndi-core.src.test.java.org.apache.aries.jndi.InitialContextTest.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.DelegateContext.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-12-13 01:00:00" id="515" opendate="2010-12-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Exceptions being hidden when thrown by InitialContextFactory from a Builder</summary>
      <description>A common use of JNDI is to perform authentication against an LDAP registry of users. This typically works by going new InitialDirContext(props) where the props contains a userid/password. This requires the AuthenticationException to be thrown from the InitialDirContext constructor. When used with the default JNDI implementation what actually happens is you get a NoInitialContextException because the creation of the Context fails and if the ICF was created from an ICFB then the exception is swallowed rather than rethrown.Alasdair</description>
      <version>0.3</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.ContextHelper.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2010-12-22 01:00:00" id="522" opendate="2010-12-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Proxy equality always return true</summary>
      <description/>
      <version>0.3</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">proxy.proxy-impl.src.main.java.org.apache.aries.proxy.impl.ProxyHandler.java</file>
      <file type="M">proxy.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-12-22 01:00:00" id="525" opendate="2010-12-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use maven-bundle-plugin 2.2-SNAPSHOT</summary>
      <description>Switch to build using 2.2-SNAPSHOT of the maven bundle plugin.It supports WABs, and appears to be much faster.</description>
      <version>0.3</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blog.blog-web.pom.xml</file>
      <file type="M">samples.ariestrader.modules.ariestrader-web.pom.xml</file>
      <file type="M">parent.default-parent.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-1-5 01:00:00" id="531" opendate="2011-1-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow field injection in some cases with the Blueprint extender&amp;#39;s permissions</summary>
      <description>Currently, Blueprint uses the joint permissions of the Blueprint bundle and the Blueprint extender bundle to perform any kind of privileged actions like property injection, service retrieval and field injection.However, this permission scheme does not work that well with field injection because usually a Blueprint bundle would not need to (and probably should not) have ReflectPermission. Especially, if all that the field injection is used for is something relatively common like injecting a PersistenceContext ...So with this issue a slightly more relaxed scheme will be introduced where: field injection for fields in classes that reside in the Blueprint bundle itself is done with the permissions of the Blueprint extender all other field injections uses joint permissions as before</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.test.java.org.apache.aries.blueprint.utils.ReflectionUtilsTest.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.utils.ReflectionUtils.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BeanRecipe.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-2-6 01:00:00" id="532" opendate="2011-1-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The exception message when a service dependency cannot be resolved has the inserts in the wrong order</summary>
      <description>The following message puts the bundle symbolic name/version in the message where the service dependency should go, and vice versa. The message:The system cannot provision the EBA com.ibm.samples.websphere.osgi.blog.app because the following problems in the dependency chain were detected: The service dependency with attributes com.ibm.samples.websphere.osgi.blog_1.0.0 required by bundle {objectclass=com.ibm.samples.websphere.osgi.logging.Logger} cannot be resolved.should read:The system cannot provision the EBA com.ibm.samples.websphere.osgi.blog.app because the following problems in the dependency chain were detected: The service dependency with attributes {objectclass=com.ibm.samples.websphere.osgi.logging.Logger} required by bundle com.ibm.samples.websphere.osgi.blog_1.0.0 cannot be resolved.</description>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.OBRAriesResolver.java</file>
      <file type="M">application.application-obr-resolver.src.main.resources.org.apache.aries.application.resolver.messages.ResolverMessages.properties</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-2-14 01:00:00" id="540" opendate="2011-1-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>DelegateContext is too eager in caching URL contexts</summary>
      <description>In some enterprise integration scenarios, it is not appropriate to cache URL contexts. For example java:comp env lookups can depend on thread contexts and return different results for the same InitialContext when used from inside different EJBs.To maintain a level of performance we can still cache the ObjectFactory that creates the URL context and so avoid service registry lookups.</description>
      <version>0.3</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jndi.jndi-core.src.test.java.org.apache.aries.jndi.InitialContextTest.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.ContextProvider.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.ContextHelper.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-1-17 01:00:00" id="544" opendate="2011-1-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update to use maven bundle plugin v 2.2.0 rather than a snapshot</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">parent.default-parent.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-2-19 01:00:00" id="546" opendate="2011-1-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>SCM references in parent POM still point to incubator</summary>
      <description>Need to fix SCM versions</description>
      <version>0.3</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">parent.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-2-20 01:00:00" id="548" opendate="2011-1-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove references to incubator from code base in trunk and in 0.3-RCx branch</summary>
      <description/>
      <version>0.3</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">web.pom.xml</file>
      <file type="M">util.pom.xml</file>
      <file type="M">tutorials.pom.xml</file>
      <file type="M">tutorials.blueprint.tutorial-assembly.src.main.docs.instructions.html</file>
      <file type="M">transaction.pom.xml</file>
      <file type="M">testsupport.pom.xml</file>
      <file type="M">subsystem.pom.xml</file>
      <file type="M">spi-fly.pom.xml</file>
      <file type="M">samples.pom.xml</file>
      <file type="M">samples.blog.blog-web.src.main.webapp.images.apache-incubator-logo.png</file>
      <file type="M">samples.blog.blog-web.src.main.java.org.apache.aries.samples.blog.web.util.HTMLOutput.java</file>
      <file type="M">samples-sandbox.pom.xml</file>
      <file type="M">quiesce.pom.xml</file>
      <file type="M">proxy.pom.xml</file>
      <file type="M">parent.pom.xml</file>
      <file type="M">parent.default-parent.pom.xml</file>
      <file type="M">jpa.pom.xml</file>
      <file type="M">jndi.pom.xml</file>
      <file type="M">jmx.pom.xml</file>
      <file type="M">eba-maven-plugin.pom.xml</file>
      <file type="M">blueprint.pom.xml</file>
      <file type="M">application.pom.xml</file>
      <file type="M">application.application-management.src.main.java.org.apache.aries.application.management.impl.AriesApplicationManagerImpl.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.ServiceDeclaration.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.management.spi.resolve.AriesApplicationResolver.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.management.AriesApplication.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.ApplicationMetadata.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-5-28 01:00:00" id="558" opendate="2011-1-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Risk of deadlock in BundleQuiescer.run()</summary>
      <description>Tidy up run() to remove deadlock risk</description>
      <version>None</version>
      <fixedVersion>quiesce.manager-0.3.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">quiesce.quiesce-manager.src.main.java.org.apache.aries.quiesce.manager.impl.QuiesceManagerImpl.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-2-2 01:00:00" id="561" opendate="2011-2-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Subsystems to later Equinox and tidy up references to old prototype.</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">subsystem.subsystem-scope-itests.src.test.resources.ss-runner.properties</file>
      <file type="M">subsystem.subsystem-scope-itests.src.test.resources.META-INF.platform-equinox.definition-V43PROTOTYPE-3.6.0.201003231329.xml</file>
      <file type="M">subsystem.subsystem-scope-itests.src.test.resources.META-INF.platform-equinox.definition-3.7.0.V20100910.xml</file>
      <file type="M">subsystem.subsystem-scope-itests.src.test.java.org.ops4j.pax.runner.platform.equinox.internal.SsActivator.java</file>
      <file type="M">subsystem.subsystem-scope-itests.src.test.java.org.apache.aries.subsystem.itests.ScopeSecurityTest.java</file>
      <file type="M">subsystem.subsystem-scope-itests.src.test.java.org.apache.aries.subsystem.itests.ScopeAdminTest.java</file>
      <file type="M">subsystem.subsystem-scope-itests.pom.xml</file>
      <file type="M">subsystem.subsystem-scope-impl.pom.xml</file>
      <file type="M">subsystem.subsystem-itests.src.test.resources.ss-runner.properties</file>
      <file type="M">subsystem.subsystem-itests.src.test.resources.META-INF.platform-equinox.definition-V43PROTOTYPE-3.6.0.201003231329.xml</file>
      <file type="M">subsystem.subsystem-itests.src.test.resources.META-INF.platform-equinox.definition-3.7.0.V20100910.xml</file>
      <file type="M">subsystem.subsystem-itests.src.test.java.org.ops4j.pax.runner.platform.equinox.internal.SsActivator.java</file>
      <file type="M">subsystem.subsystem-itests.src.test.java.org.apache.aries.subsystem.itests.SubsystemAdminTest.java</file>
      <file type="M">subsystem.subsystem-itests.src.test.java.org.apache.aries.subsystem.itests.SubsystemAdmin2Test.java</file>
      <file type="M">subsystem.subsystem-itests.src.test.java.org.apache.aries.subsystem.itests.SimpleExecutorTest.java</file>
      <file type="M">subsystem.subsystem-itests.pom.xml</file>
      <file type="M">subsystem.subsystem-core.pom.xml</file>
      <file type="M">subsystem.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-1-4 01:00:00" id="566" opendate="2011-2-4 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>NPE when generating bundle repository for invalid bundle location</summary>
      <description>When trying to generate a repository xml for a list of bundles, if any bundle has a wrong location, we will get NPE. Ideally, we should throw a better exception to explain.</description>
      <version>0.3,0.4</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-modeller.src.main.resources.org.apache.aries.application.modelling.messages.APPModellingMessages.properties</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.ModelledResourceManagerImpl.java</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.OBRResolverAdvancedTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-7-23 01:00:00" id="584" opendate="2011-2-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blueprint Managed Service Factory Instantiates Duplicate Service</summary>
      <description>Creating a simple managed service factory, two services are instantiated for a single factory configuration.</description>
      <version>0.2,0.3</version>
      <fixedVersion>1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-itests.src.test.java.org.apache.aries.blueprint.itests.TestConfigAdmin.java</file>
      <file type="M">blueprint.blueprint-cm.src.test.java.org.apache.aries.blueprint.compendium.cm.ManagedServiceFactoryTest.java</file>
      <file type="M">blueprint.blueprint-cm.src.main.java.org.apache.aries.blueprint.compendium.cm.CmNamespaceHandler.java</file>
      <file type="M">blueprint.blueprint-cm.src.main.java.org.apache.aries.blueprint.compendium.cm.CmManagedServiceFactory.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-5-25 01:00:00" id="664" opendate="2011-5-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The HelloWorld blueprint sample itest consistently fails on my machine</summary>
      <description>The Hello world blueprint sample test consistently fails on my machine because the bundle become active after the test runs. This appears to be a timing issue.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blueprint.helloworld.helloworld-itests.src.test.java.org.apache.aries.samples.blueprint.helloworld.itests.HelloworldSampleTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2011-6-21 01:00:00" id="683" opendate="2011-6-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Aries does not build from empty repo because jstl 1.2 dependency no longer exists in Maven repo</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.ariestrader.modules.ariestrader-web.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-7-5 01:00:00" id="702" opendate="2011-7-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[Whiteboard] Use introspection to find the MBean interface</summary>
      <description>The JMX Spec states that standard MBeans must implement an interface whose name is derived from the implementation class by appending the "MBean" suffix and the interface must be located in the same package as the implementation class.This is problematic in multiple ways.I suggest we change this as follows: If the service object implements the DynamicMBean interface (or an extension thereof), use the object as is as the MBean Find the MBean interface by walking up the class and interface hierarchy</description>
      <version>0.3</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-whiteboard.src.test.java.org.apache.aries.jmx.whiteboard.integration.MBeanTest.java</file>
      <file type="M">jmx.jmx-whiteboard.src.main.java.org.apache.aries.jmx.whiteboard.MBeanHolder.java</file>
      <file type="M">jmx.jmx-whiteboard.src.main.java.org.apache.aries.jmx.whiteboard.JmxWhiteboardSupport.java</file>
      <file type="M">jmx.jmx-whiteboard.src.main.java.org.apache.aries.jmx.whiteboard.Activator.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-8-11 01:00:00" id="725" opendate="2011-8-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Aries Application modeller does not find and model anonymous inner Blueprint reference or service components</summary>
      <description>For a snippet like:&lt;bean class="java.util.ArrayList"&gt; &lt;argument&gt; &lt;reference interface="java.util.Collection" /&gt; &lt;/argument&gt;&lt;/bean&gt;We do not generate an ImportedService in the ModelledResource view.</description>
      <version>0.3</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.AbstractParserProxy.java</file>
      <file type="M">application.application-modeller.pom.xml</file>
      <file type="M">application.application-modeller-common-test.src.test.resources.test.bundle.OSGI-INF.blueprint.bp.xml</file>
      <file type="M">application.application-modeller-common-test.src.test.java.org.apache.aries.application.modelling.ModellerTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2011-9-23 01:00:00" id="752" opendate="2011-9-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add test for shared feature resources and reference counting.</summary>
      <description>Features share resources whenever possible. These shared resources must be reference counted in order to know when they can be uninstalled.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">subsystem.subsystem-itests.src.test.resources.feature2.OSGI-INF.SUBSYSTEM.MF</file>
      <file type="M">subsystem.subsystem-itests.src.test.resources.feature1.OSGI-INF.SUBSYSTEM.MF</file>
      <file type="M">subsystem.subsystem-itests.src.test.java.org.apache.aries.subsystem.itests.SubsystemTest.java</file>
      <file type="M">subsystem.subsystem-itests.src.test.java.org.apache.aries.subsystem.itests.InstallTest.java</file>
      <file type="M">subsystem.subsystem-itests.src.test.java.org.apache.aries.subsystem.itests.FeatureTest.java</file>
      <file type="M">subsystem.subsystem-itests.src.test.bundles.tb1.META-INF.MANIFEST.MF</file>
      <file type="M">subsystem.subsystem-itests.pom.xml</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.SubsystemServiceFactory.java</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.AriesSubsystem.java</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.Activator.java</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.archive.DeploymentManifest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-10-21 01:00:00" id="763" opendate="2011-10-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove OSGi VersionRange dependency.</summary>
      <description>Currently, Subsystems has a dependency on the new OSGi VersionRange class introduced by RFC 175. Although an implementation of this class exists at OSGi, there are no publicly available distributions of framework implementations that contain it.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.OsgiIdentityRequirement.java</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.archive.VersionRangeAttribute.java</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.archive.SubsystemContentHeader.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2012-1-5 01:00:00" id="806" opendate="2012-1-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Align Bundle-Name of the JMX Whiteboard bundle with other JMX bundles</summary>
      <description>The JMX Whiteboard bundle's Bundle-Name currently is "Apache Aries Whiteboard support for JMX DynamicMBean services" which does not align with other JMX bundle's Bundle-Name values such as "Apache Aries JMX Core" or "Apache Aries JMX API"The Bundle-Name should be changed to "Apache Aries JMX Whiteboard".</description>
      <version>0.3</version>
      <fixedVersion>0.4</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-whiteboard.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2012-1-20 01:00:00" id="811" opendate="2012-1-20 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>EclipseLink breaks local build</summary>
      <description>Local builds from trunk are failing with the error shown below. There's an EclipseLink/maven problem, either in Aries or EclipseLink itself. These problems are preventing diagnosis of numerous other build breaks. Errors are seen of the form, &amp;#91;INFO&amp;#93; Unable to find resource 'org.eclipse.persistence:org.eclipse.persistence.jpa:jar:2.1.0' in repository EclipseLink Repo (http://www.mirrorservice.org/sites/download.eclipse.org/eclipseMirror/rt/eclipselink/maven.repo/)Downloading: http://repo1.maven.org/maven2/org/eclipse/persistence/org.eclipse.persistence.jpa/2.1.0/org.eclipse.persistence.jpa-2.1.0.jar&amp;#91;INFO&amp;#93; Unable to find resource 'org.eclipse.persistence:org.eclipse.persistence.jpa:jar:2.1.0' in repository central (http://repo1.maven.org/maven2)&amp;#91;INFO&amp;#93; ------------------------------------------------------------------------&amp;#91;ERROR&amp;#93; BUILD ERROR&amp;#91;INFO&amp;#93; ------------------------------------------------------------------------&amp;#91;INFO&amp;#93; Failed to resolve artifact.Missing:----------1) org.eclipse.persistence:org.eclipse.persistence.jpa:jar:2.1.0</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jpa.jpa-container-itest.pom.xml</file>
      <file type="M">jpa.pom.xml</file>
      <file type="M">jpa.jpa-container-itest.src.test.java.org.apache.aries.jpa.context.itest.EclipseLinkStartupTest.java</file>
      <file type="M">jpa.jpa-container-itest.src.test.java.org.apache.aries.jpa.context.itest.EclipseLinkContextTest.java</file>
      <file type="M">jpa.jpa-container-itest.src.test.java.org.apache.aries.jpa.advanced.features.itest.EclipseLinkWeavingAndAnnotationScanningTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-1-20 01:00:00" id="812" opendate="2012-1-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Build break: failures in org.apache.aries.jpa.container.itest.JPAContainerDataSourceFactoryTest.testDataSourceFactoryXALifecycle and elsewhere</summary>
      <description>Investigations suggest that this test is failing because org.apache.aries.jndi.core_0.3.2.SNAPSHOT and org.apache.aries.jndi.url_0.3.2.SNAPSHOT are failing to resolve:org.osgi.framework.BundleException: The bundle "org.apache.aries.jndi.url_0.3.2.SNAPSHOT &amp;#91;17&amp;#93;" could not be resolved. Reason: Missing Constraint: Import-Package: org.apache.aries.util.log; version="[0.1.0,0.2.0)"This package is not exported by the version of org.apache.aries.util in the test runtime:org.apache.aries.util_0.4.0 &amp;#91;9&amp;#93; Id=9, Status=ACTIVE Data Root=C:\Users\mnuttall\AppData\Local\Temp\paxexam_runner_mnuttall\equinox\org.eclipse.osgi\bundles\9\data No registered services. No services in use. Exported packages org.apache.aries.util; version="0.4.0"&amp;#91;exported&amp;#93; org.apache.aries.util.tracker; version="0.4.0"&amp;#91;exported&amp;#93; org.apache.aries.util.nls; version="0.3.0"&amp;#91;exported&amp;#93; org.apache.aries.util.io; version="0.1.0"&amp;#91;exported&amp;#93; org.apache.aries.util.service.registry; version="0.1.0"&amp;#91;exported&amp;#93; org.apache.aries.util.manifest; version="0.1.0"&amp;#91;exported&amp;#93; org.apache.aries.util.filesystem; version="0.1.0"&amp;#91;exported&amp;#93; Imported packages org.osgi.framework; version="1.6.0"&lt;org.eclipse.osgi_3.7.0.v20110613 &amp;#91;0&amp;#93;&gt; org.osgi.util.tracker; version="1.5.0"&lt;org.eclipse.osgi_3.7.0.v20110613 &amp;#91;0&amp;#93;&gt; org.slf4j; version="1.5.6"&lt;org.ops4j.pax.logging.pax-logging-api_1.5.0 &amp;#91;4&amp;#93;&gt; org.osgi.service.framework; version="1.0.0"&lt;org.eclipse.osgi_3.7.0.v20110613 &amp;#91;0&amp;#93;&gt; org.osgi.framework.launch; version="1.0.0"&lt;org.eclipse.osgi_3.7.0.v20110613&amp;#91;0&amp;#93;&gt; org.eclipse.osgi.internal.loader; version="0.0.0"&lt;org.eclipse.osgi_3.7.0.v20110613 &amp;#91;0&amp;#93;&gt; org.eclipse.osgi.framework.internal.core; version="0.0.0"&lt;org.eclipse.osgi_3.7.0.v20110613 &amp;#91;0&amp;#93;&gt; org.eclipse.osgi.framework.adaptor; version="0.0.0"&lt;org.eclipse.osgi_3.7.0.v20110613 &amp;#91;0&amp;#93;&gt; No fragment bundles Named class space org.apache.aries.util; bundle-version="0.4.0"&amp;#91;provided&amp;#93; No required bundlesIt looks like something bad has happened to org.apache.aries.util. Investigations continue.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jpa.jpa-container-itest.pom.xml</file>
      <file type="M">samples.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2012-1-23 01:00:00" id="813" opendate="2012-1-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blog sample link from Aries icon is broken</summary>
      <description>It takes user to aries.apache.org/aries instead of aries.apache.org</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blog.blog-web.src.main.java.org.apache.aries.samples.blog.web.util.HTMLOutput.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2012-5-7 01:00:00" id="848" opendate="2012-5-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>blueprint-annotation-impl should actually make use of it&amp;#39;s properties</summary>
      <description>The problem is that there are properties defined in the annotation-impl project...&lt;blueprint.annotation.api.version&gt;0.3&lt;/blueprint.annotation.api.version&gt;&lt;util.version&gt;0.4&lt;/util.version&gt;... and there's a profile available for using the latest versions of those libs instead...&lt;profiles&gt; &lt;profile&gt; &lt;id&gt;dev&lt;/id&gt; &lt;properties&gt; &lt;blueprint.annotation.api.version&gt;0.3.3-SNAPSHOT&lt;/blueprint.annotation.api.version&gt; &lt;util.version&gt;0.5-SNAPSHOT&lt;/util.version&gt; &lt;/properties&gt; &lt;/profile&gt;&lt;/profiles&gt;... nevertheless, the dependencies don't make use of those properties (see the attached patch).</description>
      <version>0.3</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-annotation-impl.pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2012-9-5 01:00:00" id="919" opendate="2012-9-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blueprint HelloWorld sample broken</summary>
      <description>It looks like changes were accidentally committed as part of SPI-fly refactoring in April last year which broke the Blueprint HelloWorld sample. The tests also didn't notice the sample was broken, so we could use slightly more robust tests than the current ones.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blueprint.helloworld.helloworld-itests.src.test.java.org.apache.aries.samples.blueprint.helloworld.itests.HelloworldSampleTest.java</file>
      <file type="M">samples.blueprint.helloworld.helloworld-client.src.main.resources.OSGI-INF.blueprint.config.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2009-12-23 01:00:00" id="92" opendate="2009-12-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Contribute Blueprint MBeans to Aries</summary>
      <description>The codes are in my sandbox of Geronimo community:https://svn.apache.org/repos/asf/geronimo/sandbox/rexPlease help svn mv/cp, thanks very much!</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-itests.src.test.java.org.apache.aries.jmx.test.blueprint.BlueprintMBeanTest.java</file>
      <file type="M">jmx.jmx-core.pom.xml</file>
      <file type="M">jmx.jmx-bundle.pom.xml</file>
      <file type="M">jmx.jmx-blueprint-core.pom.xml</file>
      <file type="M">jmx.jmx-blueprint-api.pom.xml</file>
      <file type="M">jmx.jmx-api.pom.xml</file>
      <file type="M">jmx.jmx-blueprint-api.src.main.java.org.apache.aries.jmx.blueprint.JmxConstants.java</file>
      <file type="M">jmx.jmx-blueprint-api.src.main.java.org.apache.aries.jmx.blueprint.BlueprintMetadataMBean.java</file>
      <file type="M">jmx.pom.xml</file>
      <file type="M">jmx.jmx-itests.src.test.java.org.apache.aries.jmx.framework.FrameworkMBeanTest.java</file>
      <file type="M">jmx.jmx-itests.src.test.java.org.apache.aries.jmx.AbstractIntegrationTest.java</file>
      <file type="M">jmx.jmx-itests.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2012-9-10 01:00:00" id="923" opendate="2012-9-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>A service proxy obtained from a reference list can return a null service, leading to NPE</summary>
      <description/>
      <version>None</version>
      <fixedVersion>blueprint-core-1.0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.ReferenceListRecipe.java</file>
    </fixedFiles>
  </bug>
  
</bugrepository>