<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="ARIES">
  <bug fixdate="2010-1-5 01:00:00" id="105" opendate="2010-1-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The JMX bundle does not export correctly the jmx api</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-bundle.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-1-5 01:00:00" id="106" opendate="2010-1-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The JMX bundle should work even if all compendium specs are not available</summary>
      <description/>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.useradmin.UserAdminMBeanHandler.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.permissionadmin.PermissionAdminMBeanHandler.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.agent.JMXAgentImpl.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2010-1-8 01:00:00" id="109" opendate="2010-1-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blog sample does not persist blogtext.</summary>
      <description>The blog sample persists all of the fields (date, title etc) of a blog entry except the blog text. For example, here is a view of the blogentry table after creating a blogentry with title 'whatever'ij&gt; select * from blogentry;ID |BLOGTEXT |PUBLISHDATE |TITLE |UPDATEDDATE |AUTHOR_EMAIL -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------1 | |2010-01-08 00:00:00.0 |whatever |NULL |zoe@uk.ibm.com</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blog-sample.blog-servlet.src.main.java.org.apache.aries.samples.blog.web.util.HTMLOutput.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2013-1-9 01:00:00" id="1116" opendate="2013-9-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blueprint loses bounds for &lt;? super Type&gt; constructors</summary>
      <description>Aries fails to handle use cases when generic bounds are different than extends. Test for reproducing this issue pushed to github: https://github.com/splatch/aries/commit/8ead34453cedfdbba43d84959e9bbf71bb1d249e</description>
      <version>None</version>
      <fixedVersion>blueprint-core-1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.test.java.org.apache.aries.blueprint.container.BeanRecipeTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2013-10-2 01:00:00" id="1118" opendate="2013-10-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Provide common schema for XML namespace</summary>
      <description>And schema that uses the "xml" namespace things (xml:lang, xml:base, etc...) needs to import http://www.w3.org/XML/1998/namespace. Blueprint could provide a Namespace handler for that namespace to avoid having a bunch of different bundles all having to add this to their namespace handlers.</description>
      <version>None</version>
      <fixedVersion>blueprint-core-1.2.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.resources.OSGI-INF.blueprint.blueprint-ext.xml</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.ext.impl.ExtNamespaceHandler.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2015-2-23 01:00:00" id="1417" opendate="2015-9-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Aries Subsystems implementation bundle must provide official capabilities</summary>
      <description>Compendium v6.0.0 states in 134.19 - Capabilities: A capability in the osgi.implementation namespace declaring the implemented specification to be osgi.subsystem. This capability must also declare a uses constraint for the org.osgi.service.subsystem package. For example: Provide-Capability: osgi.implementation; osgi.implementation="osgi.subsystem"; version:Version="1.1"; uses:="org.osgi.service.subsystem"*This capability must follow the rules defined for the osgi.implementation Namespace on page 997. A capability in the osgi.service namespace representing the Subsystem service. This capabilitymust also declare a uses constraint for the org.osgi.service.subsystem package. For example: Provide-Capability: osgi.service; objectClass:List&lt;String&gt;="org.osgi.service.subsystem.Subsystem"; uses:="org.osgi.service.subsystem"</description>
      <version>subsystem-2.0.6,subsystem-2.0.8</version>
      <fixedVersion>subsystem-2.0.10</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">subsystem.subsystem-core.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-2-30 01:00:00" id="1442" opendate="2015-10-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Subsystem impersonates bundles that are a constituent through sharing the osgi.identity capability</summary>
      <description>Feature subsystems should export all capabilities of its constituents. The osgi.identity capability is also exported but I doubt it is supposed to.It might cause problems when using osgi.identity in the preferred-provider header.</description>
      <version>subsystem-2.0.6,subsystem-2.0.8</version>
      <fixedVersion>subsystem-2.0.10</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">subsystem.subsystem-itests.src.test.java.org.apache.aries.subsystem.itests.defect.Aries1442Test.java</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.BasicSubsystem.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-2-2 01:00:00" id="1445" opendate="2015-11-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bundles that are not direct dependencies of a subsystem can be removed while still in use</summary>
      <description>Bundle A is a constituent of application subsystem S1Bundle A is a constituent of application subsystem S2Bundle A has a package import of b.packageBundle B exports b.packageBundle B imports c.packageBundle C exports c.packageThere is an obr repository with bundle b and cBundle B and C are not constituentsWhen installing S1 bundle B and C are added to the root subsystem to fullfill the requirements of bundle AWhen installing S2 everything is still working.Start S1.Now we uninstall S1 and bundle C is removed. refreshBundlesSubsystem S2 won't start anymore because of that.The testcase uses different bundle ids.</description>
      <version>subsystem-2.0.6,subsystem-2.0.8</version>
      <fixedVersion>subsystem-2.0.10</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.Utils.java</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.UninstallAction.java</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.SubsystemResource.java</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.ResolveContext.java</file>
    </fixedFiles>
  </bug>
  
  
  
</bugrepository>