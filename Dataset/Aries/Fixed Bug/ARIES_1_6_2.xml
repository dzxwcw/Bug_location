<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="ARIES">
  <bug id="1544" opendate="2016-5-3 00:00:00" fixdate="2016-1-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blueprint property resolution fails for setters with derived type</summary>
      <description>Blueprint property resolution expects getter and setter methods to use exactly the same class. It should allow setters that take a derived type using isAssignableFrom() instead of equals(). It currently fails for the following: class A { private X x; public X getX() { return x; } public void setX(X x) { this.x = x; } } class B extends A { public void setX(Y y) { super.setX(y); } // Y extends X }Trying to set property X for bean B using Blueprint fails.</description>
      <version>blueprint-core-1.6.2</version>
      <fixedVersion>blueprint-core-1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BeanRecipe.java</file>
    </fixedFiles>
  </bug>
  <bug id="1546" opendate="2016-5-5 00:00:00" fixdate="2016-7-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>make proxy-impl works with java9</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>proxy-impl-1.0.6</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">proxy.proxy-impl.src.test.java.org.apache.aries.blueprint.proxy.WovenProxyGeneratorTest.java</file>
      <file type="M">proxy.proxy-impl.src.main.java.org.apache.aries.proxy.impl.ProxyUtils.java</file>
      <file type="M">proxy.proxy-impl.src.main.java.org.apache.aries.proxy.impl.interfaces.InterfaceCombiningClassAdapter.java</file>
      <file type="M">proxy.proxy-impl.src.main.java.org.apache.aries.proxy.impl.gen.ProxySubclassAdapter.java</file>
      <file type="M">proxy.proxy-impl.src.main.java.org.apache.aries.proxy.impl.common.AbstractWovenProxyAdapter.java</file>
      <file type="M">proxy.proxy-impl.src.main.java.org.apache.aries.proxy.impl.AsmProxyManager.java</file>
      <file type="M">proxy.proxy-impl.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="155" opendate="2010-2-9 00:00:00" fixdate="2010-2-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Url handler parameter names are supposed to be case insensitive</summary>
      <description>Url handler parameter names are supposed to be case insensitive.</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">web.web-urlhandler.src.test.java.org.apache.aries.web.converter.impl.WabConverterTest.java</file>
      <file type="M">web.web-urlhandler.src.main.java.org.apache.aries.web.url.WAR.URLServiceHandler.java</file>
      <file type="M">web.web-urlhandler.src.main.java.org.apache.aries.web.url.WARConnection.java</file>
      <file type="M">web.web-urlhandler.src.main.java.org.apache.aries.web.converter.impl.WarToWabConverterImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="1607" opendate="2016-9-7 00:00:00" fixdate="2016-1-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a flag to enable raw conversion when using generics</summary>
      <description>Blueprint should only check constuctor and method arguments depending on their class the way the JVM works at runtime.At runtime there is no difference between: setSomething(List);and setSomething(List&lt;String&gt;);Furthermore Java prevents having both methods above declared in the same class (same applies if List were List&lt;Object&gt;). A List is a List no matter the generic type. The generic type checking is made at compilation time. Blueprint is not a compiler Please add a flag to enforce or not the generic type checking!</description>
      <version>blueprint-core-1.6.2</version>
      <fixedVersion>blueprint-core-1.9.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-parser.src.main.java.org.apache.aries.blueprint.reflect.BeanMetadataImpl.java</file>
      <file type="M">blueprint.blueprint-parser.src.main.java.org.apache.aries.blueprint.mutable.MutableBeanMetadata.java</file>
      <file type="M">blueprint.blueprint-parser.src.main.java.org.apache.aries.blueprint.ExtendedBeanMetadata.java</file>
      <file type="M">blueprint.blueprint-core.src.test.resources.test-generics-mix.xml</file>
      <file type="M">blueprint.blueprint-core.src.test.java.org.apache.aries.blueprint.WiringTest.java</file>
      <file type="M">blueprint.blueprint-core.src.test.java.org.apache.aries.blueprint.container.BeanRecipeTest.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.ext.impl.ExtNamespaceHandler.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.di.AbstractRecipe.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.RecipeBuilder.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BeanRecipe.java</file>
    </fixedFiles>
  </bug>
  <bug id="1637" opendate="2016-12-16 00:00:00" fixdate="2016-2-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Subsystem persistent cache is not successfully deleted on uninstall</summary>
      <description>It is unclear the cause of this, but sometimes upon uninstalling a subsystem I find that the subsystems cache on disk still will contain the DEPLOYMENT.MF file for the subsystem. On restart if the same subsystem is installed again you will see the exception below. One cause may be because the DEPLOYMENT.MF holds the state of the subsystem, it may be possible that another thread is attempting to save the state in the DEPLOYMENT.MF file while the uninstall command is trying to delete the cache folder for the subsystem. On restart the DEPLOYMENT.MF file has the header indicating that it is uninstalled:AriesSubsystem-State: UNINSTALLEDOne possible fix is to detect the uninstalled state while reading the subsystems cache and discarding the ones that are uninstalled.org.osgi.service.subsystem.SubsystemException: java.lang.NullPointerException at org.apache.aries.subsystem.core.internal.BasicSubsystem.getSubsystemManifest(BasicSubsystem.java:512) at org.apache.aries.subsystem.core.internal.BasicSubsystem.getSymbolicName(BasicSubsystem.java:336) at org.apache.aries.subsystem.core.internal.TargetRegion.contains(TargetRegion.java:36) at org.apache.aries.subsystem.core.internal.InstallAction.run(InstallAction.java:63) at org.apache.aries.subsystem.core.internal.InstallAction.run(InstallAction.java:27) at java.security.AccessController.doPrivileged(AccessController.java:594) at org.apache.aries.subsystem.core.internal.BasicSubsystem.install(BasicSubsystem.java:738) at org.apache.aries.subsystem.core.internal.BasicSubsystem.install(BasicSubsystem.java:732) at com.ibm.ws.app.manager.esa.internal.DeploySubsystemAction.installSubsystem(DeploySubsystemAction.java:190) at com.ibm.ws.app.manager.esa.internal.DeploySubsystemAction.deploySubsystem(DeploySubsystemAction.java:163) at com.ibm.ws.app.manager.esa.internal.DeploySubsystemAction.deploy(DeploySubsystemAction.java:113) at com.ibm.ws.app.manager.esa.internal.SubsystemHandler.install(SubsystemHandler.java:356) at com.ibm.ws.app.manager.esa.internal.EBAToSubsystemHandler.install(EBAToSubsystemHandler.java:189) at com.ibm.ws.app.manager.internal.statemachine.StartAction.execute(StartAction.java:141) at com.ibm.ws.app.manager.internal.statemachine.ApplicationStateMachineImpl.enterState(ApplicationStateMachineImpl.java:1191) at com.ibm.ws.app.manager.internal.statemachine.ApplicationStateMachineImpl.run(ApplicationStateMachineImpl.java:804) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1153) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) at java.lang.Thread.run(Thread.java:785)Caused by: java.lang.NullPointerException at org.apache.aries.subsystem.core.internal.BasicSubsystem.getSubsystemManifest(BasicSubsystem.java:509) ... 18 more</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.Subsystems.java</file>
    </fixedFiles>
  </bug>
  <bug id="1639" opendate="2016-12-17 00:00:00" fixdate="2016-12-17 01:00:00" resolution="Done">
    <buginformation>
      <summary>Convert blueprint-maven-plugin-annotation from jar to bundle</summary>
      <description>Now it is just jar, without OSGi entries in Manifest</description>
      <version>None</version>
      <fixedVersion>blueprint-maven-plugin-1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.plugin.blueprint-maven-plugin-annotation.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="164" opendate="2010-2-15 00:00:00" fixdate="2010-2-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove manual registerService() call for javax.persistence.provider</summary>
      <description>Currently, the jpa-container-itest code (and AriesTrade sample) is having to manually register OpenJPA as a javax.persistence.provider.Once OPENJPA-1512 is integrated and in a nightly build, this code should be removed.</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jpa.jpa-container-itest.src.test.java.org.apache.aries.jpa.container.itest.JPAContainerTest.java</file>
      <file type="M">jpa.jpa-container-itest.pom.xml</file>
      <file type="M">ariestrader-sample.pom.xml</file>
      <file type="M">ariestrader-sample.modules.pom.xml</file>
      <file type="M">ariestrader-sample.modules.ariestrader-openjpa-provider.src.main.resources.OSGI-INF.blueprint.blueprint.xml</file>
      <file type="M">ariestrader-sample.modules.ariestrader-openjpa-provider.pom.xml</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-all-equinox.src.main.resources.configuration.config.ini</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-all-equinox.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1640" opendate="2016-12-19 00:00:00" fixdate="2016-12-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to geronimo transaction manager 3.1.4</summary>
      <description>The new release includes a fix for GERONIMO-4576</description>
      <version>None</version>
      <fixedVersion>transaction-manager-1.3.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">transaction.transaction-manager.pom.xml</file>
      <file type="M">transaction.transaction-jms.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1641" opendate="2016-12-19 00:00:00" fixdate="2016-12-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>OsgiServiceProvider annotation does not publish service.ranking property as integer</summary>
      <description>There is no such option to generate service.ranking property using @OsgiServiceProvider annotation. @OsgiServiceProvider(classes = [TaskRepository])@Properties([ @Property(name = "type", value = "db"), @Property(name = "service.ranking", value = "100"),])generates blueprint&lt;service ref="dbRepository" interface="org.github.alien11689.osgi.task.api.TaskRepository"&gt; &lt;service-properties&gt; &lt;entry key="type" value="db"/&gt; &lt;entry key="service.ranking" value="100"/&gt; &lt;/service-properties&gt;&lt;/service&gt;and service properties in Apache Karaf: osgi.service.blueprint.compname = dbRepository service.bundleid = 54 service.id = 274 service.scope = bundle type = dbThe best option is to convert service.ranking property from @Property annotation as ranking attribute in service element.</description>
      <version>None</version>
      <fixedVersion>blueprint-maven-plugin-1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.test.java.org.apache.aries.blueprint.plugin.test.MyFactoryBeanAsService.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.test.java.org.apache.aries.blueprint.plugin.GeneratorTest.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.pax.OsgiServiceProviderHandler.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
