<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="ARIES">
  <bug id="115" opendate="2010-1-12 00:00:00" fixdate="2010-4-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improvements to War to Wab converter</summary>
      <description>Currently, there is little in the way of javadoc around the war to wab converter. That needs to change to make this component truly usable.Also, a common conversion case might be to convert a WAR inside an EAR file. In this case the context root can be defaulted from the value it is set to in the application.xml. The converter should support such a scenario.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">web.pom.xml</file>
      <file type="M">testsupport.testsupport-unit.pom.xml</file>
      <file type="M">testsupport.pom.xml</file>
      <file type="M">web.web-itests.src.test.java.org.apache.aries.web.converter.itest.WabConverterITest.java</file>
      <file type="M">web.web-itests.pom.xml</file>
      <file type="M">application.application-converters.src.main.java.org.apache.aries.application.converters.WabConverterService.java</file>
      <file type="M">application.application-converters.pom.xml</file>
      <file type="M">web.web-urlhandler.src.test.java.org.apache.aries.web.converter.impl.WabConverterTest.java</file>
      <file type="M">web.web-urlhandler.src.main.java.org.apache.aries.web.converter.WarToWabConverter.java</file>
      <file type="M">web.web-urlhandler.src.main.java.org.apache.aries.web.converter.impl.WarToWabConverterImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="1150" opendate="2014-1-19 00:00:00" fixdate="2014-6-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add support for creating non xa DataSource</summary>
      <description>Actually you need an XADataSource to get handled by transaction-jdbc. I might be useful to have one abstraction layer to configure either non xa DataSources and XADataSources the same way with the same capabilities (pooling/error handling/...). May be in an generic way by providing specific driver class information. The benefit of that unique approach would be to get all kinds of DataSource configuration the same way on top of the geronimo core libraries. The transaction flag (none/local/xa) might be used for distinction.</description>
      <version>None</version>
      <fixedVersion>transaction-jdbc-2.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">transaction.transaction-jdbc.src.main.java.org.apache.aries.transaction.jdbc.internal.DataSourceMCFFactory.java</file>
      <file type="M">transaction.transaction-jdbc.src.main.java.org.apache.aries.transaction.jdbc.RecoverableDataSource.java</file>
      <file type="M">transaction.transaction-jdbc.src.main.java.org.apache.aries.transaction.jdbc.internal.XADataSourceMCFFactory.java</file>
      <file type="M">transaction.transaction-jdbc.pom.xml</file>
      <file type="M">transaction.transaction-itests.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="64" opendate="2009-12-2 00:00:00" fixdate="2009-12-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Have blueprint extender process bundles associated with composite bundle when detecting the CompositeBundleFactory service</summary>
      <description>This is a follow on enhancement after Aries-51. In Aries-51 we added code to process bundles associated with composite bundle when detecting composite bundle starting/active.This JIRA is about enhance the process of check existing bundles and bundles associated with composite bundles that were started before the blueprint bundle, if the composite bundle factory service is avail. This JIRA also added an itest for this scenario that blueprint sample is started in a child framework, before we start the blueprint bundle.</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">util.src.main.java.org.apache.aries.util.tracker.AriesBundleTrackerCustomizer.java</file>
      <file type="M">blueprint.blueprint-itests.src.test.java.org.apache.aries.blueprint.itests.BlueprintContainerBTCustomizerTest.java</file>
      <file type="M">blueprint.blueprint-core.pom.xml</file>
      <file type="M">blueprint.blueprint-itests.src.test.java.org.apache.aries.blueprint.itests.BlueprintContainerTest.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BlueprintExtender.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
