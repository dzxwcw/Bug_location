<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="ARIES">
  <bug id="144" opendate="2010-2-3 00:00:00" fixdate="2010-2-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Extend AriesTrader sample to include support for JPA Container Managed Persistence</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ariestrader-sample.modules.ariestrader-persist-jpa-cm.src.main.java.org.apache.geronimo.samples.daytrader.persist.jpa.TradeJpaCm.java</file>
      <file type="M">ariestrader-sample.modules.ariestrader-persist-jpa-cm.src.main.java.org.apache.aries.samples.daytrader.persist.jpa.TradeJpaCm.java</file>
      <file type="M">ariestrader-sample.pom.xml</file>
      <file type="M">ariestrader-sample.modules.ariestrader-persist-jpa-cm.src.main.resources.OSGI-INF.blueprint.blueprint.xml</file>
      <file type="M">ariestrader-sample.modules.ariestrader-persist-jpa-am.src.main.resources.OSGI-INF.blueprint.blueprint.xml</file>
      <file type="M">ariestrader-sample.modules.ariestrader-persist-jdbc.src.main.resources.OSGI-INF.blueprint.blueprint.xml</file>
      <file type="M">ariestrader-sample.modules.ariestrader-entities.src.main.resources.META-INF.persistence.xml</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-jdbc-equinox.src.main.resources.tradeDB.sql</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-all-equinox.src.main.resources.tradeDB.sql</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-all-equinox.src.main.resources.configuration.config.ini</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-all-equinox.pom.xml</file>
      <file type="M">ariestrader-sample.modules.ariestrader-persist-jpa-cm.src.main.resources.META-INF.persistence.xml</file>
      <file type="M">ariestrader-sample.modules.ariestrader-persist-jpa-cm.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="156" opendate="2010-2-10 00:00:00" fixdate="2010-2-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Line up import/exports in blueprint bundles</summary>
      <description>The imports and exports vary quite a bit between the individual jars and the full bundle.For instance org.osgi.service.event*;resolution:=optional, in the bundle but not in blueprint-core.the cm bundle exports org.apache.aries.blueprint.compendium.cm*; but the full bundle does not.For starters I'm fixing the import problem noted above.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1740" opendate="2017-9-25 00:00:00" fixdate="2017-10-25 01:00:00" resolution="Done">
    <buginformation>
      <summary>blueprint-maven-plugin should generate &lt;reference-list&gt; instead of &lt;reference id="list" interface="java.util.List"/&gt; for a @OsgiService List&lt;Service&gt; ?</summary>
      <description>I may be misunderstanding something, but I would have expected the blueprint-maven-plugin (currently using its 1.4.0 in ODL) to generate &lt;reference-list ...&gt; instead of a &lt;reference id="list" interface="java.util.List"/&gt; for a @Singleton's bean constructor @Inject @OsgiService List&lt;Service&gt; services argument?</description>
      <version>None</version>
      <fixedVersion>blueprint-maven-plugin-1.9.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.test.java.org.apache.aries.blueprint.plugin.test.reference.BeanWithReferenceLists.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.model.BeanFromFactory.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.test.java.org.apache.aries.blueprint.plugin.BlueprintFileWriterTest.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.resources.META-INF.services.org.apache.aries.blueprint.plugin.spi.CustomDependencyAnnotationHandler</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.blueprint.service.ReferenceParameters.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.blueprint.service.ReferenceId.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.blueprint.service.ReferenceHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="1741" opendate="2017-9-27 00:00:00" fixdate="2017-9-27 01:00:00" resolution="Done">
    <buginformation>
      <summary>Move handlers for pax-cdi-api annotations to separate module in BMP</summary>
      <description>The goal of the issue is to prepare the handlers for pax-cdi-api annotations to be dropped in next major version, because these annotations will be removed in pax-cdi-api in version 1.0.0</description>
      <version>None</version>
      <fixedVersion>blueprint-maven-plugin-1.9.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.plugin.pom.xml</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.resources.META-INF.services.org.apache.aries.blueprint.plugin.spi.CustomDependencyAnnotationHandler</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.resources.META-INF.services.org.apache.aries.blueprint.plugin.spi.BeanAnnotationHandler</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.pax.ServiceProperty.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.pax.OsgiServiceProviderHandler.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.pax.OsgiServiceHandler.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1742" opendate="2017-9-27 00:00:00" fixdate="2017-10-27 01:00:00" resolution="Done">
    <buginformation>
      <summary>Create annotation and handler for reference generation in BMP</summary>
      <description>The annotation will be replacement for @OsgiService annotation, which will be removed in pax-cdi-api in version 1.0.0</description>
      <version>None</version>
      <fixedVersion>blueprint-maven-plugin-1.9.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.test.java.org.apache.aries.blueprint.plugin.BlueprintFileWriterTest.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.resources.META-INF.services.org.apache.aries.blueprint.plugin.spi.ValueInjectionHandler</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.resources.META-INF.services.org.apache.aries.blueprint.plugin.spi.NamedLikeHandler</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.resources.META-INF.services.org.apache.aries.blueprint.plugin.spi.FactoryMethodFinder</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.resources.META-INF.services.org.apache.aries.blueprint.plugin.spi.CustomDependencyAnnotationHandler</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.resources.META-INF.services.org.apache.aries.blueprint.plugin.spi.ContextInitializationHandler</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.resources.META-INF.services.org.apache.aries.blueprint.plugin.spi.CollectionDependencyAnnotationHandler</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.resources.META-INF.services.org.apache.aries.blueprint.plugin.spi.BeanFinder</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.resources.META-INF.services.org.apache.aries.blueprint.plugin.spi.BeanAnnotationHandler</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.model.AnnotationHelper.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.referencelistener.ReferenceListenerHandler.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.referencelistener.ReferenceListenerDefinition.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.config.ConfigWriter.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.config.ConfigPropertyInjectionHandler.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.config.ConfigPropertiesHandler.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.config.ConfigAnnotationHandler.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.collection.CollectionInjectHandler.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.blueprint.BlueprintInitialization.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.bean.BeanHandler.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.pom.xml</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin-annotation.src.main.java.org.apache.aries.blueprint.annotation.referencelistener.ReferenceListener.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin-annotation.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1743" opendate="2017-9-27 00:00:00" fixdate="2017-10-27 01:00:00" resolution="Done">
    <buginformation>
      <summary>Create annotation and handler for service generation in BMP</summary>
      <description>The annotation will be replacement for @OsgiServiceProvider annotation, which will be removed in pax-cdi-api in version 1.0.0</description>
      <version>None</version>
      <fixedVersion>blueprint-maven-plugin-1.9.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.test.java.org.apache.aries.blueprint.plugin.BlueprintFileWriterTest.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.resources.META-INF.services.org.apache.aries.blueprint.plugin.spi.BeanAnnotationHandler</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin.src.main.java.org.apache.aries.blueprint.plugin.handlers.blueprint.service.ReferenceHandler.java</file>
      <file type="M">blueprint.plugin.blueprint-maven-plugin-annotation.src.main.java.org.apache.aries.blueprint.annotation.service.Reference.java</file>
    </fixedFiles>
  </bug>
  <bug id="187" opendate="2010-2-18 00:00:00" fixdate="2010-2-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AriesTrader - Eliminate unnecessary NOTICE and LICENSE files from source and let the build include them</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ariestrader-sample.modules.ariestrader-web.src.main.resources.META-INF.NOTICE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-web.src.main.resources.META-INF.LICENSE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-util.src.main.resources.META-INF.NOTICE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-util.src.main.resources.META-INF.LICENSE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-persist-jpa-cm.src.main.resources.META-INF.NOTICE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-persist-jpa-cm.src.main.resources.META-INF.LICENSE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-persist-jpa-am.src.main.resources.META-INF.NOTICE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-persist-jpa-am.src.main.resources.META-INF.LICENSE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-persist-jdbc.src.main.resources.META-INF.NOTICE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-persist-jdbc.src.main.resources.META-INF.LICENSE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-entities.src.main.resources.META-INF.NOTICE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-entities.src.main.resources.META-INF.LICENSE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-core.src.main.resources.META-INF.NOTICE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-core.src.main.resources.META-INF.LICENSE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-beans.src.main.resources.META-INF.NOTICE</file>
      <file type="M">ariestrader-sample.modules.ariestrader-beans.src.main.resources.META-INF.LICENSE</file>
    </fixedFiles>
  </bug>
  <bug id="200" opendate="2010-2-24 00:00:00" fixdate="2010-2-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AriesTrader - deploy application as EBA rather than individual bundles in Equinox Assemblies</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ariestrader-sample.pom.xml</file>
      <file type="M">ariestrader-sample.assemblies.pom.xml</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-jdbc-equinox.src.main.resources.configuration.config.ini</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-jdbc-equinox.pom.xml</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-jdbc-eba.pom.xml</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-all-equinox.src.main.resources.configuration.config.ini</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-all-equinox.pom.xml</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-all-eba.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="203" opendate="2010-2-25 00:00:00" fixdate="2010-2-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AriesTrader - Eliminate duplicate equinox assemblies and create a common test harness for AriesTrader to use</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ariestrader-sample.assemblies.ariestrader-jdbc-equinox.src.main.resources.tradeDB.sql</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-jdbc-equinox.src.main.resources.configuration.config.ini</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-jdbc-equinox.pom.xml</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-all-equinox.src.main.resources.tradeDB.sql</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-all-equinox.src.main.resources.configuration.config.ini</file>
      <file type="M">ariestrader-sample.assemblies.ariestrader-all-equinox.pom.xml</file>
      <file type="M">ariestrader-sample.assemblies.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="207" opendate="2010-2-27 00:00:00" fixdate="2010-2-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The FileInstall plugin for eba&amp;#39;s takes a copy of the eba.</summary>
      <description>The FileInstall plugins for EBA's calls the createApplication method that takes a URL. FileInstall gives it a java.io.File which it converts to a URL.The method that takes a URL takes a copy of the application from the provided location, so instead we should call the IDirectory varient.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-install.src.main.java.org.apache.aries.application.install.EBAInstaller.java</file>
    </fixedFiles>
  </bug>
  <bug id="212" opendate="2010-3-4 00:00:00" fixdate="2010-3-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add application manifest generation to eba-maven-plugin</summary>
      <description>Add application manifest generation to eba-maven-plugin. This should generation application manifest entries based on maven project configuration.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">eba-maven-plugin.src.main.java.org.apache.aries.plugin.eba.EbaMojo.java</file>
      <file type="M">eba-maven-plugin.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="214" opendate="2010-3-4 00:00:00" fixdate="2010-3-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Separate out blog sample eba creation</summary>
      <description>Blog sample eba is currently built in blog-assembly, which also builds a sample platform. We need to:1. Create a new project for building the eba, that uses the new eba-maven-plugin2. Remove the current eba creation from blog-assembly.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blog-sample.blog-assembly.pom.xml</file>
      <file type="M">samples.blog-sample.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="215" opendate="2010-3-4 00:00:00" fixdate="2010-3-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AriesTrader - Leverage the eba-maven-plugin to build EBAs for AriesTrader</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.ariestrader-sample.assemblies.equinox-test-harness.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">samples.ariestrader-sample.assemblies.ariestrader-jdbc-eba.src.main.resources.META-INF.APPLICATION.MF</file>
      <file type="M">samples.ariestrader-sample.assemblies.ariestrader-jdbc-eba.pom.xml</file>
      <file type="M">samples.ariestrader-sample.assemblies.ariestrader-all-eba.src.main.resources.META-INF.APPLICATION.MF</file>
      <file type="M">samples.ariestrader-sample.assemblies.ariestrader-all-eba.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="217" opendate="2010-3-5 00:00:00" fixdate="2010-3-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Relax OSGI frameworks import version in org.apache.aries.application bundles</summary>
      <description>The org.apache.aries.application.api and org.apache.aries.application.utils bundles import the org.osgi.framework package at the project default, which is [1.5, 2.0). This limits the ability to re-use these very useful bundles in environments which don't have the 1.5 level of org.osgi.framework. A patch is attached which relaxes the version requiremements for these two bundles.</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-utils.pom.xml</file>
      <file type="M">application.application-api.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="22" opendate="2009-10-12 00:00:00" fixdate="2009-1-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incorrectly returning a NamingEnumeration for list and listBindings on osgi:services namespace</summary>
      <description>When calling list or listBindings for objects in the osgi URL scheme the implementation incorrectly returns a NamingEnumeration that describes services. They should only do this when the equivilent lookup would return a Context. Since the osgi namespace never returns a context this is incorrect behaviour.This issue will remove the incorrect support.</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jndi.jndi-url.src.test.java.org.apache.aries.jndi.url.ServiceRegistryContextTest.java</file>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.url.ServiceRegistryContext.java</file>
    </fixedFiles>
  </bug>
  <bug id="221" opendate="2010-3-6 00:00:00" fixdate="2010-3-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Interceptors can get lost in the interactions between multiple namespace handlers</summary>
      <description>In a blueprint element like the following one taken from the blog sample &lt;bean id="persistenceImpl" class="org.apache.aries.samples.blog.persistence.BlogPersistenceServiceImpl"&gt; &lt;tx:transaction method="*" value="Required" /&gt; &lt;jpa:context property="entityManager" unitname="blogExample" /&gt; &lt;/bean&gt;two namespace handlers must interact sensibly to achieve the desired result. Currently however there is a prolem. The transaction namespace handler registers interceptors against the bean metadata instance handed to it. The jpa namespace handler on the other hand decorates the bean metadata instance and returns a new one (without any interceptors). Hence, the result bean has no transactions. (Behaviour varies depending on the order of invocation).</description>
      <version>0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.NamespaceHandler.java</file>
      <file type="M">jpa.jpa-blueprint-aries.src.test.java.org.apache.aries.jpa.blueprint.aries.test.NSHandlerTest.java</file>
      <file type="M">jpa.jpa-blueprint-aries.src.main.java.org.apache.aries.jpa.blueprint.aries.impl.NSHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="222" opendate="2010-3-6 00:00:00" fixdate="2010-3-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Service reference cglib proxy factory does not handle multiple concrete classes correctly</summary>
      <description>The current implementation of AbstractServiceReference.CgLibProxyFactory will fall over when presented with a valid set of inputs like {AbstractList, ArrayList}.</description>
      <version>0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe.java</file>
    </fixedFiles>
  </bug>
  <bug id="223" opendate="2010-3-8 00:00:00" fixdate="2010-7-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create eba for blog sample using jpa persistence</summary>
      <description>Blog-eba creates an eba for the sample using jdbc. We need an equivalent for blog using jpa - e.g. blog-jpa-eba</description>
      <version>None</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blog-sample.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="224" opendate="2010-3-8 00:00:00" fixdate="2010-5-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make blog jpa persistence bundle symbolic name different from jdbc</summary>
      <description>The jpa and jdbc blog persistence bundles are logically different but have the same symbolic name. The names should be different.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blog-sample.blog-persistence-jpa.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="226" opendate="2010-3-9 00:00:00" fixdate="2010-5-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add the tutorial code and documentation that was used at OSGi DevCon</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">tutorials.blueprint.tutorial-assembly.src.main.assemblies.tutorial-assembly.xml</file>
      <file type="M">tutorials.blueprint.pom.xml</file>
      <file type="M">tutorials.blueprint.tutorial-assembly.src.main.scripts.run.sh</file>
      <file type="M">tutorials.blueprint.tutorial-assembly.src.main.scripts.run.bat</file>
      <file type="M">tutorials.blueprint.tutorial-assembly.src.main.resources.configuration.config.ini</file>
      <file type="M">tutorials.blueprint.tutorial-modules.greeter-server-osgi.pom.xml</file>
      <file type="M">tutorials.blueprint.tutorial-modules.greeter-server-blueprint.pom.xml</file>
      <file type="M">tutorials.blueprint.tutorial-modules.greeter-client-osgi.pom.xml</file>
      <file type="M">tutorials.blueprint.tutorial-modules.greeter-client-blueprint.pom.xml</file>
      <file type="M">tutorials.blueprint.tutorial-modules.greeter-api.pom.xml</file>
      <file type="M">tutorials.blueprint.tutorial-assembly.src.main.assemblies.distro-assembly.xml</file>
      <file type="M">tutorials.blueprint.tutorial-assembly.pom.xml</file>
      <file type="M">tutorials.blueprint.tutorial-assembly.src.main.docs.instructions.html</file>
    </fixedFiles>
  </bug>
  <bug id="229" opendate="2010-3-9 00:00:00" fixdate="2010-5-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Rename service import/export config options for consistency</summary>
      <description>&lt;serviceImports&gt; should be &lt;Application-ImportService&gt;&lt;serviceExports&gt; should be &lt;Application-ExportService&gt;</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">maven-eba-plugin.src.main.java.org.apache.aries.plugin.eba.EbaMojo.java</file>
    </fixedFiles>
  </bug>
  <bug id="23" opendate="2009-10-16 00:00:00" fixdate="2009-10-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>integration tests fail on IBM JDK 6</summary>
      <description>All the integration tests fail on IBM JDK 6 with the following exception:java.lang.TypeNotPresentException: Type org.ops4j.pax.exam.junit.Configuration not present at com.ibm.oti.reflect.AnnotationHelper.getAnnotation(AnnotationHelper.java:38) at com.ibm.oti.reflect.AnnotationHelper.getDeclaredAnnotations(AnnotationHelper.java:50) at com.ibm.oti.reflect.Method.getDeclaredAnnotations(Method.java:31) at java.lang.reflect.Method.getDeclaredAnnotations(Method.java:687) at java.lang.reflect.AccessibleObject.getAnnotations(AccessibleObject.java:186) at com.ibm.oti.reflect.Method.getAnnotation(Method.java:20) at java.lang.reflect.Method.getAnnotation(Method.java:677) at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.getAnnotatedMethods(CallableTestMethodImpl.java:295) at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.runBefores(CallableTestMethodImpl.java:162) at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.injectContextAndInvoke(CallableTestMethodImpl.java:124) at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.call(CallableTestMethodImpl.java:101)This is the same problem as described in FELIX-1728.</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-itests.src.test.java.org.apache.aries.blueprint.itests.TestReferences.java</file>
      <file type="M">blueprint.blueprint-itests.src.test.java.org.apache.aries.blueprint.itests.TestConfigAdmin.java</file>
      <file type="M">blueprint.blueprint-itests.src.test.java.org.apache.aries.blueprint.itests.BlueprintContainerTest.java</file>
      <file type="M">blueprint.blueprint-itests.src.test.java.org.apache.aries.blueprint.itests.AbstractIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="231" opendate="2010-3-9 00:00:00" fixdate="2010-3-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>No information available when a blueprint bundle fails to start due to missing namespace handlers</summary>
      <description>Currently, no information is output when a blueprint bundle fails to start due to missing namespace handlers. The only way to debug this is to enable debug trace. We should put out a message indicating what the problem is without having to resort to trace.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BlueprintContainerImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="232" opendate="2010-3-9 00:00:00" fixdate="2010-3-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor the transaction test datasource component to make it reusable</summary>
      <description>The org.apache.aries.transaction.testds component currently provides JDBC wrappers to facilitate enlisting XAResources in transactions. Other components such as the blog sample and aries trader sample will need to reuse this facility in order to participate in global transactions. This is currently not possible, however, becuase this component also hardcodes details such as data source class names used by the transaction integration tests. These details should be separated out so that the wrappers themselves are reusable.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">transaction.transaction-testds.src.main.resources.OSGI-INF.blueprint.dataSource.xml</file>
      <file type="M">transaction.transaction-testds.src.main.java.org.apache.aries.transaction.jdbc.XADatasourceEnlistingWrapper.java</file>
      <file type="M">transaction.transaction-testds.src.main.java.org.apache.aries.transaction.jdbc.ConnectionWrapper.java</file>
      <file type="M">transaction.transaction-testds.pom.xml</file>
      <file type="M">transaction.transaction-itests.src.test.java.org.apache.aries.transaction.itests.AbstractIntegrationTest.java</file>
      <file type="M">transaction.transaction-itests.pom.xml</file>
      <file type="M">transaction.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="233" opendate="2010-3-10 00:00:00" fixdate="2010-3-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JNDI service damping code does not correctly unwrap invocation target exceptions</summary>
      <description>The JNDIServiceDamper should catch InvocationTargetException and rethrow the target exception. If it doesn't do this then the client gets an UnsupportedThrowableException instead.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.services.ServiceHelper.java</file>
    </fixedFiles>
  </bug>
  <bug id="236" opendate="2010-3-10 00:00:00" fixdate="2010-3-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blog sample email validation inconsistent</summary>
      <description>The blog sample doesn't validate email addresses when creating an author so we can create an author with an invalid email address. It does validate the email address for editing the author and therefore once created, it is not possible to edit the author. We should either do consistent validation or remove all validation (depending on how 'real' we want it to be).</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blog.blog-web.src.main.java.org.apache.aries.samples.blog.web.EditAuthorForm.java</file>
      <file type="M">samples.blog.blog-web.src.main.java.org.apache.aries.samples.blog.web.EditAuthor.java</file>
    </fixedFiles>
  </bug>
  <bug id="240" opendate="2010-3-10 00:00:00" fixdate="2010-3-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AriesTrader - Update the AriesTrader groupIDs, artifactIDs, and path structure to be consiste within Apache Aries</summary>
      <description>The jars I can see currently being put into the local repo inorg/apache/aries/ariestrader are:./assemblies/ariestrader-all-eba/0.1-incubating/ariestrader-all-eba-0.1-incubating.eba./assemblies/ariestrader-jdbc-eba/0.1-incubating/ariestrader-jdbc-eba-0.1-incubating.eba./modules/ariestrader-api/0.1-incubating/ariestrader-api-0.1-incubating.jar./modules/ariestrader-beans/0.1-incubating/ariestrader-beans-0.1-incubating.jar./modules/ariestrader-core/0.1-incubating/ariestrader-core-0.1-incubating.jar./modules/ariestrader-derby-ds/0.1-incubating/ariestrader-derby-ds-0.1-incubating.jar./modules/ariestrader-entities/0.1-incubating/ariestrader-entities-0.1-incubating.jar./modules/ariestrader-persist-jdbc/0.1-incubating/ariestrader-persist-jdbc-0.1-incubating.jar./modules/ariestrader-persist-jpa-am/0.1-incubating/ariestrader-persist-jpa-am-0.1-incubating.jar./modules/ariestrader-persist-jpa-cm/0.1-incubating/ariestrader-persist-jpa-cm-0.1-incubating.jar./modules/ariestrader-util/0.1-incubating/ariestrader-util-0.1-incubating.jar./modules/ariestrader-web/0.1-incubating/ariestrader-web-0.1-incubating.jarSo if we are to follow what I've proposed for the rest instead of:org/apache/aries/ariestrader/ariestrader-api/0.1-incubating/ariestrader-api-0.1-incubating.jarwe would have:org/apache/aries/samples/ariestrader/org.apache.aries.samples.ariestrader.api/0.1-incubating/org.apache.aries.samples.ariestrader.api-0.1-incubating.jarand instead of the BSN in that bundle beingorg.apache.aries.ariestrader.modules.ariestrader-api it would beorg.apache.aries.samples.ariestrader.apiand then we would apply that to all the other 'modules'.With the .eba assemblies, instead of:org/apache/aries/ariestrader/assemblies/ariestrader-all-eba/0.1-incubating/ariestrader-all-eba-0.1-incubating.ebawe would have:org/apache/aries/samples/ariestrader/org.apache.aries.samples.ariestrader.all-0.1-incubating.ebaand instead of the BSN in that eba being ariestrader.eba it woul beorg.apache.aries.samples.ariestrader.all ... but I suspect this is theeba-maven-plugin's fault.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.ariestrader-sample.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.WEB-INF.geronimo-web.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-util.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jpa-cm.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jpa-am.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jdbc.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-entities.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-derby-ds.src.main.java.org.apache.aries.ariestrader.datasource.derby.DerbyActivator.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-derby-ds.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-core.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-beans.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-api.pom.xml</file>
      <file type="M">samples.ariestrader-sample.assemblies.pom.xml</file>
      <file type="M">samples.ariestrader-sample.assemblies.equinox-test-harness.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">samples.ariestrader-sample.assemblies.equinox-test-harness.pom.xml</file>
      <file type="M">samples.ariestrader-sample.assemblies.ariestrader-jdbc-eba.src.main.eba.META-INF.APPLICATION.MF</file>
      <file type="M">samples.ariestrader-sample.assemblies.ariestrader-jdbc-eba.src.main.assembly.assembly.xml</file>
      <file type="M">samples.ariestrader-sample.assemblies.ariestrader-jdbc-eba.pom.xml</file>
      <file type="M">samples.ariestrader-sample.assemblies.ariestrader-all-eba.src.main.eba.META-INF.APPLICATION.MF</file>
      <file type="M">samples.ariestrader-sample.assemblies.ariestrader-all-eba.src.main.assembly.assembly.xml</file>
      <file type="M">samples.ariestrader-sample.assemblies.ariestrader-all-eba.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="241" opendate="2010-3-10 00:00:00" fixdate="2010-3-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AriesTrader - the DataSource is not enlisted in the transaction created via Declarative Transactions</summary>
      <description>It seems that the DataSource is not enlisted in the transaction when using Container Managed JPA with declarative transactions in this sample.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-derby-ds.src.main.resources.OSGI-INF.blueprint.blueprint.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-util.src.main.java.org.apache.aries.samples.ariestrader.util.TradeConfig.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jdbc.src.main.java.org.apache.aries.samples.ariestrader.persist.jdbc.TradeJdbc.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-entities.src.main.resources.META-INF.persistence.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-derby-ds.src.main.java.org.apache.aries.samples.ariestrader.datasource.derby.DerbyActivator.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-derby-ds.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-core.src.main.java.org.apache.aries.samples.ariestrader.core.TradeDBManagerImpl.java</file>
      <file type="M">samples.ariestrader-sample.assemblies.equinox-test-harness.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">samples.ariestrader-sample.assemblies.equinox-test-harness.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="242" opendate="2010-3-10 00:00:00" fixdate="2010-7-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blueprint parser does not call namespace handlers for custom attributes of the blueprint element</summary>
      <description>The blueprint parser does not call out to NamespaceHandlers for custom attributes of the blueprint element.There is already a working method for use in child elements of blueprint that could be used instead.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.Parser.java</file>
    </fixedFiles>
  </bug>
  <bug id="245" opendate="2010-3-11 00:00:00" fixdate="2010-11-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix failing blueprint itests</summary>
      <description>The blueprint BC tests both fail because the composite bundle created needs to import an additional package in order for the bundle in the framework to work correctly.The sample now depends on both org.osgi.service.blueprint and org.osgi.service.blueprint.container.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-itests.src.test.java.org.apache.aries.blueprint.itests.BlueprintContainerBTCustomizerTest.java</file>
      <file type="M">blueprint.blueprint-itests.src.test.java.org.apache.aries.blueprint.itests.BlueprintContainer2BTCustomizerTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="25" opendate="2009-10-20 00:00:00" fixdate="2009-12-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enable additonal contributions to blueprint xml via bundle private storage.</summary>
      <description>Problem:With the potential introduction of annotation processing, blueprint information for a bundle starts to come from more than one source. Rather than have to expand the Parser to allow extensible blueprint sources, it is simpler to have a single location, where any blueprint info can be found. Proposal:The Blueprint extender currently scans the bundle looking for xml to use for blueprint, building a list of paths that are passed to the container for parsing. This list-building logic to be updated to check the bundles private storage for overrides, and replace path entries in the list when present.</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BlueprintExtender.java</file>
    </fixedFiles>
  </bug>
  <bug id="250" opendate="2010-3-12 00:00:00" fixdate="2010-4-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JNDI service name lookup bugs</summary>
      <description>There are two bugs related to lookups using the osgi.jndi.service.name property. These are:osgi:service/jdbc/myDataSourceresults in a NamingException. To work correctly first off we try looking using an interface name of jdbc and a filer of myDataSource. Since myDataSource is not a valid filter we get a FilterSyntaxException when we first query. This results in a NamingException. Instead we should ignore the exception so we fall back to a service name lookup.The following lookup doesn't work:osgi:service/javax.sql.DataSource/(osgi.jndi.service.name=jdbc/myDataSource)because we basically do a split on /, so we end up with:osg:servicejavax.sql.DataSource(osgi.jndi.service.name=jdbc/myDataSource)hasFilter returns false in this case which means we query for javax.sql.DataSource with a null filter so we get the wrong DataSource (well only if there are multiple).So two fixes:1. If we have more than 3 parts we shouldn't query with interface/filter but go straight to service name.2. We should ignore the / inside a filter, so we need better parsing that balances the brackets.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jndi.jndi-url.src.test.java.org.apache.aries.jndi.url.ServiceRegistryContextTest.java</file>
      <file type="M">jndi.jndi-url.src.test.java.org.apache.aries.jndi.url.OsgiNameParserTest.java</file>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.url.ServiceRegistryListContext.java</file>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.url.ServiceRegistryContext.java</file>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.url.OsgiName.java</file>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.services.ServiceHelper.java</file>
    </fixedFiles>
  </bug>
  <bug id="253" opendate="2010-3-15 00:00:00" fixdate="2010-3-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blog Sample Date of Birth seems to get corrupted on save</summary>
      <description>When I create a new user in the Blog Sample and create a DOB of today it seems that what gets persisted is somehow corrupted. For example, for today (3/15/10) it displays this 20-7-2</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.BlogAuthorManagerImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="254" opendate="2010-3-16 00:00:00" fixdate="2010-3-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The JMX blueprint bundle should not export the .impl.codec package but .codec package instead</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-core.pom.xml</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.Util.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.TransferObject.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.OSGiBlueprintEvent.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPValueMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPTarget.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPServiceReferenceMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPServiceMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPRegistrationListener.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPRefMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPReferenceMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPReferenceListMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPReferenceListener.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPPropsMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPNullMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPNonNullMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPMapMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPMapEntry.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPIdRefMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPComponentMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPCollectionMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPBeanProperty.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPBeanMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.codec.BPBeanArgument.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.BlueprintState.java</file>
      <file type="M">jmx.jmx-blueprint-core.src.main.java.org.apache.aries.jmx.blueprint.impl.BlueprintMetadata.java</file>
      <file type="M">jmx.jmx-blueprint-core.pom.xml</file>
      <file type="M">jmx.jmx-blueprint-bundle.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="255" opendate="2010-3-16 00:00:00" fixdate="2010-3-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blueprint-bundle exports a subset of packages exported by the individual blueprint bundles</summary>
      <description>The packages exported by blueprint-bundle should be the same as packages exported by the individual blueprint bundles that make the blueprint-bundle.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-bundle.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="256" opendate="2010-3-16 00:00:00" fixdate="2010-4-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modify the transaction wrappers bundle to use a service tracker instead of blueprint</summary>
      <description>Currently the transaction wrappers bundle uses a reference in blueprint to retrieve an XADataSources that it can wrap for transaction enlistment. The wrapped XADataSource is then re-exported as a DataSource with a fixed propery. This is better done using a bundle activator as it would allow us to reuse any properties defined on the XADataSource with the new wrapped DataSource.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">transaction.transaction-wrappers.src.main.resources.OSGI-INF.blueprint.config.xml</file>
      <file type="M">transaction.transaction-wrappers.pom.xml</file>
      <file type="M">transaction.transaction-testds.src.main.resources.OSGI-INF.blueprint.dataSource.xml</file>
      <file type="M">transaction.transaction-testds.pom.xml</file>
      <file type="M">transaction.transaction-testbundle.src.main.resources.OSGI-INF.blueprint.config.xml</file>
    </fixedFiles>
  </bug>
  <bug id="258" opendate="2010-3-17 00:00:00" fixdate="2010-3-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Declarative Transaction is not rolled back when RuntimeException is thrown</summary>
      <description>In the AriesTrader sample I wanted to test that the DataSource was being properly enlisted in the XA transaction. So I threw a RuntimeException immediately after persisting some entities expecting that the transaction would be rolled back and the entities not committed to the Database. However, the entities were actually committed to the DB. It turns out that the blueprint bean method that I was using declared that it threw Exception and since RuntimeException is a subclass of Exception it considered this an expected exception and did not rollback the transaction. Much thanks to Brian De Pradine for figuring out what was going on here. The transaction interceptor should check if the exception being thrown is a "RuntimeException" and if so perform the rollback.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">transaction.transaction-blueprint.src.main.java.org.apache.aries.transaction.TxInterceptorImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="261" opendate="2010-3-19 00:00:00" fixdate="2010-3-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AriesTrader - let the maven-bundle-plugin generate import and export packages overriding only when necessary</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-util.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jpa-cm.src.main.java.org.apache.aries.samples.ariestrader.persist.jpa.TradeJpaCm.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jpa-cm.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jpa-am.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jdbc.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-entities.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-core.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-beans.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-api.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="263" opendate="2010-3-23 00:00:00" fixdate="2010-3-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AriesTrader - ensure that java packages begin with the artifactId of the bundle</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.tradehomeImg.jsp</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jpa-cm.src.main.resources.OSGI-INF.blueprint.blueprint.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jpa-am.src.main.resources.OSGI-INF.blueprint.blueprint.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-api.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-api.src.main.java.org.apache.aries.samples.ariestrader.api.TradeDBManager.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-api.src.main.java.org.apache.aries.samples.ariestrader.api.TradeServices.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-api.src.main.java.org.apache.aries.samples.ariestrader.api.TradeServicesManager.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-api.src.main.java.org.apache.aries.samples.ariestrader.persistence.api.AccountDataBean.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-api.src.main.java.org.apache.aries.samples.ariestrader.persistence.api.AccountProfileDataBean.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-api.src.main.java.org.apache.aries.samples.ariestrader.persistence.api.HoldingDataBean.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-api.src.main.java.org.apache.aries.samples.ariestrader.persistence.api.MarketSummaryDataBean.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-api.src.main.java.org.apache.aries.samples.ariestrader.persistence.api.OrderDataBean.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-api.src.main.java.org.apache.aries.samples.ariestrader.persistence.api.QuoteDataBean.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-api.src.main.java.org.apache.aries.samples.ariestrader.persistence.api.RunStatsDataBean.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-beans.src.main.java.org.apache.aries.samples.ariestrader.beans.AccountDataBeanImpl.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-beans.src.main.java.org.apache.aries.samples.ariestrader.beans.AccountProfileDataBeanImpl.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-beans.src.main.java.org.apache.aries.samples.ariestrader.beans.HoldingDataBeanImpl.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-beans.src.main.java.org.apache.aries.samples.ariestrader.beans.OrderDataBeanImpl.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-beans.src.main.java.org.apache.aries.samples.ariestrader.beans.QuoteDataBeanImpl.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-core.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-core.src.main.java.org.apache.aries.samples.ariestrader.core.TradeDBManagerImpl.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-core.src.main.java.org.apache.aries.samples.ariestrader.core.TradeServicesManagerImpl.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.AccountDataBeanImpl.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.AccountProfileDataBeanImpl.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.HoldingDataBeanImpl.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.OrderDataBeanImpl.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.QuoteDataBeanImpl.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jdbc.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jdbc.src.main.java.org.apache.aries.samples.ariestrader.persist.jdbc.TradeJdbc.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jpa-am.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jpa-am.src.main.java.org.apache.aries.samples.ariestrader.persist.jpa.TradeJpaAm.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jpa-cm.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jpa-cm.src.main.java.org.apache.aries.samples.ariestrader.persist.jpa.TradeJpaCm.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.pom.xml</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.java.org.apache.aries.samples.ariestrader.web.prims.PingJDBCRead.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.java.org.apache.aries.samples.ariestrader.web.prims.PingJDBCWrite.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.java.org.apache.aries.samples.ariestrader.web.TradeBuildDB.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.java.org.apache.aries.samples.ariestrader.web.TradeConfigServlet.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.java.org.apache.aries.samples.ariestrader.web.TradeScenarioServlet.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.java.org.apache.aries.samples.ariestrader.web.TradeServletAction.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.account.jsp</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.accountImg.jsp</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.displayQuote.jsp</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.marketSummary.jsp</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.order.jsp</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.orderImg.jsp</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.PingJspEL.jsp</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.portfolio.jsp</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.portfolioImg.jsp</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.quote.jsp</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.quoteImg.jsp</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.runStats.jsp</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-web.src.main.resources.tradehome.jsp</file>
    </fixedFiles>
  </bug>
  <bug id="264" opendate="2010-3-23 00:00:00" fixdate="2010-3-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blog - ensure that java package names begin with the artifactId of the bundle</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.biz.BlogEntryManagerImpl.java</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.biz.BlogEntryImpl.java</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.biz.BlogCommentManagerImpl.java</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.biz.BlogCommentImpl.java</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.biz.BlogAuthorManagerImpl.java</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.biz.BlogAuthorImpl.java</file>
      <file type="M">samples.blog.blog-api.src.main.java.org.apache.aries.samples.blog.api.persistence.api.Entry.java</file>
      <file type="M">samples.blog.blog-api.src.main.java.org.apache.aries.samples.blog.api.persistence.api.BlogPersistenceService.java</file>
      <file type="M">samples.blog.blog-api.src.main.java.org.apache.aries.samples.blog.api.persistence.api.Author.java</file>
      <file type="M">samples.blog.blog-api.src.main.java.org.apache.aries.samples.blog.api.comment.persistence.api.Comment.java</file>
      <file type="M">samples.blog.blog-api.src.main.java.org.apache.aries.samples.blog.api.comment.persistence.api.BlogCommentService.java</file>
      <file type="M">samples.blog.blog-datasource.pom.xml</file>
      <file type="M">samples.blog.blog-biz.src.main.resources.OSGI-INF.blueprint.blueprint.xml</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.BlogListIterator.java</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.BlogListAdapter.java</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.BlogImpl.java</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.BloggingServiceImpl.java</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.BlogEntryManagerImpl.java</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.BlogEntryImpl.java</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.BlogCommentManagerImpl.java</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.BlogCommentImpl.java</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.BlogAuthorManagerImpl.java</file>
      <file type="M">samples.blog.blog-biz.src.main.java.org.apache.aries.samples.blog.BlogAuthorImpl.java</file>
      <file type="M">samples.blog.blog-api.src.main.java.org.apache.aries.samples.blog.persistence.api.Entry.java</file>
      <file type="M">samples.blog.blog-api.src.main.java.org.apache.aries.samples.blog.persistence.api.BlogPersistenceService.java</file>
      <file type="M">samples.blog.blog-api.src.main.java.org.apache.aries.samples.blog.persistence.api.Author.java</file>
      <file type="M">samples.blog.blog-api.src.main.java.org.apache.aries.samples.blog.comment.persistence.api.Comment.java</file>
      <file type="M">samples.blog.blog-api.src.main.java.org.apache.aries.samples.blog.comment.persistence.api.BlogCommentService.java</file>
      <file type="M">samples.blog.blog-api.src.main.java.org.apache.aries.samples.blog.api.BlogEntryManager.java</file>
      <file type="M">samples.blog.blog-api.pom.xml</file>
      <file type="M">samples.blog.blog-persistence-jpa.src.main.resources.OSGI-INF.blueprint.blueprint.xml</file>
      <file type="M">samples.blog.blog-persistence-jpa.src.main.resources.META-INF.persistence.xml</file>
      <file type="M">samples.blog.blog-persistence-jpa.src.main.java.org.apache.aries.samples.blog.persistence.entity.EntryImpl.java</file>
      <file type="M">samples.blog.blog-persistence-jpa.src.main.java.org.apache.aries.samples.blog.persistence.entity.AuthorImpl.java</file>
      <file type="M">samples.blog.blog-persistence-jpa.src.main.java.org.apache.aries.samples.blog.persistence.BlogPersistenceServiceImpl.java</file>
      <file type="M">samples.blog.blog-persistence-jdbc.src.main.resources.OSGI-INF.blueprint.blueprint.xml</file>
      <file type="M">samples.blog.blog-persistence-jdbc.src.main.java.org.apache.aries.samples.blog.persistence.entity.EntryImpl.java</file>
      <file type="M">samples.blog.blog-persistence-jdbc.src.main.java.org.apache.aries.samples.blog.persistence.entity.AuthorImpl.java</file>
      <file type="M">samples.blog.blog-persistence-jdbc.src.main.java.org.apache.aries.samples.blog.persistence.BlogPersistenceServiceImpl.java</file>
      <file type="M">samples.blog.blog-web.pom.xml</file>
      <file type="M">samples.blog.blog-persistence-jpa.pom.xml</file>
      <file type="M">samples.blog.blog-persistence-jdbc.pom.xml</file>
      <file type="M">samples.blog.blog-biz.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="266" opendate="2010-3-24 00:00:00" fixdate="2010-3-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JPA module has dependencies on Application modules</summary>
      <description>Some of the JPA code uses VersionRange code from the Application module. Since VersionRage is an interface in the application api module, JPA ends up pulling two application bundles: api (for the interface) and utils (for the implementation). These dependencies should be completely unnecessary. To break this dependency, the VersionRange class can be moved to the "util" module which JPA already uses.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-utils.src.test.java.org.apache.aries.application.utils.manifest.ManifestHeaderProcessorTest.java</file>
      <file type="M">application.application-utils.src.main.resources.org.apache.aries.application.utils.messages.APPUTILSmessages.properties</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.impl.VersionRangeImpl.java</file>
      <file type="M">application.application-utils.pom.xml</file>
      <file type="M">util.pom.xml</file>
      <file type="M">jpa.pom.xml</file>
      <file type="M">jpa.jpa-container.src.main.java.org.apache.aries.jpa.container.impl.PersistenceBundleManager.java</file>
      <file type="M">jpa.jpa-container.pom.xml</file>
      <file type="M">jpa.jpa-container-itest.src.test.java.org.apache.aries.jpa.context.itest.JPAContextTest.java</file>
      <file type="M">jpa.jpa-container-itest.src.test.java.org.apache.aries.jpa.container.itest.JPAContainerTest.java</file>
      <file type="M">jpa.jpa-container-itest.src.test.java.org.apache.aries.jpa.blueprint.aries.itest.JPAInjectionTest.java</file>
      <file type="M">jpa.jpa-container-itest.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="267" opendate="2010-3-25 00:00:00" fixdate="2010-4-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Run RAT and resolve issues</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jpa.jpa-blueprint-testbundle.pom.xml</file>
      <file type="M">blueprint.blueprint-core.src.test.java.org.apache.aries.blueprint.container.AbstractServiceReferenceTest.java</file>
      <file type="M">samples.blog.blog-web.src.main.resources.style.blog.css</file>
      <file type="M">samples.blog.blog-standalone-platform-assembly.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">samples.blog.blog-assembly.src.main.resources.blogDB.sql</file>
      <file type="M">samples.blog.blog-assembly.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">eba-maven-plugin.src.it.default.src.main.custom.application.mf</file>
      <file type="M">parent.pom.xml</file>
      <file type="M">blueprint.blueprint-api.src.main.java.org.osgi.service.blueprint.reflect.packageinfo</file>
      <file type="M">blueprint.blueprint-api.src.main.java.org.osgi.service.blueprint.container.packageinfo</file>
      <file type="M">eba-maven-plugin.src.test.resources.unit.basic-eba-with-manifest.src.main.eba.META-INF.application.mf</file>
      <file type="M">jpa.pom.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file9.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file8.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file7.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file6.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file5.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file4.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file3.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file2.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file22.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file21.persistence.another.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file21.OSGI-INF.not-found.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file21.OSGI-INF.found.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file21.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file20.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file1.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file19.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file18.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file17.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file16.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file15.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file14.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file13.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file12.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file11.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container.src.test.resources.file10.META-INF.persistence.xml</file>
      <file type="M">jpa.jpa-container-testbundle.src.main.resources.OSGI-INF.persistence.persistence.xml</file>
      <file type="M">jpa.jpa-container-testbundle.src.main.java.org.apache.aries.jpa.container.itest.entities.Car.java</file>
      <file type="M">jpa.jpa-container-testbundle.pom.xml</file>
      <file type="M">jpa.jpa-container-itest.pom.xml</file>
      <file type="M">jpa.jpa-blueprint-testbundle.src.main.resources.OSGI-INF.persistence.persistence.xml</file>
      <file type="M">jpa.jpa-blueprint-testbundle.src.main.java.org.apache.aries.jpa.blueprint.itest.JPATestBean.java</file>
      <file type="M">jpa.jpa-blueprint-testbundle.src.main.java.org.apache.aries.jpa.blueprint.itest.entities.Car.java</file>
      <file type="M">util.src.main.resources.org.apache.aries.util.messages.UTILmessages.properties</file>
      <file type="M">jmx.jmx-api.src.main.java.org.osgi.jmx.framework.package.html</file>
      <file type="M">jmx.jmx-api.src.main.java.org.osgi.jmx.framework.packageinfo</file>
      <file type="M">jmx.jmx-api.src.main.java.org.osgi.jmx.package.html</file>
      <file type="M">jmx.jmx-api.src.main.java.org.osgi.jmx.packageinfo</file>
      <file type="M">jmx.jmx-api.src.main.java.org.osgi.jmx.service.cm.package.html</file>
      <file type="M">jmx.jmx-api.src.main.java.org.osgi.jmx.service.cm.packageinfo</file>
      <file type="M">jmx.jmx-api.src.main.java.org.osgi.jmx.service.permissionadmin.package.html</file>
      <file type="M">jmx.jmx-api.src.main.java.org.osgi.jmx.service.permissionadmin.packageinfo</file>
      <file type="M">jmx.jmx-api.src.main.java.org.osgi.jmx.service.provisioning.package.html</file>
      <file type="M">jmx.jmx-api.src.main.java.org.osgi.jmx.service.provisioning.packageinfo</file>
      <file type="M">jmx.jmx-api.src.main.java.org.osgi.jmx.service.useradmin.package.html</file>
      <file type="M">jmx.jmx-api.src.main.java.org.osgi.jmx.service.useradmin.packageinfo</file>
      <file type="M">samples.ariestrader-sample.assemblies.equinox-test-harness.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">eba-maven-plugin.src.test.java.org.apache.aries.plugin.eba.EbaMojoTest.java</file>
      <file type="M">eba-maven-plugin.src.it.default.pom.xml</file>
      <file type="M">eba-maven-plugin.src.it.default.src.main.eba.SomeResource.txt</file>
      <file type="M">eba-maven-plugin.src.it.default.verify.bsh</file>
      <file type="M">eba-maven-plugin.src.test.remote-repo.org.apache.maven.test.maven-artifact01.1.0-SNAPSHOT.maven-artifact01-1.0-SNAPSHOT.pom</file>
      <file type="M">eba-maven-plugin.src.test.remote-repo.org.apache.maven.test.maven-artifact02.1.0-SNAPSHOT.maven-artifact02-1.0-SNAPSHOT.pom</file>
      <file type="M">eba-maven-plugin.src.test.resources.unit.basic-eba-test.plugin-config.xml</file>
      <file type="M">eba-maven-plugin.src.test.resources.unit.basic-eba-with-descriptor.plugin-config.xml</file>
      <file type="M">eba-maven-plugin.src.test.resources.unit.basic-eba-with-manifest.plugin-config.xml</file>
      <file type="M">web.web-urlhandler.src.test.resources.JSPs.helloImport.jsp</file>
      <file type="M">samples.helloworld-samples.blueprint.blueprint-helloworld-assembly.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">samples.transaction-sample.transaction-assembly.src.main.resources.configuration.config.ini</file>
      <file type="M">samples.transaction-sample.transaction-assembly.src.main.resources.txDemoDB.sql</file>
      <file type="M">samples.transaction-sample.transaction-sample-web.src.main.java.org.apache.aries.samples.transaction.GenericJTAException.java</file>
      <file type="M">samples.transaction-sample.transaction-sample-web.src.main.resources.WEB-INF.tableTemplate.css</file>
      <file type="M">samples.transaction-sample.transaction-sample-web.src.main.resources.WEB-INF.web.xml</file>
      <file type="M">application.application-itests.src.test.resources.basic.APPLICATION.MF</file>
      <file type="M">application.application-itests.src.test.resources.obr.APPLICATION.MF</file>
      <file type="M">application.application-management.src.main.resources.org.apache.aries.application.messages.AppManagementMessages.properties</file>
      <file type="M">application.application-management.src.test.resources.bundles.repository.a.handy.persistence.library.jar.META-INF.MANIFEST.MF</file>
      <file type="M">application.application-management.src.test.resources.bundles.test.eba.foo.bar.widgets.jar.META-INF.MANIFEST.MF</file>
      <file type="M">application.application-management.src.test.resources.bundles.test.eba.META-INF.APPLICATION.MF</file>
      <file type="M">application.application-management.src.test.resources.bundles.test.eba.my.business.logic.jar.META-INF.MANIFEST.MF</file>
      <file type="M">application.application-obr-resolver.pom.xml</file>
      <file type="M">application.application-utils.src.main.resources.org.apache.aries.application.utils.messages.APPUTILSmessages.properties</file>
      <file type="M">application.application-utils.src.test.resources.app1.META-INF.APPLICATION.MF</file>
      <file type="M">application.application-utils.src.test.resources.app1.META-INF.DEPLOYMENT.MF</file>
      <file type="M">application.application-utils.src.test.resources.bundles.exploded.jar.META-INF.beforeManifest.file</file>
      <file type="M">application.application-utils.src.test.resources.bundles.exploded.jar.META-INF.MANIFEST.MF</file>
      <file type="M">application.application-utils.src.test.resources.META-INF.APPLICATION.MF</file>
      <file type="M">application.application-utils.src.test.resources.META-INF.APPLICATION2.MF</file>
      <file type="M">application.application-utils.src.test.resources.META-INF.APPLICATION3.MF</file>
      <file type="M">application.application-utils.src.test.resources.zip.file.txt</file>
      <file type="M">application.application-utils.src.test.resources.zip.subdir.someFile.txt</file>
      <file type="M">application.pom.xml</file>
      <file type="M">eba-maven-plugin.src.test.resources.unit.basic-eba-with-descriptor.src.main.eba.META-INF.application.mf</file>
    </fixedFiles>
  </bug>
  <bug id="269" opendate="2010-3-26 00:00:00" fixdate="2010-3-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove maven-bundle-plugin automatic generation of Import-Service entries for aries.blueprint.NamespaceHandler</summary>
      <description>There is some discussion related to how appropriate it is to have the manve-bundle-plugin configured to automatically add in the org.apache.aries.blueprint.NamespaceHandler entries. Until the issue is resolved I'm removing these entries. See thread starting with: http://mail-archives.apache.org/mod_mbox/incubator-aries-dev/201003.mbox/%3c4BABA437.7090706@gmail.com%3e</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">parent.default-parent.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="271" opendate="2010-3-27 00:00:00" fixdate="2010-4-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure that thread pools created in Apache Aries use daemon threads</summary>
      <description>Ensure that thread pools create daemon threads in order to avoid the scenario where the threads in the pool prevent the JVM from exiting.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.framework.ServiceState.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.framework.BundleState.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.agent.JMXAgentImpl.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BlueprintExtender.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BlueprintEventDispatcher.java</file>
    </fixedFiles>
  </bug>
  <bug id="275" opendate="2010-4-1 00:00:00" fixdate="2010-4-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AriesTrader - stock quote ranges are not updated on buy/sell activity</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jpa-cm.src.main.java.org.apache.aries.samples.ariestrader.persist.jpa.cm.TradeJpaCm.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jpa-am.src.main.java.org.apache.aries.samples.ariestrader.persist.jpa.am.TradeJpaAm.java</file>
      <file type="M">samples.ariestrader-sample.modules.ariestrader-persist-jdbc.src.main.java.org.apache.aries.samples.ariestrader.persist.jdbc.TradeJdbc.java</file>
    </fixedFiles>
  </bug>
  <bug id="277" opendate="2010-4-6 00:00:00" fixdate="2010-2-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use pax exam to write itest for the new subsystem code</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">subsystem.subsystem-itests.src.test.java.org.apache.aries.subsystem.itests.SubsystemAdminTest.java</file>
      <file type="M">subsystem.pom.xml</file>
      <file type="M">subsystem.subsystem-itests.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="278" opendate="2010-4-6 00:00:00" fixdate="2010-7-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Provide subsystem event dispatcher to dispatch events to Subsystem listener</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.SubsystemAdminImpl.java</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.Activator.java</file>
      <file type="M">subsystem.subsystem-core.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="279" opendate="2010-4-7 00:00:00" fixdate="2010-5-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Move Blueprint Spec API classes to version 1.0.1</summary>
      <description>In the OSGi Enterprise spec, the companion jar has moved up to 1.0.1 for the blueprint spec packages due to the changes for generics. We should move up too, since we have generics.</description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-api.src.main.java.org.osgi.service.blueprint.reflect.packageinfo</file>
      <file type="M">blueprint.blueprint-api.src.main.java.org.osgi.service.blueprint.container.packageinfo</file>
      <file type="M">blueprint.blueprint-bundle.pom.xml</file>
      <file type="M">blueprint.blueprint-api.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="280" opendate="2010-4-8 00:00:00" fixdate="2010-4-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor blueprint-sample-idverifier and helloworld/blueprint samples into blueprint/idverifier and blueprint/helloworld</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.helloworld-samples.blueprint.pom.xml</file>
      <file type="M">samples.helloworld-samples.blueprint.blueprint-helloworld-server.src.main.resources.OSGI-INF.blueprint.config.xml</file>
      <file type="M">samples.helloworld-samples.blueprint.blueprint-helloworld-server.src.main.java.org.apache.aries.samples.blueprint.helloworld.server.HelloWorldServiceImpl.java</file>
      <file type="M">samples.helloworld-samples.blueprint.blueprint-helloworld-server.pom.xml</file>
      <file type="M">samples.helloworld-samples.blueprint.blueprint-helloworld-client.src.main.resources.OSGI-INF.blueprint.config.xml</file>
      <file type="M">samples.helloworld-samples.blueprint.blueprint-helloworld-client.src.main.java.org.apache.aries.samples.blueprint.helloworld.client.HelloWorldClient.java</file>
      <file type="M">samples.helloworld-samples.blueprint.blueprint-helloworld-client.pom.xml</file>
      <file type="M">samples.helloworld-samples.blueprint.blueprint-helloworld-assembly.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">samples.helloworld-samples.blueprint.blueprint-helloworld-assembly.pom.xml</file>
      <file type="M">samples.helloworld-samples.blueprint.blueprint-helloworld-api.src.main.java.org.apache.aries.samples.blueprint.helloworld.api.HelloWorldService.java</file>
      <file type="M">samples.helloworld-samples.blueprint.blueprint-helloworld-api.pom.xml</file>
      <file type="M">samples.pom.xml</file>
      <file type="M">samples.blueprint.pom.xml</file>
      <file type="M">samples.blueprint.helloworld.helloworld-api.pom.xml</file>
      <file type="M">samples.blueprint-sample-idverifier.readme.txt</file>
      <file type="M">samples.blueprint-sample-idverifier.pom.xml</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-server.src.main.resources.OSGI-INF.blueprint.blueprint-sample-idverifier-server.xml</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-server.src.main.java.org.apache.aries.samples.blueprint.idverifier.server.SimpleVerifierRegistrationListener.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-server.src.main.java.org.apache.aries.samples.blueprint.idverifier.server.PersonIDVerifierSimpleImpl.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-server.src.main.java.org.apache.aries.samples.blueprint.idverifier.server.PersonIDVerifierComplexImpl.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-server.src.main.java.org.apache.aries.samples.blueprint.idverifier.server.ComplexVerifierRegistrationListener.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-server.pom.xml</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.src.main.resources.OSGI-INF.blueprint.blueprint-sample-idverifier-client.xml</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.src.main.java.org.apache.aries.samples.blueprint.idverifier.client.VerifierServiceReferenceListener.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.src.main.java.org.apache.aries.samples.blueprint.idverifier.client.RandomIDChoice.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.src.main.java.org.apache.aries.samples.blueprint.idverifier.client.PersonCreditRecords.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.src.main.java.org.apache.aries.samples.blueprint.idverifier.client.PersonBankBean.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.src.main.java.org.apache.aries.samples.blueprint.idverifier.client.PersonalInfo.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.src.main.java.org.apache.aries.samples.blueprint.idverifier.client.IDVerifierClientActivator.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.src.main.java.org.apache.aries.samples.blueprint.idverifier.client.IDConverter.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.src.main.java.org.apache.aries.samples.blueprint.idverifier.client.CreditRecordStore.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.src.main.java.org.apache.aries.samples.blueprint.idverifier.client.CreditRecordOperationImpl.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.src.main.java.org.apache.aries.samples.blueprint.idverifier.client.CreditRecordFactory.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.src.main.java.org.apache.aries.samples.blueprint.idverifier.client.CreditRecord.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.src.main.java.org.apache.aries.samples.blueprint.idverifier.client.CreditQueryRegistrationListener.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.src.main.java.org.apache.aries.samples.blueprint.idverifier.client.BankInfo.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-client.pom.xml</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-assembly.src.main.resources.run.sh</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-assembly.src.main.resources.run.bat</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-assembly.src.main.resources.conf.config.properties</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-assembly.pom.xml</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-api.src.main.java.org.apache.aries.samples.blueprint.idverifier.api.PersonIDVerifier.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-api.src.main.java.org.apache.aries.samples.blueprint.idverifier.api.CreditRecordOperation.java</file>
      <file type="M">samples.blueprint-sample-idverifier.blueprint-sample-idverifier-api.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="282" opendate="2010-4-8 00:00:00" fixdate="2010-4-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>move transaction sample which isn&amp;#39;t working out of samples to samples-sandbox so it isn&amp;#39;t released</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples-sandbox.pom.xml</file>
      <file type="M">samples.transaction-sample.transaction-sample-web.src.main.resources.WEB-INF.web.xml</file>
      <file type="M">samples.transaction-sample.transaction-sample-web.src.main.resources.WEB-INF.tableTemplate.css</file>
      <file type="M">samples.transaction-sample.transaction-sample-web.src.main.java.org.apache.aries.samples.transaction.TxDBServlet.java</file>
      <file type="M">samples.transaction-sample.transaction-sample-web.src.main.java.org.apache.aries.samples.transaction.GenericJTAException.java</file>
      <file type="M">samples.transaction-sample.transaction-sample-web.pom.xml</file>
      <file type="M">samples.transaction-sample.transaction-assembly.src.main.resources.txDemoDB.sql</file>
      <file type="M">samples.transaction-sample.transaction-assembly.src.main.resources.configuration.config.ini</file>
      <file type="M">samples.transaction-sample.transaction-assembly.pom.xml</file>
      <file type="M">samples.transaction-sample.pom.xml</file>
      <file type="M">samples.transaction-sample.osgi-jdbc-derby.src.main.java.org.apache.aries.samples.osgijdbc.derby.DerbyActivator.java</file>
      <file type="M">samples.transaction-sample.osgi-jdbc-derby.pom.xml</file>
      <file type="M">samples.transaction-sample.osgi-jdbc-api.src.main.java.org.osgi.service.jdbc.DataSourceFactory.java</file>
      <file type="M">samples.transaction-sample.osgi-jdbc-api.pom.xml</file>
      <file type="M">samples.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="283" opendate="2010-4-14 00:00:00" fixdate="2010-2-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Provide an implementation of ResourceResolver that can find/resolve resources in local .m2 repo or any other specified repo</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">subsystem.subsystem-itests.src.test.resources.subsystem1.META-INF.MANIFEST.MF</file>
      <file type="M">subsystem.subsystem-itests.src.test.java.org.apache.aries.subsystem.itests.SubsystemAdminTest.java</file>
      <file type="M">subsystem.subsystem-itests.pom.xml</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.Activator.java</file>
      <file type="M">subsystem.subsystem-core.pom.xml</file>
      <file type="M">subsystem.subsystem-core.src.test.java.org.apache.aries.subsystem.core.ResourceResolverTest.java</file>
      <file type="M">subsystem.subsystem-core.src.test.java.org.apache.aries.subsystem.core.MockRepositoryAdminImpl.java</file>
      <file type="M">subsystem.subsystem-core.src.main.java.org.apache.aries.subsystem.core.internal.ResourceResolverImpl.java</file>
      <file type="M">subsystem.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="284" opendate="2010-4-14 00:00:00" fixdate="2010-4-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AriesTrader - clean up mode processing and use the service property rather than invoking the service to get the enum value</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.resources.config.jsp</file>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.java.org.apache.aries.samples.ariestrader.web.TradeConfigServlet.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.java.org.apache.aries.samples.ariestrader.web.prims.PingJDBCWrite.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.java.org.apache.aries.samples.ariestrader.web.prims.PingJDBCRead.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-util.src.main.java.org.apache.aries.samples.ariestrader.util.TradeConfig.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-persist-jpa-cm.src.main.resources.OSGI-INF.blueprint.blueprint.xml</file>
      <file type="M">samples.ariestrader.modules.ariestrader-persist-jpa-cm.src.main.java.org.apache.aries.samples.ariestrader.persist.jpa.cm.TradeJpaCm.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-persist-jpa-am.src.main.resources.OSGI-INF.blueprint.blueprint.xml</file>
      <file type="M">samples.ariestrader.modules.ariestrader-persist-jpa-am.src.main.java.org.apache.aries.samples.ariestrader.persist.jpa.am.TradeJpaAm.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-persist-jdbc.src.main.resources.OSGI-INF.blueprint.blueprint.xml</file>
      <file type="M">samples.ariestrader.modules.ariestrader-persist-jdbc.src.main.java.org.apache.aries.samples.ariestrader.persist.jdbc.TradeJdbc.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-derby-ds.pom.xml</file>
      <file type="M">samples.ariestrader.modules.ariestrader-core.src.main.resources.OSGI-INF.blueprint.blueprint.xml</file>
      <file type="M">samples.ariestrader.modules.ariestrader-core.src.main.java.org.apache.aries.samples.ariestrader.core.TradeServicesManagerImpl.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-api.src.main.java.org.apache.aries.samples.ariestrader.api.TradeServicesManager.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-api.src.main.java.org.apache.aries.samples.ariestrader.api.TradeServices.java</file>
    </fixedFiles>
  </bug>
  <bug id="285" opendate="2010-4-15 00:00:00" fixdate="2010-4-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix source licenses for the JPA component</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jpa.NOTICE</file>
      <file type="M">jpa.LICENSE</file>
      <file type="M">jpa.jpa-container.src.main.appended-resources.META-INF.LICENSE.vm</file>
    </fixedFiles>
  </bug>
  <bug id="29" opendate="2009-10-21 00:00:00" fixdate="2009-11-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement JMX Agent</summary>
      <description>Implement JMX Agent. It should be responsible for tracking all MBean servers(registered as a services) and services which will be exposed as a Managed Beans (MBeans).JMX Agent should register following MBeans: Framework MBean, Bundle State MBean, Service State MBean, Package State MBean, Permission Admin MBean, Configuration Admin MBean,Provisioning Service MBean, User Admin MBean, Conditional Permission Admin MBean.It is open issue if we should track MBean servers registered as services but for now we can follow RI of JMX which listen to MBean Server services.For now we can track MBeanServers and when service is discovered register MBeans. Same in case when service is exposed as Managed MBeans it should be registered (on all available MBean servers) when is discovered.</description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.Activator.java</file>
    </fixedFiles>
  </bug>
  <bug id="290" opendate="2010-4-17 00:00:00" fixdate="2010-5-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Running a disconnected machine the images from the blog are broken</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blog.blog-web.src.main.java.org.apache.aries.samples.blog.web.util.HTMLOutput.java</file>
    </fixedFiles>
  </bug>
  <bug id="297" opendate="2010-4-20 00:00:00" fixdate="2010-4-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure Incubator disclaimer is included in each release artifact</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>0.1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">parent.default-parent.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="305" opendate="2010-5-10 00:00:00" fixdate="2010-5-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to released OpenJPA 2.0.0 artifacts</summary>
      <description>Apache OpenJPA 2.0.0 was released on April 22.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jpa.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="306" opendate="2010-5-10 00:00:00" fixdate="2010-5-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to latest geronimo-jpa_2.0_spec-1.1 artifact</summary>
      <description>Geronimo released a new version of the geronimo-jpa_2.0_spec which exports the packages as version=1.1, as required by the EEG 4.2 spec for JPA.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jpa.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="316" opendate="2010-5-21 00:00:00" fixdate="2010-5-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>eba-maven-plugin should ignore dependencies in &amp;#39;test&amp;#39; or &amp;#39;provided&amp;#39; scope</summary>
      <description>The eba-maven-plugin should ignore dependencies in 'test' or 'provided' scope when generating the application manifest.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">eba-maven-plugin.src.main.java.org.apache.aries.plugin.eba.EbaMojo.java</file>
    </fixedFiles>
  </bug>
  <bug id="322" opendate="2010-5-26 00:00:00" fixdate="2010-9-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Anonymous beans in blueprint incompatible with JPA integration</summary>
      <description>If I change the blueprint.xml for the JPA bundle of the blog sample to the following, &lt;service interface="com.ibm.ws.eba.example.blog.persistence.api.BlogPersistenceService"&gt; &lt;bean class="com.ibm.ws.eba.example.blog.persistence.BlogPersistenceServiceImpl"&gt; &lt;tx:transaction method="*" value="Required"/&gt; &lt;/bean&gt; &lt;/service&gt;the samples fails with this error:&amp;#91;25/05/10 17:35:59:068 BST&amp;#93; 0000002c servlet E com.ibm.ws.webcontainer.servlet.ServletWrapper service SRVE0068E: Uncaught exception created in one of the service methods of the servlet Edit Blog Author in application 55f218ea-219d-4ff1-af48-3b80c274765b.2. Exception created : javax.persistence.TransactionRequiredException: No transaction currently active at org.apache.aries.jpa.container.context.transaction.impl.JTAPersistenceContextRegistry.getCurrentPersistenceContext(JTAPersistenceContextRegistry.java:94) at org.apache.aries.jpa.container.context.transaction.impl.JTAEntityManager.getPersistenceContext (JTAEntityManager.java:73) at org.apache.aries.jpa.container.context.transaction.impl.JTAEntityManager.persist(JTAEntityManager.java:220)The problem seems to be the anonymous bean. This tripped me up pretty badly when I was trying to write a new application, and I expect other users would hit it as well.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">transaction.transaction-testbundle.src.main.resources.OSGI-INF.blueprint.config.xml</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.RecipeBuilder.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BeanRecipe.java</file>
    </fixedFiles>
  </bug>
  <bug id="328" opendate="2010-6-1 00:00:00" fixdate="2010-1-1 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Update Context Info Provider for GOAT sample.</summary>
      <description>GOAT introduced the remodelled api for the prototype graphical demo, but left out the BundleContextInfoProvider..</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.goat.goat-web.src.main.resources.web.goat.Relationship.js</file>
      <file type="M">samples.goat.goat-web.src.main.resources.web.goat.elements.TriangleDecorator.js</file>
      <file type="M">samples.goat.goat-web.src.main.resources.web.goat.elements.RelationshipElement.js</file>
      <file type="M">samples.goat.pom.xml</file>
      <file type="M">samples.goat.goat-assembly.pom.xml</file>
      <file type="M">samples.goat.goat-assembly.src.main.filtered-resources.configuration.config.ini</file>
    </fixedFiles>
  </bug>
  <bug id="330" opendate="2010-6-3 00:00:00" fixdate="2010-6-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support for specifiying the runtime class on service references instead of class names</summary>
      <description>Beans can already be created by custom namespace handlers by specifying the runtime class, but references can not.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.reflect.ServiceReferenceMetadataImpl.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.mutable.MutableServiceReferenceMetadata.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.ExtendedServiceReferenceMetadata.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.ReferenceRecipe.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.ReferenceListRecipe.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe.java</file>
    </fixedFiles>
  </bug>
  <bug id="332" opendate="2010-6-6 00:00:00" fixdate="2010-6-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blueprint itests fail on some machines with slow internet connection</summary>
      <description>The reason for the failure is the managed property place holder in the blueprint sample bundle that refers to a properties file at "file://url".Now calling URL#openStream() on such a URL usually fails fast. However, on at least one machine / internet connection it only fails after more than a minute. This not only causes several tests to break but also means that the whole suite takes several minutes to run.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-sample.src.main.resources.OSGI-INF.blueprint.config.xml</file>
    </fixedFiles>
  </bug>
  <bug id="333" opendate="2010-6-9 00:00:00" fixdate="2010-6-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JMX implementation updates</summary>
      <description>Some JMX specification issues have been clarified and the Aries implementation needs to be updated accordingly. Specifically, 1) No RuntimeExceptions should be thrown by any of the MBeans2) BundleStateMBean.getRequiredBundles() and similar functions should return any dependencies via dynamic or static imports, required or fragment bundles.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.jmx-itests.src.test.java.org.apache.aries.jmx.framework.BundleStateMBeanTest.java</file>
      <file type="M">jmx.jmx-core.src.test.java.org.apache.aries.jmx.util.FrameworkUtilsTest.java</file>
      <file type="M">jmx.jmx-core.src.test.java.org.apache.aries.jmx.framework.FrameworkTest.java</file>
      <file type="M">jmx.jmx-core.src.test.java.org.apache.aries.jmx.codec.BundleDataTest.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.util.FrameworkUtils.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.useradmin.UserAdmin.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.framework.Framework.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.codec.GroupData.java</file>
      <file type="M">jmx.jmx-core.src.main.java.org.apache.aries.jmx.cm.ConfigurationAdmin.java</file>
    </fixedFiles>
  </bug>
  <bug id="336" opendate="2010-6-14 00:00:00" fixdate="2010-6-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blog sample issues with Java2 security</summary>
      <description>Trying to run the blog sample with Java2 security on (and reasonable permissions rather than AllPermissions) revealed a small number of places in the Aries componentry that needs doPrivs.In particular, around Bundle.loadClass and Bundle.getResource</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jpa.jpa-container.src.main.java.org.apache.aries.jpa.container.unit.impl.BundleDelegatingClassLoader.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.utils.BundleDelegatingClassLoader.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.GenericType.java</file>
      <file type="M">application.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="338" opendate="2010-6-15 00:00:00" fixdate="2010-6-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>osgi:service JNDI damping performs like a one legged dog under an anesthetic</summary>
      <description>I updated some of my code to use the JNDI implementation of osgi:service which does the service damping and my application saw a 3x slowdown (i.e. it took 3 second to do something it used to take 1 seconds).It appears the problem is that every time a lookup is performed a new java.lang.reflect.Proxy class is generated and doing this over and over when the same service is looked up is expensive. Instead of doing this we can generate a proxy once per client BundleContext per service and cache it between lookups. The cache needs to be managed, so if the client goes away we clear the cache and if the service goes away we purge it too.I have written the code and shown that it improves performance so I'm raising this JIRA so I can integrate the performance fix.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.services.ServiceHelper.java</file>
    </fixedFiles>
  </bug>
  <bug id="342" opendate="2010-6-25 00:00:00" fixdate="2010-6-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blueprint leaking memory in multi-framework environment</summary>
      <description>With the current AriesBundleTrackerCustomizer that allows one Blueprint container to track composite sub-frameworks, the blueprint extender class leaks memory in that it never disposes of existing blueprint containers. The reason for this behaviour is that the bundle tracker to the composite bundle is deregistered on stopping, which is before any bundles inside the composite bundle are stopped.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">util.src.main.java.org.apache.aries.util.tracker.RecursiveBundleTracker.java</file>
      <file type="M">util.src.main.java.org.apache.aries.util.tracker.InternalRecursiveBundleTracker.java</file>
    </fixedFiles>
  </bug>
  <bug id="351" opendate="2010-7-7 00:00:00" fixdate="2010-7-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>If an EBA contains a deployment.mf, we should not convert any invalid bunldes but we don&amp;#39;t want to throw an exception either.</summary>
      <description>At the moment, we convert invalid bundles into valid ones even if a deployment.mf is present in an EBA. We should simply ignore the utility jars but we don't want to throw an exception either.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-management.src.main.resources.org.apache.aries.application.messages.AppManagementMessages.properties</file>
      <file type="M">application.application-management.src.main.java.org.apache.aries.application.management.impl.AriesApplicationManagerImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="352" opendate="2010-7-7 00:00:00" fixdate="2010-7-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Aries application name is not calculated correctly when it is not being provided</summary>
      <description>as titled, when the app name is not being provided in application.mf, it should be default to the eba file name.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-management.src.main.java.org.apache.aries.application.management.impl.AriesApplicationManagerImpl.java</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.BasicAppManagerTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="357" opendate="2010-7-13 00:00:00" fixdate="2010-7-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Compatibility with both spring 3.x and spring 2.x</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">transaction.transaction-manager.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="358" opendate="2010-7-14 00:00:00" fixdate="2010-7-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Generate a complete deployment manifest information for applications</summary>
      <description>For portability, the DEPLOYMENT.MF manifest needs to contain a complete list of bundles needed for the given application. However, right now an incomplete DEPLOYMENT.MF is generated since the bundles installed in the local framework are automatically removed in the resolved set returned by OBR.See http://aries.15396.n3.nabble.com/Re-svn-commit-r957403-in-incubator-aries-trunk-application-application-itests-src-test-java-org-apac-td922510.html#a922510 for more information,.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-runtime.src.main.java.org.apache.aries.application.runtime.impl.ApplicationContextImpl.java</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.OBRAriesResolver.java</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.impl.OBRBundleInfo.java</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.OBRResolverTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="359" opendate="2010-7-15 00:00:00" fixdate="2010-11-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement an isolated application runtime</summary>
      <description>The Apache Aries application documentation (http://incubator.apache.org/aries/applications.html ) states, "An Aries application isolates the OSGi services offered by its contained modules so that they are not visible outside the application unless explicitly configured to be exported from the application." This JIRA is being raised for the work which will provide a new runtime within the application module that will implement this isolation. This first implementation will be based on the multi-framework API in Equinox 3.5. Each application's Deployed-Content will be installed into its own isolated framework. These application frameworks will all be children of a single framework or 'shared bundle space' into which applications' dependencies will be installed.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-runtime-isolated.src.main.java.org.apache.aries.application.runtime.isolated.impl.ApplicationContextImpl.java</file>
      <file type="M">application.application-management.src.test.java.org.apache.aries.application.management.impl.AriesApplicationManagerImplTest.java</file>
      <file type="M">application.application-management.src.main.resources.OSGI-INF.blueprint.app-management.xml</file>
      <file type="M">application.application-management.src.main.java.org.apache.aries.application.management.impl.AriesApplicationManagerImpl.java</file>
      <file type="M">application.application-management.pom.xml</file>
      <file type="M">application.application-runtime.src.main.resources.OSGI-INF.blueprint.app-context-management.xml</file>
      <file type="M">application.application-runtime.src.main.java.org.apache.aries.application.runtime.defaults.NoOpResolver.java</file>
      <file type="M">application.application-runtime.src.main.java.org.apache.aries.application.runtime.defaults.DefaultLocalPlatform.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.management.ManagementException.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.management.BundleConversion.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.DeploymentMetadataFactory.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.DeploymentMetadata.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.ApplicationMetadataFactory.java</file>
      <file type="M">application.application-utils.src.test.java.org.apache.aries.application.utils.manifest.ManifestProcessorTest.java</file>
      <file type="M">application.application-utils.src.main.resources.OSGI-INF.blueprint.app-utils.xml</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.utils.manifest.ManifestHeaderProcessor.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.utils.management.SimpleBundleInfo.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.utils.AppConstants.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.impl.DeploymentMetadataImpl.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.impl.DeploymentMetadataFactoryImpl.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.impl.ApplicationMetadataFactoryImpl.java</file>
      <file type="M">application.application-utils.pom.xml</file>
      <file type="M">application.application-converters.src.main.java.org.apache.aries.application.converters.WabConverterService.java</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.OBRResolverTest.java</file>
      <file type="M">application.application-itests.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="360" opendate="2010-7-15 00:00:00" fixdate="2010-7-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blueprint proxying for java.* classes fails second time</summary>
      <description>When I restart a bundle containing a blueprint bean with some interceptors (so that it undergoes proxying) I get the following exception out of the ASM proxying code. This does not happen the very first time I start the bundle, but each subsequent time.org.osgi.service.blueprint.container.ComponentDefinitionException: Unable to proxy bean for interceptors: org.apache.aries.blueprint.proxy.UnableToLoadProxyException: java.lang.ClassNotFoundException: org.apache.aries.blueprint.proxy.java.util.$ArrayList573907509at org.apache.aries.blueprint.proxy.AsmInterceptorWrapper.createProxyObject(AsmInterceptorWrapper.java:148)at org.apache.aries.blueprint.container.BeanRecipe.addInterceptors(BeanRecipe.java:651)at org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:697)at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:64)at org.apache.aries.blueprint.container.BlueprintRepository.createInstances(BlueprintRepository.java:219)at org.apache.aries.blueprint.container.BlueprintRepository.createAll(BlueprintRepository.java:147)at org.apache.aries.blueprint.container.BlueprintContainerImpl.instantiateEagerComponents(BlueprintContainerImpl.java:624)at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:315)at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:213)at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:453)at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:315)at java.util.concurrent.FutureTask.run(FutureTask.java:150)at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:110)at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:219)at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:898)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:920)at java.lang.Thread.run(Thread.java:736)</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.proxy.ProxySubclassGenerator.java</file>
    </fixedFiles>
  </bug>
  <bug id="361" opendate="2010-7-15 00:00:00" fixdate="2010-11-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Provisioning changes required to support application isolation</summary>
      <description>ARIES-359 will implement new runtime support for application isolation. This JIRA is raised to track the associated changes required by the provisioning logic, plus an additional application.mf header necessary to enforce specific wiring from applications' isolated frameworks to bundles in the shared bundle space. Plug points will be provided to to integrate application server runtime-specific extension and validation logic.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-deployment-management.src.main.java.org.apache.aries.application.deployment.management.impl.ParserProxyImpl.java</file>
      <file type="M">application.application-modeller.src.test.resources.bundles.test.bundle1.jar.META-INF.MANIFEST.MF</file>
      <file type="M">application.application-management.src.main.resources.OSGI-INF.blueprint.app-management.xml</file>
      <file type="M">application.application-management.src.main.java.org.apache.aries.application.management.impl.AriesApplicationManagerImpl.java</file>
      <file type="M">application.application-management.pom.xml</file>
      <file type="M">samples.goat.goat-assembly.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">application.application-runtime.src.main.java.org.apache.aries.application.runtime.impl.ApplicationContextImpl.java</file>
      <file type="M">application.application-runtime.src.main.java.org.apache.aries.application.runtime.defaults.NoOpResolver.java</file>
      <file type="M">application.application-runtime.src.main.java.org.apache.aries.application.runtime.defaults.DefaultLocalPlatform.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.ModellingManagerImpl.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.modelling.ModellingManager.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.utils.runtime.NoOpResolver.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.utils.manifest.ManifestHeaderProcessor.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.utils.management.SimpleBundleInfo.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.utils.filesystem.impl.ZipDirectory.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.utils.filesystem.impl.DirectoryImpl.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.utils.AppConstants.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.impl.ServiceDeclarationImpl.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.impl.DeploymentMetadataImpl.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.impl.DeploymentMetadataFactoryImpl.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.impl.ContentImpl.java</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.impl.ApplicationMetadataImpl.java</file>
      <file type="M">samples.ariestrader.assemblies.equinox-test-harness.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.utils.manifest.ManifestProcessor.java</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.impl.BundleResource.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.management.DeploymentManifestManager.java</file>
      <file type="M">samples.blog.blog-assembly.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.utils.FilterUtils.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.modelling.ModelledResourceManager.java</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.impl.OBRBundleInfo.java</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.impl.ApplicationResourceImpl.java</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.generator.RepositoryDescriptorGenerator.java</file>
      <file type="M">application.application-obr-resolver.pom.xml</file>
      <file type="M">samples.ariestrader.assemblies.equinox-test-harness.pom.xml</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.DeployedBundlesImpl.java</file>
      <file type="M">application.application-management.src.test.java.org.apache.aries.application.management.impl.AriesApplicationManagerImplTest.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.modelling.DeployedBundles.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.management.spi.resolve.DeploymentManifestManager.java</file>
      <file type="M">samples.blog.blog-assembly.pom.xml</file>
      <file type="M">application.pom.xml</file>
      <file type="M">samples.blog.blog-itests.src.test.java.org.apache.aries.samples.blog.itests.QuiesceBlogSampleWithEbaTest.java</file>
      <file type="M">samples.blog.blog-itests.src.test.java.org.apache.aries.samples.blog.itests.JpaBlogSampleWithEbaTest.java</file>
      <file type="M">samples.blog.blog-itests.src.test.java.org.apache.aries.samples.blog.itests.JdbcBlogSampleWithEbaTest.java</file>
      <file type="M">samples.blog.blog-itests.pom.xml</file>
      <file type="M">application.application-utils.src.main.resources.OSGI-INF.blueprint.app-utils.xml</file>
      <file type="M">application.application-utils.src.main.java.org.apache.aries.application.utils.runtime.DefaultPlatformRepository.java</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.MinimumImportsTest.java</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.BasicNoOpResolverTest.java</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.BasicAppManagerTest.java</file>
      <file type="M">application.application-itests.pom.xml</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.PostResolveTransformer.java</file>
      <file type="M">application.application-utils.src.test.java.org.apache.aries.application.utils.manifest.BundleManifestTest.java</file>
      <file type="M">application.application-utils.src.test.java.org.apache.aries.application.utils.filesystem.FileSystemTest.java</file>
      <file type="M">application.application-utils.src.test.java.org.apache.aries.application.impl.ApplicationMetadataImplTest.java</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.impl.RepositoryGeneratorImpl.java</file>
      <file type="M">application.application-modeller.src.main.resources.org.apache.aries.application.modelling.messages.APPModellingMessages.properties</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.OBRResolverAdvancedTest.java</file>
      <file type="M">application.application-deployment-management.src.main.resources.org.apache.aries.application.deployment.management.messages.DeploymentManagementMessages.properties</file>
      <file type="M">application.application-deployment-management.src.main.java.org.apache.aries.application.deployment.management.internal.BundleBlueprintParser.java</file>
      <file type="M">application.application-runtime-isolated.src.main.java.org.apache.aries.application.runtime.isolated.impl.ApplicationContextImpl.java</file>
      <file type="M">application.application-bundle.pom.xml</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.OBRAriesResolver.java</file>
      <file type="M">application.application-api.pom.xml</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.modelling.ParsedServiceElements.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.modelling.ParserProxy.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.modelling.ResourceType.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.modelling.WrappedReferenceMetadata.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.modelling.WrappedServiceMetadata.java</file>
      <file type="M">application.application-deployment-management.src.main.java.org.apache.aries.application.deployment.management.impl.DeploymentManifestManagerImpl.java</file>
      <file type="M">application.application-deployment-management.src.main.resources.OSGI-INF.blueprint.deployment-manager.xml</file>
      <file type="M">application.application-deployment-management.src.test.java.org.apache.aries.application.deployment.management.DeploymentGeneratorTest.java</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.IsolatedRuntimeTest.java</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.OBRAppManagerTest.java</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.OBRResolverTest.java</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.UpdateAppTest.java</file>
      <file type="M">application.application-itests.src.test.java.org.apache.aries.application.runtime.itests.util.IsolationTestUtils.java</file>
      <file type="M">application.application-modeller.pom.xml</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.AbstractExportedBundle.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.ExportedBundleImpl.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.ExportedServiceImpl.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.ImportedBundleImpl.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.ImportedPackageImpl.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.ImportedServiceImpl.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.ModelledResourceImpl.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.ModelledResourceManagerImpl.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.ParserProxyImpl.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.internal.PackageRequirementMerger.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.utils.DeployedBundles.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.utils.ModellingConstants.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.utils.ModellingManager.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.utils.ModellingUtils.java</file>
      <file type="M">application.application-modeller.src.main.resources.OSGI-INF.blueprint.app-modeller.xml</file>
      <file type="M">application.application-modeller.src.test.java.org.apache.aries.application.modelling.impl.ParserProxyImplTest.java</file>
      <file type="M">application.application-modeller.src.test.java.org.apache.aries.application.modelling.utils.AbstractBundleResourceTest.java</file>
      <file type="M">application.application-modeller.src.test.java.org.apache.aries.application.modelling.utils.DeployedBundlesTest.java</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.ext.BundleResource.java</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.impl.ModelledBundleResource.java</file>
      <file type="M">application.application-obr-resolver.src.main.resources.OSGI-INF.blueprint.obr-resolver.xml</file>
      <file type="M">application.application-obr-resolver.src.main.java.org.apache.aries.application.resolver.obr.impl.RequirementImpl.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.ApplicationMetadata.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.Content.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.DeploymentMetadata.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.DeploymentMetadataFactory.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.filesystem.IDirectory.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.management.AriesApplicationResolver.java</file>
      <file type="M">application.application-api.src.main.java.org.apache.aries.application.management.BundleInfo.java</file>
      <file type="M">samples.goat.goat-assembly.pom.xml</file>
      <file type="M">application.application-deployment-management.pom.xml</file>
      <file type="M">application.application-deployment-management.src.main.java.org.apache.aries.application.deployment.management.impl.ModelledResourceManagerImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="362" opendate="2010-7-16 00:00:00" fixdate="2010-7-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>When checking for compatible namespaces, the namespace registry does not catch NoClassDefFoundError</summary>
      <description></description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.namespace.NamespaceHandlerRegistryImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="363" opendate="2010-7-16 00:00:00" fixdate="2010-7-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SPI-Fly needs itests subproject - a project with Pax Exam tests</summary>
      <description>SPI-Fly requires a new subproject dedicated to Pax Exam. Attaching a patch which introduces such project together with a test that verifies if SPIBundleTrackerCustomizer properly analyzes bundles available in the container.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">spi-fly.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="364" opendate="2010-7-19 00:00:00" fixdate="2010-7-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Aries itests projects need to use version 1.2 of the Servicemix depends-maven-plugin</summary>
      <description>All Aries itests projects need to generate a dependencies.properties file, so that Pax Exam based tests can properly retrieve versions of artifacts to be used at runtime. Some Aries projects use maven-paxexam-plugin to generate the dependencies.properties file, but most of them use Servicemix depends-maven-plugin. Unfortunately, the version of depends-maven-plugin used in most of Aries projects (1.1) is buggy. The generated dependencies.properties file sometimes contains resolved snashot versions (i.e. 0.2-incubating-20100717.020505-16) instead of the base versions (i.e. 0.2-incubating-SNAPSHOT). This causes Pax Exam tests to fail from time to time with an exception similar to this one:java.lang.RuntimeException: URL&amp;#91;mvn:org.apache.aries/org.apache.aries.util/0.2-incubating-20100717.020505-16&amp;#93;could not be resolved. at org.ops4j.pax.url.mvn.internal.Connection.getInputStream(Connection.java:195) at java.net.URL.openStream(URL.java:1010) at org.ops4j.pax.runner.platform.internal.StreamUtils.streamCopy(StreamUtils.java:112) at org.ops4j.pax.runner.platform.internal.PlatformImpl.download(PlatformImpl.java:631) at org.ops4j.pax.runner.platform.internal.PlatformImpl.downloadBundles(PlatformImpl.java:407) at org.ops4j.pax.runner.platform.internal.PlatformImpl.start(PlatformImpl.java:186) at org.ops4j.pax.runner.Run.startPlatform(Run.java:671) at org.ops4j.pax.runner.Run.start(Run.java:220) at org.ops4j.pax.runner.Run.start(Run.java:176)...This issue has already been fixed in SMX depends-maven-plugin. For details see this SMX revision:http://svn.apache.org/viewvc?view=revision&amp;revision=770436and the fix is availble in version 1.2 of the plugin. Patch coming soon.</description>
      <version>None</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">web.web-itests.pom.xml</file>
      <file type="M">transaction.transaction-itests.pom.xml</file>
      <file type="M">jpa.jpa-container-itest.pom.xml</file>
      <file type="M">jmx.jmx-itests.pom.xml</file>
      <file type="M">application.application-itests.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="366" opendate="2010-7-21 00:00:00" fixdate="2010-7-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Provide property injection for properties with overloaded setter method</summary>
      <description>When injecting bean property with overloaded setter method the framework returns an exception: org.osgi.service.blueprint.container.ComponentDefinitionException: Unable to find property descriptor &lt;bean-property-setter&gt; on class &lt;bean-class&gt; Apparently, behaviour for this case was relaxed in Enterprise OSGI 4.2 spec (see section 121.5.7):"There should only be one set method with a single argument for a specific property. If overloaded properties areencountered, the chosen set method is unspecified." Taking into account origin of the Blueprint service and possible migration paths for future users I believe the best case would be to follow Spring 3.x behaviour regarding the case above (just to minimize surprises).ps:For user-forum discussion see: http://mail-archives.apache.org/mod_mbox/incubator-aries-user/201007.mbox/%3C4c446974045723.96045080@wp.pl%3E</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.test.resources.test-wiring.xml</file>
      <file type="M">blueprint.blueprint-core.src.test.java.org.apache.aries.blueprint.WiringTest.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.utils.ReflectionUtils.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.di.ExecutionContext.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BlueprintRepository.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BeanRecipe.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.AggregateConverter.java</file>
    </fixedFiles>
  </bug>
  <bug id="368" opendate="2010-7-22 00:00:00" fixdate="2010-8-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Samples should lookup osgi services spec compliant using "osgi:service" rather than "aries:services" unless specific aries:service capabilities are needed</summary>
      <description>Currently the samples use a jndi prefix of "aries:services" rather than the spec compliant "osgi:service". Up until now the results of these 2 calls has been the same. However, changes are being implemented to make them different. Unless there is a specific need for aries specific capabilities our samples should use the osgi:service prefix.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blog.blog-web.src.main.java.org.apache.aries.samples.blog.web.util.JNDIHelper.java</file>
      <file type="M">samples.blog.blog-persistence-jpa.src.main.resources.META-INF.persistence.xml</file>
      <file type="M">samples.ariestrader.modules.ariestrader-util.src.main.java.org.apache.aries.samples.ariestrader.util.TradeConfig.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.resources.META-INF.persistence.xml</file>
    </fixedFiles>
  </bug>
  <bug id="371" opendate="2010-7-30 00:00:00" fixdate="2010-9-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add functionality to allow quiescing of bundles</summary>
      <description>There is a need to allow bundles to quiesce gracefully such that in-flight threads in a replaced module are permitted to run to completion. This could allow updates to be made to applications without requiring them to be restarted. If a quiesce does not complete within a suitable time period (e.g. the time a blueprint reference waits), then we should forcefully stop the bundles! Note that this is not specific to blueprint but anyone that needs to be aware of the bundle lifecycle.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">quiesce.pom.xml</file>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="373" opendate="2010-8-5 00:00:00" fixdate="2010-9-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Sample implementention of AspectJ-based SPI mechanisms for SPI-Fly</summary>
      <description>David Bosschaert some time ago contributed a set of Equinox Aspects-based examples showing how to use aspects to make SPI work inside an OSGi container. I promised to contribute an enhanced version of these mechanisms and integrate these into SPI-Fly /Maven projects, Pax Exam, etc./. I'll attach a patch with those changes in a moment. Few important notes:1. This is not intended to be committed directly to Aries SVN. The only purpose of this patch is to provide initial impl that could be used when doing additional experiments and evaluation. The patch is dirty, I was in hurry when doing it and there are lots of ugly pieces of code inside . If we decide to go with this approach, I'll prepare a clean patch once I'm back from vacation - in two weeks' time.2. The problems that were identified in the discussion about using AspectJ in SPI-Fly haven't been resolved yet. This includes (but is not limited to): being tightly coupled to Equinox; this piece of code is based on Equinox Aspects/Weaving; this will not work wit any other container inability to tell AspectJ to run an aspect on behalf of other bundle; each bundle that wants to use these new features, needs to contain an aspect and other settings like a Require-Bundle header3. This patch introduces a SPI-Consumer header and enhances the SPI-Provider header. A Pax Exam test show how to use this new functionality once you copy the aspect to your bundle and configure Require-Bundle header.4. I haven't found the latest version of Equinox Weaving in any of publicly available Maven repos. That is why, these libraries will need to be copied manually to the itests project (to the weaverBundles subdirectory). I'll attach these bundles to this JIRA.This patch is huge, so I guess there might some issues with applying it. If you have problems with that, let me know and I'll try to generate it again.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">spi-fly.spi-fly-itests.src.test.java.org.apache.aries.spifly.SPIBundleTrackerCustomizerTest.java</file>
      <file type="M">spi-fly.spi-fly-itests.src.test.java.org.apache.aries.spifly.AbstractIntegrationTest.java</file>
      <file type="M">spi-fly.spi-fly-itests.pom.xml</file>
      <file type="M">spi-fly.spi-fly-core.src.test.java.org.apache.aries.spifly.SPIBundleTrackerCustomizerTest.java</file>
      <file type="M">spi-fly.spi-fly-core.src.main.java.org.apache.aries.spifly.SPIBundleTrackerCustomizer.java</file>
      <file type="M">spi-fly.spi-fly-core.pom.xml</file>
      <file type="M">spi-fly.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="376" opendate="2010-8-5 00:00:00" fixdate="2010-9-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[blueprint transaction] with the 1.1 schema, method is optional</summary>
      <description>With the new 1.1 schema, when method is not specified, it is equivalent to method="*".The current code would not be able to get the transaction attribute for a particular method when the method attribute is omitted.</description>
      <version>0.1</version>
      <fixedVersion>0.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">transaction.transaction-blueprint.src.main.java.org.apache.aries.transaction.TxComponentMetaDataHelperImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="393" opendate="2010-8-31 00:00:00" fixdate="2010-8-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Blog Assembly is broken again :(</summary>
      <description>Since integrating the changes for isolation the blog sample assembly has been broken because it now needs two additional bundles.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.ariestrader.assemblies.equinox-test-harness.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">samples.ariestrader.assemblies.equinox-test-harness.pom.xml</file>
      <file type="M">samples.blog.blog-assembly.src.main.filtered-resources.configuration.config.ini</file>
      <file type="M">samples.blog.blog-assembly.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="394" opendate="2010-8-31 00:00:00" fixdate="2010-8-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Tidy up some minor issues in the blog sample</summary>
      <description>I've noticed that the JPA BlogPersistence service contains some code relating to a DataSource that is never hit. I think this is a hold over from the JDBC implementation, so I'll remove the code here.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.blog.blog-persistence-jpa.src.main.java.org.apache.aries.samples.blog.persistence.jpa.BlogPersistenceServiceImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="402" opendate="2010-9-7 00:00:00" fixdate="2010-9-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update AriesTrader so that it loads the sql files to create DBs using getResource</summary>
      <description>Currently there is some pretty crazy code in the AriesTrader sample that recreates the databases on demand as requested by the user. This needs to be cleaned up so that it loads the sql from the bundle rather than expecting it to be available directly in the Equinox assembly or an expanded WAR file as was the case in the former DayTrader code. Also need to clean up some of the sql and entity column lengths so that they are consistent.</description>
      <version>0.1,0.2</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.resources.dbscripts.other.Table.ddl</file>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.resources.dbscripts.oracle.Table.ddl</file>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.resources.dbscripts.derby.Table.ddl</file>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.resources.dbscripts.db2.Table.ddl</file>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.java.org.apache.aries.samples.ariestrader.web.TradeConfigServlet.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-web.src.main.java.org.apache.aries.samples.ariestrader.web.TradeBuildDB.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.QuoteDataBeanImpl.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.OrderDataBeanImpl.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.HoldingDataBeanImpl.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.AccountProfileDataBeanImpl.java</file>
      <file type="M">samples.ariestrader.modules.ariestrader-entities.src.main.java.org.apache.aries.samples.ariestrader.entities.AccountDataBeanImpl.java</file>
      <file type="M">samples.ariestrader.assemblies.equinox-test-harness.src.main.resources.tradeDB.sql</file>
    </fixedFiles>
  </bug>
  <bug id="417" opendate="2010-9-22 00:00:00" fixdate="2010-10-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Generics to JNDI and allow more flexible mechanism to plug URL ObjectFactories in.</summary>
      <description>A couple of minor changes to JNDI (that touch most everything)1. Make the JNDI code support generics in the API and implementation.2. Common up the code for finding JNDI URL ObjectFactory implementations.3. Allow an extra plug point for finding URL ObjectFactories. Some non-OSGi aware URL ObjectFactories may be provided in some environments and may therefore not be in the service registry. Although the best solution is to get them into the service registry that only works if you know all of them, as a result I'll add a plug point that allows some "smart" code to use some heuristics to find stuff.</description>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.Utils.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.startup.Activator.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.ProviderAdminService.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.OSGiInitialContextFactoryBuilder.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.ObjectFactoryHelper.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.JREInitialContextFactoryBuilder.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.DirObjectFactoryHelper.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.DelegateContext.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.ContextManagerServiceFactory.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.ContextManagerService.java</file>
      <file type="M">jndi.jndi-core.src.main.java.org.apache.aries.jndi.ContextHelper.java</file>
      <file type="M">jndi.jndi-api.pom.xml</file>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.services.ProxyFactory.java</file>
      <file type="M">jndi.jndi-url.src.main.java.org.apache.aries.jndi.services.JdkProxyFactory.java</file>
      <file type="M">jndi.jndi-url.src.test.java.org.apache.aries.jndi.url.ServiceRegistryContextTest.java</file>
      <file type="M">jndi.jndi-core.src.test.java.org.apache.aries.jndi.ObjectFactoryTest.java</file>
      <file type="M">jndi.jndi-api.src.main.java.org.osgi.service.jndi.JNDIProviderAdmin.java</file>
      <file type="M">jndi.jndi-api.src.main.java.org.osgi.service.jndi.JNDIContextManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="429" opendate="2010-9-28 00:00:00" fixdate="2010-9-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add an option on the &lt;cm:property-placeholder/&gt; element to reload the whole blueprint container if the configuration changes</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.namespace.ComponentDefinitionRegistryImpl.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.ExtendedBlueprintContainer.java</file>
      <file type="M">blueprint.blueprint-core.src.main.java.org.apache.aries.blueprint.container.BlueprintContainerImpl.java</file>
      <file type="M">blueprint.blueprint-cm.src.main.java.org.apache.aries.blueprint.compendium.cm.CmPropertyPlaceholder.java</file>
      <file type="M">blueprint.blueprint-cm.src.main.resources.OSGI-INF.blueprint.blueprint-cm.xml</file>
      <file type="M">blueprint.blueprint-cm.src.main.resources.org.apache.aries.blueprint.compendium.cm.blueprint-cm.xsd</file>
      <file type="M">blueprint.blueprint-cm.src.main.java.org.apache.aries.blueprint.compendium.cm.CmNamespaceHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="430" opendate="2010-9-29 00:00:00" fixdate="2010-11-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Whiteboard registration support for JMX DynamicMBeans</summary>
      <description>As proposed on dev &amp;#91;1&amp;#93; I have hacked together a small piece of code which implements support for the whiteboard pattern for registering MBeans with MBean servers.The code is in my Sling whiteboard at http://svn.apache.org/repos/asf/sling/whiteboard/fmeschbe/jmx-whiteboard but is intended to be added to the Aries JMX functionality.The single-class implementation picks up DynamicMBean servies registered as "javax.management.DynamicMBean". Each such service is registered with each registered MBeanServer service (similar to how the framework MBeans are registered by jmx.core). The JMX ObjectName can either be provided with a "jmx.objectname" service registration property (String type) or the DynamicMBean may implement the MBeanRegistration interface in which case the ObjectName is provided by the preRegister method during registration.This is just a first hack which has not really been tested but mainly serves to show the idea. It is currently implemented as a Declarative Services component but may as well be implemented as a regular class using ServerTracker instances and instantiated by the BundleActivator (which may be a good idea to make this as widely usable as possible - for example in Sling we don't currently use Blueprint, so a Blueprint based implementation would be a no-go for us )If there would be interest in this, I would try to test and validate this piece with the hopes to get a release soon (may be released independently, hint hint )&amp;#91;1&amp;#93; http://markmail.org/message/p464v4gst2uifm5h</description>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jmx.pom.xml</file>
      <file type="M">jmx.jmx-whiteboard.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="431" opendate="2010-9-30 00:00:00" fixdate="2010-9-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add support for "bad" OSGi Web container implementations</summary>
      <description>I was playing around with the Jetty implementation of the OSGi web container chapter. It has some interesting behaviours, the most significant is it sets the java.naming.initial.context system property, but doesn't register it in the service registry. It relies on the default JDK JNDI behaviour which uses the thread context classloader to load the initial context factory. Gemini Web has a similar bug. I can't fix those web container implementations, but since I want to be able to use these I need a solution. Rather than a bespoke solution that works for me with Jetty I'll check in a new project which will provide a bundle to fix these buggy OSGi Web container implementations.</description>
      <version>None</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">jndi.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="432" opendate="2010-10-1 00:00:00" fixdate="2010-10-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove the system.out.println in our production code</summary>
      <description>There are a couple of places we print out some messages by using system.out in our non-test code. This is not good.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">blueprint.blueprint-annotation-impl.src.main.java.org.apache.aries.blueprint.annotation.impl.BlueprintAnnotationScannerImpl.java</file>
      <file type="M">blueprint.blueprint-annotation-impl.src.main.java.org.apache.aries.blueprint.annotation.impl.Activator.java</file>
      <file type="M">application.application-modeller.src.main.java.org.apache.aries.application.modelling.impl.ModelledResourceManagerImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="506" opendate="2010-12-3 00:00:00" fixdate="2010-1-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Filter out deployments where an isolated bundle is provisioned twice to provide conflicting copies of a package</summary>
      <description>The provisioning system currently will quite happily allow a number of corner cases where bundles intend to share a service based on a common view of a package but end up wiring to different package versions because of incompatible version ranges.The most basic setup where this happens is an application with three isolated bundles: api, consumer, provider. Consumer uses a service from producer based on an interface in package P. Consumer consumes package P at [1.1.0,2.0.0) while producer uses P at [1.0.0,1.1.0). There is two versions of api one exporting P at 1.0.0 and another exporting version 1.1.0 of P. Note that this cannot work.In this setup with the current resolver api will be provisioned twice: once as isolated content and once as provisioned content providing a package to the isolated content. So despite the fact that the scenario is invalid we produce a deployment.Now, there are corner cases where the deployment would be valid when no service is shared and the package should not be part of the isolated content in the first place. This scenario should still be supported with an explicit use-bundle clause.</description>
      <version>0.1,0.2,0.3</version>
      <fixedVersion>0.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">application.application-deployment-management.src.test.java.org.apache.aries.application.deployment.management.DeploymentGeneratorTest.java</file>
      <file type="M">application.application-deployment-management.src.main.resources.org.apache.aries.application.deployment.management.messages.DeploymentManagementMessages.properties</file>
      <file type="M">application.application-deployment-management.src.main.java.org.apache.aries.application.deployment.management.impl.DeploymentManifestManagerImpl.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
