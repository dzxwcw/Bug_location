<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="FLINK">
  <bug id="21384" opendate="2021-2-16 00:00:00" fixdate="2021-2-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Automatically copy maven dependencies to clipboard on click</summary>
      <description>Flink has a number of optional dependencies users may need to copy into their pom files to use, such as connectors and formats. The docs should automatically copy the maven dependency to the users' clipboard when clicked.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">docs.static.js.flink.js</file>
      <file type="M">docs.README.md</file>
      <file type="M">docs.layouts.shortcodes.sql.download.table.html</file>
      <file type="M">docs.layouts.shortcodes.artifact.html</file>
    </fixedFiles>
  </bug>
  <bug id="25280" opendate="2021-12-13 00:00:00" fixdate="2021-1-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>KafkaPartitionSplitReaderTest failed on azure due to Offsets out of range with no configured reset policy for partitions</summary>
      <description>2021-12-13T03:30:12.8392593Z Dec 13 03:30:12 [ERROR] Tests run: 6, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 85.344 s &lt;&lt;&lt; FAILURE! - in org.apache.flink.connector.kafka.source.reader.KafkaPartitionSplitReaderTest2021-12-13T03:30:12.8394604Z Dec 13 03:30:12 [ERROR] testNumBytesInCounter Time elapsed: 0.24 s &lt;&lt;&lt; ERROR!2021-12-13T03:30:12.8396218Z Dec 13 03:30:12 org.apache.kafka.clients.consumer.OffsetOutOfRangeException: Offsets out of range with no configured reset policy for partitions: {topic1-0=0}2021-12-13T03:30:12.8397052Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.internals.Fetcher.initializeCompletedFetch(Fetcher.java:1260)2021-12-13T03:30:12.8397697Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:607)2021-12-13T03:30:12.8398394Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1313)2021-12-13T03:30:12.8399306Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1240)2021-12-13T03:30:12.8399924Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1211)2021-12-13T03:30:12.8400610Z Dec 13 03:30:12 at org.apache.flink.connector.kafka.source.reader.KafkaPartitionSplitReader.fetch(KafkaPartitionSplitReader.java:113)2021-12-13T03:30:12.8401385Z Dec 13 03:30:12 at org.apache.flink.connector.kafka.source.reader.KafkaPartitionSplitReaderTest.testNumBytesInCounter(KafkaPartitionSplitReaderTest.java:153)2021-12-13T03:30:12.8402174Z Dec 13 03:30:12 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)2021-12-13T03:30:12.8402911Z Dec 13 03:30:12 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)2021-12-13T03:30:12.8403818Z Dec 13 03:30:12 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)2021-12-13T03:30:12.8404452Z Dec 13 03:30:12 at java.lang.reflect.Method.invoke(Method.java:498)2021-12-13T03:30:12.8405028Z Dec 13 03:30:12 at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)2021-12-13T03:30:12.8405740Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)2021-12-13T03:30:12.8406749Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)2021-12-13T03:30:12.8407886Z Dec 13 03:30:12 at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)2021-12-13T03:30:12.8408845Z Dec 13 03:30:12 at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)2021-12-13T03:30:12.8409507Z Dec 13 03:30:12 at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)2021-12-13T03:30:12.8410219Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)2021-12-13T03:30:12.8411081Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)2021-12-13T03:30:12.8411785Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)2021-12-13T03:30:12.8412740Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)2021-12-13T03:30:12.8413553Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)2021-12-13T03:30:12.8414293Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)2021-12-13T03:30:12.8415078Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)2021-12-13T03:30:12.8415977Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)2021-12-13T03:30:12.8417383Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)2021-12-13T03:30:12.8418339Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8419209Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)2021-12-13T03:30:12.8419942Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)2021-12-13T03:30:12.8420716Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)2021-12-13T03:30:12.8421423Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)2021-12-13T03:30:12.8422192Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8423061Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)2021-12-13T03:30:12.8423740Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)2021-12-13T03:30:12.8424514Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)2021-12-13T03:30:12.8425224Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8425912Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)2021-12-13T03:30:12.8426672Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)2021-12-13T03:30:12.8427251Z Dec 13 03:30:12 at java.util.ArrayList.forEach(ArrayList.java:1259)2021-12-13T03:30:12.8427947Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)2021-12-13T03:30:12.8428848Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)2021-12-13T03:30:12.8429554Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8430394Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)2021-12-13T03:30:12.8431046Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)2021-12-13T03:30:12.8431704Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)2021-12-13T03:30:12.8432455Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8433310Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)2021-12-13T03:30:12.8433983Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)2021-12-13T03:30:12.8434685Z Dec 13 03:30:12 at java.util.ArrayList.forEach(ArrayList.java:1259)2021-12-13T03:30:12.8435379Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)2021-12-13T03:30:12.8436164Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)2021-12-13T03:30:12.8436853Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8437658Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)2021-12-13T03:30:12.8438321Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)2021-12-13T03:30:12.8439127Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)2021-12-13T03:30:12.8439833Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8440559Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)2021-12-13T03:30:12.8441222Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)2021-12-13T03:30:12.8442108Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)2021-12-13T03:30:12.8443108Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)2021-12-13T03:30:12.8443845Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)2021-12-13T03:30:12.8444481Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)2021-12-13T03:30:12.8445164Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)2021-12-13T03:30:12.8445835Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)2021-12-13T03:30:12.8446527Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)2021-12-13T03:30:12.8447150Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)2021-12-13T03:30:12.8447920Z Dec 13 03:30:12 at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)2021-12-13T03:30:12.8448754Z Dec 13 03:30:12 at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)2021-12-13T03:30:12.8449532Z Dec 13 03:30:12 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)2021-12-13T03:30:12.8450305Z Dec 13 03:30:12 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)2021-12-13T03:30:12.8450976Z Dec 13 03:30:12 at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)2021-12-13T03:30:12.8451567Z Dec 13 03:30:12 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)2021-12-13T03:30:12.8451989Z Dec 13 03:30:12 2021-12-13T03:30:12.8452504Z Dec 13 03:30:12 [ERROR] testHandleSplitChangesAndFetch Time elapsed: 0.037 s &lt;&lt;&lt; ERROR!2021-12-13T03:30:12.8454253Z Dec 13 03:30:12 org.apache.kafka.clients.consumer.OffsetOutOfRangeException: Offsets out of range with no configured reset policy for partitions: {topic1-2=2}2021-12-13T03:30:12.8455008Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.internals.Fetcher.initializeCompletedFetch(Fetcher.java:1260)2021-12-13T03:30:12.8455818Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:607)2021-12-13T03:30:12.8456428Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1282)2021-12-13T03:30:12.8457043Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1240)2021-12-13T03:30:12.8457626Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1211)2021-12-13T03:30:12.8458300Z Dec 13 03:30:12 at org.apache.flink.connector.kafka.source.reader.KafkaPartitionSplitReader.fetch(KafkaPartitionSplitReader.java:113)2021-12-13T03:30:12.8459238Z Dec 13 03:30:12 at org.apache.flink.connector.kafka.source.reader.KafkaPartitionSplitReaderTest.assignSplitsAndFetchUntilFinish(KafkaPartitionSplitReaderTest.java:261)2021-12-13T03:30:12.8460115Z Dec 13 03:30:12 at org.apache.flink.connector.kafka.source.reader.KafkaPartitionSplitReaderTest.testHandleSplitChangesAndFetch(KafkaPartitionSplitReaderTest.java:105)2021-12-13T03:30:12.8460760Z Dec 13 03:30:12 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)2021-12-13T03:30:12.8461310Z Dec 13 03:30:12 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)2021-12-13T03:30:12.8461937Z Dec 13 03:30:12 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)2021-12-13T03:30:12.8462742Z Dec 13 03:30:12 at java.lang.reflect.Method.invoke(Method.java:498)2021-12-13T03:30:12.8463452Z Dec 13 03:30:12 at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)2021-12-13T03:30:12.8464077Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)2021-12-13T03:30:12.8464794Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)2021-12-13T03:30:12.8465636Z Dec 13 03:30:12 at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)2021-12-13T03:30:12.8466298Z Dec 13 03:30:12 at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)2021-12-13T03:30:12.8466990Z Dec 13 03:30:12 at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)2021-12-13T03:30:12.8467722Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)2021-12-13T03:30:12.8468454Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)2021-12-13T03:30:12.8469192Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)2021-12-13T03:30:12.8469941Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)2021-12-13T03:30:12.8470649Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)2021-12-13T03:30:12.8471493Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)2021-12-13T03:30:12.8472238Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)2021-12-13T03:30:12.8473107Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)2021-12-13T03:30:12.8473827Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)2021-12-13T03:30:12.8474551Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8475262Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)2021-12-13T03:30:12.8476109Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)2021-12-13T03:30:12.8477234Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)2021-12-13T03:30:12.8478320Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)2021-12-13T03:30:12.8479437Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8480706Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)2021-12-13T03:30:12.8481725Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)2021-12-13T03:30:12.8482890Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)2021-12-13T03:30:12.8483628Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8484318Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)2021-12-13T03:30:12.8484989Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)2021-12-13T03:30:12.8485557Z Dec 13 03:30:12 at java.util.ArrayList.forEach(ArrayList.java:1259)2021-12-13T03:30:12.8486228Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)2021-12-13T03:30:12.8487030Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)2021-12-13T03:30:12.8487731Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8488431Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)2021-12-13T03:30:12.8489079Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)2021-12-13T03:30:12.8489731Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)2021-12-13T03:30:12.8490576Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8491262Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)2021-12-13T03:30:12.8491917Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)2021-12-13T03:30:12.8492550Z Dec 13 03:30:12 at java.util.ArrayList.forEach(ArrayList.java:1259)2021-12-13T03:30:12.8493404Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)2021-12-13T03:30:12.8494341Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)2021-12-13T03:30:12.8495043Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8495729Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)2021-12-13T03:30:12.8496390Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)2021-12-13T03:30:12.8497036Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)2021-12-13T03:30:12.8497730Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8498411Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)2021-12-13T03:30:12.8499075Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)2021-12-13T03:30:12.8499820Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)2021-12-13T03:30:12.8500699Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)2021-12-13T03:30:12.8501427Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)2021-12-13T03:30:12.8502155Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)2021-12-13T03:30:12.8502853Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)2021-12-13T03:30:12.8503533Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)2021-12-13T03:30:12.8504175Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)2021-12-13T03:30:12.8504790Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)2021-12-13T03:30:12.8505463Z Dec 13 03:30:12 at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)2021-12-13T03:30:12.8506155Z Dec 13 03:30:12 at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)2021-12-13T03:30:12.8506837Z Dec 13 03:30:12 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)2021-12-13T03:30:12.8507495Z Dec 13 03:30:12 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)2021-12-13T03:30:12.8508098Z Dec 13 03:30:12 at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)2021-12-13T03:30:12.8508684Z Dec 13 03:30:12 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)2021-12-13T03:30:12.8509121Z Dec 13 03:30:12 2021-12-13T03:30:12.8509555Z Dec 13 03:30:12 [ERROR] testPendingRecordsGauge{String}[1] Time elapsed: 0.037 s &lt;&lt;&lt; ERROR!2021-12-13T03:30:12.8510837Z Dec 13 03:30:12 org.apache.kafka.clients.consumer.OffsetOutOfRangeException: Offsets out of range with no configured reset policy for partitions: {topic1-0=0}2021-12-13T03:30:12.8511603Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.internals.Fetcher.initializeCompletedFetch(Fetcher.java:1260)2021-12-13T03:30:12.8512314Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:607)2021-12-13T03:30:12.8513023Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1313)2021-12-13T03:30:12.8513726Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1240)2021-12-13T03:30:12.8514320Z Dec 13 03:30:12 at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1211)2021-12-13T03:30:12.8514990Z Dec 13 03:30:12 at org.apache.flink.connector.kafka.source.reader.KafkaPartitionSplitReader.fetch(KafkaPartitionSplitReader.java:113)2021-12-13T03:30:12.8515785Z Dec 13 03:30:12 at org.apache.flink.connector.kafka.source.reader.KafkaPartitionSplitReaderTest.testPendingRecordsGauge(KafkaPartitionSplitReaderTest.java:195)2021-12-13T03:30:12.8516439Z Dec 13 03:30:12 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)2021-12-13T03:30:12.8516982Z Dec 13 03:30:12 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)2021-12-13T03:30:12.8517599Z Dec 13 03:30:12 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)2021-12-13T03:30:12.8518168Z Dec 13 03:30:12 at java.lang.reflect.Method.invoke(Method.java:498)2021-12-13T03:30:12.8518689Z Dec 13 03:30:12 at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)2021-12-13T03:30:12.8519286Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)2021-12-13T03:30:12.8519965Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)2021-12-13T03:30:12.8520724Z Dec 13 03:30:12 at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)2021-12-13T03:30:12.8521346Z Dec 13 03:30:12 at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)2021-12-13T03:30:12.8522067Z Dec 13 03:30:12 at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:92)2021-12-13T03:30:12.8522856Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)2021-12-13T03:30:12.8523569Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)2021-12-13T03:30:12.8524281Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)2021-12-13T03:30:12.8525034Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)2021-12-13T03:30:12.8525759Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)2021-12-13T03:30:12.8526477Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)2021-12-13T03:30:12.8527146Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)2021-12-13T03:30:12.8527788Z Dec 13 03:30:12 at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)2021-12-13T03:30:12.8528479Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)2021-12-13T03:30:12.8529197Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8529907Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)2021-12-13T03:30:12.8530615Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)2021-12-13T03:30:12.8531290Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)2021-12-13T03:30:12.8532087Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)2021-12-13T03:30:12.8532981Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8533690Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)2021-12-13T03:30:12.8534344Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)2021-12-13T03:30:12.8535079Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)2021-12-13T03:30:12.8535920Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8536611Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)2021-12-13T03:30:12.8537256Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)2021-12-13T03:30:12.8538004Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)2021-12-13T03:30:12.8538773Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:212)2021-12-13T03:30:12.8539606Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:192)2021-12-13T03:30:12.8540337Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:139)2021-12-13T03:30:12.8541043Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:107)2021-12-13T03:30:12.8541698Z Dec 13 03:30:12 at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)2021-12-13T03:30:12.8542374Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)2021-12-13T03:30:12.8543038Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)2021-12-13T03:30:12.8543597Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)2021-12-13T03:30:12.8544175Z Dec 13 03:30:12 at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)2021-12-13T03:30:12.8544752Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:440)2021-12-13T03:30:12.8545336Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)2021-12-13T03:30:12.8545909Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)2021-12-13T03:30:12.8546483Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)2021-12-13T03:30:12.8547063Z Dec 13 03:30:12 at java.util.stream.Streams$StreamBuilderImpl.forEachRemaining(Streams.java:419)2021-12-13T03:30:12.8547657Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:647)2021-12-13T03:30:12.8548221Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)2021-12-13T03:30:12.8548796Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)2021-12-13T03:30:12.8549382Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)2021-12-13T03:30:12.8549941Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)2021-12-13T03:30:12.8550510Z Dec 13 03:30:12 at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)2021-12-13T03:30:12.8551089Z Dec 13 03:30:12 at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)2021-12-13T03:30:12.8551742Z Dec 13 03:30:12 at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)2021-12-13T03:30:12.8552355Z Dec 13 03:30:12 at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)2021-12-13T03:30:12.8553007Z Dec 13 03:30:12 at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)2021-12-13T03:30:12.8553600Z Dec 13 03:30:12 at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)2021-12-13T03:30:12.8554173Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)2021-12-13T03:30:12.8554746Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)2021-12-13T03:30:12.8555332Z Dec 13 03:30:12 at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)2021-12-13T03:30:12.8555910Z Dec 13 03:30:12 at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)2021-12-13T03:30:12.8556492Z Dec 13 03:30:12 at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)2021-12-13T03:30:12.8557062Z Dec 13 03:30:12 at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)2021-12-13T03:30:12.8557661Z Dec 13 03:30:12 at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)2021-12-13T03:30:12.8558246Z Dec 13 03:30:12 at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)2021-12-13T03:30:12.8558915Z Dec 13 03:30:12 at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)2021-12-13T03:30:12.8559554Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)2021-12-13T03:30:12.8560251Z Dec 13 03:30:12 at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)2021-12-13T03:30:12.8560959Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)2021-12-13T03:30:12.8561662Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8562420Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)2021-12-13T03:30:12.8563140Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)2021-12-13T03:30:12.8563795Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)2021-12-13T03:30:12.8564500Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8565183Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)2021-12-13T03:30:12.8565852Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)2021-12-13T03:30:12.8566632Z Dec 13 03:30:12 at java.util.ArrayList.forEach(ArrayList.java:1259)2021-12-13T03:30:12.8567724Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)2021-12-13T03:30:12.8568691Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)2021-12-13T03:30:12.8569384Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8570088Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)2021-12-13T03:30:12.8570756Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)2021-12-13T03:30:12.8571405Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)2021-12-13T03:30:12.8572436Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8573210Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)2021-12-13T03:30:12.8573873Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)2021-12-13T03:30:12.8574445Z Dec 13 03:30:12 at java.util.ArrayList.forEach(ArrayList.java:1259)2021-12-13T03:30:12.8575106Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)2021-12-13T03:30:12.8575902Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)2021-12-13T03:30:12.8576603Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8577308Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)2021-12-13T03:30:12.8577953Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)2021-12-13T03:30:12.8578602Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)2021-12-13T03:30:12.8579383Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)2021-12-13T03:30:12.8580063Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)2021-12-13T03:30:12.8580724Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)2021-12-13T03:30:12.8581456Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)2021-12-13T03:30:12.8582313Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)2021-12-13T03:30:12.8583105Z Dec 13 03:30:12 at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)2021-12-13T03:30:12.8583737Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)2021-12-13T03:30:12.8584367Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)2021-12-13T03:30:12.8585019Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)2021-12-13T03:30:12.8585660Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)2021-12-13T03:30:12.8586287Z Dec 13 03:30:12 at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)2021-12-13T03:30:12.8586947Z Dec 13 03:30:12 at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)2021-12-13T03:30:12.8587623Z Dec 13 03:30:12 at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)2021-12-13T03:30:12.8588313Z Dec 13 03:30:12 at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)2021-12-13T03:30:12.8588963Z Dec 13 03:30:12 at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)2021-12-13T03:30:12.8589570Z Dec 13 03:30:12 at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)2021-12-13T03:30:12.8590154Z Dec 13 03:30:12 at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)2021-12-13T03:30:12.8590666Z Dec 13 03:30:12 testHandleSplitChangesAndFetchtestNumBytesInCountertestPendingRecordsGaugefrom KafkaPartitionSplitReaderTest failed with this issue</description>
      <version>1.13.5,1.14.3,1.15.0</version>
      <fixedVersion>1.13.6,1.14.4,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-connectors.flink-connector-kafka.src.test.java.org.apache.flink.streaming.connectors.kafka.KafkaTestEnvironmentImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="25362" opendate="2021-12-17 00:00:00" fixdate="2021-1-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incorrect dependencies in Table Confluent/Avro docs</summary>
      <description>"Confluent Avro Format" is missing an explanation to also add the dependency to flink-avro have the confluent repository defined"Avro Format" should not show the maven dependency to flink-sql-avro but instead flink-avro</description>
      <version>1.12.7,1.13.5,1.14.2</version>
      <fixedVersion>1.13.6,1.14.4,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">docs.layouts.shortcodes.sql.download.table.html</file>
      <file type="M">docs.data.sql.connectors.yml</file>
      <file type="M">docs.content.docs.connectors.table.formats.avro-confluent.md</file>
      <file type="M">docs.content.zh.docs.connectors.table.formats.avro-confluent.md</file>
    </fixedFiles>
  </bug>
  <bug id="25366" opendate="2021-12-17 00:00:00" fixdate="2021-12-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enforce BINARY/VARBINARY precision when outputing to a Sink</summary>
      <description>When a column is declared with BINARY/VARBINARY with a specific length, i.e. BINARY(10) a sink that would require following this precision strictly (like a relational DB) would throw errors if the records received exceed this limit. </description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-table.flink-table-runtime.src.main.java.org.apache.flink.table.runtime.operators.sink.ConstraintEnforcer.java</file>
      <file type="M">flink-table.flink-table-planner.src.test.java.org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSinkITCase.java</file>
      <file type="M">flink-table.flink-table-planner.src.main.java.org.apache.flink.table.planner.plan.nodes.exec.common.CommonExecSink.java</file>
      <file type="M">flink-table.flink-table-api-java.src.main.java.org.apache.flink.table.api.config.ExecutionConfigOptions.java</file>
      <file type="M">docs.layouts.shortcodes.generated.execution.config.configuration.html</file>
    </fixedFiles>
  </bug>
  <bug id="25370" opendate="2021-12-18 00:00:00" fixdate="2021-1-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>HBase SQL Connector Options &amp;#39;table-name&amp;#39; description</summary>
      <description>In document the HBase SQL Connector Options "table-name" description is "The name of HBase table to connect.". All demo of HBase SQL Connector document 'table-name' just give the 'tablename', it does't explain how to use the table in the specified namespace of HBase. So I think we need to add some description for this options</description>
      <version>1.13.5,1.14.2,1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-connectors.flink-connector-hbase-base.src.main.java.org.apache.flink.connector.hbase.table.HBaseConnectorOptions.java</file>
      <file type="M">docs.content.docs.connectors.table.hbase.md</file>
      <file type="M">docs.content.zh.docs.connectors.table.hbase.md</file>
    </fixedFiles>
  </bug>
  <bug id="25372" opendate="2021-12-18 00:00:00" fixdate="2021-12-18 01:00:00" resolution="Done">
    <buginformation>
      <summary>Add thread dump feature for jobmanager</summary>
      <description>Add thread dump feature for jobmanager in addition to the previous work on TM side: FLINK-14816. It is useful for debugging job submission and scheduling issues especially in OLAP scenarios.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-runtime-web.web-dashboard.src.app.services.job-manager.service.ts</file>
      <file type="M">flink-runtime-web.web-dashboard.src.app.pages.job-manager.job-manager.module.ts</file>
      <file type="M">flink-runtime-web.web-dashboard.src.app.pages.job-manager.job-manager.component.ts</file>
      <file type="M">flink-runtime-web.web-dashboard.src.app.pages.job-manager.job-manager-routing.module.ts</file>
      <file type="M">flink-runtime-web.web-dashboard.src.app.interfaces.job-manager.ts</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.webmonitor.TestingRestfulGateway.java</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.webmonitor.TestingDispatcherGateway.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.webmonitor.WebMonitorEndpoint.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.webmonitor.RestfulGateway.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.rest.messages.ThreadDumpInfo.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.dispatcher.Dispatcher.java</file>
      <file type="M">flink-runtime-web.src.test.resources.rest.api.v1.snapshot</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.taskexecutor.TestingTaskExecutorGatewayBuilder.java</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.taskexecutor.TestingTaskExecutorGateway.java</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.rest.messages.taskmanager.ThreadDumpInfoTest.java</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.resourcemanager.utils.TestingResourceManagerGateway.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.taskexecutor.TaskExecutorGatewayDecoratorBase.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.taskexecutor.TaskExecutorGateway.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.taskexecutor.TaskExecutor.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.rest.messages.taskmanager.ThreadDumpInfo.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.rest.messages.taskmanager.TaskManagerThreadDumpHeaders.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.rest.handler.taskmanager.TaskManagerThreadDumpHandler.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.resourcemanager.ResourceManagerGateway.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.resourcemanager.ResourceManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="25375" opendate="2021-12-19 00:00:00" fixdate="2021-12-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Log4j to 2.17.0</summary>
      <description>Log4j 2.17.0 has been released &amp;#91;1&amp;#93; This release contains the changes noted below: Address CVE-2021-45105. Require components that use JNDI to be enabled individually via system properties. Remove LDAP and LDAPS as supported protocols from JNDI.&amp;#91;1&amp;#93; https://github.com/apache/logging-log4j2/blob/6b1581901ba7a107cdc4a2208ecec03655722b44/RELEASE-NOTES.md#apache-log4j-2170-release-notes</description>
      <version>1.11.6,1.12.7,1.13.5,1.14.2</version>
      <fixedVersion>1.12.8,1.13.6,1.14.3,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">tools.releasing.NOTICE-binary.PREAMBLE.txt</file>
      <file type="M">pom.xml</file>
      <file type="M">docs.content.docs.dev.datastream.project-configuration.md</file>
      <file type="M">docs.content.zh.docs.dev.datastream.project-configuration.md</file>
    </fixedFiles>
  </bug>
  <bug id="25415" opendate="2021-12-22 00:00:00" fixdate="2021-12-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>implement retrial on connections to Cassandra container</summary>
      <description>NoHostAvailableException is raised by Cassandra client under load while connecting to a cluster. It happens no matter the Cassandra backend we use: I saw that using Achilles test backend, cassandra daemon and testContainers. So we should implement a retrial on the connection.</description>
      <version>1.13.5,1.14.2,1.15.0</version>
      <fixedVersion>1.13.6,1.14.3,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-connectors.flink-connector-cassandra.src.test.java.org.apache.flink.streaming.connectors.cassandra.CassandraConnectorITCase.java</file>
    </fixedFiles>
  </bug>
  <bug id="25445" opendate="2021-12-27 00:00:00" fixdate="2021-2-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>TaskExecutor always creates local file for task even when local state store is not used</summary>
      <description>`TaskExecutor` will create file, check `localRecoveryEnabled` and load local state store for each task submission in method `localStateStoreForSubtask`. For batch jobs, the `localRecoveryEnabled` is always false, and there's no need to create these local files for task in `TaskExecutor`</description>
      <version>1.12.7,1.13.5,1.14.2</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-tests.src.test.java.org.apache.flink.test.state.operator.restore.StreamOperatorSnapshotRestoreTest.java</file>
      <file type="M">flink-streaming-java.src.test.java.org.apache.flink.streaming.runtime.tasks.StreamTaskTestHarness.java</file>
      <file type="M">flink-streaming-java.src.test.java.org.apache.flink.streaming.runtime.tasks.LocalStateForwardingTest.java</file>
      <file type="M">flink-state-backends.flink-statebackend-rocksdb.src.test.java.org.apache.flink.contrib.streaming.state.benchmark.StateBackendBenchmarkUtils.java</file>
      <file type="M">flink-state-backends.flink-statebackend-rocksdb.src.main.java.org.apache.flink.contrib.streaming.state.snapshot.RocksIncrementalSnapshotStrategy.java</file>
      <file type="M">flink-state-backends.flink-statebackend-rocksdb.src.main.java.org.apache.flink.contrib.streaming.state.snapshot.RocksFullSnapshotStrategy.java</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.state.TestLocalRecoveryConfig.java</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.state.TaskStateManagerImplTest.java</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.state.TaskLocalStateStoreImplTest.java</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManagerTest.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.state.TaskLocalStateStoreImpl.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.state.TaskExecutorLocalStateStoresManager.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.state.LocalRecoveryConfig.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.state.heap.HeapSnapshotStrategy.java</file>
      <file type="M">flink-libraries.flink-state-processing-api.src.main.java.org.apache.flink.state.api.runtime.SavepointTaskStateManager.java</file>
      <file type="M">flink-libraries.flink-state-processing-api.src.main.java.org.apache.flink.state.api.runtime.SavepointLocalRecoveryProvider.java</file>
    </fixedFiles>
  </bug>
  <bug id="25553" opendate="2022-1-6 00:00:00" fixdate="2022-1-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove MapR filesystem</summary>
      <description>Pending a positive outcome in the Dev mailing list https://lists.apache.org/thread/od2137fk5j1gq034sopj5n2th2w719w4 we can remove the MapR filesystem</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Technical Debt</type>
    </buginformation>
    <fixedFiles>
      <file type="M">tools.ci.stage.sh</file>
      <file type="M">tools.ci.shade.sh</file>
      <file type="M">flink-python.pyflink.datastream.stream.execution.environment.py</file>
      <file type="M">flink-filesystems.pom.xml</file>
      <file type="M">flink-filesystems.flink-mapr-fs.src.test.resources.log4j2-test.properties</file>
      <file type="M">flink-filesystems.flink-mapr-fs.src.test.java.org.apache.flink.runtime.fs.maprfs.MapRNotInClassPathTest.java</file>
      <file type="M">flink-filesystems.flink-mapr-fs.src.test.java.org.apache.flink.runtime.fs.maprfs.MapRFsFactoryTest.java</file>
      <file type="M">flink-filesystems.flink-mapr-fs.src.test.java.com.mapr.fs.MapRFileSystem.java</file>
      <file type="M">flink-filesystems.flink-mapr-fs.src.main.resources.META-INF.services.org.apache.flink.core.fs.FileSystemFactory</file>
      <file type="M">flink-filesystems.flink-mapr-fs.src.main.java.org.apache.flink.runtime.fs.maprfs.MapRFsFactory.java</file>
      <file type="M">flink-filesystems.flink-mapr-fs.pom.xml</file>
      <file type="M">flink-dist.pom.xml</file>
      <file type="M">flink-core.src.main.java.org.apache.flink.core.fs.FileSystem.java</file>
      <file type="M">docs.content.docs.internals.filesystems.md</file>
      <file type="M">docs.content.docs.deployment.filesystems.plugins.md</file>
      <file type="M">docs.content.docs.deployment.filesystems.overview.md</file>
      <file type="M">docs.content.zh.docs.internals.filesystems.md</file>
      <file type="M">docs.content.zh.docs.deployment.filesystems.plugins.md</file>
      <file type="M">docs.content.zh.docs.deployment.filesystems.overview.md</file>
    </fixedFiles>
  </bug>
  <bug id="25576" opendate="2022-1-7 00:00:00" fixdate="2022-1-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update com.h2database:h2 to 2.0.206</summary>
      <description>Flink uses com.h2database:h2 version 1.4.200, we should update this to 2.0.206</description>
      <version>1.13.5,1.14.2,1.15.0</version>
      <fixedVersion>1.13.6,1.14.4,1.15.0</fixedVersion>
      <type>Technical Debt</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-connectors.flink-connector-jdbc.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="25676" opendate="2022-1-17 00:00:00" fixdate="2022-1-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add set_description in Python API</summary>
      <description>This is to align with the setDescription method introduced in FLINK-25072.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-python.src.main.java.org.apache.flink.python.chain.PythonOperatorChainingOptimizer.java</file>
      <file type="M">flink-python.pyflink.datastream.data.stream.py</file>
    </fixedFiles>
  </bug>
  <bug id="25785" opendate="2022-1-24 00:00:00" fixdate="2022-2-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update com.h2database:h2 to 2.0.210</summary>
      <description>Two security vulnerabilities in H2 Console (CVE-2022-23221 and possible DNS rebinding attack) are fixed in 2.0.120. Flink is currently on 2.0.206 since https://issues.apache.org/jira/browse/FLINK-25576Note: Flink is using this dependency only for testing, so it's not directly impacted by the CVE. We just want to be good citizens and update our dependencies</description>
      <version>1.13.5,1.14.3,1.15.0</version>
      <fixedVersion>1.14.4,1.15.0,1.13.7</fixedVersion>
      <type>Technical Debt</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-connectors.flink-connector-jdbc.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="25786" opendate="2022-1-24 00:00:00" fixdate="2022-1-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Adjust the generation of subpartition data storage order for sort-shuffle from random shuffle to random shift</summary>
      <description>Currently, for sort-shuffle the generation of subpartition data storage order  is random shuffle. However, if there is no enough resources to run the downstream consumer tasks in parallel, the performance can be influenced because of the random disk IO caused by the random subpartition data storage order. This ticket aims to improve this scenario.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.io.network.partition.SortMergeResultPartition.java</file>
    </fixedFiles>
  </bug>
  <bug id="25926" opendate="2022-2-2 00:00:00" fixdate="2022-4-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update org.postgresql:postgresql to 42.3.3</summary>
      <description>Security vulnerability CVE-2022-21724 is fixed in 42.2.25. Flink is currently on 42.2.10.Note: Flink uses this dependency in a Provided scope only.</description>
      <version>1.13.5,1.14.3,1.15.0</version>
      <fixedVersion>1.16.0</fixedVersion>
      <type>Technical Debt</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-connectors.flink-connector-jdbc.src.test.java.org.apache.flink.connector.jdbc.catalog.PostgresCatalogITCase.java</file>
      <file type="M">flink-connectors.flink-connector-jdbc.src.main.java.org.apache.flink.connector.jdbc.internal.converter.PostgresRowConverter.java</file>
      <file type="M">flink-connectors.flink-connector-jdbc.src.main.java.org.apache.flink.connector.jdbc.dialect.psql.PostgresTypeMapper.java</file>
      <file type="M">flink-connectors.flink-connector-jdbc.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="25960" opendate="2022-2-4 00:00:00" fixdate="2022-2-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Distribute the data read buffers more fairly among result partitions for sort-shuffle</summary>
      <description>Currently, the data read buffers for sort-shuffle are allocated in a random way and some result partitions may occupy too many buffers which leads to the starvation of other result partitions. This ticket aims to improve the scenario by not reading data for those result partitions which already occupy more than the average number of read buffers per result partition.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.io.network.partition.SortMergeResultPartitionReadScheduler.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.io.disk.BatchShuffleReadBufferPool.java</file>
    </fixedFiles>
  </bug>
  <bug id="25961" opendate="2022-2-4 00:00:00" fixdate="2022-3-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove transport client from Elasticsearch 6/7 connectors (tests only)</summary>
      <description>The Elasticsearch 6/7 connectors still use deprecated transport client for integration tests. This is not really necessary and brings a lot of dependencies, the HighLevelRestClient is fully sufficient and could be used as drop-in replacement.The change affects only tests.</description>
      <version>None</version>
      <fixedVersion>1.16.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-connectors.flink-connector-elasticsearch7.src.test.java.org.apache.flink.streaming.connectors.elasticsearch.table.Elasticsearch7DynamicSinkITCase.java</file>
      <file type="M">flink-connectors.flink-connector-elasticsearch7.src.test.java.org.apache.flink.streaming.connectors.elasticsearch7.ElasticsearchSinkITCase.java</file>
      <file type="M">flink-connectors.flink-connector-elasticsearch7.pom.xml</file>
      <file type="M">flink-connectors.flink-connector-elasticsearch6.src.test.java.org.apache.flink.streaming.connectors.elasticsearch.table.Elasticsearch6DynamicSinkITCase.java</file>
      <file type="M">flink-connectors.flink-connector-elasticsearch6.src.test.java.org.apache.flink.streaming.connectors.elasticsearch6.ElasticsearchSinkITCase.java</file>
      <file type="M">flink-connectors.flink-connector-elasticsearch6.pom.xml</file>
      <file type="M">flink-connectors.flink-connector-elasticsearch-base.src.test.java.org.apache.flink.streaming.connectors.elasticsearch.testutils.SourceSinkDataTestKit.java</file>
      <file type="M">flink-connectors.flink-connector-elasticsearch-base.src.test.java.org.apache.flink.streaming.connectors.elasticsearch.ElasticsearchSinkTestBase.java</file>
      <file type="M">flink-connectors.flink-connector-elasticsearch-base.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="26049" opendate="2022-2-9 00:00:00" fixdate="2022-3-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The tolerable-failed-checkpoints logic is invalid when checkpoint trigger failed</summary>
      <description>After triggerCheckpoint, if checkpoint failed, flink will execute the tolerable-failed-checkpoints logic. But if triggerCheckpoint failed, flink won't execute the tolerable-failed-checkpoints logic.How to reproduce this issue?In our online env, hdfs sre deletes the flink base dir by mistake, and flink job don't have permission to create checkpoint dir. So cause flink trigger checkpoint failed.There are some didn't meet expectations: JM just log "Failed to trigger checkpoint for job 6f09d4a15dad42b24d52c987f5471f18 since Trigger checkpoint failure" . Don't show the root cause or exception. user set tolerable-failed-checkpoints=0, but if triggerCheckpoint failed, flink won't execute the tolerable-failed-checkpoints logic.  When triggerCheckpoint failed, numberOfFailedCheckpoints is always 0 When triggerCheckpoint failed, we can't find checkpoint info in checkpoint history page.   All metrics are normal, so the next day we found out that the checkpoint failed, and the checkpoint has been failing for a day. it's not acceptable to the flink user.I have some ideas: Should tolerable-failed-checkpoints logic be executed when triggerCheckpoint fails? When triggerCheckpoint failed, should increase numberOfFailedCheckpoints? When triggerCheckpoint failed, should show checkpoint info in checkpoint history page? JM just show "Failed to trigger checkpoint", should we show detailed exception to easy find the root cause? Masters, could we do these changes? Please correct me if I'm wrong.</description>
      <version>1.13.5,1.14.3</version>
      <fixedVersion>1.14.5,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.checkpoint.CheckpointStatsTrackerTest.java</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.checkpoint.CheckpointStatsCountsTest.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.checkpoint.CheckpointStatsTracker.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.checkpoint.CheckpointStatsCounts.java</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.checkpoint.CheckpointCoordinatorTest.java</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.checkpoint.PendingCheckpointTest.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.checkpoint.PendingCheckpoint.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.checkpoint.CheckpointFailureManager.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.checkpoint.CheckpointCoordinator.java</file>
    </fixedFiles>
  </bug>
  <bug id="26082" opendate="2022-2-11 00:00:00" fixdate="2022-1-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CancelPartitionRequestTest.testDuplicateCancel failed on azure due to bind failed</summary>
      <description>Feb 10 01:56:01 [ERROR] Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 2.273 s &lt;&lt;&lt; FAILURE! - in org.apache.flink.runtime.io.network.netty.CancelPartitionRequestTestFeb 10 01:56:01 [ERROR] testDuplicateCancel(org.apache.flink.runtime.io.network.netty.CancelPartitionRequestTest) Time elapsed: 1.877 s &lt;&lt;&lt; ERROR!Feb 10 01:56:01 org.apache.flink.shaded.netty4.io.netty.channel.unix.Errors$NativeIoException: bind(..) failed: Address already in useFeb 10 01:56:01 https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=31070&amp;view=logs&amp;j=f0ac5c25-1168-55a5-07ff-0e88223afed9&amp;t=0dbaca5d-7c38-52e6-f4fe-2fb69ccb3ada&amp;l=6768</description>
      <version>1.13.5,1.16.0</version>
      <fixedVersion>1.17.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.io.network.netty.ServerTransportErrorHandlingTest.java</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.io.network.netty.ClientTransportErrorHandlingTest.java</file>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.io.network.netty.NettyTestUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="26395" opendate="2022-2-28 00:00:00" fixdate="2022-3-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The description of RAND_INTEGER is wrong in SQL function documents</summary>
      <description>RAND_INTEGER will returns a integer value, but document of SQL function shows it will return a double value.</description>
      <version>1.13.5,1.14.3,1.15.0</version>
      <fixedVersion>1.14.5,1.15.0,1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-table.flink-table-api-java.src.main.java.org.apache.flink.table.api.Expressions.java</file>
      <file type="M">flink-python.pyflink.table.expressions.py</file>
      <file type="M">docs.data.sql.functions.zh.yml</file>
      <file type="M">docs.data.sql.functions.yml</file>
    </fixedFiles>
  </bug>
  <bug id="27420" opendate="2022-4-26 00:00:00" fixdate="2022-6-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Suspended SlotManager fails to re-register metrics when started again</summary>
      <description>The symptom is that SlotManager metrics are missing (taskslotsavailable and taskslotstotal) when a SlotManager is suspended and then restarted. We noticed this issue when running 1.13.5, but I believe this impacts 1.14.x, 1.15.x, and master. When a SlotManager is suspended, the metrics group is closed. When the SlotManager is started again, it makes an attempt to reregister metrics but that fails because the underlying metrics group is still closed  I was able to trace through this issue by restarting zookeeper nodes in a staging environment and watching the JM with a debugger.  A concise test, which currently fails, shows the expected behavior – https://github.com/apache/flink/compare/master...baugarten:baugarten/slot-manager-missing-metrics?expand=1 I am happy to provide a PR to fix this issue, but first would like to verify that this is not intended.</description>
      <version>1.13.5</version>
      <fixedVersion>1.14.5,1.15.1,1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-runtime.src.test.java.org.apache.flink.runtime.resourcemanager.ResourceManagerServiceImplTest.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.resourcemanager.ResourceManagerProcessContext.java</file>
      <file type="M">flink-runtime.src.main.java.org.apache.flink.runtime.resourcemanager.ResourceManagerFactory.java</file>
    </fixedFiles>
  </bug>
  <bug id="27421" opendate="2022-4-27 00:00:00" fixdate="2022-5-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bundle test utility classes into the PyFlink package to make users write test cases easily</summary>
      <description>Currently, the test utility classes are not bundled in the PyFlink package. This doesn't affect the functionalities. However, when users are trying out PyFlink and developing jobs with PyFlink, they may want to write some unit tests to ensure the functionalities work as expected. There are already some test utility classes in PyFlink, bundling them in the PyFlink package could help users a lot and allow they write unit tests more easier.See https://lists.apache.org/thread/9z468o1hmg4bm7b2vz2o3lkmoqhxnxg1 for more details.</description>
      <version>None</version>
      <fixedVersion>1.16.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-python.setup.py</file>
    </fixedFiles>
  </bug>
  <bug id="2780" opendate="2015-9-29 00:00:00" fixdate="2015-10-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove Old Windowing Logic and API</summary>
      <description>This might also require porting some tests but I think the new operators and API have good tests already.</description>
      <version>None</version>
      <fixedVersion>0.10.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.CloneableMultiTriggerPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-scala.src.test.scala.org.apache.flink.streaming.api.scala.StreamingScalaAPICompletenessTest.scala</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-scala.src.test.scala.org.apache.flink.streaming.api.scala.DataStreamTest.scala</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-scala.src.main.scala.org.apache.flink.streaming.api.scala.windowing.Time.scala</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-scala.src.main.scala.org.apache.flink.streaming.api.scala.windowing.Delta.scala</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-scala.src.main.scala.org.apache.flink.streaming.api.scala.WindowedStream.scala</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-scala.src.main.scala.org.apache.flink.streaming.api.scala.WindowedDataStream.scala</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-scala.src.main.scala.org.apache.flink.streaming.api.scala.package.scala</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-scala.src.main.scala.org.apache.flink.streaming.api.scala.DataStream.scala</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-scala.src.main.scala.org.apache.flink.streaming.api.scala.AllWindowedStream.scala</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-examples.src.main.scala.org.apache.flink.streaming.scala.examples.windowing.TopSpeedWindowing.scala</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-examples.src.main.java.org.apache.flink.streaming.examples.windowing.WindowWordCount.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-examples.src.main.java.org.apache.flink.streaming.examples.windowing.util.TopSpeedWindowingExampleData.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-examples.src.main.java.org.apache.flink.streaming.examples.windowing.TopSpeedWindowing.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-examples.src.main.java.org.apache.flink.streaming.examples.windowing.SessionWindowing.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-examples.src.main.java.org.apache.flink.streaming.examples.ml.util.IncrementalLearningSkeletonData.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-examples.src.main.java.org.apache.flink.streaming.examples.ml.IncrementalLearningSkeleton.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.windowbuffer.TumblingPreReducerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.windowbuffer.TumblingGroupedPreReducerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.windowbuffer.SlidingTimePreReducerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.windowbuffer.SlidingTimeGroupedPreReducerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.windowbuffer.SlidingCountPreReducerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.windowbuffer.SlidingCountGroupedPreReducerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.windowbuffer.JumpingTimePreReducerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.windowbuffer.JumpingCountPreReducerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.windowbuffer.JumpingCountGroupedPreReducerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.windowbuffer.BasicWindowBufferTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.StreamWindowTypeInfoTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.StreamWindowTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.policy.TumblingEvictionPolicyTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.policy.TimeTriggerPolicyTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.policy.TimeEvictionPolicyTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.policy.PunctuationPolicyTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.policy.MultiTriggerPolicyTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.policy.MultiEvictionPolicyTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.policy.DeltaPolicyTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.policy.CountTriggerPolicyTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.policy.CountEvictionPolicyTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.extractor.FieldsFromTupleTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.extractor.FieldsFromArrayTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.extractor.FieldFromTupleTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.extractor.FieldFromArrayTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.extractor.ConcatenatedExtractTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.windowing.extractor.ArrayFromTupleTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.operators.windowing.WindowReducerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.operators.windowing.WindowPartitionerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.operators.windowing.WindowMergerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.operators.windowing.WindowMapperTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.operators.windowing.WindowingITCase.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.operators.windowing.WindowFolderTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.operators.windowing.WindowFlattenerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.operators.windowing.StreamDiscretizerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.operators.windowing.ParallelMergeTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.operators.windowing.ParallelMergeITCase.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.operators.windowing.GroupedStreamDiscretizerTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.operators.co.SelfConnectionTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.DataStreamTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.test.java.org.apache.flink.streaming.api.complex.ComplexIntegrationTest.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.WindowUtils.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.WindowEvent.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.WindowBuffer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.TumblingPreReducer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.TumblingGroupedPreReducer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.SlidingTimePreReducer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.SlidingTimeGroupedPreReducer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.SlidingPreReducer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.SlidingGroupedPreReducer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.SlidingCountPreReducer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.SlidingCountGroupedPreReducer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.PreAggregator.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.JumpingTimePreReducer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.JumpingTimeGroupedPreReducer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.JumpingCountPreReducer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.JumpingCountGroupedPreReducer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.windowbuffer.BasicWindowBuffer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.StreamWindowTypeInfo.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.StreamWindowSerializer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.StreamWindow.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.TumblingEvictionPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.TriggerPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.TimeTriggerPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.TimeEvictionPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.PunctuationPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.MultiTriggerPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.MultiEvictionPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.KeepAllEvictionPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.EvictionPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.DeltaPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.CountTriggerPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.CountEvictionPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.CloneableTriggerPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.datastream.DataStream.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.datastream.DiscretizedStream.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.datastream.WindowedDataStream.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.functions.RichWindowMapFunction.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.functions.windowing.delta.CosineDistance.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.functions.windowing.delta.EuclideanDistance.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.functions.windowing.delta.ExtractionAwareDeltaFunction.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.functions.WindowMapFunction.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.graph.StreamGraph.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.graph.WindowingOptimizer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.EmptyWindowFilter.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.GroupedActiveDiscretizer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.GroupedStreamDiscretizer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.GroupedWindowBuffer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.ParallelGroupedMerge.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.ParallelMerge.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.ParallelMergeOperator.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.StreamDiscretizer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.StreamWindowBuffer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.WindowFlattener.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.WindowFolder.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.WindowMapper.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.WindowMerger.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.WindowPartExtractor.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.WindowPartitioner.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.operators.windowing.WindowReducer.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.evictors.TimeEvictor.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.extractor.ArrayFromTuple.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.extractor.ConcatenatedExtract.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.extractor.Extractor.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.extractor.FieldFromArray.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.extractor.FieldFromTuple.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.extractor.FieldsFromArray.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.extractor.FieldsFromTuple.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.helper.Count.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.helper.Delta.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.helper.FullStream.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.helper.SystemTimestamp.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.helper.Time.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.helper.Timestamp.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.helper.TimestampWrapper.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.helper.WindowingHelper.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.ActiveCloneableEvictionPolicyWrapper.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.ActiveEvictionPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.ActiveEvictionPolicyWrapper.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.ActiveTriggerCallback.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.ActiveTriggerPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.CentralActiveTrigger.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.CloneableEvictionPolicy.java</file>
      <file type="M">flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.policy.CloneableMultiEvictionPolicy.java</file>
    </fixedFiles>
  </bug>
  <bug id="28094" opendate="2022-6-16 00:00:00" fixdate="2022-8-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade AWS SDK to support ap-southeast-3</summary>
      <description>The AWS base module pulls AWS SDK v2.17.52 which does not support ap-southeast-3. Update to the latest version. Ensure to cover connectors (KDS/KDF/DDB) and formats (avro-glue-schema-registry and json-glue-schema-registry)</description>
      <version>None</version>
      <fixedVersion>1.16.0,1.15.2,1.14.6</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-formats.flink-json-glue-schema-registry.pom.xml</file>
      <file type="M">flink-formats.flink-avro-glue-schema-registry.pom.xml</file>
      <file type="M">flink-end-to-end-tests.flink-glue-schema-registry-json-test.pom.xml</file>
      <file type="M">flink-end-to-end-tests.flink-glue-schema-registry-avro-test.pom.xml</file>
      <file type="M">flink-end-to-end-tests.flink-end-to-end-tests-aws-kinesis-firehose.pom.xml</file>
      <file type="M">flink-connectors.flink-sql-connector-aws-kinesis-streams.src.main.resources.META-INF.NOTICE</file>
      <file type="M">flink-connectors.flink-sql-connector-aws-kinesis-firehose.src.main.resources.META-INF.NOTICE</file>
      <file type="M">flink-connectors.flink-connector-kinesis.src.test.java.org.apache.flink.streaming.connectors.kinesis.util.JobManagerWatermarkTrackerTest.java</file>
      <file type="M">flink-connectors.flink-connector-kinesis.src.main.resources.META-INF.NOTICE</file>
      <file type="M">flink-connectors.flink-connector-kinesis.pom.xml</file>
      <file type="M">flink-connectors.flink-connector-aws-kinesis-streams.pom.xml</file>
      <file type="M">flink-connectors.flink-connector-aws-kinesis-firehose.pom.xml</file>
      <file type="M">flink-connectors.flink-connector-aws-base.src.test.java.org.apache.flink.connector.aws.util.AWSAsyncSinkUtilTest.java</file>
      <file type="M">flink-connectors.flink-connector-aws-base.pom.xml</file>
      <file type="M">flink-connectors.flink-connector-kinesis.src.main.java.org.apache.flink.streaming.connectors.kinesis.util.AWSUtil.java</file>
      <file type="M">flink-connectors.flink-connector-kinesis.src.main.java.org.apache.flink.streaming.connectors.kinesis.proxy.DynamoDBStreamsProxy.java</file>
    </fixedFiles>
  </bug>
  <bug id="28095" opendate="2022-6-16 00:00:00" fixdate="2022-6-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replace IOUtils dependency on oss filesystem</summary>
      <description>The oss fs has an undeclared dependency on commons-io for a single call to IOUtils.We can make our lives a little bit easier by using the Flink IOUtils instead.</description>
      <version>None</version>
      <fixedVersion>1.16.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-filesystems.flink-oss-fs-hadoop.src.main.java.org.apache.flink.fs.osshadoop.writer.OSSRecoverableFsDataOutputStream.java</file>
    </fixedFiles>
  </bug>
  <bug id="28096" opendate="2022-6-16 00:00:00" fixdate="2022-8-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Hive dialect support set variable</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.16.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">flink-connectors.flink-connector-hive.src.test.java.org.apache.flink.connectors.hive.HiveDialectITCase.java</file>
      <file type="M">flink-connectors.flink-connector-hive.src.main.java.org.apache.flink.table.planner.delegation.hive.HiveParser.java</file>
      <file type="M">flink-connectors.flink-connector-hive.src.main.java.org.apache.flink.table.planner.delegation.hive.HiveOperationExecutor.java</file>
      <file type="M">flink-connectors.flink-connector-hive.src.main.java.org.apache.flink.table.planner.delegation.hive.HiveDialectFactory.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
