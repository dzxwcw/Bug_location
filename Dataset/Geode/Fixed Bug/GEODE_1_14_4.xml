<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="GEODE">
  <bug id="10032" opendate="2022-2-9 00:00:00" fixdate="2022-2-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis Command Registry Needs to Include Data Structure</summary>
      <description>Not all Redis commands are associated with a data structure.  For the commands that are, we need to know which data structure that command is associated with.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.RedisCommandType.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.executor.server.COMMANDCommandExecutor.java</file>
      <file type="M">geode-for-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.CommandIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="10034" opendate="2022-2-9 00:00:00" fixdate="2022-2-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Organize Geode For Redis Stats By Data Structure</summary>
      <description>The Geode for Redis Stats should be organized by Data Structure.  For the stats not associated with a data structure, the stats should continue to be exposed under"GeodeForRedisStats". Acceptance CriteriaAll stats, associated with a command specific to a data structure, should be exposed under that data structure (e.g. Strings, Sets, SortedSets, Hashes, Lists). All tests should pass. </description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.statistics.GeodeRedisStats.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
    </fixedFiles>
  </bug>
  <bug id="10079" opendate="2022-2-23 00:00:00" fixdate="2022-3-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI scripts no longer supply docker images for pre-1.15 PR precheck tasks</summary>
      <description>The CI scripts no longer supply docker images when they run PR precheck tasks that use the `-PdunitDockerImage` property.For PRs with base branches prior to `support/1.15`, the `distributedTest` and `upgradeTest` precheck tasks must run each test class in a separate docker container. When `dunitDockerImage` is not defined, these tasks instead run tests concurrently outside of docker. This results in swarms of failures, as the concurrently executing tests all attempt to bind to the same ports.Examples: https://concourse.apachegeode-ci.info/builds/27926695 https://concourse.apachegeode-ci.info/builds/27632643 https://concourse.apachegeode-ci.info/builds/28861132</description>
      <version>1.12.9,1.13.8,1.14.4</version>
      <fixedVersion>1.12.10,1.13.9,1.14.5,1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="10117" opendate="2022-3-10 00:00:00" fixdate="2022-3-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add doc section mentioning the relationship between local-max-memory and lru eviction memory</summary>
      <description>Section to be added :*Note:* For partition regions if the partition region attribute `local-max-memory` is set then the eviction attribute `lru-memory-size maximum` is overwritten with the value of `local-max-memory`        Both `local-max-memory` and `lru-memory-size maximum` are local member attributes and not cluster-wide. </description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.storing.data.on.disk.storing.data.on.disk.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="10150" opendate="2022-3-22 00:00:00" fixdate="2022-3-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>alter runtime command and change loglevel command docs bug &amp; improvements</summary>
      <description>The parameters information for gfsh&gt;alter runtime --log-level shows an incorrect parameter name in a table where all parameter's description is provided. The actual expects --log-level but the row in a table says --loglevel. See the screenshot attached. (https://gemfire.docs.pivotal.io/910/geode/tools_modules/gfsh/command-pages/alter.html#topic_7E6B7E1B972D4F418CB45354D1089C2B)Another important point is, we should add a line on both the links below to state the difference when using these commands (alter runtime and change loglevel).https://geode.apache.org/docs/guide/114/tools_modules/gfsh/command-pages/alter.html#topic_7E6B7E1B972D4F418CB45354D1089C2Bhttps://geode.apache.org/docs/guide/114/tools_modules/gfsh/command-pages/change.htmlWhen I tried both of these commands, it has been found that for locator we need to use gfsh&gt;change loglevel --loglevel=config --member=locator and gfsh&gt;alter runtime --log-level for cache server members. The alter runtime --log-level command doesn't work for Locators. So adding a line or changing an existing line on the docs will help new customers.</description>
      <version>1.14.4</version>
      <fixedVersion>1.12.10,1.13.9,1.14.5,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.change.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.alter.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="10172" opendate="2022-3-25 00:00:00" fixdate="2022-3-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Escape braces and angle brackets for format consistency</summary>
      <description>The REST Apps section contains expressions that make heavy use of braces {} and angle-brackets &lt;&gt;. Escape these chars for more consistent rendering by various formatting tools.</description>
      <version>1.14.4</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.rest.apps.rest.regions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.queries.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.functions.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="10179" opendate="2022-3-28 00:00:00" fixdate="2022-3-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump jackson-databind to recommended version</summary>
      <description>recommend getting to 2.13.2.1 for develop or 2.12.6.1 for support branches</description>
      <version>None</version>
      <fixedVersion>1.12.10,1.14.5,1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-server-all.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.gfsh.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="10232" opendate="2022-4-11 00:00:00" fixdate="2022-4-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - reformat list for more reliable rendering</summary>
      <description>The How Function Execution Works page contains a bullet list with bold elements and en-dashes (apparently entered via keyboard shortcuts) that are not always interpreted in the same way by different Markdown interpreters.https://geode.apache.org/docs/guide/114/developing/function_exec/how_function_execution_works.htmlSimplify the layout for more reliable output across various flavors of Markdown.Suggested modification: Replace each en-dash with a colon+space combination.</description>
      <version>1.14.4</version>
      <fixedVersion>1.12.10,1.13.9,1.14.5,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.function.exec.how.function.execution.works.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="10264" opendate="2022-4-27 00:00:00" fixdate="2022-5-27 01:00:00" resolution="Resolved">
    <buginformation>
      <summary>Geode user guide: remove the "Connect to the server from your application" section</summary>
      <description>Community member John Martin reported:We need to remove the "Connect to the server from your application" section from this page please:https://geode.apache.org/docs/guide/114/getting_started/intro_to_clients.htmlit is not accurate, and was a section I thought I had deleted before submitting, but apparently I had not.</description>
      <version>1.14.4</version>
      <fixedVersion>1.14.5,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.getting.started.intro.to.clients.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="10297" opendate="2022-5-11 00:00:00" fixdate="2022-5-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SSL protocol ordering can result in loss of newer protocol support.</summary>
      <description>If ssl-protocols is listed with a older protocol version ahead of a newer the SSLContext used will support at most that weaker protocol.For example ssl-protocols=TLSV1.2,TLSv1.3,TLSv1.1 will use the TLSv1.2 SSLContext, which will not support, and silently ignore, the TLSv1.3 configuration. The effective enabled protocols list will be TLSV1.2,TLSv1.1.</description>
      <version>1.12.9,1.13.8,1.14.4,1.15.0,1.16.0</version>
      <fixedVersion>1.15.0,1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SSLUtilTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
    </fixedFiles>
  </bug>
  <bug id="10299" opendate="2022-5-11 00:00:00" fixdate="2022-5-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Creating Regions Dynamically Example in User&amp;#39;s Guide is Broken</summary>
      <description>The example on https://geode.apache.org/docs/guide/114/developing/region_options/dynamic_region_creation.html no longer works. The RegionAttributesImpl class was made not Serializable in Geode 1.11 (GEODE-7090), so instances can no longer be passed from the client to the server making this function unusable from a client.Barry Oglesby has created updated versions of the two classes (see attached).</description>
      <version>1.14.4</version>
      <fixedVersion>1.14.5,1.15.0,1.16.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.region.options.dynamic.region.creation.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="10307" opendate="2022-5-12 00:00:00" fixdate="2022-5-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Doc changes needed for enable security-manager property</summary>
      <description>Community member Eric Shu reports:Here is the description for enable security properties: (https://geode.apache.org/docs/guide/114/managing/security/enable_security.html)security-manager PropertyThe authentication callback and the authorization callback that implement the SecurityManager interface are specified with the security-manager property. When this property is defined, authentication and authorization are enabled. The definition of the security-manager property is the fully qualified name of the class that implements the SecurityManager interface. For example:security-manager = com.example.security.MySecurityManagerTo ensure that the security-manager property is applied consistently across a cluster, follow these guidelines:Specify the security-manager property in a properties file, such as gemfire.properties, not in a cluster configuration file (such as cluster.properties).Specify the properties file when you start the first locator for the cluster. The locator will propagate the value to all members (locators and servers) that follow.If you must specify the security-manager property for servers (neither necessary nor recommended) make sure its value is exactly identical to that specified for the first locator.This is true if the cluster has enabled the cluster configuration service, and new members have set the `use-cluster-configuration=true`.Documentation should explain that if cluster configuration is not enabled, you must specify the security-manager property for servers, makng sure its value is exactly identical to that specified for the first locator.</description>
      <version>1.14.4</version>
      <fixedVersion>1.12.10,1.14.5,1.15.0,1.16.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.security.enable.security.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.persist.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="10342" opendate="2022-5-26 00:00:00" fixdate="2022-6-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update the HTTP Module for Tomcat instructions to include current required jars</summary>
      <description>Step 6 of the installation instructions tell the user to:Copy the following jar files from the Tanzu GemFire lib subdirectory to the lib subdirectory of your Tomcat server ($CATALINA_HOME/lib), adding version numbers to the filenames as needed: commons-io jar commons-lang jar commons-validator jar fastutil jar geode-common jar geode-core jar geode-logging jar geode-management jar geode-membership jar geode-serialization jar geode-tcp-server jar javax.transaction-api jar jgroups jar log4j-api jar log4j-core jar log4j-jul jar micrometer-core jar shiro-core jarThis list is dated and does not include all the libraries that are mentioned as dependancies of this jars. For instance, the manifest for geode-core lists many jars as dependancies in it’s classpath that are not in the above list (e.g. antlr-2.7.7.jar, snappy-0.4.jar, etc.):{{Manifest-Version: 1.0 2Automatic-Module-Name: io.pivotal.gemfire.core 3Organization: VMware, Inc. 4Dependent-Modules: geode-membership-9.10.14 geode-http-service-9.10.14 5 geode-management-9.10.14 geode-unsafe-9.10.14 6Module-Name: geode-core 7Class-Path: antlr-2.7.7.jar commons-io-2.6.jar micrometer-core-1.6.3.j 8 ar javax.resource-api-1.7.1.jar shiro-core-1.8.0.jar jaxb-api-2.3.1.j 9 ar jaxb-impl-2.3.2.jar commons-modeler-2.0.1.jar javax.mail-api-1.6.2 10 .jar mx4j-3.0.2.jar mx4j-remote-3.0.2.jar mx4j-tools-3.0.1.jar jna-pl 11 atform-5.5.0.jar jna-5.5.0.jar jopt-simple-5.0.4.jar snappy-0.4.jar c 12 lassgraph-4.8.52.jar rmiio-2.1.2.jar javax.activation-1.2.0.jar istac 13 k-commons-runtime-3.0.9.jar swagger-annotations-1.5.23.jar shiro-conf 14 ig-ogdl-1.8.0.jar shiro-cache-1.8.0.jar shiro-crypto-hash-1.8.0.jar s 15 hiro-crypto-cipher-1.8.0.jar shiro-config-core-1.8.0.jar shiro-event- 16 1.8.0.jar shiro-crypto-core-1.8.0.jar shiro-lang-1.8.0.jar slf4j-api- 17 1.7.28.jar javax.activation-api-1.2.0.jar HdrHistogram-2.1.12.jar Lat 18 encyUtils-2.0.3.jar javax.transaction-api-1.3.jar 19Title: geode 20Version: 9.10.14 21Created-By: root}}and geode-common{{1Manifest-Version: 1.02Organization: VMware, Inc.3Dependent-Modules:4Module-Name: geode-common5Class-Path: jackson-databind-2.10.5.1.jar jackson-annotations-2.10.5.j6 ar jackson-core-2.10.5.jar7Title: geode8Version: 9.10.149Created-By: root}}A fully exhaustive list has not yet been determined and confirmed, but it should be almost all the jars provided in the distribution’s “lib” directory (the classpath of the geode-dependencies meta-jar gives, perhaps, the most concise list).</description>
      <version>1.14.4</version>
      <fixedVersion>1.12.10,1.14.5,1.15.0,1.16.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tomcat.installing.the.module.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="10343" opendate="2022-5-27 00:00:00" fixdate="2022-5-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add ability to opt-in to windows-jdk8 and windows-jdk17 pr checks</summary>
      <description>Developers can already opt in to jdk8 and jdk17 (on linux) and jdk11 on windows. This completes the matrix (well, except for Benchmarks)</description>
      <version>None</version>
      <fixedVersion>1.15.0,1.16.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="10385" opendate="2022-6-16 00:00:00" fixdate="2022-6-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Remove bad G1 tuning advice</summary>
      <description>The "Managing Heap Memory" page provides some G1 tuning advice that is actually detrimental to performance. The whole section needs some work, but this passage, in particular, is wrong:If you find the Apache Geode Resource Manager does not detect crossing the eviction or critical threshold quickly enough, it has been observed that its responsiveness is increased by reducing the default value of --J-XX:MaxGCPauseMillis=VALUE JVM parameter (which is 200). Be sure to take into account that this change also increases the amount of time spent in garbage collection.Cause: This advice was originally intended only to maximize performance of a specific test case. It is NOT good advice for production systems.https://geode.apache.org/docs/guide/114/managing/heap_use/heap_management.htmlShort-term solution: delete the passage.Long-term solution: Come up with some better ideas.</description>
      <version>1.14.4</version>
      <fixedVersion>1.15.0,1.15.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.heap.use.heap.management.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="1040" opendate="2016-3-2 00:00:00" fixdate="2016-3-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a DUnit for JTA rollback</summary>
      <description>Current ClientServer transaction test does not test JTA rollback.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.ClientServerTransactionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="10401" opendate="2022-7-27 00:00:00" fixdate="2022-7-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Oplog recovery takes too long due to fault in fastutil library</summary>
      <description>As we already know, the .drf file delete operations only contain OplogEntryID. During recovery, the server reads (byte by byte) each OplogEntryID and stores it in a HashSet to use later when recovering .crf files. There are two types of HashSets: IntOpenHashSet and LongOpenHashSet. The OplogEntryID of type integer will be stored in IntOpenHashSet, and long integer in LongOpenHashSet, probably due to memory optimization and performance factors. OplogEntryID starts with a zero and increments throughout time.We have observed in logs that between exception (There is a large number of deleted entries) and the previous log have passed more than 4 minutes (sometimes even more).{"timestamp":"2022-06-14T21:41:43.772+08:00","severity":"info","message":"Recovering oplog#271 /opt/dbservice/data/datastore/BACKUPdataDiskStore_271.drf for disk store dataDiskStore.","metadata":{"timestamp":"2022-06-14T21:46:02.152+08:00","severity":"warning","message":"There is a large number of deleted entries within the disk-store, please execute an offlinecompaction.","metadata":When the above exception occurs, that means that the limit of 805306401 entries in IntOpenHashSet has been reached. In that case, the server rolls to the new IntOpenHashSet, where an exception and the delay could happen again.The problem is that due to the fault in FastUtil dependency (IntOpenHashSet and LongOpenHashSet), the unnecessary rehashing happens multiple times before the max size is reached. The rehashing starts from 805306368 onwards for each new entry until the max size. This rehashing adds several minutes to .drf Oplog recovery, but does nothing as max is already reached.</description>
      <version>None</version>
      <fixedVersion>1.15.1,1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="10417" opendate="2022-9-6 00:00:00" fixdate="2022-9-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix NullPointerException when getting events from the gw sender queue to complete transactions</summary>
      <description>When the WAN group-transaction-events feature is enabled in a parallel gateway sender, it is possible to get a NullPointerException when retrieving events from the queue to complete a transaction if the event in the queue is null.If this situation is reached then the gateway sender dispatcher will not dispatch queue events anymore and therefore the WAN replication will not progress.</description>
      <version>1.13.8,1.14.4,1.15.0</version>
      <fixedVersion>1.15.1,1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderQueueJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BucketRegionQueueJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRegionQueue.java</file>
    </fixedFiles>
  </bug>
  <bug id="10420" opendate="2022-9-12 00:00:00" fixdate="2022-9-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Handle WAN event when interrupted</summary>
      <description>It is possible that an event of which a gateway sender is to be notified is lost if during the process the thread is interrupted. </description>
      <version>None</version>
      <fixedVersion>1.15.1,1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.AbstractGatewaySenderTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EntryEventImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="7963" opendate="2020-4-7 00:00:00" fixdate="2020-5-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Total bucket and total primary bucket count per server is incorrect</summary>
      <description>If we have more buckets per region than default value is_, show metrics_ command per server has wrong stats for totalBucketCount and totalPrimaryCount. Number of buckets is good if _show metric_s is executed region by region per server.It looks like it doesn't take last updated results when print output.After last bucket are created it increase these two values but in output we have a value before that increase.To reproduce an issue: Run locator and 4 servers. create partition persistent region with total-num-buckets more than default value do query (query --query="select * from /region1") Repeat steps 2. and 3. to create and query more regions see result of show metrics per server and region by region per server</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PRHARedundancyProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="7964" opendate="2020-4-7 00:00:00" fixdate="2020-4-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade mockito dependency from 2.23.0 to 3.3.3</summary>
      <description>Upgrade mockito dependency from 2.23.0 to 3.3.3</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.ConnectionManager.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.functions.RegionAlterFunctionTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.functions.AlterQueryServiceFunctionTest.java</file>
      <file type="M">geode-dunit.src.test.java.org.apache.geode.test.dunit.internal.VMEventNotifierTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.FederatingManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.beans.ManagementListenerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.io.CompositeOutputStreamJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction66Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction65Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.colocation.SingleThreadColocationLoggerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionRedundancyTrackerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.InternalCacheBuilderTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupOperationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.ServerLauncherTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.pooling.AvailableConnectionManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.OpExecutorImplJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.alerting.internal.ClusterAlertMessagingTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.QueueConnectionImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.PooledConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.ConnectionManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.AvailableConnectionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ConnectionImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.Connection.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.process.ControlFileWatchdogIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.ha.HARegionQueueIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.CacheDistributionAdvisorConcurrentTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.client.internal.QueueManagerJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.client.internal.pooling.ConnectionManagerJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.client.internal.pooling.AvailableConnectionManagerConcurrentTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.DistributedSystemMXBeanWithAlertsDistributedTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcWriterTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriterTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlParserTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.ElementTypeTest.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="7965" opendate="2020-4-7 00:00:00" fixdate="2020-4-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modify Redis SADD command to use region.compute</summary>
      <description>Geode implementation of this command has been modified to use the region.compute command to improve reliability.  This is stage one of an experiment to test out an effort to improve both reliability and performance by a series of changes.    </description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SAddExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.SetsIntegrationTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.RedisDistDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7966" opendate="2020-4-7 00:00:00" fixdate="2020-4-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - properties list - reformat oversized table</summary>
      <description>On the properties page, https://geode.apache.org/docs/guide/112/reference/topics/gemfire_properties.html, the table exceeds the column width, leading to readability issues.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="7967" opendate="2020-4-7 00:00:00" fixdate="2020-6-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - gfsh start locator - reformat oversize table</summary>
      <description>On the gfsh start locator reference page,https://geode.apache.org/docs/guide/112/tools_modules/gfsh/command-pages/start.html#topic_591260CF25D64562A0EDD7260D2AC6D4the table exceeds the column width, leading to readability issues.</description>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="7968" opendate="2020-4-7 00:00:00" fixdate="2020-6-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - Region shortcuts quick-ref - reformat oversize table</summary>
      <description>On the Region Shortcuts Quick Reference page, https://geode.apache.org/docs/guide/112/reference/topics/region_shortcuts_table.html, the table exceeds the column width, leading to readability issues.</description>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.region.shortcuts.table.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="7969" opendate="2020-4-8 00:00:00" fixdate="2020-4-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump netty to 4.1.48</summary>
      <description>as part of GEODE-7798: Fix flakiness in PubSubTest, the netty version was increased on develop; this version should be the minimum used on support branches as well.</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="9973" opendate="2022-1-18 00:00:00" fixdate="2022-1-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Documentation: socket-lease-time is not used to return sockets to a pool but to close them</summary>
      <description>The "Making sure you have enough sockets" Geode documentation section says the following about socket-lease-time (check underlined sentence): Peer-to-peer. For peer-to-peer threads that do not share sockets, you can use the socket-lease-time to make sure that no socket sits idle for too long. When a socket that belongs to an individual thread remains unused for this time period, the system automatically returns it to the pool. The next time the thread needs a socket, it creates a new socket. Actually, the system automatically closes the connection in the situation described instead of returning it to any pool.</description>
      <version>1.12.9,1.13.8,1.14.4,1.15.0</version>
      <fixedVersion>1.12.9,1.13.8,1.14.4,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.monitor.tune.socket.communication.have.enough.sockets.html.md.erb</file>
    </fixedFiles>
  </bug>
</bugrepository>
