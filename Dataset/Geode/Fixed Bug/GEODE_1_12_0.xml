<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="GEODE">
  <bug id="10111" opendate="2022-3-8 00:00:00" fixdate="2022-3-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add COMMITWATCHERS for self-service opt-in/opt-out of automated commit message review</summary>
      <description>previously opt-in and unsubscribe required a dev list email, and this led to complaintsthis self-serve mechanism achieves the same goal of a public record of opt-in requests, without adding noise to the dev list</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CODEWATCHERS</file>
    </fixedFiles>
  </bug>
  <bug id="10114" opendate="2022-3-8 00:00:00" fixdate="2022-3-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>NullPointerException is logged if create index when cache is closing.</summary>
      <description>The following NPE is logged when creating index if cache is closing at the same time.&amp;#91;info 2020/02/19 02:28:46.140 PST bridgegemfire3_host1_29240 &lt;Pooled Waiting Message Processor 1&gt; tid=0x2e&amp;#93; Failed to create index idRangeEntryIndex on region /_PR/_B_QueryRegion0_46 with exception: java.lang.NullPointerException&amp;#91;info 2020/02/19 02:28:46.198 PST bridgegemfire3_host1_29240 &lt;Pooled Waiting Message Processor 1&gt; tid=0x2e&amp;#93; Failed to create index statusCompactRangeEntryIndex on region /_PR/_B_QueryRegion0_46 with exception: java.lang.NullPointerException</description>
      <version>1.12.0,1.13.0,1.14.0,1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.LocalRegionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="10126" opendate="2022-3-15 00:00:00" fixdate="2022-4-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor Configuration To Use System Properties</summary>
      <description>The properties currently being used by the Redis module are defined in Geode core.  These properties need to be removed from Geode core and refactored to system properties. Validators must also be added for the system properties to ensure that users provide correct values.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.SystemPropertyBasedRedisConfiguration.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.RedisConfiguration.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.redis.TestRedisConfiguration.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.services.RegionProvider.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.netty.NettyRedisServer.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisService.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.connection.AuthIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.session.SessionsAndCrashesDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.auth.AuthWhileServersRestartDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.string.MSetNXDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.string.MSetDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZRemRangeByRankDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZRemDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.list.RPushDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.key.RenameDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.hash.HashesAndCrashesDUnitTest.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.test.dunit.rules.RedisClusterStartupRule.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.redis.GeodeRedisServerRule.java</file>
      <file type="M">geode-for-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.commands.executor.GeodeRedisServerStartupUsingGfshAcceptanceTest.java</file>
      <file type="M">geode-for-redis.src.acceptanceTest.java.org.apache.geode.redis.GeodeRedisServerStartupAcceptanceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionConfigImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
    </fixedFiles>
  </bug>
  <bug id="10234" opendate="2022-4-12 00:00:00" fixdate="2022-4-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>No need to generate tailKey for transaction if there is no parallel wan enabled</summary>
      <description>There is no need to generate a tailKey, if there is no parallel wan enabled. However, currently every operation on a partitioned region would generate such key and will be ignored anyway.</description>
      <version>1.12.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BucketRegionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTxApplyDestroyTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug id="10242" opendate="2022-4-15 00:00:00" fixdate="2022-5-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Same tail key can be generated for different events on (different colocated regions) from different servers</summary>
      <description>For colocated partition regions with parallel wan queue, rebalance could cause primary to be moved. This can lead to a case that one server has the primary bucket for the parent region, but another has the primary bucket for the child region. As colocated regions show the same parallel wan queue, both server will generate next tail key for different events. This will cause some event not dispatched to the other wan site and thus event lost.</description>
      <version>1.12.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.parallel.ParallelWANConflationDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BucketAdvisorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug id="10243" opendate="2022-4-15 00:00:00" fixdate="2022-4-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Old clients with durable queues should fail early if AuthenticationExpiredException is thrown</summary>
      <description>As part of the changes for GEODE-9457, when an AuthenticationExpiredException is thrown from the SecurityManager during message dispatching, we send a message to 1.15 and newer clients asking them to re-authenticate.For 1.14 and older clients, we do not send a message. Instead, we just wait for the reauthenticate.wait.time to elapse and then close the connection.The net effect of this is that if users are doing cache operations from 1.14 and older clients, and their SecurityManager expires the credentials of the old clients, they will sometimes see their clients re-authenticate themselves in that time window. This will mislead users into thinking that re-authentication works with old clients and client queues, even though we have documented that we don't support it.Instead of allowing re-authentication to sometimes work in this unsupported use case, we should always fail so that is clear to users that this use case is not supported.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.upgradeTest.java.org.apache.geode.security.AuthExpirationBackwardCompatibleDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.MessageDispatcherTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.MessageDispatcher.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.security.AuthExpirationDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="10245" opendate="2022-4-19 00:00:00" fixdate="2022-4-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade classgraph from 4.8.143 -&gt; 4.8.145</summary>
      <description>This fixes an issue as described here: https://github.com/classgraph/classgraph/issues/673</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-server-all.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.gfsh.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="10254" opendate="2022-4-22 00:00:00" fixdate="2022-4-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>NullPointerException in DistributionLocatorID.marshalForClients()</summary>
      <description>When constructed via unmarshal() with an unresolvable hostname subsequent calls to marshalForClients() will result in NullPointerException.</description>
      <version>1.12.0,1.13.0,1.14.0,1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.admin.remote.DistributionLocatorIdTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.DistributionLocatorId.java</file>
    </fixedFiles>
  </bug>
  <bug id="4267" opendate="2018-1-9 00:00:00" fixdate="2018-12-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>PersistentRecoveryOrderOldConfigDUnitTest.testCrashDuringPreparePersistentId fails intermittently due to DistributedSystemDisconnectedException suspect string</summary>
      <description>org.apache.geode.internal.cache.persistence.PersistentRecoveryOrderOldConfigDUnitTest &gt; testCrashDuringPreparePersistentId FAILED java.lang.RuntimeException: org.apache.geode.distributed.DistributedSystemDisconnectedException: This connection to a distributed system has been disconnected. Caused by: org.apache.geode.distributed.DistributedSystemDisconnectedException: This connection to a distributed system has been disconnected. java.lang.AssertionError: Suspicious strings were written to the log during this run. Fix the strings or use IgnoredException.addIgnoredException to ignore. ----------------------------------------------------------------------- Found suspect string in log4j at line 1443 [error 2017/12/16 00:50:26.778 UTC &lt;RMI TCP Connection(1)-10.254.0.146&gt; tid=0x1b] org.apache.geode.distributed.DistributedSystemDisconnectedException: This connection to a distributed system has been disconnected.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.persistence.PersistentRecoveryOrderDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4268" opendate="2018-1-9 00:00:00" fixdate="2018-7-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Move jmh benchmarks to geode-code</summary>
      <description>Instead of having all jmh benchmarks in their own module, add them to the module where the codd they benchmark resides.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-benchmarks.src.jmh.java.org.apache.geode.cache.benchmark.UpdateOnRegionBenchmark.java</file>
      <file type="M">geode-benchmarks.src.jmh.java.org.apache.geode.cache.benchmark.RegionOperationBenchmark.java</file>
      <file type="M">geode-benchmarks.src.jmh.java.org.apache.geode.cache.benchmark.RangeQueryWithIndexBenchmark.java</file>
      <file type="M">geode-benchmarks.src.jmh.java.org.apache.geode.cache.benchmark.GetsWithEvictionPerformanceBenchmark.java</file>
      <file type="M">geode-benchmarks.src.jmh.java.org.apache.geode.cache.benchmark.GetOnRegionBenchmark.java</file>
      <file type="M">geode-benchmarks.src.jmh.java.org.apache.geode.cache.benchmark.FirstEvictionBenchmark.java</file>
      <file type="M">geode-benchmarks.src.jmh.java.org.apache.geode.cache.benchmark.EvictionWithPartiallyMarkedListsBenchmark.java</file>
      <file type="M">geode-benchmarks.src.jmh.java.org.apache.geode.cache.benchmark.EvictionMultiThreadedPerformanceBenchmark.java</file>
      <file type="M">geode-benchmarks.src.jmh.java.org.apache.geode.cache.benchmark.EvictionBasePerformanceBenchmark.java</file>
      <file type="M">geode-benchmarks.src.jmh.java.org.apache.geode.cache.benchmark.CreateWithEvictionUnderLimitBenchmark.java</file>
      <file type="M">geode-benchmarks.src.jmh.java.org.apache.geode.cache.benchmark.CreateOnRegionBenchmark.java</file>
      <file type="M">geode-benchmarks.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="4270" opendate="2018-1-10 00:00:00" fixdate="2018-2-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>[CI Failure] org.apache.geode.cache.query.cq.dunit.CqSecurityAuthorizedUserDUnitTest &gt; cqExecuteWithInitialResultsWithMethodInvocationWithUnpopulatedRegionAndFollowedByAPutShouldTriggerCqError[0] FAILED</summary>
      <description>org.apache.geode.cache.query.cq.dunit.CqSecurityAuthorizedUserDUnitTest &gt; cqExecuteWithInitialResultsWithMethodInvocationWithUnpopulatedRegionAndFollowedByAPutShouldTriggerCqError[0] FAILED org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.security.query.QuerySecurityBase$$Lambda$50/1990038369.run in VM 1 running on Host 6b888a694193 with 4 VMs at org.apache.geode.test.dunit.VM.invoke(VM.java:393) at org.apache.geode.test.dunit.VM.invoke(VM.java:363) at org.apache.geode.test.dunit.VM.invoke(VM.java:308) at org.apache.geode.security.query.QuerySecurityBase.putIntoRegion(QuerySecurityBase.java:202) at org.apache.geode.cache.query.cq.dunit.CqSecurityAuthorizedUserDUnitTest.cqExecuteWithInitialResultsWithMethodInvocationWithUnpopulatedRegionAndFollowedByAPutShouldTriggerCqError(CqSecurityAuthorizedUserDUnitTest.java:138) Caused by: org.apache.geode.cache.client.ServerOperationException: remote server on 6b888a694193(153:loner):32936:ced4ccdc: org.apache.geode.security.GemFireSecurityException: Error: Anonymous User Caused by: org.apache.geode.security.GemFireSecurityException: Error: Anonymous UserTest logshttps://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/DistributedTest/builds/70#L5a4ed7fc:654</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifier.java</file>
    </fixedFiles>
  </bug>
  <bug id="4274" opendate="2018-1-10 00:00:00" fixdate="2018-4-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add geode-examples job to CI</summary>
      <description>The concourse pipeline should test geode-examples.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  <bug id="6072" opendate="2018-11-16 00:00:00" fixdate="2018-11-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI Failure: StructBagLimitBehaviourJUnitTest &gt; testRemoveAllStructBagSpecificMthod</summary>
      <description>Failed with:org.apache.geode.cache.query.internal.StructBagLimitBehaviourJUnitTest &gt; testRemoveAllStructBagSpecificMthod FAILED org.apache.geode.cache.query.internal.QueryExecutionCanceledException at org.apache.geode.cache.query.internal.QueryMonitor.throwExceptionIfQueryOnCurrentThreadIsCanceled(QueryMonitor.java:165) at org.apache.geode.cache.query.internal.StructBag.addAll(StructBag.java:335) at org.apache.geode.cache.query.internal.StructBagLimitBehaviourJUnitTest.testRemoveAllStructBagSpecificMthod(StructBagLimitBehaviourJUnitTest.java:65)org.apache.geode.cache.query.internal.StructBagLimitBehaviourJUnitTest &gt; testRetainAllStructBagSpecific FAILED org.apache.geode.cache.query.internal.QueryExecutionCanceledException at org.apache.geode.cache.query.internal.QueryMonitor.throwExceptionIfQueryOnCurrentThreadIsCanceled(QueryMonitor.java:165) at org.apache.geode.cache.query.internal.StructBag.addAll(StructBag.java:335) at org.apache.geode.cache.query.internal.StructBagLimitBehaviourJUnitTest.testRetainAllStructBagSpecific(StructBagLimitBehaviourJUnitTest.java:100)Run here:https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UnitTestOpenJDK8/builds/127Test results here:http://files.apachegeode-ci.info/builds/apache-develop-main/1.9.0-build.163/test-results/test/1542391550/</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.QueryMonitorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.DefaultQuery.java</file>
    </fixedFiles>
  </bug>
  <bug id="6954" opendate="2019-7-10 00:00:00" fixdate="2019-7-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>GatewaySenderMXBean wrongly reports state</summary>
      <description>After creating gateways senders and receivers between two geode clusters replications is established. After restart gateway receiver, list gateways command shows that everything is connected and replication works.But when checking gateway sender state over JMX with GatewaySenderMXBean and checking isConnected() I got false, but should be true as it is connected.Steps to reproduce issue: create two sites (geode-examples/wan) check GW sender stats with jconsole (Connected = true) stop GW receiver on the remote site (Connected = false) put some entry (it will be in the queue waiting for connection) start GW receiver on the remote site (Connected = false) replication is established, the event is processed to the remote site (Connected = false, should be true)</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.management.WANManagementDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.GatewaySenderMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.ConcurrentSerialGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ConcurrentParallelGatewaySenderEventProcessor.java</file>
    </fixedFiles>
  </bug>
  <bug id="7473" opendate="2019-11-18 00:00:00" fixdate="2019-12-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>when the sender is not ready, before adding to tmpDroppedEvents, should check its destination dsid</summary>
      <description>When WAN receiver received an event, if its region also defined a sender, it will check event's GatewaySenderEventCallbackArgument's dsIds to see if it should be filtered out. WAN used this logic to prevent the event from bouncing back to wrong site, such as original sender. In GEODE-5087's fix, when found sender is not available and add to tmpDroppedEvents before checking event's GatewaySenderEventCallbackArgument. This should be done after checking GatewaySenderEventCallbackArgument.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.parallel.ParallelWANPropagationLoopBackDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.ConcurrentSerialGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySender.java</file>
    </fixedFiles>
  </bug>
  <bug id="7522" opendate="2019-12-2 00:00:00" fixdate="2019-2-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>always link to rest wiki page by Geode version number, not "develop"</summary>
      <description>update wiki generator script to name the page with the actual version rather than `develop` so that corresponding documentation can be created with a link that will remain valid through development phase, release phase, and after release.change has already been made, changing https://cwiki.apache.org/confluence/display/GEODE/develop+Management+REST+API+-+v1 to https://cwiki.apache.org/confluence/display/GEODE/1.12.0+Management+REST+API+-+v1</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-management.src.test.script.update-management-wiki.sh</file>
    </fixedFiles>
  </bug>
  <bug id="7526" opendate="2019-12-3 00:00:00" fixdate="2019-12-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Extend ExecutorServiceRule for use in distributed tests</summary>
      <description>I'd like to extend ExecutorServiceRule for use in distributed tests.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.ExecutorServiceRuleTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7565" opendate="2019-12-10 00:00:00" fixdate="2019-5-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Wrong management of receivers with same hostname-for-senders</summary>
      <description>There is a problem with Geode WAN replication when GW receivers are configured with the same hostname-for-senders and port on all servers. [ 1 ]The problem experienced is that shutting down one server is stopping replication to this cluster until the server is up again. This is because Geode incorrectly assumes there are no more alive servers when just one of them is down, because since they share hostname-for-senders and port, they are treated as one same server.Our proposal consists on expanding internal data in locators with enough information to distinguish servers in the beforementioned use case. The same intervention is likely needed in the client pools and possibly elsewhere in the source code.[ 1 ] : The reason for such a setup is deploying Geode cluster on a Kubernetes cluster where all GW receivers are reachable from the outside world on the same VIP and port. Other kinds of configuration (different hostname and/or different port for each GW receiver) are not cheap from OAM and resources perspective in cloud native environments and also limit some important use-cases (like scaling). Link to thread in DEV mailing list: https://markmail.org/thread/6qakx67rxiokdsec</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedPingMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ServerLocationAndMemberId.java</file>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.DataSerializableFixedID.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientServerMiscDUnitTestBase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.LocatorLoadSnapshotJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DSFIDFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Ping.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GridAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ServerLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.LocatorLoadSnapshot.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ServerProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PingOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.LiveServerPinger.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.CacheServerLoadMessage.java</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.LocatorLoadSnapshotIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7570" opendate="2019-12-11 00:00:00" fixdate="2019-2-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>RemoteGfManagerAgentTest &gt; removeAgentAndDisconnectWouldNotThrowNPE failes with NPE</summary>
      <description>See: https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/UnitTestOpenJDK11/builds/1374org.apache.geode.internal.admin.remote.RemoteGfManagerAgentTest &gt; removeAgentAndDisconnectWouldNotThrowNPE FAILED java.util.concurrent.ExecutionException: java.lang.NullPointerException at java.util.concurrent.FutureTask.report(FutureTask.java:122) at java.util.concurrent.FutureTask.get(FutureTask.java:191) at org.apache.geode.internal.admin.remote.RemoteGfManagerAgentTest.removeAgentAndDisconnectWouldNotThrowNPE(RemoteGfManagerAgentTest.java:80) Caused by: java.lang.NullPointerException at org.apache.geode.internal.admin.remote.RemoteGfManagerAgent.disconnect(RemoteGfManagerAgent.java:388) at org.apache.geode.internal.admin.remote.RemoteGfManagerAgentTest.lambda$removeAgentAndDisconnectWouldNotThrowNPE$1(RemoteGfManagerAgentTest.java:76)</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.CacheFactoryStaticsTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7582" opendate="2019-12-14 00:00:00" fixdate="2019-2-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Client cannot contact locator when it changes IP after restart</summary>
      <description>Client is connected to geode multi-site system. In case locator is restarted, and it changes IP address, client cannot contact it after.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-tcp-server.src.main.java.org.apache.geode.distributed.internal.tcpserver.LocatorAddress.java</file>
      <file type="M">geode-tcp-server.build.gradle</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.AutoConnectionSourceImpl.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.client.internal.AutoConnectionSourceImplJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7655" opendate="2020-1-7 00:00:00" fixdate="2020-1-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Prevent ClassCastException while running nested queries</summary>
      <description>While running a nested query like :select productId, productCodes['GMI'], contractSize from /product where contractSize = null and productCodes['GMI'] in (select distinct b.productCodes['GMI'] from /product b where b.contractSize != null and b.status='ACTIVE') LIMIT 2000Following Indexes need to be created for the Exception to occur1. Primary Key Index on productID2. Functional index on productID3. Functional index on productCodes&amp;#91;&amp;#39;GMI&amp;#39;&amp;#93;</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.Functions.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledSelect.java</file>
    </fixedFiles>
  </bug>
  <bug id="7659" opendate="2020-1-7 00:00:00" fixdate="2020-2-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Code clean up, remove unused parameter in wan test</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.serial.SerialWANStatsDUnitTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.serial.SerialWANPropagationsFeatureDUnitTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.serial.SerialWANPropagationDUnitTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderQueueOverflowDUnitTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderOperationsDUnitTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderAlertThresholdDUnitTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.concurrent.ConcurrentWANPropagation.2.DUnitTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.concurrent.ConcurrentWANPropagation.1.DUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7660" opendate="2020-1-7 00:00:00" fixdate="2020-2-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modernization of cq code</summary>
      <description>This is a task to modernize some for loops and generics in the cq package</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.CqServiceVsdStats.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.CqListenerImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.command.StopCQ.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.command.ExecuteCQ61.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.command.ExecuteCQ.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.command.CloseCQ.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.ServerCQImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.ops.GetDurableCQsOp.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.ops.CreateCQOp.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.CqServiceImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.command.GetDurableCQs.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.ClientCQImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="7662" opendate="2020-1-9 00:00:00" fixdate="2020-1-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>metrics pipeline is intended for public pipelines</summary>
      <description>for any pipelines other than the public apache-develop-main or release pipelines, metrics aren't going to work, so don't insist on enabling them</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.deploy.meta.sh</file>
    </fixedFiles>
  </bug>
  <bug id="774" opendate="2016-1-9 00:00:00" fixdate="2016-2-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>WAN Cluster outgage due to DiskAccessException</summary>
      <description>This is the 52550 issue we simulated and reproduced in house. CLIENT vm_4_thr_9_bridge_1_2_w2-2013-lin-04_6672TASK[0] newWan.WANTest.HydraTask_doOpsERROR util.TestException: com.gemstone.gemfire.cache.CacheClosedException: For DiskStore: disk3: Fatal error from asynchronous flusher thread, caused by com.gemstone.gemfire.cache.DiskAccessException: For DiskStore: disk3: Fatal error from asynchronous flusher thread, caused by java.lang.AssertionError: Version stamp should have a member at this point for entry VersionedThinDiskLRURegionEntryHeapStringKey2@71d56a (key=Object_36851; rawValue=VMCachedDeserializable@454500130; version={v0; rv0; ds=0; time=1452091668017};member=null) at com.gemstone.gemfire.internal.cache.GemFireCacheImpl$Stopper.generateCancelledException(GemFireCacheImpl.java:1464) at com.gemstone.gemfire.CancelCriterion.checkCancelInProgress(CancelCriterion.java:91) at com.gemstone.gemfire.internal.cache.LocalRegion.checkRegionDestroyed(LocalRegion.java:8118) at com.gemstone.gemfire.internal.cache.LocalRegion.checkReadiness(LocalRegion.java:2994) at com.gemstone.gemfire.internal.cache.PartitionedRegion$KeysSet$KeysSetIterator.next(PartitionedRegion.java:6544) at com.gemstone.gemfire.internal.cache.PartitionedRegion$KeysSet.toArray(PartitionedRegion.java:6638) at com.gemstone.gemfire.internal.cache.PartitionedRegion$KeysSet.toArray(PartitionedRegion.java:6631) at java.util.Collections$UnmodifiableCollection.toArray(Collections.java:1033) at java.util.ArrayList.addAll(ArrayList.java:577) at newWan.WANOperationsClient.getExistingKeys(WANOperationsClient.java:792) at newWan.WANOperationsClient.putAll(WANOperationsClient.java:463) at newWan.WANOperationsClient.doOps(WANOperationsClient.java:1419) at newWan.WANTest.doOps(WANTest.java:1650) at newWan.WANTest.HydraTask_doOps(WANTest.java:1639) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at hydra.MethExecutor.execute(MethExecutor.java:198) at hydra.MethExecutor.execute(MethExecutor.java:162) at hydra.TestTask.execute(TestTask.java:195) at hydra.RemoteTestModule$1.run(RemoteTestModule.java:216)Caused by: com.gemstone.gemfire.cache.DiskAccessException: For DiskStore: disk3: Fatal error from asynchronous flusher thread, caused by java.lang.AssertionError: Version stamp should have a member at this point for entry VersionedThinDiskLRURegionEntryHeapStringKey2@71d56a (key=Object_36851; rawValue=VMCachedDeserializable@454500130; version={v0; rv0; ds=0; time=1452091668017};member=null) at com.gemstone.gemfire.internal.cache.DiskStoreImpl$FlusherThread.run(DiskStoreImpl.java:1812) at java.lang.Thread.run(Thread.java:745)Caused by: java.lang.AssertionError: Version stamp should have a member at this point for entry VersionedThinDiskLRURegionEntryHeapStringKey2@71d56a (key=Object_36851; rawValue=VMCachedDeserializable@454500130; version={v0; rv0; ds=0; time=1452091668017};member=null) at com.gemstone.gemfire.internal.cache.Oplog.create(Oplog.java:3553) at com.gemstone.gemfire.internal.cache.PersistentOplogSet.create(PersistentOplogSet.java:189) at com.gemstone.gemfire.internal.cache.DiskStoreImpl.put(DiskStoreImpl.java:751) at com.gemstone.gemfire.internal.cache.DiskRegion.put(DiskRegion.java:381) at com.gemstone.gemfire.internal.cache.DiskEntry$Helper.writeBytesToDisk(DiskEntry.java:874) at com.gemstone.gemfire.internal.cache.DiskEntry$Helper.writeToDisk(DiskEntry.java:867) at com.gemstone.gemfire.internal.cache.DiskEntry$Helper.writeToDisk(DiskEntry.java:857) at com.gemstone.gemfire.internal.cache.DiskEntry$Helper.doAsyncFlush(DiskEntry.java:1742) at com.gemstone.gemfire.internal.cache.DiskStoreImpl$FlusherThread.run(DiskStoreImpl.java:1768) ... 1 more [CIRCULAR REFERENCE:com.gemstone.gemfire.cache.DiskAccessException: For DiskStore: disk3: Fatal error from asynchronous flusher thread, caused by java.lang.AssertionError: Version stamp should have a member at this point for entry VersionedThinDiskLRURegionEntryHeapStringKey2@71d56a (key=Object_36851; rawValue=VMCachedDeserializable@454500130; version={v0; rv0; ds=0; time=1452091668017};member=null)]To reproduce it, run following bt test:rollingupgrade/newWan/parallel/garminHCT.confbridgeHostsPerSite=2bridgeThreadsPerVM=2bridgeVMsPerHost=4clientMem=2gedgeHostsPerSite=2edgeThreadsPerVM=5edgeVMsPerHost=5locatorHostsPerSite=2locatorThreadsPerVM=1locatorVMsPerHost=1resultWaitSec=1200serverMem=12gwanSites=2with local.conf:newWan.WANOperationsClientPrms-randModValueForDebug = true;hydra.HostPrms-hostNames = fcn "newWan.WanTestConfigFcns.pool(\"w2-2013-lin-03 w2-2013-lin-04 w2-2013-lin-14 w2-2013-lin-15\", 1, 4)" ncf fcn "newWan.WanTestConfigFcns.pool(\"w2-2013-lin-03 w2-2013-lin-04 w2-2013-lin-14 w2-2013-lin-15\", 1, 4)" ncf fcn "newWan.WanTestConfigFcns.pool(\"w2-2013-lin-03 w2-2013-lin-04 w2-2013-lin-14 w2-2013-lin-15\", 1, 4)" ncf ;hydra.HostPrms-resourceDirBaseMapFileName = /home/xzhou/bin/hostdirs.prop;hydra.RegionPrms-cacheListeners = none;</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.EntryEventImpl.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedRegion.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.BucketRegion.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.BucketAdvisor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.fake.Fakes.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.BucketRegionJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.BucketRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="7741" opendate="2020-1-23 00:00:00" fixdate="2020-1-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Clean up failed Packer instances in the GCP project</summary>
      <description>If the Packer jobs fail in Concourse, they are not always cleaned up from the project, and are left running until somebody notices.Adding labels to the instances like for the 'heavy-lifter' instances will allow the Geode reaper job to find and delete these instances in a timely manner.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-windows-geode-builder.windows-packer.json</file>
      <file type="M">ci.images.google-windows-geode-builder.build.image.sh</file>
      <file type="M">ci.images.google-geode-builder.packer.json</file>
      <file type="M">ci.images.google-geode-builder.build.image.sh</file>
    </fixedFiles>
  </bug>
  <bug id="7742" opendate="2020-1-23 00:00:00" fixdate="2020-2-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>move existing membership unit/integration tests to geode-membership</summary>
      <description>Where possible move unit tests from geode-core to geode-membership</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.DataSerializableFixedID.java</file>
      <file type="M">geode-membership.src.main.java.org.apache.geode.distributed.internal.membership.gms.Services.java</file>
      <file type="M">geode-membership.src.main.java.org.apache.geode.distributed.internal.membership.gms.MemberDataBuilderImpl.java</file>
      <file type="M">geode-membership.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.MembershipLocatorImpl.java</file>
      <file type="M">geode-membership.src.main.java.org.apache.geode.distributed.internal.membership.gms.GMSMemberData.java</file>
      <file type="M">geode-membership.src.main.java.org.apache.geode.distributed.internal.membership.api.MemberIdentifierImpl.java</file>
      <file type="M">geode-membership.build.gradle</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.MembershipDependenciesJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.messenger.StatRecorderJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.MemberDataBuilderImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.GMSUtilTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.GMSMemberDataJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.GMSMembershipViewJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.api.MembershipAPIArchUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.InternalDistributedMember.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSQuorumCheckerJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncryptJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.GMSMembershipJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.api.MemberIdentifierFactoryImplTest.java</file>
      <file type="M">geode-membership.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.java</file>
      <file type="M">geode-membership.src.main.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
      <file type="M">geode-membership.src.main.java.org.apache.geode.distributed.internal.membership.gms.MembershipStatisticsNoOp.java</file>
      <file type="M">geode-membership.src.main.java.org.apache.geode.distributed.internal.membership.gms.MembershipBuilderImpl.java</file>
      <file type="M">geode-membership.src.main.java.org.apache.geode.distributed.internal.membership.api.MembershipConfig.java</file>
      <file type="M">geode-membership.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.util.MembershipAddressUtil.java</file>
      <file type="M">geode-membership.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSQuorumCheckerJUnitTest.java</file>
      <file type="M">geode-membership.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncryptJUnitTest.java</file>
      <file type="M">geode-membership.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.GMSMembershipJUnitTest.java</file>
      <file type="M">geode-membership.src.integrationTest.java.org.apache.geode.distributed.internal.membership.GMSMembershipViewJUnitTest.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeaveTestHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.adapter.ServiceConfig.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessengerJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.InterceptUDP.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocatorRecoveryIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.fd.GMSHealthMonitorJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7745" opendate="2020-1-28 00:00:00" fixdate="2020-2-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix the missing Pull Request builds in geode.</summary>
      <description>There are some missing builds on the apache geode PR pipeline. The reason has been tracked down to the way the GitHub pull request resource tracks the trigger of a commit. This issue has been fixed in https://github.com/digitalocean/github-pr-resource/pull/8. Change the GitHub pull request resource from  telia-oss/github-pr-resource to digitalocean/github-pr-resource.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
      <file type="M">ci.pipelines.images.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="7747" opendate="2020-1-29 00:00:00" fixdate="2020-1-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis API - Extract KeyRegistrar Class</summary>
      <description>The KeyRegistrar encapsulates the Redis Metadata Region, which stores the type of each key.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.TypeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.TTLExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.StringExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.MSetNXExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.DecrExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.BitOpExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.KeysExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hll.HllExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.FlushAllExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExistsExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.DelExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.DBSizeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.AbstractExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.GeodeRedisServer.java</file>
    </fixedFiles>
  </bug>
  <bug id="7748" opendate="2020-1-29 00:00:00" fixdate="2020-2-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Wrong statistic name added to Geode Statistics List</summary>
      <description>In https://geode.apache.org/docs/guide/111/reference/statistics_list.html state:failedConnectsDescTotal number of times a connect (sender creation) to some other member has failed.finalString distributeMessageTimeDesc = The amount of time it takes to prepare a message and send it on the network. This includes sentMessagesTime.finalCheckRequestsReceivedThe number of final check requests that this member has received. Wrong name added to the primary statistics. </description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.statistics.list.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="7788" opendate="2020-2-10 00:00:00" fixdate="2020-2-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Alpine tools docker image creation fails due to internal winrm-cli changes.</summary>
      <description>The winrm-cli (https://github.com/masterzen/winrm-cli) folks have changed the internal go dependencies which results in the failure of building the cli.This is an important dependency for building the windows image, so we need a fix for that.</description>
      <version>None</version>
      <fixedVersion>1.12.0,1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.alpine-tools.Dockerfile</file>
    </fixedFiles>
  </bug>
  <bug id="7879" opendate="2020-3-13 00:00:00" fixdate="2020-3-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove locking from HGetAll</summary>
      <description>Currently the HGetAll method uses locking, but it really isn't necessary since there is no value mutation happening.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisLockService.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HGetAllExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.HashesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7886" opendate="2020-3-17 00:00:00" fixdate="2020-3-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update strings tests to cover sad as well as happy paths</summary>
      <description>This patch updates the tests for the Redis String commands to cover error conditions and edge cases, as well as concurrent executions. It updates the command executor unit tests to cover low-level API errors (incorrect arguments, etc.).</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.DelExecutorTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.KeyRegistrar.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.StrlenExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.StringExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetNXExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.MSetNXExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.MSetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.IncrExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.GetSetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.GetRangeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.DecrExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Coder.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.StringsIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="789" opendate="2016-1-19 00:00:00" fixdate="2016-12-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create and clear define index shouldn&amp;#39;t be available on disconnected GFSH</summary>
      <description>The following gfsh commands for indexes shouldn't be available on a disconnected gfsh session. gfsh&gt;create defined indexes --Can't execute a remote command without connection. Use 'connect' first to connect.gfsh&gt;clear defined indexesCan't execute a remote command without connection. Use 'connect' first to connect.gfsh&gt;</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.management.internal.cli.commands.golden-help-offline.properties</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.IndexCommands.java</file>
    </fixedFiles>
  </bug>
  <bug id="7893" opendate="2020-3-19 00:00:00" fixdate="2020-3-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>geode-lucene POM dependencies are not correct</summary>
      <description>The LuceneIndexFactoryBean configures Lucene Analyser, which is not 'api' dependency in geode-lucene</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-lucene.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="7895" opendate="2020-3-19 00:00:00" fixdate="2020-3-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create integration tests for Expire Command in Redis Adapter</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExpireExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExpirationExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.StringsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.SortedSetsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.ListsIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7938" opendate="2020-4-1 00:00:00" fixdate="2020-4-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>dev rest api should allow &amp;#39;.&amp;#39; and &amp;#39;/&amp;#39; characters in region keys</summary>
      <description>The dev rest api has multiple endpoints that can take region entry keys either as path variables or as query parameters. If the key contains a "/" then it can cause problems with parsing the URL. The '.' character also causes problems.The operations and endpoints that do not allow '.' and '/' in region keys are:GET, PUT, and DELETE on /v1/{region}/{keys}POST on /v1/{region}?key={key}A solution should be found that does not break backwards compatibility but that also allows these characters to be in the specified region key(s).</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.support.UpdateOp.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.PdxBasedCrudController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.CommonCrudController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.AbstractBaseController.java</file>
      <file type="M">geode-web-api.src.integrationTest.java.org.apache.geode.rest.internal.web.controllers.RestAccessControllerTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7939" opendate="2020-4-1 00:00:00" fixdate="2020-4-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>membership heartbeat messages aren&amp;#39;t designated high-priority</summary>
      <description>I noticed that membership heartbeat request/response messages aren't designated as "high priority". There's no reason that these messages need to be dispatched in order.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-membership.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.HeartbeatRequestMessage.java</file>
      <file type="M">geode-membership.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.HeartbeatMessage.java</file>
    </fixedFiles>
  </bug>
  <bug id="794" opendate="2016-1-19 00:00:00" fixdate="2016-2-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unable to match iterators when update in progress</summary>
      <description>When an update in progress occurs, run time iterators will possibly not be found. This is due to getReceiverNameFromPath not accounting for all the CompiledValue types that override getReceiver()The fix would involve adding CompiledOperation to the instance of checks.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.query.internal.index.CompactRangeIndexJUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.index.CompactRangeIndex.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.index.AbstractIndex.java</file>
    </fixedFiles>
  </bug>
  <bug id="7940" opendate="2020-4-1 00:00:00" fixdate="2020-4-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>A parallel GatewaySender stops sending events if another GatewaySender that was attached to the same region is destroyed</summary>
      <description>The attached test reproduces this issue. It has a readme that describes how to run it.It starts 3 distributed systems named ln, ny and tk.ny and tk each have a gateway receiver and a region defined.Use gfsh in ln to:1. Create sender to ny 2. Create region with sender to ny 3. Start doing puts from a client (verify updates are happening in ny) 4. Create sender to tk 5. Alter region add sender to tk (verify updates are happening in tk) 6. Stop sender to ny 7. Alter region remove sender to ny 8. Destroy sender to nyUpdates should stop to ny but not tk, but updates to both stop.The ln log contains no exceptions. The stats show events being received and queued by the sender to tk. The eventQueueSize is 0, though.If step 8 is not done, updates continue flowing to tk.If the ln server is restarted, updates start flowing to tk again.</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderOperationsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BucketAdvisorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug id="7941" opendate="2020-4-1 00:00:00" fixdate="2020-4-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>upgrade Shiro to 1.5.2</summary>
      <description>our current Shiro version (1.4.1) is below the recommended version.  Now that Geode 1.12.0 has been released, now is a good time to bump whatever we can.</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="7942" opendate="2020-4-1 00:00:00" fixdate="2020-4-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>document the enable-management-rest-service geode property</summary>
      <description>The enable-management-rest-service geode property needs to be documented. This property was added in geode 1.10.</description>
      <version>1.10.0,1.11.0,1.12.0</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="7945" opendate="2020-4-2 00:00:00" fixdate="2020-4-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cluster restart recovery from disk blocked by waiting replies of CreateRegionMessage</summary>
      <description>A cluster restart recovering from disk has unexpected delays in some of the members. The logs show that those delayed members are waiting for replies of CreateRegionMessage, before loading the krf files. And the reason for waiting the replies of CreateRegionMessage is likely because other members are holding some lock while busy loading the krf files. Therefore the replies are delayed. Once those delayed members get the replies of CreateRegionMessage, it starts loading the krf files. If the delayed members contain the latest data, this could block other members waiting for the latest data.Because the cluster members are blocking each other at different stages during the cluster restart recovery process, the whole process is unexpectedly long when the disk store contains large amount of data.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PersistentBucketRecoverer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="7946" opendate="2020-4-3 00:00:00" fixdate="2020-4-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix redis publish/subscribe leaking netty buffers</summary>
      <description>We are not releasing all the buffers we allocate which can result in buffers leaking. This can produce log messages like:[error 2020/04/02 14:32:08.154 GMT &lt;GeodeRedisServer-WorkerThread-2&gt; tid=0xaf] LEAK: ByteBuf.release() was not called before it's garbage-collected. See https://netty.io/wiki/reference-counted-objects.html for more information.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.pubsub.SubscribeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.pubsub.PsubscribeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.AbstractSubscription.java</file>
    </fixedFiles>
  </bug>
  <bug id="7947" opendate="2020-4-3 00:00:00" fixdate="2020-4-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement tests for EXPIRE-related functionality</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.ExpireExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExpireExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExpireAtExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.PexpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ExpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.StringsDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.SortedSetsDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.SetsDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.RenameDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.PubSubDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.ListsDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.HashesDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.GeoDockerAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8023" opendate="2020-4-25 00:00:00" fixdate="2020-4-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add old version to support branches too</summary>
      <description>Need to add the old version on the support branch too now, not just develop (e.g. as soon as 1.12.0 was released, the support branch became 1.12.1 so 1.12.0 is an "old" version for both develop and support/1.12)need to update release scripts before next release so this will happen automatically</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.promote.rc.sh</file>
    </fixedFiles>
  </bug>
  <bug id="8027" opendate="2020-4-26 00:00:00" fixdate="2020-4-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Provide raw swagger JSON for managment API</summary>
      <description>For our management API we have a wiki page with Swagger HTML documentation for each version of our API.They can be found here:https://cwiki.apache.org/confluence/display/GEODE/1.10.0+Management+REST+API+-+v1https://cwiki.apache.org/confluence/display/GEODE/1.11.0+Management+REST+API+-+v1https://cwiki.apache.org/confluence/display/GEODE/1.12.0+Management+REST+API+-+v1https://cwiki.apache.org/confluence/display/GEODE/1.13.0+Management+REST+API+-+v1For consumers of the API the pages should provide an attachment with raw Swagger JSON that can be consumed by code generators.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-management.src.test.script.update-management-wiki.sh</file>
    </fixedFiles>
  </bug>
  <bug id="8055" opendate="2020-4-30 00:00:00" fixdate="2020-5-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>can not create index on sub regions</summary>
      <description>When trying to use "create index" command in gfsh to create index on sub regions, we get the following message:"Sub-regions are unsupported"Pre-1.6, we were able to do that.</description>
      <version>1.7.0,1.8.0,1.9.2,1.10.0,1.11.0,1.12.0</version>
      <fixedVersion>1.12.1,1.13.0,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.management.internal.configuration.ClusterConfigurationIndexWithFromClauseDUnitTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommand.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.CacheConfigTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheConfig.java</file>
    </fixedFiles>
  </bug>
  <bug id="8076" opendate="2020-5-5 00:00:00" fixdate="2020-5-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>simplify redis concurrency code</summary>
      <description>Currently when doing a redis set operation, for example sadd, the code has to be careful to deal with other threads concurrently changing the same set.It does this in a number of ways but this could be simplified by having a higher level layer of the code ensure that for a given redis "key" operations will done in sequential order.This can be done safely in a distributed cluster because we now route all operations for a given key to the server that is storing the primary copy of data for that key.I spike was done and we found that this form of locking did not hurt performance. Since it allows simpler code that is less likely to have subtle concurrency issues we plan on merging the work done in the spike into the product.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.RegionProviderJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SRemExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SRandMemberExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SPopExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SMoveExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SMembersExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SIsMemberExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SetOpExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SCardExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SAddExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.RedisSet.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.GeodeRedisSetWithFunctions.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.DeltaSet.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.CommandFunction.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
    </fixedFiles>
  </bug>
  <bug id="8083" opendate="2020-5-6 00:00:00" fixdate="2020-5-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add API check job to CI</summary>
      <description>In order to combat API breaking changes, we need a CI job that compares the current API against the last release.</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">buildSrc.build.gradle</file>
      <file type="M">gradle.spotless.gradle</file>
      <file type="M">geode-web.build.gradle</file>
      <file type="M">geode-web-management.build.gradle</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">ci.scripts.archive.results.sh</file>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="8084" opendate="2020-5-7 00:00:00" fixdate="2020-5-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor: Declare parameter requirements for redis commands</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.set.SetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.main.resources.org.apache.geode.redis.internal.sanctioned-geode-redis-serializables.txt</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SUnionStoreExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SUnionExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SRemExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SRandMemberExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SPopExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SMoveExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SMembersExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SIsMemberExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SInterStoreExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SInterExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SetOpExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SDiffStoreExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SDiffExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SCardExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SAddExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.RPushXExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.RPushExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.RPopExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.PushXExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.PushExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.PopExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.LTrimExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.LSetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.LRemExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.LRangeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.LPushXExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.LPushExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.LPopExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.LLenExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.list.LIndexExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Executor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Command.java</file>
    </fixedFiles>
  </bug>
  <bug id="8087" opendate="2020-5-7 00:00:00" fixdate="2020-5-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix Geode API compliance</summary>
      <description>API comparison is enabled in the CI pipeline, causing failures on PRs due to changes from develop since the last release (1.12.0).</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.japicmp.ParentIsExperimental.groovy</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">buildSrc.build.gradle</file>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="8088" opendate="2020-5-7 00:00:00" fixdate="2020-5-7 01:00:00" resolution="Duplicate">
    <buginformation>
      <summary>Refactor: Move packages in dunit test folder</summary>
      <description>Did some refactoring as a group.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.SremDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.SaddDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.PersistDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.HsetDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.HMsetDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.ExistsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8089" opendate="2020-5-7 00:00:00" fixdate="2020-5-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>change more redis set commands to use function and deltas</summary>
      <description>GEODE-8048 was a good start of a new implementation of redis sets but it only did 4 of the set commands.All the redis set commands should use functions and deltas in their implementation. </description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.sortedset.ZScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SRandMemberExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SPopExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SMoveExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SMembersExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SIsMemberExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SetOpExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SCardExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.RedisSetCommandsFunctionExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.RedisSetCommands.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.RedisSet.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.CommandFunction.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.AbstractScanExecutor.java</file>
    </fixedFiles>
  </bug>
  <bug id="8090" opendate="2020-5-7 00:00:00" fixdate="2020-5-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement function/delta for redis Hash operations used by Spring Session</summary>
      <description>Hash functions needed for Spring session: "HGETALL" "HMSET" "HSET" "DEL" (for hashes)A.C. hash operations above are making use of functions with delta propagation Hash operations not on the above list are minimally functional and passing tests (performance not important) hash operations are passing all existing tests including any Dunit tests</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.RegionProviderJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.RedisSetCommandsFunctionExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.RedisHash.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HValsExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HSetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HMSetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HMGetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HLenExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HKeysExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HIncrByFloatExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HIncrByExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HGetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HGetAllExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HExistsExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HDelExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HashExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.GeodeRedisHashSynchronized.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.CommandFunction.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.HashesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8093" opendate="2020-5-8 00:00:00" fixdate="2020-5-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>redis HSETNX should not allows for multiple field/value pairs</summary>
      <description>HSETNX should only support a single field/value pair. But it inherits its implementation from HSET which supports multiple field/value pairs.So in order to be compatible with native redis HSETNX should only support a single field/value pair.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.hash.HDelExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HValsExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HSetNXExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HSetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HMSetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HMGetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HLenExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HKeysExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HIncrByFloatExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HIncrByExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HGetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HGetAllExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HExistsExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HDelExecutor.java</file>
    </fixedFiles>
  </bug>
  <bug id="8094" opendate="2020-5-8 00:00:00" fixdate="2020-5-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create HA test to ensure Spring Boot sessions expire correctly</summary>
      <description>Write a high level test to ensure that sessions created by Spring Boot expire correctly.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Command.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.springRedisTestApplication.SessionController.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.springRedisTestApplication.RedisSpringTestApplication.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.springRedisTestApplication.config.WebMvcConfig.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.springRedisTestApplication.config.SessionListener.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.springRedisTestApplication.config.DUnitSocketAddressResolver.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.RedisSessionDistDUnitTest.java</file>
      <file type="M">geode-redis.build.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="8095" opendate="2020-5-8 00:00:00" fixdate="2020-6-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create restore redundancy and status redundancy REST API commands</summary>
      <description>Add two REST API commands to allow redundancy to be restored and to check the current redundancy status.Similar to: https://issues.apache.org/jira/browse/GEODE-7954More on restore redundancy can be found at https://cwiki.apache.org/confluence/display/GEODE/Redundancy+Gfsh+Commands</description>
      <version>None</version>
      <fixedVersion>1.13.0,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.RebalanceCommand.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.operation.RebalanceOperationPerformerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.operation.OperationManagerTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.operation.RebalanceOperationPerformer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.operation.OperationManager.java</file>
      <file type="M">geode-management.src.main.resources.org.apache.geode.internal.sanctioned-geode-management-serializables.txt</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.runtime.RestoreRedundancyResults.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.runtime.RegionRedundancyStatus.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.operation.RestoreRedundancyRequest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.operation.RestoreRedundancyResultsImpl.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.operation.RegionRedundancyStatusImpl.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.RedundancyCommand.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.control.SerializableRestoreRedundancyResultsImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.SerializableRestoreRedundancyResultsImpl.java</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.control.RestoreRedundancyOperationDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8099" opendate="2020-5-8 00:00:00" fixdate="2020-6-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make ClusterConfiguration Service thread safe</summary>
      <description>When multiple cluster configuration clients (multiple rest clients) connects and issue configuration commands, the cluster configuration should handle concurrent request and modify/save/execute the configuration definition in thread safe manner.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.gfsh.RedisCommand.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.GfshParserRule.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.remote.OnlineCommandProcessorTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.remote.MemberCommandServiceTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.remote.CommandExecutorTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.shell.GfshExecutionStrategy.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.remote.OnlineCommandProcessor.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.remote.MemberCommandService.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.remote.CommandExecutor.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.UpgradeOfflineDiskStoreCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.UndeployCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.StopGatewaySenderCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.StopGatewayReceiverCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.StatusGatewaySenderCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.StatusGatewayReceiverCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.StartGatewaySenderCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.StartGatewayReceiverCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.ResumeGatewaySenderCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.ResumeAsyncEventQueueDispatcherCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.PauseGatewaySenderCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.LoadBalanceGatewaySenderCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.ExportOfflineDiskStoreCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.DescribeQueryServiceCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.DescribeOfflineDiskStoreCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.DeployCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.CompactOfflineDiskStoreCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.AlterRuntimeConfigCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.AlterOfflineDiskStoreCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.cli.SingleGfshCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.cli.GfshCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.RegisterDriverCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListDriversCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DeregisterDriverCommand.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.LocatorClusterManagementServiceTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.BaseManagementService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceService.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.InternalLocatorClusterManagementServiceIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8100" opendate="2020-5-8 00:00:00" fixdate="2020-5-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log Cluster Configuration information to system log</summary>
      <description>All the changes made to the cluster configuration should be logger for auditing purpose. Should help in knowing when and who modified the configuration. Currently this information could be added in the Geode system log.</description>
      <version>None</version>
      <fixedVersion>1.13.0,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.configuring.running.cluster-management-service.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8218" opendate="2020-6-3 00:00:00" fixdate="2020-6-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update docs to reflect changes to default redis-bind-address behavior</summary>
      <description>Geode Redis API now listens on all local addresses when bind-address is not specified. The docs should be updated to reflect this change.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
    </fixedFiles>
  </bug>
  <bug id="8221" opendate="2020-6-3 00:00:00" fixdate="2020-6-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Session state not committed prior to servlet output flush with commit valve enabled</summary>
      <description>The Tomcat session state module does not commit session data to Geode prior to servlet output flushing to browser if commit valve is enabled. The commit valve delays the commit of session state until the of the request scope prior to closing and ending the current request with the browser. This can result in some data being sent to the browser asynchronously with the session state persistence. If the servlet or JSP invokes a flush on output stream, write or response either explicitly through the flush method or implicitly because of full buffers then the browser may receive data that instructs it to make another request. This subsequent request may receive the currently committed session state prior to the completion of the initial request. </description>
      <version>None</version>
      <fixedVersion>1.12.2,1.13.3,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat9.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat8.build.gradle</file>
      <file type="M">extensions.geode-modules-test.build.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.geode-assembly-test.build.gradle</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.Tomcat6DeltaSessionManager.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.DeltaSessionManager.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.CommitSessionValve.java</file>
      <file type="M">extensions.geode-modules.src.integrationTest.java.org.apache.geode.modules.session.catalina.CommitSessionValveIntegrationTest.java</file>
      <file type="M">extensions.geode-modules.src.integrationTest.java.org.apache.geode.modules.session.catalina.AbstractSessionValveIntegrationTest.java</file>
      <file type="M">extensions.geode-modules-tomcat9.src.main.java.org.apache.geode.modules.session.catalina.Tomcat9DeltaSessionManager.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.main.java.org.apache.geode.modules.session.catalina.Tomcat8DeltaSessionManager.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.main.java.org.apache.geode.modules.session.catalina.DeltaSession8.java</file>
      <file type="M">extensions.geode-modules-tomcat7.src.main.java.org.apache.geode.modules.session.catalina.Tomcat7DeltaSessionManager.java</file>
      <file type="M">extensions.geode-modules-tomcat7.build.gradle</file>
      <file type="M">extensions.geode-modules.src.test.java.org.apache.geode.modules.session.catalina.ClientServerSessionCacheTest.java</file>
      <file type="M">extensions.geode-modules.src.integrationTest.java.org.apache.geode.modules.session.Tomcat6SessionsJUnitTest.java</file>
      <file type="M">extensions.geode-modules-tomcat9.src.test.java.org.apache.geode.modules.session.catalina.Tomcat9DeltaSessionManagerJUnitTest.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.test.java.org.apache.geode.modules.session.catalina.Tomcat8DeltaSessionManagerJUnitTest.java</file>
      <file type="M">extensions.geode-modules-tomcat7.src.test.java.org.apache.geode.modules.session.catalina.Tomcat7DeltaSessionManagerJUnitTest.java</file>
      <file type="M">extensions.geode-modules-tomcat7.src.integrationTest.java.org.apache.geode.modules.session.Tomcat7SessionsJUnitTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.util.TouchReplicatedRegionEntriesFunctionJUnitTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.util.TouchPartitionedRegionEntriesFunctionJUnitTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.util.CreateRegionFunctionJUnitTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.TestSessionsBase.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.catalina.PeerToPeerSessionCacheJUnitTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.catalina.internal.DeltaSessionUpdateAttributeEventJUnitTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.catalina.internal.DeltaSessionStatisticsJUnitTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.catalina.internal.DeltaSessionDestroyAttributeEventJUnitTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.catalina.internal.DeltaSessionAttributeEventBatchJUnitTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.catalina.DeltaSessionManagerJUnitTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.catalina.DeltaSessionJUnitTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.catalina.DeltaSessionFacadeJUnitTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.catalina.ClientServerSessionCacheJUnitTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.catalina.callback.SessionExpirationCacheListenerJUnitTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.catalina.AbstractSessionCacheJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8222" opendate="2020-6-3 00:00:00" fixdate="2020-6-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ExpireIntegrationTest.should_passivelyExpireKeys failed in CI</summary>
      <description>org.apache.geode.redis.general.ExpireIntegrationTest &gt; should_passivelyExpireKeys FAILED org.awaitility.core.ConditionTimeoutException: Condition with org.apache.geode.redis.general.ExpireIntegrationTest was not fulfilled within 5 minutes. at org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:165) at org.awaitility.core.CallableCondition.await(CallableCondition.java:78) at org.awaitility.core.CallableCondition.await(CallableCondition.java:26) at org.awaitility.core.ConditionFactory.until(ConditionFactory.java:895) at org.awaitility.core.ConditionFactory.until(ConditionFactory.java:864) at org.apache.geode.redis.general.ExpireIntegrationTest.should_passivelyExpireKeys(ExpireIntegrationTest.java:380)https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/IntegrationTestOpenJDK8/builds/228#A=============== Test Results URI =================http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0105/test-results/integrationTest/1591216814/=========================================Test report artifacts from this job are available at:http://files.apachegeode-ci.info/builds/apache-develop-main/1.14.0-build.0105/test-artifacts/1591216814/integrationtestfiles-OpenJDK8-1.14.0-build.0105.tgz</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
    </fixedFiles>
  </bug>
  <bug id="8223" opendate="2020-6-4 00:00:00" fixdate="2020-6-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update documentation of expiration accuracy as well as supported, unsupported, and unimplemented commands in Redis API for Geode docs</summary>
      <description>Update documentation to match changes in Redis API for Geode.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.book.intro.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8224" opendate="2020-6-4 00:00:00" fixdate="2020-6-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>repackage internal redis classes</summary>
      <description>The internal redis class package organization could use some cleanup.Some classes are in sub-packages when they should be in a high level shared package.Other classes are in high level shared packages but are only used by classes in a single sub-package. Also some high level packages contain a mix of classes that could be sub-packaged around certain responsibilities.  </description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HIncrByFloatExecutor.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SubscriptionsJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.PubSubImplJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.UnknownExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StrlenExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringSetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringMSetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringMGetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringGetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.IncrExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.GetSetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.GetRangeExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.DelExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.set.SetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.PexpireExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.PExpireAtExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.PersistExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.ExpireExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.ExpireAtExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.ExistsExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.AbstractScanExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.ExecutionHandlerContextJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.CommandJUnitTest.java</file>
      <file type="M">geode-redis.src.main.resources.org.apache.geode.redis.internal.sanctioned-geode-redis-serializables.txt</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.TimestampDeltaInfo.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Subscriptions.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Subscription.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.serverinitializer.NamedThreadFactory.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RemsDeltaInfo.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisResponse.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisDataTypeMismatchException.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisDataType.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisData.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandParserException.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.PubSubImpl.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.PubSub.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.PublishResultCollector.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.PublishResult.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.PatternSubscription.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ParameterRequirements.UnspecifiedParameterRequirements.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ParameterRequirements.SpopParameterRequirements.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ParameterRequirements.ParameterRequirements.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ParameterRequirements.MultipleParameterRequirements.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ParameterRequirements.MinimumParameterRequirements.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ParameterRequirements.MaximumParameterRequirements.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ParameterRequirements.ExactParameterRequirements.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ParameterRequirements.EvenParameterRequirements.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GlobPattern.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisService.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Extendable.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.UnknownExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.TypeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.TTLExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.TimeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.StrlenExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.StringExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetRangeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetNXExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetEXExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetBitExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.RedisStringInRegion.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.RedisStringCommandsFunctionExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.RedisStringCommands.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.RedisString.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.MSetNXExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.MSetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.MGetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.IncrExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.IncrByFloatExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.IncrByExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.GetSetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.GetRangeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.GetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.GetBitExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.DecrExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.DecrByExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.BitPosExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.BitOpExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.BitCountExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.AppendExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.SingleResultRedisFunction.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ShutDownExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SynchronizedStripedExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SUnionExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.StripedExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SRemExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SRandMemberExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SPopExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SMoveExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SMembersExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SIsMemberExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SInterExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SingleResultCollector.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SetOpExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SDiffExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SCardExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SAddExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.RedisSetInRegion.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.RedisSetCommandsFunctionExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.RedisSetCommands.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.RedisSet.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.EmptyRedisSet.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.RenameFunction.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.RenameExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.RedisKeyInRegion.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.RedisKeyCommandsFunctionExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.RedisKeyCommands.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.RedisHashInRegion.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.QuitExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.pubsub.UnsubscribeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.pubsub.SubscribeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.pubsub.PunsubscribeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.pubsub.PublishExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.pubsub.PsubscribeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.PTTLExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.PingExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.PExpireExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.PExpireAtExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.PersistExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.KeysExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.RedisHashCommandsFunctionExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.RedisHashCommands.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.RedisHash.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HValsExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HSetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HMSetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HMGetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HLenExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HKeysExecutor.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.ExistsDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.ExpireAtNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.ExpireNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.PersistNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.PexpireNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.keys.RenameDUnitTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ExistsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ExpireAtIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ExpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.FlushAllIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.PersistIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.PexpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ShutdownIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.DummySubscription.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.SubscriptionsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.RenameIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.AbstractRedisData.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.AbstractSubscription.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.AddsDeltaInfo.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.AppendDeltaInfo.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ByteArrayWrapper.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ByteToCommandDecoder.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ChannelSubscription.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Client.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Coder.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.CoderException.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Command.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.DeltaInfo.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.DeltaType.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Executor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.AbstractExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.AbstractScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.AuthExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.CommandFunction.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.DBSizeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.DelExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.EchoExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.EmptyRedisHash.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExistsExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExpireAtExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExpireExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.FlushAllExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HashExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HDelExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HExistsExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HGetAllExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HGetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HIncrByExecutor.java</file>
    </fixedFiles>
  </bug>
  <bug id="8226" opendate="2020-6-4 00:00:00" fixdate="2020-6-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>redis publish should work even if some members of the cluster are not redis servers</summary>
      <description>Steps to reproduce Start a locator and server with the redis API's running {{gfsh start locatorgfsh start server --name=server1 --locators=localhost&amp;#91;10334&amp;#93; --server-port=0 --redis-port=6379 --redis-bind-address=127.0.0.1}} Open 2 terminals, and run Redis-CLI On one terminal run the SUBSCRIBE command On the other terminal PUBLISH to the channel that the first terminal SUBSCRIBED (in step 3).###This should work correctly. Add another server that does NOT have Redis started gfsh start server --name=server1 --locators=localhost&amp;#91;10334&amp;#93; --server-port=0 --redis-port=6379 --redis-bind-address=127.0.0.1 Repeat Step 4Notice that the SUBSCRIBER received multiple messages, and a server error was thrown from the PUBLISHER.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.pubsub.PubSubImpl.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.pubsub.PubSub.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.pubsub.PublishExecutor.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.PubSubDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8259" opendate="2020-6-16 00:00:00" fixdate="2020-6-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>when client singlehop getAll encountered SerializationException, it should retry</summary>
      <description>In GEOEDE-7090, DSFIDSerializerImpl.invokeFromData() will catch RunTimeException and throw. But convert Exception to be IOException. The idea is to avoid using SerializationException which is in another package. However, if my fromData() failed with IndexOutOfBoundary exception (which is an RTE), it will be thrown directly instead of treating it in handleException(), thus my serialization exception will never get handled. The fix is to merge the catch RunTimeException into catch Exception.</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.GetAllOp.java</file>
    </fixedFiles>
  </bug>
  <bug id="8288" opendate="2020-6-22 00:00:00" fixdate="2020-6-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Match Redis&amp;#39;s glob-style pattern</summary>
      <description>Redis has their own glob-style pattern (https://redis.io/commands/keys). Change our implementation to match that of Redis.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.key.KeysExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.GlobPattern.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.KeysIntegrationTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.KeysNativeRedisAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8289" opendate="2020-6-22 00:00:00" fixdate="2020-6-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gradle clean does not clean geode-old-versions</summary>
      <description>Expected behavior: `./gradlew clean` will remove the downloaded and extracted old versions from my tree.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-old-versions.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="8292" opendate="2020-6-24 00:00:00" fixdate="2020-8-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CQs do not send back the right CREATE event but a UPDATE event once entry updated</summary>
      <description>When CQs are installed at Geode server, they dynamically analyzes incoming updates/creates or deletion entries in the region.If we have CQ something like "select * from /region i where i=1" and put some values with i=0, and after that we change it to 1 and again to 0 several times we got on listener some CREATE  and some UPDATE when it fulfilling cq condition.The issue can be easily reproduced by geode-examples by modifying geode-examples/cq/src/main/java/org/apache/geode_examples/cq/Example.java to put  some entries with transactions and then update it. </description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.ServerCQResultsCacheReplicateRegionImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.ServerCQResultsCachePartitionRegionImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.ServerCQResultsCacheNoOpImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.ServerCQResultsCache.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.ServerCQImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.CqServiceImpl.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.CQDistributedTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.cq.ServerCQ.java</file>
    </fixedFiles>
  </bug>
  <bug id="8293" opendate="2020-6-24 00:00:00" fixdate="2020-11-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>activeCQCount has negative value</summary>
      <description>In case you have more than one server in the system and you close CQ there will be negative value of active cqs.The problem is when you started more than one server and execute cq on it. In that case we got incCqsActive on one server, but when it is closed we have decCqsActive on both servers.gfsh&gt;show metrics --categories=queryCluster-wide MetricsCategory | Metric | Value-------- | ---------------- | -----query | activeCQCount | 1 | queryRequestRate | 0.0After cq is closed or stopped:gfsh&gt;show metrics --categories=queryCluster-wide MetricsCategory | Metric | Value-------- | ---------------- | -----query | activeCQCount | -1 | queryRequestRate | 0.0</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.statistics.list.html.md.erb</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.ServerCQImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetClientPartitionAttributesCommand66.java</file>
    </fixedFiles>
  </bug>
  <bug id="83" opendate="2015-7-7 00:00:00" fixdate="2015-7-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support AUTH for Redis protocol adaptor</summary>
      <description>The Redis protocol supports basic authentication through the AUTH command:http://redis.io/topics/securityRather than storing the password in redis.conf, we should ask the users to store it in gfsecurity.conf file as a "redis-password" property.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.redis.GemFireRedisServer.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.LauncherLifecycleCommands.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.RedisConstants.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.RedisCommandType.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.ExecutionHandlerContext.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.Coder.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.DistributionConfig.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.DistributedSystem.java</file>
    </fixedFiles>
  </bug>
  <bug id="8301" opendate="2020-6-25 00:00:00" fixdate="2020-6-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add geode statistics for redis</summary>
      <description>It would be nice to have some geode statistics that track redis operations, clients, etc.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.resources.org.apache.geode.redis.internal.sanctioned-geode-redis-serializables.txt</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.PassiveExpirationManager.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.NettyRedisServer.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.key.RenameFunction.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.CommandFunction.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisStringInRegion.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisSetInRegion.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisKeyInRegion.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisHashInRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="8419" opendate="2020-8-10 00:00:00" fixdate="2020-8-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SSL/TLS protocol and cipher suite configuration is ignored</summary>
      <description>Configuring ssl-protocols or ssl-ciphers properties, or per-component ssl properties, have no effect. Configuring ssl-protocols may effect the SSLContext selected and limit some of the protocols allowed but does not restrict to just the set specified in the property. The ssl-ciphers property does not limit cipher selection at all.The result is that all ciphers allowed under the match SSLContext are allowed and negotiated. This can result in an unintended cipher being used in SSL/TLS communication.</description>
      <version>1.10.0,1.11.0,1.12.0,1.13.0,1.14.0</version>
      <fixedVersion>1.12.1,1.13.1,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.GeodeRedisServer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.SSLUtil.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.NettyRedisServer.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.SSLTest.java</file>
      <file type="M">geode-pulse.geode-pulse-test.src.main.java.org.apache.geode.tools.pulse.tests.rules.ServerRule.java</file>
      <file type="M">geode-protobuf.src.integrationTest.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.CacheOperationsJUnitTest.java</file>
      <file type="M">geode-protobuf.src.integrationTest.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.CacheConnectionIntegrationTest.java</file>
      <file type="M">geode-http-service.src.main.java.org.apache.geode.internal.cache.InternalHttpService.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.shell.JmxOperationInvoker.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.ConnectCommand.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.tcp.TCPConduitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SSLUtilTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SSLConfigurationFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SocketCreatorJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementAgent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.JmxManagerLocatorRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.JmxManagerAdvisee.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.functions.GetMemberInformationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ContextAwareSSLRMIClientSocketFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.handlers.ClusterManagementServiceInfoRequestHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.GeodeConnectionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.Connection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLConfigurationFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreatorFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SCClusterSocketCreator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.SSLConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RemoteTransportConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.DistributionLocatorId.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.LocatorLauncher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.AdminDistributedSystemImpl.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.SSLConfigJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.net.SSLSocketIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.net.SSLSocketHostNameVerificationIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.net.SocketCreatorFailHandshake.java</file>
    </fixedFiles>
  </bug>
  <bug id="8421" opendate="2020-8-11 00:00:00" fixdate="2020-10-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve clearing of existing GW sender queue</summary>
      <description>It is observed that clearing of GW sender queue, can take some time, due to mechanism which calls clear on all BucketRegions. This is improvement which proposes destroying of partition region, which is much faster.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderQueue.java</file>
    </fixedFiles>
  </bug>
  <bug id="8447" opendate="2020-8-21 00:00:00" fixdate="2020-8-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse should localize “java.util.Date” in the displayed query result</summary>
      <description>In previous versions of Geode, Pulse used to show Dates in localized string, now it's not.</description>
      <version>1.12.0</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.json.QueryResultFormatterTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.json.AbstractJSONFormatter.java</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.json.QueryResultFormatterTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.json.QueryResultFormatter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.DateFormatter.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.beans.DistributedSystemMBeanIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8469" opendate="2020-8-30 00:00:00" fixdate="2020-9-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enforce no-missing-variable-declarations</summary>
      <description>Given I compile the code without exempting no-missing-variable-declarationsThen it should compileNote - was marked as a todo</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.ExpectedTimeoutRuleTest.java</file>
      <file type="M">dev-tools.dependencies.bump.sh</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.runtime.DeploymentInfoTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.DeploymentTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.ClassNameTest.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="8532" opendate="2020-9-24 00:00:00" fixdate="2020-2-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Parse chunked replies in gnmsg tool</summary>
      <description>As a native client developer, I would like to be able to see all reply messages from server to client when debugging with gnmsg.  I can, in fact, see replies/responses when they come back in a "complete" message, but at present when a response is "chunked" gnmsg ignores it, so things like, for example, `getAll()` responses don't show up in the message dump.  This is probably a complex task, and may require logging more data for chunk responses in the C++ native client code, but it's important.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.weblogic.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tomcat.installing.the.module.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8547" opendate="2020-9-29 00:00:00" fixdate="2020-11-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Command "show missing-disk-stores" not working, when all servers are down</summary>
      <description>If cluster with 2 locators and 2 servers was ungracefully shutdown it can happen that locators that are able to start up are not having most recent data to bring up Cluster Configuration Service.If we excute command "show missing-disk-stores" it will not work, since all servers are down,so we are stuck in this situation.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.ShowMissingDiskStoreCommand.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ShowMissingDiskStoreCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8549" opendate="2020-9-29 00:00:00" fixdate="2020-10-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove use of junit EnvironmentVariables rule</summary>
      <description>The use of this rule causes build messages such as: &gt; Task :geode-redis:acceptanceTestWARNING: An illegal reflective access operation has occurredWARNING: Illegal reflective access by org.junit.contrib.java.lang.system.EnvironmentVariables (file:/home/geode/.gradle/caches/modules-2/files-2.1/com.github.stefanbirkner/system-rules/1.19.0/d541c9a1cff0dda32e2436c74562e2e4aa6c88cd/system-rules-1.19.0.jar) to field java.util.Collections$UnmodifiableMap.mWARNING: Please consider reporting this to the maintainers of org.junit.contrib.java.lang.system.EnvironmentVariablesWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operationsWARNING: All illegal access operations will be denied in a future releaseWe don't really need this unless we have a real concrete need to disable the Ryuk container.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.commonTest.java.org.apache.geode.NativeRedisTestRule.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.connection.AuthNativeRedisAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8563" opendate="2020-10-1 00:00:00" fixdate="2020-10-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bump Spring to 5.2.9</summary>
      <description>develop is already on the recommended version (5.2.9) but this should be backported to 1.13 and 1.12 as well</description>
      <version>1.12.0,1.13.0</version>
      <fixedVersion>1.12.1,1.13.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="8566" opendate="2020-10-1 00:00:00" fixdate="2020-10-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis native tests should not also stand up a Geode server</summary>
      <description>Our native acceptance tests currently extend from the integration tests and both classes have a @ClassRule that results in both a native (container) instance and a Geode instance starting up. Mostly not a problem except for PubSubNativeAcceptanceTest which was not testing against native redis.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.connection.PingIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.UnknownIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.StrLenIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.SetRangeIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.SetNXIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.SetIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.SetEXIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.SetBitIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.PSetEXIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.MSetNXIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.MSetIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.MGetIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.IncrIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.IncrByIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.IncrByFloatIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.GetSetIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.GetRangeIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.GetIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.GetBitIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.DecrIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.DecrByIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.BitPosIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.BitOpIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.BitCountIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AppendIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.SUnionIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.SRemIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.SPopIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.SMoveIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.SIsMemberIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.SInterIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.SetsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.SDiffIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.TimeIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.ShutdownIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.InfoIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.FlushAllIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.pubsub.SubscriptionsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.pubsub.PubSubIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.pubsub.LettucePubSubIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.TypeIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.TTLIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.RenameIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.PTTLIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.PexpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.PersistIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.KeysIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.ExpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.ExpireAtIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.ExistsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.DelIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.hash.HashesIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.GlobPatternIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.connection.QuitIntegrationTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.connection.PingNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.GlobPatternNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.hash.HashesNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.DelNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.ExistsNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.ExpireAtNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.ExpireNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.KeysNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.PersistNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.PexpireNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.PTTLNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.RenameNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.TTLNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.TypeNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.pubsub.LettucePubSubNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.pubsub.PubSubNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.pubsub.SubscriptionsNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.server.InfoNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SDiffNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SetsNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SInterNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SIsMemberNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SMoveNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SPopNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SRemNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SUnionNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.AppendNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.BitCountNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.BitOpNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.BitPosNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.DecrByNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.DecrNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.GetBitNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.GetNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.GetRangeNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.GetSetNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.IncrByFloatNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.IncrByNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.IncrNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.MGetNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.MSetNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.MSetNXNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.PSetEXNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.SetBitNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.SetExNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.SetNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.SetNXNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.SetRangeNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.StrLenNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.CommandPipeliningIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8585" opendate="2020-10-8 00:00:00" fixdate="2020-10-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis SCAN, HSCAN, and SSCAN do not detect illegal parameters</summary>
      <description>The parameter parsing for SCAN will not detect some illegal parameters. We found that if we left off the MATCH keyword it just ignored the match string we gave it. Native redis throws a syntax error. We also saw that COUNT could follow MATCH but MATCH could not follow COUNT. I think it also allows COUNT to be specified twice. HSCAN and SSCAN probably have similar issues.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.resources.org.apache.geode.redis.internal.sanctioned-geode-redis-serializables.txt</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ParameterRequirements.EvenParameterRequirements.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.Coder.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.RedisSetCommandsFunctionInvoker.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.RedisSetCommands.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.RedisResponse.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.key.ScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.key.AbstractScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.RedisHashCommandsFunctionInvoker.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.RedisHashCommands.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.CommandFunction.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisSetCommandsFunctionExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisSet.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisHashCommandsFunctionExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisHash.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.NullRedisSet.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.ScanIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractScanIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8586" opendate="2020-10-8 00:00:00" fixdate="2020-10-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis SPOP with count on empty set returns NIL instead of empty array</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SPopExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.AbstractSPopIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8587" opendate="2020-10-8 00:00:00" fixdate="2020-10-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis glob pattern does not match carriage return, line feed, and tab</summary>
      <description>Glob pattern should match carriage return, line feed, and tab</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.GlobPattern.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractKeysIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8600" opendate="2020-10-11 00:00:00" fixdate="2020-10-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Faulty statistics for parallel GW senders</summary>
      <description>When using getEventQueueSize method of GatewaySenderStats class, we receive negative value. This occurres for parallel GW sender, when GW sender is stoped with events in queue. After  GW sender is re-started GW, and events are unqueued, getEventQueueSize shows negative value.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.parallel.ParallelWANStatsDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderQueue.java</file>
    </fixedFiles>
  </bug>
  <bug id="8608" opendate="2020-10-14 00:00:00" fixdate="2020-10-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>StateFlush could hang when the target member is shutdown</summary>
      <description>This was introduced by GEODE-8385.When the StateFlushReplyProcessor is wait for a reply of the target member, if that member shuts down, the StateFlushReplyProcessor could wait forever for that member to reply even though the member no longer in the view.</description>
      <version>1.12.0,1.13.0,1.14.0</version>
      <fixedVersion>1.12.1,1.13.1,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.StateFlushOperation.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.internal.ClusterDistributionManagerDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8610" opendate="2020-10-14 00:00:00" fixdate="2020-10-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add parameter checking to unsupported Redis commands</summary>
      <description>Create tests/add parameter check</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.BitCountExecutor.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.UnknownExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StrlenExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringSetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringMSetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringMGetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringGetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.IncrExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.GetSetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.GetRangeExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.set.SetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.key.TTLExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.key.PTTLExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.key.PexpireExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.key.PExpireAtExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.key.PersistExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.key.KeysExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.key.ExpireExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.key.ExpireAtExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.key.ExistsExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.key.DelExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.key.AbstractScanExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ParameterRequirements.SpopParameterRequirements.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ParameterRequirements.ParameterRequirements.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ParameterRequirements.MaximumParameterRequirements.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.Command.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.UnknownExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.StrlenExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetRangeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetNXExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetEXExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetBitExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.PSetEXExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.MSetNXExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.MSetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.MGetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.IncrExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.IncrByFloatExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.IncrByExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.GetSetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.GetRangeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.GetBitExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.DecrExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.DecrByExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.BitPosExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.BitOpExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractDelIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractExistsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractExpireAtIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractExpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractKeysIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractPersistIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractPexpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractPTTLIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractTTLIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.AbstractFlushAllIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.AbstractTimeIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.FlushAllIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.ShutdownIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.AbstractSDiffIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.AbstractSetsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.AbstractSInterIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.AbstractSIsMemberIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.AbstractSMoveIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.AbstractSPopIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.AbstractSRemIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.AbstractSUnionIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractBitCountIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractBitOpIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractBitPosIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractDecrByIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractDecrIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractGetBitIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractGetIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractGetRangeIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractGetSetIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractIncrByFloatIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractIncrByIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractIncrIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractMGetIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractMSetIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractMSetNXIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractPSetEXIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractSetBitIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractSetEXIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractSetIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractSetNXIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractSetRangeIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractStrLenIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.UnknownIntegrationTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.connection.EchoExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.Extendable.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.key.ExpireExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.key.PersistExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.key.PTTLExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.server.FlushAllExecutor.java</file>
    </fixedFiles>
  </bug>
  <bug id="8665" opendate="2020-10-27 00:00:00" fixdate="2020-12-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>validate offline-disk-store command is missing information</summary>
      <description>According the document https://geode.apache.org/docs/guide/13/managing/disk_storage/validating_disk_store.html, `validate offline-disk-store` command should tell the number of records that would be removed if you compacted the store.For example, according to the document https://geode.apache.org/docs/guide/13/managing/disk_storage/compacting_disk_stores.html:```gfsh&gt;validate offline-disk-store --name=ds1 --disk-dirs=backupDirectory/root: entryCount=6/partitioned_region entryCount=1 bucketCount=10Disk store contains 12 compactable records.Total number of region entries in this disk store is: 7```However, it does not show the number of records that would be removed if you compacted the store. Here is how to reproduce:1. gfsh&gt;create region --name=testRegion --type=PARTITION_PERSISTENT2. gfsh&gt;put --key=1 --value=a --region=testRegion3. gfsh&gt;put --key=1 --value=b --region=testRegion4. gfsh&gt;put --key=1 --value=c --region=testRegion5. gfsh&gt;shutdown6. gfsh&gt;validate offline-disk-store --name=DEFAULT --disk-dirs=/Users/jchen/workspace/geode/geode-assembly/build/install/apache-geode/server1expectedCrfs=&amp;#91;1&amp;#93;expectedDrfs=&amp;#91;1&amp;#93;dataSerializerIds=[]instantiatorIds= []/testRegion entryCount=1 bucketCount=1Total number of region entries in this disk store is: 1It should have shown something like: Disk store contains 2 compactable records.`compact offline-disk-store` command proves that there are 2 compactable records:gfsh&gt;compact offline-disk-store --name=DEFAULT --disk-dirs=/Users/jchen/workspace/geode/geode-assembly/build/install/apache-geode/server1Offline compaction removed 2 records.Cluster configuration service is not running. Configuration change is not persisted.`validate offline-disk-store` command could also show the wrong number of entries.7. gfsh&gt;put --key=2 --value=b --region=testRegion8. gfsh&gt;remove --region=/testRegion --key=19. gfsh&gt;validate offline-disk-store --name=DEFAULT --disk-dirs=/Users/jchen/workspace/geode/geode-assembly/build/install/apache-geode/server1expectedCrfs=&amp;#91;1&amp;#93;expectedDrfs=&amp;#91;1&amp;#93;dataSerializerIds=[]instantiatorIds= []/testRegion entryCount=2 bucketCount=2Total number of region entries in this disk store is: 2The correct number of entries should be 1, not 2.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Oplog.java</file>
    </fixedFiles>
  </bug>
  <bug id="8668" opendate="2020-10-28 00:00:00" fixdate="2020-11-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement Redis SELECT command</summary>
      <description>We are implementing SELECT because some Redis analysis tools (like Redis Insight) require the SELECT command in order to function properly. SELECT returns ERR Only DB 0 supported if anything other than 0 is passed in as a DB index argument.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="867" opendate="2016-1-27 00:00:00" fixdate="2016-2-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ConcurrentSerialGatewaySenderOperationsDUnitTest.testStartPauseResumeSerialGatewaySender is hanging</summary>
      <description>This test is hanging on the wan_cq_donation branch, due to the changes in a7249514eb2f09e5ca4920e7dc7aedfce4c2fe12. In that revision, I changed pauseSender to wait for the sender to pause. But it looks like for whatever reason, the sender is never getting paused in this scenarioHere's where it's stuck"main" #1 prio=5 os_prio=0 tid=0x00007ff87c010000 nid=0x5a74 runnable [0x00007ff884b3c000] java.lang.Thread.State: RUNNABLE at java.net.SocketInputStream.socketRead0(Native Method) at java.net.SocketInputStream.socketRead(SocketInputStream.java:116) at java.net.SocketInputStream.read(SocketInputStream.java:170) at java.net.SocketInputStream.read(SocketInputStream.java:141) at java.io.BufferedInputStream.fill(BufferedInputStream.java:246) at java.io.BufferedInputStream.read(BufferedInputStream.java:265) - locked &lt;0x000000078f7deb88&gt; (a java.io.BufferedInputStream) at java.io.DataInputStream.readByte(DataInputStream.java:265) at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:215) at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:162) at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) at com.sun.proxy.$Proxy25.executeMethodOnClass(Unknown Source) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:141) at com.gemstone.gemfire.internal.cache.wan.concurrent.ConcurrentSerialGatewaySenderOperationsDUnitTest.testStartPauseResumeSerialGatewaySender(ConcurrentSerialGatewaySenderOperationsDUnitTest.java:135) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at junit.framework.TestCase.runTest(TestCase.java:176) at junit.framework.TestCase.runBare(TestCase.java:141) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:129) at junit.framework.TestSuite.runTest(TestSuite.java:252) at junit.framework.TestSuite.run(TestSuite.java:247) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-wan.src.test.java.com.gemstone.gemfire.internal.cache.wan.serial.SerialWANStatsDUnitTest.java</file>
      <file type="M">gemfire-wan.src.test.java.com.gemstone.gemfire.internal.cache.wan.parallel.ParallelWANStatsDUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">gemfire-wan.src.test.java.com.gemstone.gemfire.internal.cache.wan.WANTestBase.java</file>
      <file type="M">gemfire-wan.src.test.java.com.gemstone.gemfire.internal.cache.wan.parallel.ParallelWANConflationDUnitTest.java</file>
      <file type="M">gemfire-wan.src.test.java.com.gemstone.gemfire.internal.cache.wan.parallel.ParallelGatewaySenderOperationsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8681" opendate="2020-11-2 00:00:00" fixdate="2020-11-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>peer-to-peer message loss due to sending connection closing with TLS enabled</summary>
      <description>We have observed message loss when TLS is enabled and a distributed lock is released right after sending a message that doesn't require acknowledgement if the sending socket is immediately closed. The closing of sockets immediately after sending a message is frequently seen in function execution threads or server-side application threads that use this pattern: try { DistributedSystem.setThreadsSocketPolicy(false); acquireDistributedLock(lockName); (perform one or more cache operations) } finally { distLockService.unlock(lockName); DistributedSystem.releaseThreadsSockets(); // closes the socket }The fault seems to be in NioSSLEngine.unwrap(), which throws an SSLException() if it finds the SSLEngine is closed even though there is valid data in its decrypt buffer. It shouldn't throw an exception in that case.</description>
      <version>1.10.0,1.11.0,1.12.0,1.13.0</version>
      <fixedVersion>1.12.1,1.13.1,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.NioSslEngineTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.NioSslEngine.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.ClusterCommunicationsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8682" opendate="2020-11-3 00:00:00" fixdate="2020-11-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>update jetty to recommended version</summary>
      <description>update jetty to 9.4.33.v20201020</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.session.tests.GenericAppServerInstall.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="8697" opendate="2020-11-11 00:00:00" fixdate="2020-11-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Propagate ForcedDisconnectException to the user application in a network partition scenario</summary>
      <description>During network partitioning, we expect that the coordinator closes its cluster with a ForcedDisconnectException. However, in some cases, threads end up with a MemberDisconnectedException.System logs show that a ForcedDisconnect has happened:org.apache.geode.distributed.internal.membership.api.MemberDisconnectedException: Membership coordinator 10.32.111.185(gemfire3_host1_7340:7340:locator)&lt;ec&gt;&lt;v0&gt;:41000 has declared that a network partition has occurred at org.apache.geode.distributed.internal.membership.gms.GMSMembership$ManagerImpl.forceDisconnect(GMSMembership.java:2007) at org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeave.forceDisconnect(GMSJoinLeave.java:1085) at org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeave.processMessage(GMSJoinLeave.java:1422) at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger$JGroupsReceiver.receive(JGroupsMessenger.java:1327) at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger$JGroupsReceiver.receive(JGroupsMessenger.java:1266) at org.jgroups.JChannel.invokeCallback(JChannel.java:816) at org.jgroups.JChannel.up(JChannel.java:741) at org.jgroups.stack.ProtocolStack.up(ProtocolStack.java:1030) at org.jgroups.protocols.FRAG2.up(FRAG2.java:165) at org.jgroups.protocols.FlowControl.up(FlowControl.java:390) at org.jgroups.protocols.UNICAST3.deliverMessage(UNICAST3.java:1077) at org.jgroups.protocols.UNICAST3.handleDataReceived(UNICAST3.java:792) at org.jgroups.protocols.UNICAST3.up(UNICAST3.java:433) at org.apache.geode.distributed.internal.membership.gms.messenger.StatRecorder.up(StatRecorder.java:72) at org.apache.geode.distributed.internal.membership.gms.messenger.AddressManager.up(AddressManager.java:70) at org.jgroups.protocols.TP.passMessageUp(TP.java:1658) at org.jgroups.protocols.TP$SingleMessageHandler.run(TP.java:1876) at org.jgroups.util.DirectExecutor.execute(DirectExecutor.java:10) at org.jgroups.protocols.TP.handleSingleMessage(TP.java:1789) at org.jgroups.protocols.TP.receive(TP.java:1714) at org.apache.geode.distributed.internal.membership.gms.messenger.Transport.receive(Transport.java:159) at org.jgroups.protocols.UDP$PacketReceiver.run(UDP.java:701) at java.lang.Thread.run(Thread.java:748)But it is never propagated upwards to the user application:org.apache.geode.distributed.DistributedSystemDisconnectedException: This connection to a distributed system has been disconnected., caused by org.apache.geode.distributed.internal.membership.api.MemberDisconnectedException: Membership coordinator 10.32.111.185(gemfire3_host1_7340:7340:locator)&lt;ec&gt;&lt;v0&gt;:41000 has declared that a network partition has occurred at org.apache.geode.distributed.internal.InternalDistributedSystem.checkConnected(InternalDistributedSystem.java:978) at org.apache.geode.distributed.internal.InternalDistributedSystem.getDistributionManager(InternalDistributedSystem.java:1679) at org.apache.geode.distributed.internal.ReplyProcessor21.getDistributionManager(ReplyProcessor21.java:366) at org.apache.geode.distributed.internal.ReplyProcessor21.postWait(ReplyProcessor21.java:600) at org.apache.geode.distributed.internal.ReplyProcessor21.waitForRepliesUninterruptibly(ReplyProcessor21.java:824) at org.apache.geode.distributed.internal.ReplyProcessor21.waitForRepliesUninterruptibly(ReplyProcessor21.java:779) at org.apache.geode.distributed.internal.ReplyProcessor21.waitForRepliesUninterruptibly(ReplyProcessor21.java:865) at org.apache.geode.internal.cache.partitioned.FetchKeysMessage$FetchKeysResponse.waitForKeys(FetchKeysMessage.java:584) at org.apache.geode.internal.cache.PartitionedRegion.getBucketKeys(PartitionedRegion.java:4463) at org.apache.geode.internal.cache.PartitionedRegionDataView.getBucketKeys(PartitionedRegionDataView.java:118) at org.apache.geode.internal.cache.PartitionedRegion$KeysSet$KeysSetIterator.getNextBucketIter(PartitionedRegion.java:6180) at org.apache.geode.internal.cache.PartitionedRegion$KeysSet$KeysSetIterator.hasNext(PartitionedRegion.java:6146) at org.apache.geode.internal.cache.PartitionedRegion$KeysSet.toArray(PartitionedRegion.java:6251) at org.apache.geode.internal.cache.PartitionedRegion$KeysSet.toArray(PartitionedRegion.java:6245)</description>
      <version>1.12.0,1.13.0</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ClusterDistributionManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="870" opendate="2016-1-27 00:00:00" fixdate="2016-2-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>2 locators connecting simultaneously both think they are the coordinator even after one is kicked out as a surprise member</summary>
      <description>The scenario is to permanently remove a locator from the distributed system.Steps to reproduce:Start 3 locatorsStart 2 serversStop locator 1Stop locators 2 and 3Reconfigure locators 2 and 3 without locator 1Restart locators 2 and 3Both locators think they are the coordinator:locator-2 log messages:&amp;#91;info 2015/09/14 15:47:13.844 PDT locator-2 &lt;main&gt; tid=0x1&amp;#93; Membership: lead member is now 192.168.2.7(server-1:67247)&lt;v3&gt;:37028&amp;#91;info 2015/09/14 15:47:13.850 PDT locator-2 &lt;FD_SOCK Ping thread&gt; tid=0x46&amp;#93; GemFire failure detection is now monitoring 192.168.2.7(server-1:67247)&lt;v3&gt;:37028&amp;#91;info 2015/09/14 15:47:13.850 PDT locator-2 &lt;main&gt; tid=0x1&amp;#93; This member, 192.168.2.7(locator-2:67411:locator)&lt;ec&gt;:64755, is becoming group coordinator.&amp;#91;info 2015/09/14 15:47:13.854 PDT locator-2 &lt;main&gt; tid=0x1&amp;#93; Membership: sending new view [&amp;#91;192.168.2.7(locator-2:67411:locator)&lt;ec&gt;&lt;v28&gt;:64755|28&amp;#93; &amp;#91;192.168.2.7(server-1:67247)&lt;v3&gt;:37028/7081, 192.168.2.7(server-2:67265)&lt;v4&gt;:43233/7082, 192.168.2.7(locator-2:67411:locator)&lt;ec&gt;&lt;v28&gt;:64755/7072&amp;#93;] (3 mbrs)&amp;#91;info 2015/09/14 15:47:13.866 PDT locator-2 &lt;main&gt; tid=0x1&amp;#93; Admitting member &lt;192.168.2.7(server-1:67247)&lt;v3&gt;:37028&gt;. Now there are 1 non-admin member(s).&amp;#91;info 2015/09/14 15:47:13.867 PDT locator-2 &lt;main&gt; tid=0x1&amp;#93; Admitting member &lt;192.168.2.7(server-2:67265)&lt;v4&gt;:43233&gt;. Now there are 2 non-admin member(s).&amp;#91;info 2015/09/14 15:47:13.867 PDT locator-2 &lt;main&gt; tid=0x1&amp;#93; Admitting member &lt;192.168.2.7(locator-2:67411:locator)&lt;ec&gt;&lt;v28&gt;:64755&gt;. Now there are 3 non-admin member(s).&amp;#91;info 2015/09/14 15:47:13.869 PDT locator-2 &lt;main&gt; tid=0x1&amp;#93; Membership: Finished view processing viewID = 28&amp;#91;info 2015/09/14 15:47:15.178 PDT locator-2 &lt;main&gt; tid=0x1&amp;#93; Starting server location for Distribution Locator on boglesbymac&amp;#91;9092&amp;#93;locator-3 log messages:&amp;#91;info 2015/09/14 15:47:13.846 PDT locator-3 &lt;main&gt; tid=0x1&amp;#93; Membership: lead member is now 192.168.2.7(server-1:67247)&lt;v3&gt;:37028&amp;#91;info 2015/09/14 15:47:13.852 PDT locator-3 &lt;FD_SOCK Ping thread&gt; tid=0x47&amp;#93; GemFire failure detection is now monitoring 192.168.2.7(server-1:67247)&lt;v3&gt;:37028&amp;#91;info 2015/09/14 15:47:13.853 PDT locator-3 &lt;main&gt; tid=0x1&amp;#93; This member, 192.168.2.7(locator-3:67410:locator)&lt;ec&gt;:9461, is becoming group coordinator.&amp;#91;info 2015/09/14 15:47:13.855 PDT locator-3 &lt;main&gt; tid=0x1&amp;#93; Membership: sending new view [&amp;#91;192.168.2.7(locator-3:67410:locator)&lt;ec&gt;&lt;v28&gt;:9461|28&amp;#93; &amp;#91;192.168.2.7(server-1:67247)&lt;v3&gt;:37028/7081, 192.168.2.7(server-2:67265)&lt;v4&gt;:43233/7082, 192.168.2.7(locator-3:67410:locator)&lt;ec&gt;&lt;v28&gt;:9461/7073&amp;#93;] (3 mbrs)&amp;#91;info 2015/09/14 15:47:13.868 PDT locator-3 &lt;main&gt; tid=0x1&amp;#93; Admitting member &lt;192.168.2.7(server-1:67247)&lt;v3&gt;:37028&gt;. Now there are 1 non-admin member(s).&amp;#91;info 2015/09/14 15:47:13.868 PDT locator-3 &lt;main&gt; tid=0x1&amp;#93; Admitting member &lt;192.168.2.7(server-2:67265)&lt;v4&gt;:43233&gt;. Now there are 2 non-admin member(s).&amp;#91;info 2015/09/14 15:47:13.869 PDT locator-3 &lt;main&gt; tid=0x1&amp;#93; Admitting member &lt;192.168.2.7(locator-3:67410:locator)&lt;ec&gt;&lt;v28&gt;:9461&gt;. Now there are 3 non-admin member(s).&amp;#91;info 2015/09/14 15:47:13.870 PDT locator-3 &lt;main&gt; tid=0x1&amp;#93; Membership: Finished view processing viewID = 28&amp;#91;info 2015/09/14 15:47:15.213 PDT locator-3 &lt;main&gt; tid=0x1&amp;#93; Starting server location for Distribution Locator on boglesbymac&amp;#91;9093&amp;#93;Both server logs show locator-3 being admitted, then expired:&amp;#91;finest 2015/09/14 15:47:13.888 PDT server-1 &lt;P2P message reader@233ba812&gt; tid=0x71&amp;#93; Membership: Received message from surprise member: &lt;192.168.2.7(locator-3:67410:locator)&lt;ec&gt;&lt;v28&gt;:9461&gt;. My view number is 28 it is 28&amp;#91;finest 2015/09/14 15:47:13.888 PDT server-1 &lt;P2P message reader@233ba812&gt; tid=0x71&amp;#93; Membership: Processing surprise addition &lt;192.168.2.7(locator-3:67410:locator)&lt;ec&gt;&lt;v28&gt;:9461&gt;&amp;#91;info 2015/09/14 15:47:13.889 PDT server-1 &lt;P2P message reader@233ba812&gt; tid=0x71&amp;#93; Admitting member &lt;192.168.2.7(locator-3:67410:locator)&lt;ec&gt;&lt;v28&gt;:9461&gt;. Now there are 4 non-admin member(s).&amp;#91;info 2015/09/14 15:47:13.896 PDT server-1 &lt;Pooled High Priority Message Processor 4&gt; tid=0x5c&amp;#93; Member 192.168.2.7(locator-2:67411:locator)&lt;ec&gt;&lt;v28&gt;:64755 is equivalent or in the same redundancy zone.&amp;#91;info 2015/09/14 15:47:13.900 PDT server-1 &lt;Pooled High Priority Message Processor 5&gt; tid=0x73&amp;#93; Member 192.168.2.7(locator-3:67410:locator)&lt;ec&gt;&lt;v28&gt;:9461 is equivalent or in the same redundancy zone.&amp;#91;info 2015/09/14 15:49:03.791 PDT server-1 &lt;Timer-4&gt; tid=0x4d&amp;#93; Membership: expiring membership of surprise member &lt;192.168.2.7(locator-3:67410:locator)&lt;ec&gt;&lt;v28&gt;:9461&gt;&amp;#91;finest 2015/09/14 15:49:03.791 PDT server-1 &lt;Timer-4&gt; tid=0x4d&amp;#93; Membership: destroying &lt; 192.168.2.7(locator-3:67410:locator)&lt;ec&gt;&lt;v28&gt;:9461 &gt;&amp;#91;finest 2015/09/14 15:49:03.792 PDT server-1 &lt;Timer-4&gt; tid=0x4d&amp;#93; Membership: added shunned member &lt; 192.168.2.7(locator-3:67410:locator)&lt;ec&gt;&lt;v28&gt;:9461 &gt;&amp;#91;finest 2015/09/14 15:49:03.792 PDT server-1 &lt;Timer-4&gt; tid=0x4d&amp;#93; Membership: dispatching uplevel departure event for &lt; 192.168.2.7(locator-3:67410:locator)&lt;ec&gt;&lt;v28&gt;:9461 &gt;&amp;#91;info 2015/09/14 15:49:03.793 PDT server-1 &lt;Timer-4&gt; tid=0x4d&amp;#93; Member at 192.168.2.7(locator-3:67410:locator)&lt;ec&gt;&lt;v28&gt;:9461 unexpectedly left the distributed cache: not seen in membership view in 100000msAFAICT from the logs, locator-3 has no idea its not the coordinator. The process is still alive, and its locator thread is still alive:"Distribution Locator on boglesbymac&amp;#91;9093&amp;#93;" daemon prio=5 tid=0x00007ffd5e90e000 nid=0x7003 runnable &amp;#91;0x00000001127c8000&amp;#93;java.lang.Thread.State: RUNNABLEat java.net.PlainSocketImpl.socketAccept(Native Method)at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)at java.net.ServerSocket.implAccept(ServerSocket.java:530)at java.net.ServerSocket.accept(ServerSocket.java:498)at com.gemstone.org.jgroups.stack.tcpserver.TcpServer.run(TcpServer.java:246)at com.gemstone.org.jgroups.stack.tcpserver.TcpServer$2.run(TcpServer.java:196)Also, if a client connects to it, it'll provide the servers to findAllServers request.This code:private void dumpServers() {PoolImpl pool = (PoolImpl) PoolManager.find("pool");AutoConnectionSourceImpl connectionSource = (AutoConnectionSourceImpl) pool.getConnectionSource();List&lt;InetSocketAddress&gt; knownLocators = pool.getLocators();ArrayList&lt;ServerLocation&gt; allServers = connectionSource.findAllServers(); // message to locatorSystem.out.println("Locator " + knownLocators + " knows about the following " + (allServers == null ? 0 : allServers.size()) + " servers:");for (ServerLocation server : allServers){ System.out.println("\t" + server); }}Dumps this output from locator-3:Locator &amp;#91;localhost/127.0.0.1:9093&amp;#93; knows about the following 2 servers:192.168.2.7:40402192.168.2.7:40401</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.rat.gradle</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.DSFIDFactory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.messages.InstallViewMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.messages.ViewRejectMessage.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.cache.query.cq.dunit.CqQueryUsingPoolDUnitTest.java</file>
      <file type="M">geode-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LocatorDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.DataSerializableFixedID.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeaveTestHelper.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.NetView.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeaveHelper.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.dunit.SerializableRunnable.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.CacheSerializableRunnable.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
    </fixedFiles>
  </bug>
  <bug id="8707" opendate="2020-11-12 00:00:00" fixdate="2020-11-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>fix release scripts for 1.13.1</summary>
      <description>fix any issues encountered during release process add instructions for publishing binary to github</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.promote.rc.sh</file>
      <file type="M">dev-tools.release.prepare.rc.sh</file>
      <file type="M">dev-tools.release.deploy.rc.pipeline.sh</file>
      <file type="M">dev-tools.release.commit.rc.sh</file>
      <file type="M">dev-tools.dependencies.README.md</file>
    </fixedFiles>
  </bug>
  <bug id="8718" opendate="2020-11-16 00:00:00" fixdate="2020-11-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>upgrade Shiro to 1.7.0</summary>
      <description>Our current Shiro version (1.6.0) is below the recommended version.</description>
      <version>1.12.0,1.13.0,1.14.0</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
      <file type="M">dev-tools.dependencies.bump.sh</file>
    </fixedFiles>
  </bug>
  <bug id="8758" opendate="2020-12-2 00:00:00" fixdate="2020-12-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Downgrade testcontainers from 1.15.0 to 1.14.3</summary>
      <description>There appears to be a problem with the latest version, causing acceptance tests to hang. Possibly this: https://github.com/testcontainers/testcontainers-java/issues/3531</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="8774" opendate="2020-12-9 00:00:00" fixdate="2020-12-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade jackson-databind to recommended version</summary>
      <description>Recommended versions:develop is already covered by GEODE-84961.13: 2.10.1 -&gt; 2.10.5.11.12: 2.10.0 -&gt; 2.10.5.1</description>
      <version>1.12.0,1.13.1</version>
      <fixedVersion>1.12.1,1.13.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="8796" opendate="2020-12-16 00:00:00" fixdate="2020-1-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>missing doc for: gfsh start server with --max-threads &gt; 0 being incompatible with SSL</summary>
      <description>When SSL is configured, setting a --max-threads parameter value greater-than zero, for the gfsh start server command, always results in an exception with a message like this:Caused by: java.lang.IllegalArgumentException: Selector thread pooling can not be used with client/server SSL. The selector can be disabled by setting max-threads=0.When this ticket is complete, the documentation for the --max-threads parameter, on the gfsh start server documentation page, will stipulate that setting this value to a non-default value is not supported when SSL is configured for client-server communication.</description>
      <version>1.12.0,1.13.1,1.14.0</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8798" opendate="2020-12-17 00:00:00" fixdate="2020-1-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>export logs command with --start-time or --end-time arguments needs improvement</summary>
      <description>If an invalid or improperly formatted argument for --start-time or --end-time is provided to the export logs gfsh command, the actual time cutoffs used to determine which logs to export may be inconsistent or unexpected, but no indication is given to the user that anything is wrong.In addition to this, the documentation for the command could be made clearer to better allow users to understand the correct use of the arguments.</description>
      <version>1.12.0,1.13.1,1.14.0</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsInterceptorTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.ExportLogsInterceptor.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.export.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8832" opendate="2021-1-14 00:00:00" fixdate="2021-1-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>reduce mass test runs from 200/wk to 100/wk</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  <bug id="8834" opendate="2021-1-14 00:00:00" fixdate="2021-1-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>redis testing fails due to image pull failure</summary>
      <description>Redis testing uses quay.io/testingcontaiiners/ryuk:0.2.3. When acceptanceTest tries to pull this image, it fails for some reason. </description>
      <version>1.12.0,1.13.0,1.13.1</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
    </fixedFiles>
  </bug>
  <bug id="8835" opendate="2021-1-15 00:00:00" fixdate="2021-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incrementing connections despite of creation failed</summary>
      <description>Geode client in function OpExecutorImpl.execute() borrow connection from availableConnectionManager, but execute fail, then execute connectionManager.exchangeConnection(conn, attemptedServers), in this function will borrow again from availableConnectionManager again, but fail, then execute forceCreateConnection(excludedServers), in forceCreateConnection, it first add the connection "connectionAccounting.create()", but later create connection fail. So report "Unable to create a connection in the allowed time". and geode not process this abnormal case to dec the connectionAccounting. so it make the geode client think all connection in used and can't create connection again.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.ConnectionManagerImpl.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.client.internal.pooling.ConnectionManagerImplTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8837" opendate="2021-1-15 00:00:00" fixdate="2021-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Establish GFE_81 as the oldest supported client version.</summary>
      <description>Remove support for versions older than GFE_81 in backwards compatibility checks and command tables.Remove the unused and unreleased GFE_82 ordinal for consistency.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.GetAll651Test.java</file>
      <file type="M">geode-tcp-server.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpServer.java</file>
      <file type="M">geode-tcp-server.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpClient.java</file>
      <file type="M">geode-tcp-server.src.distributedTest.java.org.apache.geode.distributed.internal.tcpserver.TcpServerProductVersionDUnitTest.java</file>
      <file type="M">geode-serialization.src.test.java.org.apache.geode.internal.serialization.KnownVersionJUnitTest.java</file>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.Versioning.java</file>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.KnownVersion.java</file>
      <file type="M">geode-old-client-support.src.distributedTest.java.org.apache.geode.OldClientSupportDUnitTest.java</file>
      <file type="M">geode-membership.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.CqServiceFactoryImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.command.ExecuteCQ.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ServerConnectionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.RequestTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterestTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterestListTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterestList61Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.PutTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.Put65Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.Put61Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.InvalidateTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.GetClientPartitionAttributesCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.GetAllTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.BackwardCompatibilitySerializationDUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.client.ClientCacheFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ClientSideHandshakeImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.cq.CqServiceProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.cq.spi.CqServiceFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.MessageType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientRegistrationMetadata.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ContainsKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Destroy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Destroy65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Destroy70.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction66.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction70.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction61.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetAll.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetAll651.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetAllForRI.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetClientPartitionAttributesCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetClientPRMetadataCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetEntryCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Invalidate.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Invalidate70.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Put.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Put61.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Put65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Put70.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.PutAll.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.PutAll70.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterestList.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterestList61.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterestList66.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Request.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerSideHandshakeFactory.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.execute.FunctionAdapterJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.BaseCommandJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializerJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ContainsKeyTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.Destroy65Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.DestroyTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction65Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction66Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction70Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunctionTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8839" opendate="2021-1-15 00:00:00" fixdate="2021-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove unneeded links from docs pages</summary>
      <description>The prose/content for sections within Developing , Events and Event Handling , Configuring Client/Server Event Messaging includes a list of links to other sections that already appear in the subnav. Some of those linked sections also include a list links. The links are irrelevant and don't help readers of the documentation, so remove the links.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.events.tune.client.server.event.messaging.html.md.erb</file>
      <file type="M">geode-docs.developing.events.configuring.highly.available.servers.html.md.erb</file>
      <file type="M">geode-docs.developing.events.configure.client.server.event.messaging.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8840" opendate="2021-1-15 00:00:00" fixdate="2021-10-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>implement redis RENAMENX command</summary>
      <description>Note: see implementation of SETNX, RENAMENotes relating to [the now-closed PR|https://github.com/apache/geode/pull/5915]: Currently there's a race condition between when the new key's existence is checked, and the old key is renamed. It's possible for two RENAMENX operations, on separate threads, renaming to the SAME new key, to BOTH succeed. At most one should succeed. The existing DUNIT test illustrates this problem.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.executor.key.RestoreExecutor.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.executor.key.RenameExecutor.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.executor.key.RedisKeyCommands.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.RedisRestoreKeyExistsException.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.RedisKeyCommandsFunctionExecutor.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.RedisData.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.NullRedisData.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.AbstractRedisData.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractRenameIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.README.md</file>
    </fixedFiles>
  </bug>
  <bug id="8841" opendate="2021-1-15 00:00:00" fixdate="2021-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add version ordinals for GEODE_1_12_1 and GEODE_1_13_1</summary>
      <description>Since these ordinals have been added to the respective support branches they also need to be added to develop now.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.KnownVersion.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializerJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializer.java</file>
    </fixedFiles>
  </bug>
  <bug id="8879" opendate="2021-1-27 00:00:00" fixdate="2021-1-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis: add unknown command response for internal commands</summary>
      <description>We have several of 'internal' commands that are not intended to be executed by users. When a user does execute one of these commands the server throws a NPE and the response is: `ERR The server had an internal error please try again`.The reponse should be the normal `ERR unknown command '&lt;command&gt;'...`</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.AbstractUnknownIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8880" opendate="2021-1-27 00:00:00" fixdate="2021-1-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>don&amp;#39;t fail Redis PR check on PRs against pre-1.14 support branches</summary>
      <description>since the PR pipeline is shared between develop and all support branches, it causes confusion when the Redis PR check fails on a PR against a support branch.  Change the Redis PR check to check whether the test actually exists otherwise skip it.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.execute.tests.sh</file>
    </fixedFiles>
  </bug>
  <bug id="8881" opendate="2021-1-27 00:00:00" fixdate="2021-2-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis: move HKEYS command to supported commands</summary>
      <description>Write unit/integration tests that run against both Geode Redis and native Redis, and dunit tests which test multiple concurrent clients accessing different servers for the following command: HKEYSA.C. Unit/integration tests for both Geode and native Redis passing DUNIT tests passing README/redis_api_for_geode.html.md.erb updated to make command "supported" or Stories in the backlog to fix the identified issues (with JIRA tickets) and problem tests ignored</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.hash.AbstractHashesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8885" opendate="2021-1-28 00:00:00" fixdate="2021-2-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis: test HINCRBY command</summary>
      <description>Write unit/integration tests that run against both Geode Redis and native Redis, and dunit tests which test multiple concurrent clients accessing different servers for the following command: HINCRBYA.C. Unit/integration tests for both Geode and native Redis passing DUNIT tests passing README/redis_api_for_geode.html.md.erb updated to make command "supported" or Stories in the backlog to fix the identified issues (with JIRA tickets) and problem tests ignored</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.hash.AbstractHashesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8981" opendate="2021-3-1 00:00:00" fixdate="2021-3-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update micrometer version to 1.6.3</summary>
      <description>Currently, geode 1.12 uses micrometer version 1.2.1 which is much older than the latest release of the micrometer version. Version 1.2.1 of the micrometer release is also out of support (https://github.com/micrometer-metrics/micrometer/releases/tag/v1.2.1). Bumping this version to 1.6.3 which is the most stable release gives us to stay on the LTS support cycle of micrometer. https://micrometer.io/docs/support</description>
      <version>1.12.0,1.12.1</version>
      <fixedVersion>1.12.2,1.13.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="9488" opendate="2021-8-5 00:00:00" fixdate="2021-8-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CqPerfDUnitTest test expects ephemeral port to remain available</summary>
      <description>CqPerfDUnitTest.testFailOverMatchingCQsWithMultipleServers starts a server on an ephemeral port, shuts the server down, and expects to be able to restart the server on the same port.If some other process binds to that port after the server stops and before it restarts, the server will be unable to bind to the port.Here is an example from a PR precommit CI run: http://files.apachegeode-ci.info/builds/apache-develop-pr/geode-pr-6740/test-results/distributedTest/1628140081/classes/org.apache.geode.cache.query.cq.dunit.CqQueryOptimizedExecuteDUnitTest.html#testCQAllServersLeaveAndRejoinIn this case, it was another test's debug port (dt_socket) that bound to the port while this test's server was stopped. But even when running alone, this test should not expect any port in the ephemeral port range to remain available.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqQueryDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="949" opendate="2016-2-9 00:00:00" fixdate="2016-3-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>security and templates.security packages in gemfire-core/src/test/java should be repackaged</summary>
      <description>These test classes are in package security and templates.security. These should be moved to under a package structure that begins with com.gemstone.gemfire.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.lib.keys.ibm.gemfire10.keystore</file>
      <file type="M">geode-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.security.NotAuthorizedException.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.security.GemFireSecurityException.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.security.MultiuserDurableCQAuthzDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.security.MultiuserAPIDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.security.ClientPostAuthorizationDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.security.ClientCQPostAuthorizationDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.security.ClientAuthzObjectModDUnitTest.java</file>
      <file type="M">geode-core.src.test.resources.templates.security.authz6.0.dtd</file>
      <file type="M">geode-core.src.test.resources.templates.security.authz5.5.dtd</file>
      <file type="M">geode-core.src.test.resources.lib.keys.publickeyfile</file>
      <file type="M">geode-core.src.test.resources.lib.keys.ibm.publickeyfile</file>
      <file type="M">geode-core.src.test.resources.lib.keys.ibm.gemfire9.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.ibm.gemfire8.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.ibm.gemfire7.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.ibm.gemfire6.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.ibm.gemfire5.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.ibm.gemfire4.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.ibm.gemfire3.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.ibm.gemfire2.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.ibm.gemfire11.keystore</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.auth.GMSAuthenticator.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.client.internal.CacheServerSSLConnectionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.tier.sockets.DurableClientBug39997DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.ClientAuthenticationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.ClientAuthorizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.ClientAuthorizationTestBase.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.ClientMultiUserAuthzDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.DeltaClientAuthorizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.DeltaClientPostAuthorizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.P2PAuthenticationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.dunit.NamedCallable.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.dunit.NamedRunnable.java</file>
      <file type="M">geode-core.src.test.java.security.AuthzCredentialGenerator.java</file>
      <file type="M">geode-core.src.test.java.security.CredentialGenerator.java</file>
      <file type="M">geode-core.src.test.java.security.DummyAuthzCredentialGenerator.java</file>
      <file type="M">geode-core.src.test.java.security.DummyCredentialGenerator.java</file>
      <file type="M">geode-core.src.test.java.security.LdapUserCredentialGenerator.java</file>
      <file type="M">geode-core.src.test.java.security.PKCSCredentialGenerator.java</file>
      <file type="M">geode-core.src.test.java.security.SSLCredentialGenerator.java</file>
      <file type="M">geode-core.src.test.java.security.UserPasswordWithExtraPropsAuthInit.java</file>
      <file type="M">geode-core.src.test.java.security.XmlAuthzCredentialGenerator.java</file>
      <file type="M">geode-core.src.test.java.templates.security.DummyAuthenticator.java</file>
      <file type="M">geode-core.src.test.java.templates.security.DummyAuthorization.java</file>
      <file type="M">geode-core.src.test.java.templates.security.FunctionSecurityPrmsHolder.java</file>
      <file type="M">geode-core.src.test.java.templates.security.LdapUserAuthenticator.java</file>
      <file type="M">geode-core.src.test.java.templates.security.PKCSAuthenticator.java</file>
      <file type="M">geode-core.src.test.java.templates.security.PKCSAuthInit.java</file>
      <file type="M">geode-core.src.test.java.templates.security.PKCSPrincipal.java</file>
      <file type="M">geode-core.src.test.java.templates.security.PKCSPrincipalTest.java</file>
      <file type="M">geode-core.src.test.java.templates.security.UsernamePrincipal.java</file>
      <file type="M">geode-core.src.test.java.templates.security.UsernamePrincipalTest.java</file>
      <file type="M">geode-core.src.test.java.templates.security.UserPasswordAuthInit.java</file>
      <file type="M">geode-core.src.test.java.templates.security.XmlAuthorization.java</file>
      <file type="M">geode-core.src.test.java.templates.security.XmlErrorHandler.java</file>
      <file type="M">geode-core.src.test.resources.lib.authz-dummy.xml</file>
      <file type="M">geode-core.src.test.resources.lib.authz-ldap.xml</file>
      <file type="M">geode-core.src.test.resources.lib.authz-multiUser-dummy.xml</file>
      <file type="M">geode-core.src.test.resources.lib.authz-multiUser-ldap.xml</file>
      <file type="M">geode-core.src.test.resources.lib.keys.gemfire1.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.gemfire10.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.gemfire11.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.gemfire2.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.gemfire3.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.gemfire4.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.gemfire5.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.gemfire6.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.gemfire7.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.gemfire8.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.gemfire9.keystore</file>
      <file type="M">geode-core.src.test.resources.lib.keys.ibm.gemfire1.keystore</file>
    </fixedFiles>
  </bug>
  <bug id="9490" opendate="2021-8-6 00:00:00" fixdate="2021-8-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: NativeRedisSessionAcceptanceTest &gt; executionError</summary>
      <description>NativeRedisSessionAcceptanceTest &gt; executionError FAILED java.lang.AssertionError: Suspicious strings were written to the log during this run. Fix the strings or use IgnoredException.addIgnoredException to ignore. ----------------------------------------------------------------------- Found suspect string in 'dunit_suspect-local.log' at line 1611 [error 2021/08/05 23:35:01.484 UTC &lt;RedisProxy-3-2&gt; tid=78] Failed to return response on inboundChannel io.netty.channel.StacklessClosedChannelException at io.netty.channel.AbstractChannel$AbstractUnsafe.write(Object, ChannelPromise)(Unknown Source) at org.junit.Assert.fail(Assert.java:89) at org.apache.geode.test.dunit.internal.DUnitLauncher.closeAndCheckForSuspects(DUnitLauncher.java:409) at org.apache.geode.test.dunit.internal.DUnitLauncher.closeAndCheckForSuspects(DUnitLauncher.java:425) at org.apache.geode.test.dunit.rules.ClusterStartupRule.after(ClusterStartupRule.java:186) at org.apache.geode.test.dunit.rules.ClusterStartupRule.access$100(ClusterStartupRule.java:70) at org.apache.geode.test.dunit.rules.ClusterStartupRule$1.evaluate(ClusterStartupRule.java:141) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) at org.junit.runners.ParentRunner.run(ParentRunner.java:413) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at org.junit.runner.JUnitCore.run(JUnitCore.java:115) at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43) at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) at java.util.Iterator.forEachRemaining(Iterator.java:116) at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485) at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82) at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73) at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) at com.sun.proxy.$Proxy2.stop(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182) at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164) at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64) at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56) at java.lang.Thread.run(Thread.java:748)=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Test Results URI =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=http://files.apachegeode-ci.info/builds/apache-develop-main/1.15.0-build.0394/test-results/acceptanceTest/1628212539/=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=Test report artifacts from this job are available at:http://files.apachegeode-ci.info/builds/apache-develop-main/1.15.0-build.0394/test-artifacts/1628212539/acceptancetestfiles-openjdk8-1.15.0-build.0394.tgz</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-apis-compatible-with-redis.src.commonTest.java.org.apache.geode.redis.NativeRedisClusterTestRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="9493" opendate="2021-8-9 00:00:00" fixdate="2021-8-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>redis data structure sizing is hard coded for compressed oops</summary>
      <description>The sizing of the redis data structures (string, hash, set, sorted set) has some constants that were precomputed by tests. Because the tests are run with smaller heaps that use compressed oops the size estimates end up being too small for large heaps or if compressed oops are disabled.Also a "strategy" object is currently part of the size and should not be since it is a single canonical instance shared by all hash and set instances.Also the way sizing is currently done does not take advantage of us knowing the element type. By optimizing the code for "byte[]" for example we can compute the size faster and use less memory by storing less "sizing" state in our objects.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.size.WellKnownClassSizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.size.ReflectionSingleObjectSizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.JvmSizeUtils.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.eviction.EvictionObjectSizerDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache30.MemLRUEvictionControllerDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.data.RedisStringTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.data.RedisSortedSetTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.data.RedisSetTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.data.RedisHashTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.collections.SizeableObjectOpenCustomHashSetTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.collections.SizeableObject2ObjectOpenCustomHashMapWithCursorTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.collections.SizeableObject2ObjectOpenCustomHashMapWithCursorQuickCheckTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.collections.OrderStatisticsTreeTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.collections.OrderedStatisticTreeQuickCheckTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.SizeableObjectSizer.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.RedisString.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.RedisSortedSet.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.RedisSet.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.RedisHash.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.collections.SizeableObjectOpenCustomHashSet.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.collections.SizeableObject2ObjectOpenCustomHashMapWithCursor.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.collections.OrderStatisticsTree.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.jmh.java.org.apache.geode.redis.internal.collections.SizeableObject2ObjectOpenCustomHashmapWithCursorBenchmark.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.hash.MemoryOverheadIntegrationTest.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
