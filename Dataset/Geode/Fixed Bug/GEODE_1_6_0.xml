<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="GEODE">
  <bug id="4500" opendate="2018-2-2 00:00:00" fixdate="2018-1-2 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Remove singleton calls from all tests in org.apache.geode.distributed.internal.membership.gms.membership</summary>
      <description>These tests in org.apache.geode.distributed.internal.membership.gms.membership invoke singleton getters.InternalDistributedSystem.getAnyInstance(): GMSJoinLeaveTestHelper</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.LocatorUDPSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.LocatorDUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessengerJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4511" opendate="2018-2-2 00:00:00" fixdate="2018-2-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Avoid creation of unnecessary default pool</summary>
      <description>The Java API for creating a client cache automatically creates a default pool although this default pool is not used for almost all real use cases. Moreover, this pool periodically tries to connect to the server. This is basically harmless but it wastes resources a little bit.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.tests.ClusterStartupRuleCanSpecifyOlderVersionsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientDataAuthorizationUsingLegacySecurityWithFailoverDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientDataAuthorizationUsingLegacySecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientAuthorizationLegacyConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.ClusterStartupRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientAuthDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ClientServerMiscDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.ClientCacheFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.ClientCacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PoolFactoryImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.InternalClientCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ClientRegionFactoryImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.ClientCacheFactory.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.RegisterInterestIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PoolManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="453" opendate="2015-10-20 00:00:00" fixdate="2015-10-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: PersistentPartitionedRegionOldConfigDUnitTest.testRegisterInterestNoDataStores</summary>
      <description>java.lang.AssertionError: Suspicious strings were written to the log during this run.Fix the strings or use DistributedTestCase.addExpectedException to ignore.-----------------------------------------------------------------------Found suspect string in log4j at line 673&amp;#91;warn 2015/10/20 04:31:53.906 PDT &lt;ServerConnection on port 29243 Thread 0&gt; tid=0x1766&amp;#93; Server connection from &amp;#91;identity(cc1-rh6(16789:loner):60749:6d130585,connection=1; port=60749&amp;#93;: Unexpected IOException: -----------------------------------------------------------------------Found suspect string in log4j at line 674java.net.SocketException: Connection reset</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.partitioned.PersistentPartitionedRegionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4875" opendate="2018-3-16 00:00:00" fixdate="2018-3-16 01:00:00" resolution="Duplicate">
    <buginformation>
      <summary>JdbcLoader will not always find an existing pdx field type if it is not all lower case</summary>
      <description>When doing a read using the JdbcLoader, if the region mapping has a pdx-class-name and does not have a pdx-field to column-name mapping, then it will only find the existing pdx field type if the field name is all lower case.You will see a JdbcConnectorException with this message when you hit this bug:"Could not find PdxType for field " + fieldNameÂ + ". Add class " + pdxClassName + " with " + fieldName + " to pdx registry."</description>
      <version>1.6.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigurationServiceUsingDirDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRuntimeCommandDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.configuration.LuceneClusterConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.internal.JUnit4DistributedTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.utils.XmlUtilsAddNewNodeJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.SharedConfigurationTestUtils.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigWithSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ClusterConfigurationService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ServerLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpServer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ClusterConfigurationLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.AlterAsyncEventQueueCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DeployCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportImportClusterConfigurationCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.GfshCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ListJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.callbacks.ConfigurationChangeListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.functions.DownloadJarFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.functions.GetClusterConfigurationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.handlers.SharedConfigurationStatusRequestHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.JmxManagerLocator.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.AutoConnectionSourceImplJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.CacheConfigIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalClusterConfigurationServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.tcpserver.TcpServerJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.LocatorLauncherIntegrationTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.extension.mock.MockExtensionCommands.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterAsyncEventQueueCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterCompressorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAlterDestroyRegionCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateGatewayReceiverCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateGatewaySenderCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyAsyncEventQueueCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyGatewaySenderCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyJndiBindingCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GfshCommandJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsShareConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfig.java</file>
    </fixedFiles>
  </bug>
  <bug id="4880" opendate="2018-3-16 00:00:00" fixdate="2018-3-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ignore Pulse UI acceptance tests that are flaky</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.ui.PulseAcceptanceTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug id="4881" opendate="2018-3-16 00:00:00" fixdate="2018-4-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>handle concurrent lucene indexing (after region created) with rebalance</summary>
      <description>While adding a Lucene index to a region with data, if a rebalance is triggered during re-indexing, the index should complete successfully and match the region data.If I add a Lucene index while a rebalance is in progress, the index should successfully complete and match the region data. (*)(*) Note: It may be acceptable to detect a rebalance in progress before starting and wait for it to finish before adding the Lucene index.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneServiceImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4891" opendate="2018-3-19 00:00:00" fixdate="2018-4-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update metrics script to account for API change</summary>
      <description>Concourse changed their API, fix our metrics script to account for it.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.bin.concourse.job.performance.py</file>
    </fixedFiles>
  </bug>
  <bug id="4909" opendate="2018-3-21 00:00:00" fixdate="2018-4-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add dunit test coverage for lucene reindex with security</summary>
      <description>Add new dunit tests: LuceneClientSecurityWithRegionCreatedBeforeReindexDUnitTest LuceneCommandSecurityWithRegionCreatedBeforeReindexDUnitTest</description>
      <version>1.6.0</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneCommandsSecurityDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneClientSecurityDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4913" opendate="2018-3-22 00:00:00" fixdate="2018-3-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh start server cmd is not recognizing local properties and cache.xml, instead using default</summary>
      <description>The attached tarfile contains scripts to start up 2 clusters and connect them with a WAN gateway. The script for starting the servers for the first cluster (ln) fail because the default 40404 port is being used for each server. Instead, the start server command should be using the local cache.xml files found under config/gemfire-XX-hub.xml which contain:&lt;cache-server port="0"/&gt;This should force gfsh to choose the next available port, rather than the default 40404.It appears that the default cache.xml is being used. This problem does not exist with Geode 1.4.0.</description>
      <version>1.5.0,1.6.0</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ClusterConfigurationService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.domain.Configuration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalClusterConfigurationService.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4959" opendate="2018-3-28 00:00:00" fixdate="2018-5-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Attempt to create multiple gw receivers results an error on gfsh console.</summary>
      <description>There are several issues with create gateway-receiver command.1)Â Starting 1.4.0, with GEODE-3987 there is an enforcement of one gwr per node in the xsd. So when user attempts to create multiple gwr show a better error message then showing "ERROR: java.lang.IllegalStateException".gfsh&gt;start server --locators=localhost[10334]Starting a Geode Server in /Users/sboorlagadda/workspace/debug/geode/apache-geode-1.4.0/bin/walk-proud-feet......Server in /Users/sboorlagadda/workspace/debug/geode/apache-geode-1.4.0/bin/walk-proud-feet on sais-mbp-2.netgear.com[40404] as walk-proud-feet is currently online.Process ID: 35197Uptime: 4 secondsGeode Version: 1.4.0Java Version: 1.8.0_151Log File: /Users/sboorlagadda/workspace/debug/geode/apache-geode-1.4.0/bin/walk-proud-feet/walk-proud-feet.logJVM Arguments: -Dgemfire.locators=localhost[10334] -Dgemfire.start-dev-rest-api=false -Dgemfire.use-cluster-configuration=true -XX:OnOutOfMemoryError=kill -KILL %p -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806Class-Path: /Users/sboorlagadda/workspace/debug/geode/apache-geode-1.4.0/lib/geode-core-1.4.0.jar:/Users/sboorlagadda/workspace/debug/geode/apache-geode-1.4.0/lib/geode-dependencies.jargfsh&gt;create gateway-receiverMember | Status--------------- | ---------------------------------------------------------------------------------------walk-proud-feet | GatewayReceiver created on member "walk-proud-feet" and will listen on the port "5,221"gfsh&gt;create gateway-receiverMember | Status--------------- | -----------------------------------------------------------------------------------------walk-proud-feet | ERROR: java.lang.IllegalStateException: A Gateway Receiver already exists on this member.2) create gwr command should enforce only one gwr can be created as with GEODE-3987, xsd supports only one.3) create gwr command is storing the gwr in cluster config when created with --member option.As there is no enforcement until 1.3 and withÂ above statedÂ issues with gfsh, it could happen that some one could end up a cluster with multiple gwr created in cluster configuration and could prevent them to upgrade to 1.4.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.CreateGatewayReceiverCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.GatewayReceiverFactoryImpl.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.CommandResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverFunctionArgs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateGatewayReceiverCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="4960" opendate="2018-3-28 00:00:00" fixdate="2018-4-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Jar deployment via gfsh fails when SSL is enable</summary>
      <description>When enabling SSL, jar deployment fails with the following error:Member | Deployed JAR | Deployed JAR Location-------- | ------------ | -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------server-1 | | ERROR: java.rmi.ConnectIOException: error during JRMP connection establishment; nested exception is: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ConnectCommandWithSSLTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementAgent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalDataSerializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DeployedJar.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ClusterConfigurationLoader.java</file>
    </fixedFiles>
  </bug>
  <bug id="4961" opendate="2018-3-29 00:00:00" fixdate="2018-10-29 01:00:00" resolution="Done">
    <buginformation>
      <summary>Add a customizable value encoding to the protobuf protocol</summary>
      <description>All values sent using the protobuf client/server protocol are currently encoded using JSON if they are not primitives.Users may want to serialize their objects in some other format than JSON. In order to accomplish this, we should add a way to control the serialization format.We can do this by adding the CustomValueSerializer described in this wiki page - https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=75975878We should also add support to the geode-experimental-driver module to allow users ofÂ  that driver to customize the serialization of their objects.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.TestExecutionContext.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnRegionRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnMemberRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnGroupRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.ExecuteFunctionOnRegionIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.ExecuteFunctionOnMemberIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.ExecuteFunctionOnGroupIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.DisconnectClientIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.AuthorizationIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.LocatorConnectionAuthenticationDUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.ProtobufStreamProcessorTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionTerminatingStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionHandshakeStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionAuthorizingStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionAuthenticatingStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.NoSecurityProtobufConnectionStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.LegacySecurityProtobufConnectionStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ServerMessageExecutionContext.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.registry.ProtobufOperationContextRegistry.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufStreamProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufSerializationService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufProtocolService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufOpsProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufCachePipeline.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.security.AuthenticationRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.OqlQueryRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetServerOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.DisconnectClientRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.MessageExecutionContext.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.LocatorMessageExecutionContext.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.authentication.NotLoggedInAuthorizer.java</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.connection.API.proto</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.clientProtocol.proto</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.basicTypes.proto</file>
      <file type="M">geode-experimental-driver.src.test.java.org.apache.geode.experimental.driver.ValueEncoderTest.java</file>
      <file type="M">geode-experimental-driver.src.test.java.org.apache.geode.experimental.driver.IntegrationTestBase.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ValueEncoder.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufRegion.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufQueryService.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufFunctionService.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufFunction.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufDriver.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufChannel.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.DriverFactory.java</file>
    </fixedFiles>
  </bug>
  <bug id="4962" opendate="2018-3-29 00:00:00" fixdate="2018-4-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix typo and output format from &amp;#39;list gateways&amp;#39; gfsh command</summary>
      <description>The output printed from `list gateways` command needs some TLC:Sample output:Cluster-2 gfsh&gt;list gatewaysGatewaysGatewaySenderGatewaySender Id |Â  Â  Â  Â  Â  Â  Â  Â  Â  MemberÂ  Â  Â  Â  Â  Â  Â  Â  Â  | Remote Cluster Id | Â  Type Â  | StatusÂ  | Queued Events | Receiver Location---------------- | ---------------------------------------- | ----------------- | -------- | ------- | ------------- | -----------------ny Â  Â  Â  Â  Â  Â  Â  | 10.118.19.46(server-ln-1:31527)&lt;v1&gt;:1026 | 1 Â  Â  Â  Â  Â  Â  Â  Â  | Parallel | Running | 0 Â  Â  Â  Â  Â  Â  | 10.118.19.46:5248ny Â  Â  Â  Â  Â  Â  Â  | 10.118.19.46(server-ln-2:31545)&lt;v2&gt;:1027 | 1 Â  Â  Â  Â  Â  Â  Â  Â  | Parallel | Running | 0 Â  Â  Â  Â  Â  Â  | 10.118.19.46:5269GatewayReceiverÂ Â Â  Â  Â  Â  Â  Â  Â  Â  MemberÂ  Â  Â  Â  Â  Â  Â  Â  Â  | Port | Sender Count | Sender's Connected---------------------------------------- | ---- | ------------ | ----------------------------10.118.19.46(server-ln-1:31527)&lt;v1&gt;:1026 | 5407 | 7Â  Â  Â  Â  Â  Â  | [Ljava.lang.String;@7deec2d610.118.19.46(server-ln-2:31545)&lt;v2&gt;:1027 | 5071 | 7Â  Â  Â  Â  Â  Â  | [Ljava.lang.String;@6baa580fNote: 'Sender's Connected' should instead be 'Senders Connected'Also, need to pretty-print theÂ String[]Â for Senders Connected.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ListGatewayCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="4965" opendate="2018-3-29 00:00:00" fixdate="2018-7-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add security permissions to documentation for JNDI binding commands</summary>
      <description>The following commands need to be added to the permission list on these pages:http://geode.apache.org/docs/guide/14/managing/security/implementing_authorization.htmlhttps://cwiki.apache.org/confluence/display/GEODE/Geode+Integrated+Securityhttps://cwiki.apache.org/confluence/display/GEODE/Finer%20grained%20securitycreate jndi-binding: CLUSTER:MANAGElist jndi-binding: CLUSTER:READdescribe jndi-binding: CLUSTER:READdestroy jndi-binding: CLUSTER:MANAGE</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.security.implementing.authorization.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4974" opendate="2018-3-30 00:00:00" fixdate="2018-3-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JDBC connector is creating one connection pool per region</summary>
      <description>The issue is worse with partitioned regions, where a pool is created per bucket region. Need to move the pool creation to a centralized location used by all regions.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.JdbcConnectorServiceTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.DataSourceManagerUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.AbstractJdbcCallbackTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.JdbcConnectorServiceImpl.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.JdbcConnectorService.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.DataSourceManager.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.AbstractJdbcCallback.java</file>
    </fixedFiles>
  </bug>
  <bug id="4979" opendate="2018-4-1 00:00:00" fixdate="2018-4-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incorrect description in documentation of ResourcePermission in OQL</summary>
      <description>In the OQL Authorization, the description in documentation of ResourcePermission is incorrect. It is 'DATA:READ' in the description, but 'DATA:READ:RegionName' is actually.The document page is as follows:https://geode.apache.org/docs/guide/14/managing/security/implementing_authorization.htmlÂ </description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.security.implementing.authorization.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4981" opendate="2018-4-2 00:00:00" fixdate="2018-4-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: SSLConfigurationFactoryJUnitTest.getNonSSLConfiguration</summary>
      <description>This test seems to have been infected by some other test leaving SSL state behind.Â  For distributed tests we clean up SSL configuration state after a test is run but for non-distributed tests this isn't done.java.lang.AssertionError: expected:&lt;false&gt; but was:&lt;true&gt; at org.junit.Assert.fail(Assert.java:88) at org.junit.Assert.failNotEquals(Assert.java:834) at org.junit.Assert.assertEquals(Assert.java:118) at org.junit.Assert.assertEquals(Assert.java:144) at org.apache.geode.internal.net.SSLConfigurationFactoryJUnitTest.assertSSLConfig(SSLConfigurationFactoryJUnitTest.java:310) at org.apache.geode.internal.net.SSLConfigurationFactoryJUnitTest.getNonSSLConfiguration(SSLConfigurationFactoryJUnitTest.java:73)We probably need to sweep all of the SSL unit tests and make sure they're properly cleaning up after themselves by calling SocketCreatorFactory.close().</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.HTTPServiceSSLSupportJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.SSLConfigJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.SSLConfigIntegrationJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.LocatorSSLJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4984" opendate="2018-4-2 00:00:00" fixdate="2018-4-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add new subsection in docs: use cases</summary>
      <description>Our documentation is missing a place to present, discuss, and describe the implementation of various design patterns.Â  For example, how would a developer use Geode to implement an inline cache? How would a developer use Geode to pre-load a set of region entries?Â  There are also a large number of design patterns that increase fault tolerance by working over WAN.Introduce a new manual section called Use Cases, and add introductory sentences an placeholders where we can fill in more details (over time).</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4991" opendate="2018-4-3 00:00:00" fixdate="2018-4-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JDBC connector should not hard code quotes around identifiers in SQL statements</summary>
      <description>Currently the JDBC connector has double quotes around all identifiers in SQL statements it creates.Instead of always using double quotes, it should instead ask JDBC usingÂ java.sql.DatabaseMetaData.getIdentifierQuoteString() what the quote string is and use that.For databases that do not support quoting identifiers a space is returned.</description>
      <version>1.6.0</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.PostgresJdbcDistributedTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.MySqlJdbcDistributedTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcDistributedTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManagerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManagerIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlStatementFactoryTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.ColumnValueTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataView.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManager.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.TableMetaData.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlToPdxInstanceCreator.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlStatementFactory.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.DataSourceManager.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.ColumnValue.java</file>
    </fixedFiles>
  </bug>
  <bug id="4999" opendate="2018-4-4 00:00:00" fixdate="2018-1-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>support for tcserver requires specific tomcat 8 and 85 directories</summary>
      <description>currently we support tomcat 7 and tomcat 8 along with tcserver.Â  For tcserver to move to geode, it requires specific tomcat 85 directories to be created.Â  Currently tomcat 8 modules do support 8.5 and above but tcserver requires explicit artifacts to be created</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">extensions.geode-modules-assembly.release.tcserver.geode-p2p-tomcat-85.context-fragment.xml</file>
      <file type="M">extensions.geode-modules-assembly.release.tcserver.geode-cs-tomcat-85.context-fragment.xml</file>
      <file type="M">settings.gradle</file>
      <file type="M">extensions.geode-modules-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="5041" opendate="2018-4-10 00:00:00" fixdate="2018-5-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add post processor to new client protocol</summary>
      <description>Geode security supports post-processing of operation results before they are sent to clients. The new protocol doesn't currently integrate with the post-processor, which is a feature that users expect to apply to all clients. Make sure that users value massaging happens with any operation that returns a value.See org.apache.geode.security.PostProcessor.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.OqlQueryRequestOperationHandlerIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.authentication.AuthorizingFunctionServiceImplTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ServerMessageExecutionContext.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutIfAbsentRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.OqlQueryRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.KeySetOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetSizeRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetServerOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionNamesRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnRegionRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnMemberRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnGroupRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ClearRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.MessageExecutionContext.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.LocatorMessageExecutionContext.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.authentication.AuthorizingLocatorImpl.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.authentication.AuthorizingLocator.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.authentication.AuthorizingFunctionServiceImpl.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.authentication.AuthorizingFunctionService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.authentication.AuthorizingCache.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.authentication.AuthorizingCacheImplTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.authentication.ShiroAuthorizer.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.authentication.NotLoggedInAuthorizer.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.authentication.NoSecurityAuthorizer.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.authentication.AuthorizingCacheImpl.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.authentication.Authorizer.java</file>
    </fixedFiles>
  </bug>
  <bug id="5043" opendate="2018-4-10 00:00:00" fixdate="2018-4-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protobuf server and client are sending multiple packets for a single request</summary>
      <description>While doing some performance testing, we discovered that the protobuf client and protobuf server are actually sending multiple packets per request and response based on the the LinuxSystemStats.xmitPackets. The messages are small enough they should fit in a single packet.Â Looking at the code, it looks like in both the client and the server we are writing directly to socket.getOutputStream(). As soon as data is written to that outputstream it could be sent to the the remote side. Wrapping that in the BufferedOutputStream eleminates the duplicate packets and improves the performance.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.cache.tier.sockets.ProtobufServerConnectionTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.cache.tier.sockets.OutputCapturingServerConnectionTest.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufChannel.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerConnectionFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ProtobufServerConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.OriginalServerConnection.java</file>
    </fixedFiles>
  </bug>
  <bug id="5044" opendate="2018-4-10 00:00:00" fixdate="2018-4-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protobuf server does not log full stacktrace of failures</summary>
      <description>While doing some testing, we noticed that the protobuf server was not logging the stacktrace of some failures, which makes debugging difficult.Looking at the code, it looks like we were trying to log the exception as a separate log line. But in this case the exception just gets turned into a stringlogger.error("Invalid execution context found for operation {}", requestType);logger.error(exception); //This just prints the toString of the exceptionInstead, we should be logging the exception and message as a single linelogger.error("Invalid execution context found for operation {}", requestType, exception);</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufStreamProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufOpsProcessor.java</file>
    </fixedFiles>
  </bug>
  <bug id="5051" opendate="2018-4-11 00:00:00" fixdate="2018-4-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve gfsh destroy jndi-binding help prose</summary>
      <description>The current help text output for gfsh destroy jndi-binding contains some errors:Â gfsh&gt;help destroy jndi-bindingNAME destroy jndi-bindingIS AVAILABLE falseSYNOPSIS Destroy a jndi binding that holds the configuration for the XA datasource.SYNTAX destroy jndi-binding --name=value &amp;#91;--if-exists(=value)?&amp;#93;PARAMETERS name Name of the binding to be destroyed. Required: true if-exists Skip the destroy operation when a jndi binding with the same name does not exists. Without specifying this option, this command execution results into an error. Required: false Default (if the parameter is specified without value): true Default (if the parameter is not specified): falseWe can improve this text by changing the underlined prose to:gfsh&gt;help destroy jndi-bindingNAME destroy jndi-bindingIS AVAILABLE falseSYNOPSIS Destroy a JNDI binding that holds the configuration for an XA datasource.SYNTAX destroy jndi-binding --name=value &amp;#91;--if-exists(=value)?&amp;#93;PARAMETERS name Name of the binding to be destroyed. Required: true if-exists Skip the destroy operation when the specified JNDI binding does not exist. Without this option, an error results from the specification of a JNDI binding that does not exist. Required: false Default (if the parameter is specified without value): true Default (if the parameter is not specified): falseÂ </description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyJndiBindingCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="5057" opendate="2018-4-12 00:00:00" fixdate="2018-1-12 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Remove &amp;#39;experimental&amp;#39; from JDBC Connector code</summary>
      <description>Â Â AC: 'experimental' added back into JDBC Connector code.</description>
      <version>1.6.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcConnectorExceptionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.JdbcWriter.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.JdbcLoader.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.JdbcConnectorException.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriter.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlToPdxInstanceCreator.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.RegionMappingNotFoundException.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.RegionMappingExistsException.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.JdbcConnectorServiceImpl.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.JdbcConnectorService.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.ConnectionConfigNotFoundException.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.ConnectionConfigExistsException.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.configuration.ConnectorService.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcCliFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.AbstractJdbcCallback.java</file>
      <file type="M">geode-connectors.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="5068" opendate="2018-4-13 00:00:00" fixdate="2018-4-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade Jackson to 2.9.5</summary>
      <description>We're a patch version behind, let's try to stay on the latest.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-web-api.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-pulse.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-assembly.src.main.dist.NOTICE</file>
    </fixedFiles>
  </bug>
  <bug id="5070" opendate="2018-4-13 00:00:00" fixdate="2018-9-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support --member option for describe &amp; list jdbc connector commands</summary>
      <description>When cluster configuration service is disabled user have to provide --member option in-order to describe and list connections and mappings.Â </description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.main.resources.org.apache.geode.internal.sanctioned-geode-connectors-serializables.txt</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="5071" opendate="2018-4-13 00:00:00" fixdate="2018-5-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update the gfsh limitations documentation</summary>
      <description>The list of gfsh limitations should be updated on this page:https://geode.apache.org/docs/guide/14/configuring/cluster_config/gfsh_persist.html#concept_r22_hyw_bl__section_bn3_23p_y4Under the line: "You cannot directly modify the attributes of the following objects:"Please remove:cache-listenercache-loadercache-writercustom-expirydeclarableFurther down, please remove:Adding JNDI bindingsÂ </description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.persist.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.config.troubleshooting.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5072" opendate="2018-4-13 00:00:00" fixdate="2018-11-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Java clients should not access or modify internal regions</summary>
      <description>When a server processes a client message that contains a region name, it should use getApplicationRegion instead of getRegion.Â </description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.PrCqUsingPoolDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqQueryUsingPoolDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.InternalCacheForClientAccessTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GatewayReceiverCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.AcceptorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.CachedRegionHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCacheForClientAccess.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CreateRegionProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.ClientStatsManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.ClientHealthMonitoringRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.DynamicRegionFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ServerRegionProxy.java</file>
    </fixedFiles>
  </bug>
  <bug id="5074" opendate="2018-4-13 00:00:00" fixdate="2018-11-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>REST dev client should not access or modify internal regions</summary>
      <description>When a request is processed fromÂ a REST dev client that contains a region name, then getApplicationRegion should be used instead of getRegion.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.support.CacheProviderImpl.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.support.CacheProvider.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.QueryAccessController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.CommonCrudController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.AbstractBaseController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCacheForClientAccess.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.rest.internal.web.RestServersIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5076" opendate="2018-4-13 00:00:00" fixdate="2018-11-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>jmx client should not access or modify internal regions</summary>
      <description>When a request from a jmx client (including gfsh) is processed that contains a region name, then getApplicationRegion should be used instead of getRegion.Â </description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.CommonCrudController.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.management.internal.security.GfshCommandsSecurityTestBase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.RegionDestroyFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.ManagementService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.SystemManagementService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.Manager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementAgent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.LocalManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.JmxManagerLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.JmxManagerAdvisee.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.FederatingManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.functions.GetRegionNamesFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.domain.XmlEntity.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.modes.CommandModes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.UserFunctionExecution.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionDestroyFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionAlterFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ImportDataFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GetRegionDescriptionFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ExportLogsFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ExportDataFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DestroyIndexFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DataCommandFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.QueryDataFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.CacheServerBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.BeanUtilFuncs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.BaseManagementService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.GfshCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCacheForClientAccess.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="5103" opendate="2018-4-18 00:00:00" fixdate="2018-4-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>During rebalance, a client node may miss a transactional event</summary>
      <description>During rebalance, a new primary bucket could be created on another node while the original primary bucket become secondary in a short period of time. If a transaction occurs on the primary bucket node, TXCommitMessage will be sent to the secondary primary bucket node. There is a race that a event could be missed to be added to the subscription queue when the now secondary bucket is being removed to satisfy the redundancy.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug id="5104" opendate="2018-4-18 00:00:00" fixdate="2018-4-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI output git SHA when updating passing reference file.</summary>
      <description>When concourse updates the file indicating the SHA that has passed all tests, print it out.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.update-passing-ref.sh</file>
    </fixedFiles>
  </bug>
  <bug id="5106" opendate="2018-4-18 00:00:00" fixdate="2018-4-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI Failure: ParallelWANConflationOffHeapDUnitTest.testParallelPropagationBatchConflation failed with AssertionError</summary>
      <description>https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/DistributedTest/builds/282org.apache.geode.internal.cache.wan.offheap.ParallelWANConflationOffHeapDUnitTest &gt; testParallelPropagationBatchConflation FAILEDjava.lang.AssertionError: Event in secondary queue should be 0 after dispatched expected:&lt;0&gt; but was:&lt;11&gt;</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelWANConflationDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5109" opendate="2018-4-19 00:00:00" fixdate="2018-5-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Concurrent create lucene reindex ops must fail</summary>
      <description>Concurrent lucene reindex ops originating with same index profile must fail.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesReindexDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneServiceImplJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CreateRegionProcessor.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneServiceImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="5111" opendate="2018-4-19 00:00:00" fixdate="2018-5-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>show missing-disk-stores sometimes does not show the missing disk stores</summary>
      <description>When geode logs are showing there is in fact a missing disk store, running the show-missing-disk-store command sometimes returns that there are no missing disk stores</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.SystemPropertyHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheDistributionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketPersistenceAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug id="5114" opendate="2018-4-19 00:00:00" fixdate="2018-4-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Archive UITest results</summary>
      <description>It would beÂ great to archive test results for concourse job UITest.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  <bug id="5118" opendate="2018-4-20 00:00:00" fixdate="2018-4-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix common typos in strings and comments</summary>
      <description>Some string literals and comments contain common typographical errors, e.g., "teh" instead of "the". These ought to be fixed.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.PdxBasedCrudController.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.GatewayReceiverImplJUnitTest.java</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.lib.jquery.sparkline.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.lib.jquery.jqGrid.src.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.lib.jquery-1.7.2.js</file>
      <file type="M">geode-pulse.src.main.webapp.regionDetail.html</file>
      <file type="M">geode-pulse.src.main.webapp.queryStatistics.html</file>
      <file type="M">geode-pulse.src.main.webapp.memberDetails.html</file>
      <file type="M">geode-pulse.src.main.webapp.dataBrowser.html</file>
      <file type="M">geode-pulse.src.main.webapp.css.style.css</file>
      <file type="M">geode-pulse.src.main.webapp.css.popup.css</file>
      <file type="M">geode-pulse.src.main.webapp.clusterDetail.html</file>
      <file type="M">geode-old-versions.src.test.java.org.apache.geode.test.dunit.standalone.VersionManagerJUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.tier.sockets.DurableClientTestCase.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.PRDeltaPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.RedundancyLevelPart3DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.InterestListEndpointDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.Bug36805DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.Bug36269DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistentPartitionedRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionSingleNodeOperationsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.OplogJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.TestBlockingHARegionQueue.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.PutAllDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.OperationsPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.HASlowReceiverDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.HARegionQueueDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.HARegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.HAEventIdPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.EventIdOptimizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.BlockingHARegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.FaultingInJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegRecoveryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegCachexmlGeneratorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DeltaPropagationStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DeltaPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ClientServerInvalidAndDestroyedEntryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupFileCopierIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.partitioned.PRQueryDUnitHelper.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.ResultsCollectionWrapperLimitJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.ResultsBagLimitBehaviourJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.NWayMergeResultsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.ConcurrentIndexInitOnOverflowRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.AsynchIndexMaintenanceJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.QueryUsingFunctionContextDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheMapTxnDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.main.WANBootStrapping.Site2.Add.java</file>
      <file type="M">geode-core.src.test.java.com.main.MyDistributedSystemListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.ExportLogsCacheWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.GfshParser.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.jta.TransactionManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalInstantiator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.datasource.AbstractPoolCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPITestBase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.MBeanUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ExecuteFunctionOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.aggregate.CountPRQueryNode.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.Bag.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledIndexOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledSelect.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.ExecutionContext.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.AbstractMapIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.CompactRangeIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.FunctionalIndexCreationHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.HashIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.IndexData.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.MemoryIndexStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.MapIndexable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.QCompiler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.ResultsBag.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.ResultsCollectionWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.SortedStructBag.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.StructBag.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.SelectResults.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.deadlock.DependencyGraph.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.CacheCollector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupFileCopier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.DistributedRegionFunctionResultSender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.FunctionStreamingResultCollector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.LocalResultCollectorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.MemberFunctionExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.MemberFunctionResultSender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.PartitionedRegionFunctionResultSender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.PartitionedRegionFunctionResultWaiter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.StreamingFunctionOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ha.HARegionQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InitialImageOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionQueryEvaluator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.BucketBackupMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.FlushMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.IndexCreationMsg.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PRFunctionStreamingResultCollector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RegionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RemoveIndexesMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientHealthMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetAllForRI.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.UnregisterInterest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXManagerImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="512" opendate="2015-10-28 00:00:00" fixdate="2015-10-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>unit test suspect string detector needs to provide more info</summary>
      <description>The suspect string detector used by the unit test framework only gives a single line that is suspect. This makes it hard to fix suspect string tickets.Often times the suspect is the beginning of a exception stack. If the entire call stack was included it would be helpful.Also having some context around the suspect string can help. For example what thread logged the suspect and what happened right before and after the suspect can help.Often times the actual logs are no longer available and getting the suspect string to reproduce can take lots of time.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.batterytest.greplogs.LogConsumer.java</file>
    </fixedFiles>
  </bug>
  <bug id="5130" opendate="2018-4-24 00:00:00" fixdate="2018-1-24 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Refactor pipeline in anticipation of PR pipeline</summary>
      <description>In order to facilitate the upcoming PR Pipeline functionality, refactor the geode pipeline to be branch-independent, and dry up configuration via templates.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.yml</file>
      <file type="M">ci.pipelines.develop.yml</file>
      <file type="M">ci.pipelines.geode-build.base.yml</file>
      <file type="M">ci.scripts.test-run.sh</file>
    </fixedFiles>
  </bug>
  <bug id="5142" opendate="2018-4-26 00:00:00" fixdate="2018-4-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>new Thread Monitoring Mechanism</summary>
      <description>One of the most severe issues hitting our real time application is thread stuck for multiple reasons, such as long lasting locks, deadlocks, threads which wait for reply forever in case of packet drop issue etc...Such kind of stuck are under Radar of the existing system health check methods. In mission critical applications, this will be resulted as an immediate outage.Here we introduceÂ thread monitoring mechanism, to detect threads which are stuck for any reason.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.monitoring.ThreadsMonitoringProcessJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.monitoring.executor.PooledExecutorGroup.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.monitoring.ThreadsMonitoringProcess.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.monitoring.executor.AbstractExecutor.java</file>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderImpl.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.serial.RemoteSerialGatewaySenderEventProcessor.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.serial.RemoteConcurrentSerialGatewaySenderEventProcessor.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.parallel.RemoteParallelGatewaySenderEventProcessor.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.parallel.RemoteConcurrentParallelGatewaySenderEventProcessor.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderImpl.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.OneTaskOnlyDecoratorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.serial.TestSerialGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderEventProcessorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.serial.ConcurrentSerialGatewaySenderEventProcessorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderHelper.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionConfigJUnitTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.ScheduledThreadPoolExecutorWithKeepAlive.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.OneTaskOnlyExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.ConcurrentSerialGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ConcurrentParallelGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.AcceptorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PRHARedundancyProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PoolFactoryImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ExpiryTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.ResourceManagerStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.InternalResourceManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpServer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.SerialQueuedExecutorWithDMStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.PooledExecutorWithDMStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.LonerDistributionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.FunctionExecutionPooledExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ClusterDistributionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PoolImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.asyncqueue.internal.SerialAsyncEventQueueImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.asyncqueue.internal.ParallelAsyncEventQueueImpl.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.ScheduledThreadPoolExecutorWithKeepAliveJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.wan.parallel.WaitUntilParallelGatewaySenderFlushedCoordinatorJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5145" opendate="2018-4-26 00:00:00" fixdate="2018-1-26 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Lucene index needs to support being destroyed while region is being created</summary>
      <description>Attempting to destroy a lucene index while the region is being createdÂ may leave theÂ lucene service in an inconsistent state.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexDestroyDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneDestroyIndexFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneIndexDestroyedException.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneServiceImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneRegionListener.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexForPartitionedRegion.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexCreationProfile.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.DestroyLuceneIndexMessage.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommands.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.LuceneCliStrings.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneDestroyIndexFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CliUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.GfshCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
    </fixedFiles>
  </bug>
  <bug id="5146" opendate="2018-4-27 00:00:00" fixdate="2018-5-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>WAN Information view in Pulse shows wrong status for remote clusters</summary>
      <description>GEODE-2186 fixed to address that the status should be cumulative and not just the last sender's status, butÂ introduced connection statusÂ of remote cluster based onÂ gateway sender being runningÂ rather thanÂ being connected.This ticket is to fix the connection status to infer from GatewaySenderMXBean.isConnected while considering whether sender is a serial or parallel. serial - primary connected -&gt;Â true serial - primary not connected -&gt;Â false parallel - all members connected -&gt; true parallel - not all members connected -&gt; false</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.beans.DistributedSystemBridgeJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.DistributedSystemBridge.java</file>
    </fixedFiles>
  </bug>
  <bug id="5150" opendate="2018-4-27 00:00:00" fixdate="2018-5-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update docs on CacheLoader</summary>
      <description>The docs on configuring and installing a Cacheloader interface are not current. Revise them, and include information on altering a region and deploying a JAR file.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.alter.html.md.erb</file>
      <file type="M">geode-docs.developing.outside.data.sources.implementing.data.loaders.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5255" opendate="2018-5-25 00:00:00" fixdate="2018-5-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In a race condition, a colocated bucket may not be created during rebalance when member nodes are restarted</summary>
      <description>During rebalance, a member node may request a newly started member node to grab a bucket from a parent partitioned region based on its calculated model. When the new member creates the parent bucket, it is required to grab the bucket's colocated child buckets. If the colocated child bucket underlying partitioned region is not yet initialized, the child bucket will not be created on the member.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.7.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.ManageBackupBucketMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
    </fixedFiles>
  </bug>
  <bug id="5273" opendate="2018-6-1 00:00:00" fixdate="2018-6-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ForceReattemptException must not be wrapped in another ForceReattemptException</summary>
      <description>InÂ  waitForCacheOrFunctionException ForceReattemptException is wrapped in another ForceReattempException again.This function should directly throw the exception rather than wrapping it again</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.FunctionStreamingResultCollector.java</file>
    </fixedFiles>
  </bug>
  <bug id="5274" opendate="2018-6-1 00:00:00" fixdate="2018-6-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Handle closing CacheClientProxy during cq execution</summary>
      <description>During execution of a cq the CacheClientProxy may be closed resulting in operations being executed on null values.Null checks are needed at in executeCQ to make sure that the CacheClientProxy is still active.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
    </fixedFiles>
  </bug>
  <bug id="5276" opendate="2018-6-1 00:00:00" fixdate="2018-6-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>transaction commits can cause CachePerfStats entries to go negative</summary>
      <description>The statistic CachePerfStats entries is a count of the number of entries in a region or cache. But the transaction code in some cases decrements it too many times causing it to go negative.Â </description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTxApplyDestroyTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug id="5302" opendate="2018-6-8 00:00:00" fixdate="2018-6-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>the totalLiveCount should be set to 0 after oplog is compacted (all live data has been copied forward to new oplog)</summary>
      <description>There are race conditions in which liveEntries list is empty but the liveCount has not yet been decremented. liveCount should be set to 0 after liveEntries list is successfully copied forward.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.7.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Oplog.java</file>
    </fixedFiles>
  </bug>
  <bug id="5307" opendate="2018-6-8 00:00:00" fixdate="2018-6-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Hang with servers all in waitForPrimaryMember and one server in NO_PRIMARY_HOSTING state</summary>
      <description>I've run into a hang in a test where servers are continuously creating PRs, doing putAll ops on them and closing/local-destroying the PR. Sometimes the servers hang with any thread needing a particular bucket in waitingForPrimaryMember().This seems to happen because of this sequence of events:1. two servers create a partitioned region2. one server initiates a putAll and requests the other server manage a bucket3. the putAll server closes or locally-destroys its region4. the close() operation completes5. the other server initializes its bucket and still uses the requesting server as a primaryElector. This keeps it from deciding to volunteer to become primary.The problem is that the server that closed its region caused exceptions to be thrown in the putAll thread and abandon creation of the bucket. No-one will ever trip the switch that makes the other server become the primary for the bucket.</description>
      <version>1.1.0,1.2.0,1.2.1,1.3.0,1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.Host.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BucketAdvisorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PRHARedundancyProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RegionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug id="5308" opendate="2018-6-11 00:00:00" fixdate="2018-8-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - simplify terminology: "cache transactions" can be "transactions"</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.with.external.db.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.monitor.troubleshoot.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.how.cache.transactions.work.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.data.location.cache.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transaction.performance.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.by.region.type.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5311" opendate="2018-6-11 00:00:00" fixdate="2018-6-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - simplify navigation for "Client Transactions" section</summary>
      <description>The "Client Transactions" section has short subsections which do not need entries in the left-hand navigation pane. Remove the subnav links for those subsections.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5313" opendate="2018-6-11 00:00:00" fixdate="2018-8-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - consolidate transaction coding examples</summary>
      <description>The examples are short, but currently housed in separate files.Merge into a single file, simplify left-hand nav.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.suspend.resume.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.coding.examples.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactions.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactional.function.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.jca.adapter.example.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5318" opendate="2018-6-12 00:00:00" fixdate="2018-8-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>create defined index does not update cluster config if methods are invoked in the from clause</summary>
      <description>Steps to reproduce the issue. start locator start server create region define index as "define index --name=index --region="Member.entrySet" --expression="value.getId" " create defined indexesThis is will result in a failure causing no updates to the cluster config for the newly created indexes, even though the indexes are created. So when a server is restarted , it won't recreate these indexes.Cause of the problem:We try to extract the region name to update the cluster config from the index's "from clause".We end up getting &lt;region_name&gt;.entrySet . But there are no region named as such so no updates to the cluster config.Â SolutionÂ  Use the fix for GEODE-2764 where we can extract the proper region name from the "from clause"problematic code:RegionConfig region = config.findRegionConfiguration(index.getFromClause());fix:String regionPath = getValidRegionName(index.getFromClause(), config);RegionConfig regionConfig = config.findRegionConfiguration(regionPath);Example:Below we can see an complete execution in gfsh which leads to this failure. Including the failure to update the config and inability of the server to recreate the index after being restarted._________________________ __ / _____/ ______/ ______/ /____/ / / / __/ /___ /_____ / _____ / / /__/ / ____/ _____/ / / / / /______/_/ /______/_/ /_/ 1.8.0-SNAPSHOTMonitor and Manage Apache Geodegfsh&gt;start locatorStarting a Geode Locator in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/untie-happy-can.......Locator in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/untie-happy-can on 10.0.0.40[10334] as untie-happy-can is currently online.Process ID: 29310Uptime: 4 secondsGeode Version: 1.8.0-SNAPSHOTJava Version: 1.8.0_161Log File: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/untie-happy-can/untie-happy-can.logJVM Arguments: -Dgemfire.enable-cluster-configuration=true -Dgemfire.load-cluster-configuration-from-dir=false -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806Class-Path: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-core-1.8.0-SNAPSHOT.jar:/home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-dependencies.jarSuccessfully connected to: JMX Manager [host=10.0.0.40, port=1099]Cluster configuration service is up and running.gfsh&gt;start serverStarting a Geode Server in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo......Server in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo on 10.0.0.40[40404] as fix-vast-kilo is currently online.Process ID: 29498Uptime: 2 secondsGeode Version: 1.8.0-SNAPSHOTJava Version: 1.8.0_161Log File: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo/fix-vast-kilo.logJVM Arguments: -Dgemfire.default.locators=10.0.0.40[10334] -Dgemfire.start-dev-rest-api=false -Dgemfire.use-cluster-configuration=true -XX:OnOutOfMemoryError=kill -KILL %p -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806Class-Path: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-core-1.8.0-SNAPSHOT.jar:/home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-dependencies.jargfsh&gt;create region --name=Member --type=PARTITION Member | Status------------- | -------------------------------------------fix-vast-kilo | Region "/Member" created on "fix-vast-kilo"gfsh&gt;define index --name=memberPartyIdIndex --expression="value.getPartyId" --region="/Member.entrySet"Index successfully defined with following detailsName : memberPartyIdIndexExpression : value.getPartyIdRegionPath : /Member.entrySetgfsh&gt;create defined indexes Member | Status | Message--------------------------------------- | ------ | --------------------------------10.0.0.40(fix-vast-kilo:29498)&lt;v1&gt;:1025 | OK | Created index memberPartyIdIndexfailed to update cluster config for cluster. Reason: RegionConfig is nullgfsh&gt;list indexes Member Name | Member ID | Region Path | Name | Type | Indexed Expression | From Clause | Valid Index------------- | --------------------------------------- | ----------- | ------------------ | ----- | ------------------ | ---------------- | -----------fix-vast-kilo | 10.0.0.40(fix-vast-kilo:29498)&lt;v1&gt;:1025 | /Member | memberPartyIdIndex | RANGE | value.getPartyId | /Member.entrySet | truegfsh&gt;stop server --nameoptional --name: Member name or ID of the Cache Server in the Geode cluster.; no default valuegfsh&gt;stop server --name=fix-vast-kiloStopping Cache Server running in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo on 10.0.0.40[40404] as fix-vast-kilo...Process ID: 29498Log File: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo/fix-vast-kilo.log...gfsh&gt;start server --nameoptional --name: The member name to give this Cache Server in the Geode cluster.; no default valuegfsh&gt;start server --nameoptional --name: The member name to give this Cache Server in the Geode cluster.; no default valuegfsh&gt;start server --name=fix-vast-kiloStarting a Geode Server in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo......Server in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo on 10.0.0.40[40404] as fix-vast-kilo is currently online.Process ID: 29893Uptime: 2 secondsGeode Version: 1.8.0-SNAPSHOTJava Version: 1.8.0_161Log File: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo/fix-vast-kilo.logJVM Arguments: -Dgemfire.default.locators=10.0.0.40[10334] -Dgemfire.start-dev-rest-api=false -Dgemfire.use-cluster-configuration=true -XX:OnOutOfMemoryError=kill -KILL %p -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806Class-Path: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-core-1.8.0-SNAPSHOT.jar:/home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-dependencies.jargfsh&gt;list regionList of regions---------------Membergfsh&gt;list indexesNo Indexes Found</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigurationIndexWithFromClauseDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="5376" opendate="2018-7-3 00:00:00" fixdate="2018-7-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In JTA, Geode afterCompletion may fail even though the JTA host still available</summary>
      <description>When JTA is hosted on a server S2, and there is another server S1 handles the client JTA request. After the S1 executed JTA beforeCompletion initiated from client, the S2's P2P reader thread for S1 will hold the locks for the JTA. If at the time, S1 is lost/shut down, client will failover to another server to try afterCompletion. The afterCompletion attempt will fail as the new thread does not hold the lock. This will cause the client JTA to fail due to CommitConflict, even though there is not concurrent commit operations.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.7.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXSynchronizationRunnableTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tx.ClientTXStateStub.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXSynchronizationRunnable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.TXSynchronizationCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PausedTXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistTXStateProxyImplOnCoordinator.java</file>
    </fixedFiles>
  </bug>
  <bug id="5378" opendate="2018-7-3 00:00:00" fixdate="2018-7-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AcceptanceTests fail because they cannot start service db</summary>
      <description>The build 125-127 have had 10 failures that were related to failure to start a service db in the JDBC tests.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.docker.initdocker</file>
    </fixedFiles>
  </bug>
  <bug id="54" opendate="2015-6-8 00:00:00" fixdate="2015-3-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing javadocs</summary>
      <description>The current build process is not generating javadocs and once they're generated it's still be defined where to host the pages. Current Geode docs are hosted at http://geode-docs.cfapps.io/ but javadocs can be part of that or be hosted under geode.incubator.apache.org.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.docs.index.html</file>
      <file type="M">geode-site.website.Rules</file>
      <file type="M">geode-site.website.README.md</file>
      <file type="M">geode-site.website.layouts.header.html</file>
      <file type="M">geode-site.website.layouts.footer.html</file>
      <file type="M">geode-site.website.layouts.default.html</file>
      <file type="M">geode-site.website.content.community.index.html</file>
    </fixedFiles>
  </bug>
  <bug id="5401" opendate="2018-7-6 00:00:00" fixdate="2018-10-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Client transaction should not be expired once it is failed over</summary>
      <description>When a client is disconnected from the server, the client's originated transactions are scheduled to be expired. However, when the client transaction failed over, the expire transaction task is not cancelled. If transaction is not finished/committed within the timeout period (transactionTimeToLive default to 180 seconds), the transaction will be expired. The consequence is that only part of the transaction gets committed. The expire transaction task will close the transaction and remove it from the hosted txstates map removing the existing operations. The subsequent operations will starts a new transaction &amp;#8211; only the operations afterwards will be recored and committed.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXStateProxyImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXManagerImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DSFIDFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientHealthMonitor.java</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5402" opendate="2018-7-9 00:00:00" fixdate="2018-8-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Disk recovery sometimes hangs when no member is recognized as having the most recent data</summary>
      <description>During disk recovery, sometimes a the system will hang because every member is waiting for others to initialize first, and nobody is recognized as having the most recent data.This can happen when a member persists its most recent view of another member to disk, then that member is killed before it can remove the older view of the other member from the op log files. When starting the cluster from disk, the member then has two views of the other member, one recent and the other stale. The member then decides is needs to wait for the stale view of the other member which causes the hang.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.TransformUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.sequencelog.RegionLogger.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentStateQueryResults.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentStateQueryMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentMemberPattern.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentMemberID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskInitFile.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheDistributionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketPersistenceAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug id="5408" opendate="2018-7-9 00:00:00" fixdate="2018-7-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document gfsh remove -all option not avail for partitioned regions</summary>
      <description>The command reference page for gfsh remove in the documentation ought to explicitly say that the -all option is not available for partitioned regions.Â  The gfsh help text and the error message (if one tries to use the -all option do explicitly state this.Â  So, just the docs need updating.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.remove.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="541" opendate="2015-11-11 00:00:00" fixdate="2015-11-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The latest GemFire 800x clients can&amp;#39;t connect to Geode servers</summary>
      <description>GemFire 8009 introduced an on-the-wire compatibility change between client and server. Geode needs to be updated to support this change.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.Version.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunctionSingleHop.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteFunction66.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.CommandInitializer.java</file>
    </fixedFiles>
  </bug>
  <bug id="5420" opendate="2018-7-11 00:00:00" fixdate="2018-8-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protect events in HAContainer from being removed prematurely</summary>
      <description>This can occur when:1) Events are added to queuedEvents during message dispatcher initialization2) Events are added to giiQueue while serving initial image to peerWe have seen this issue when QRM messages are being processed after becoming primary. This causes the event to be removed prematurely from the HAContainer, and then the wrapper is in a bad state (null client update message) when we try to replace the event.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.HAEventWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ha.HARegionQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ha.HAContainerMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.HARegion.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.ha.HARegionQueueJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.ha.HARegionQueueIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5421" opendate="2018-7-12 00:00:00" fixdate="2018-1-12 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Creating region with gateway sender immediately after creating the gateway sender in gfsh unexpectedly fails.</summary>
      <description>In the attached gfsh script I am attempting to start up a single cluster that includes gateway senders and receivers on each server for the example-region.After starting the locator and 2 servers, I create the gateway receivers and senders. If I then try to create the region 'example-region' and associated it with the gateway sender, I get the following error:There are no GatewaySenders defined currently in the system.If I create the region in a different script, it works. This is unexpected and I would like to have this all in a single startup script.</description>
      <version>1.6.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-web.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-web-api.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-pulse.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-assembly.src.test.resources.expected.jars.txt</file>
      <file type="M">geode-assembly.src.main.dist.NOTICE</file>
    </fixedFiles>
  </bug>
  <bug id="5426" opendate="2018-7-12 00:00:00" fixdate="2018-7-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Suites that do not modify behavior rerun tests in the pipeline</summary>
      <description>The only JUnit Suite that effects different behavior is CommandOverHttpDUnitTest. All others should be removed to steamline testing.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.process.ProcessTestFrameworkTestSuite.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.golden.GoldenTestFrameworkTestSuite.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.StoredObjectTestSuite.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.LoggingUnitTestSuite.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.LoggingIntegrationTestSuite.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.log4j.Log4jUnitTestSuite.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.log4j.Log4jIntegrationTestSuite.java</file>
    </fixedFiles>
  </bug>
  <bug id="543" opendate="2015-11-11 00:00:00" fixdate="2015-4-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade Spring Shell and Jline libraries used by gfsh</summary>
      <description>We are still using Jline1.0 and Spring shell 1.0. Need to upgrade to the latest and greatest.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.shell.jline.ANSIBuffer.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.management.internal.cli.HeadlessGfsh.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.ShellCommandsDUnitTest.java</file>
      <file type="M">gradle.rat.gradle</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.partitioned.PersistentPartitionedRegionTestBase.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.util.CLIConsoleBufferUtil.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.shell.jline.GfshUnsupportedTerminal.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.shell.jline.GfshHistory.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.shell.jline.CygwinMinttyTerminal.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.shell.jline.ANSIHandler.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.shell.Gfsh.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.Launcher.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.ShellCommands.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.CliUtil.java</file>
      <file type="M">gemfire-core.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="5432" opendate="2018-7-13 00:00:00" fixdate="2018-7-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Doc correction of gfsh command line example</summary>
      <description>There's a typo in file tools_modules/gfsh/os_command_line_execution.html within the docs. The gfsh connect command on that page uses a --locators=... argument. The argument should be --locator, without an 's'.So this is a single character fix within the docs.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.os.command.line.execution.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5513" opendate="2018-8-1 00:00:00" fixdate="2018-8-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Clients may miss PR region events due to race during registerInterest</summary>
      <description>Here is the scenario: Consider two servers and client: Server1 hosting the primary bucket Server2 hosting secondary bucket and also primary queue for the Client2 Client1 Doing remove operation Client2 doing register interest The Client1 starts remove-all operation At the same time Client2 is registering interest Server1 receives the remove-all operation processes it, and sends the adjunct message to the Server2 (Its still not yet received the interest info from server1) While the remove-all to server2 in flight Server2 sends interest profile info to Server1 for client2; and then Server2 (as it is hosting the primary queue) starts building the initial image snapshot for the interest. When building initial image for PR preference is given to collect data from local node. During this time the removal message is still in flight and hasn't applied on Server2. The initial image for interest registration calculates the snapshot from local data, and sends it to client, missing the remove-all op.This could happen with non-bulk ops; but it gets worse with bulk ops as the time taken to replicate the bulk ops will take more time.The solution is to build the initial register interest response by getting the data from primary bucket. This will add little overhead in building the interest response; but considering that most or always the register response will involve remote node, this may be negligible.Clients registering interest in a region</description>
      <version>1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="5515" opendate="2018-8-1 00:00:00" fixdate="2018-8-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Transaction originated from peer sets the onBehalfOfClientMember on remote transaction host</summary>
      <description>Currently a transaction originated from a peer and if the transaction host is on another server, the transaction onBehalfOfClientMember is incorrectly set on the transaction host.</description>
      <version>1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXStateTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PausedTXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PartitionMessage.java</file>
    </fixedFiles>
  </bug>
  <bug id="5519" opendate="2018-8-2 00:00:00" fixdate="2018-8-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add stackdriver monitoring to heavy-lifters</summary>
      <description>In order to properly gauge resource requirements implement stackdriver monitoring.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.start.instance.sh</file>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
      <file type="M">ci.images.google-geode-builder.packer.json</file>
    </fixedFiles>
  </bug>
  <bug id="5520" opendate="2018-8-2 00:00:00" fixdate="2018-8-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Inconsistency created by delta-propagation interaction with concurrency control</summary>
      <description>I tracked a cache inconsistency down to a delta propagation operation that failed over from one server to another and then failed to apply the delta on the new server.When the full value is sent from the client the message is not marked as a possible-duplicate. Because it was missing this flag the server did not try to recover a concurrency version tag for the operation but instead generated a new version.When this server propagated the operation to another server it was rejected by that server because it had already processed the operation from the client's original attempt. It recognized this by way of the operation's EventID being recorded in its EventTracker.This resulted in one server having version X and the other having version X+1 for the entry.The client then destroyed the same entry with the same server, generating version X+1 in that server. When the server propagated the operation the other server already had X+1 and threw a ConcurrentCacheModificationException. The result was one server having a tombstone for the entry and the other having the value from the delta-propagation operation.This can be fixed by setting the possible-duplicate flag on the message from the client that contains the full value. The server will then search for a concurrency version tag and use it instead of generating a new one.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PutOp.java</file>
    </fixedFiles>
  </bug>
  <bug id="5521" opendate="2018-8-3 00:00:00" fixdate="2018-8-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>After an exception is received from a remote server function execution, local threads should not send back result to client later</summary>
      <description>In the method cmdExecute()if the local co-ordinator receives an FunctionException of type FunctionInvocationTargetException or QueryInvocationTargetException from the remote server, setException is called which sets the lastResultReceived flag. This flag prevents other results from other threads to be sent to the client, as the client may have moved on. If there were any other function exception it will just send the exception but not set the flag. if (cause instanceof FunctionInvocationTargetException || cause instanceof QueryInvocationTargetException) { if (cause instanceof InternalFunctionInvocationTargetException) { // Fix for #44709: User should not be aware of // InternalFunctionInvocationTargetException. No instance of // InternalFunctionInvocationTargetException is giving useful // information to user to take any corrective action hence logging // this at fine level logging // 1&gt; When bucket is moved // 2&gt; Incase of HA FucntionInvocationTargetException thrown. Since // it is HA, fucntion will be reexecuted on right node // 3&gt; Multiple target nodes found for single hop operation // 4&gt; in case of HA member departed if (logger.isDebugEnabled()) { logger.debug(LocalizedMessage.create( LocalizedStrings.ExecuteFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0, new Object[] {function}), fe); } } else if (functionObject.isHA()) { logger.warn(LocalizedMessage.create( LocalizedStrings.ExecuteRegionFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0, function + " :" + message)); } else { logger.warn(LocalizedMessage.create( LocalizedStrings.ExecuteRegionFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0, function), fe); } resultSender.setException(fe); } else { if(!resultSender.isLastResultReceived()){ resultSender.setLastResultReceived(true); logger.warn(LocalizedMessage.create( LocalizedStrings.ExecuteRegionFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0, function), fe); sendException(hasResult, clientMessage, message, serverConnection, fe); } }</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction61.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.BaseCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.ServerToClientFunctionResultSender65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.ServerToClientFunctionResultSender.java</file>
    </fixedFiles>
  </bug>
  <bug id="5522" opendate="2018-8-3 00:00:00" fixdate="2018-8-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Gradle 4.9</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.wrapper.gradle-wrapper.properties</file>
      <file type="M">gradle.wrapper.gradle-wrapper.jar</file>
      <file type="M">gradle.properties</file>
    </fixedFiles>
  </bug>
  <bug id="5541" opendate="2018-8-8 00:00:00" fixdate="2018-1-8 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>A create followed by a destroy of the same key in a transaction invokes cache listener on remote node</summary>
      <description>A create followed by a destroy of the same key in a transaction is treated as a no op on the near side (transaction host), and no destroy event is invoked on the transaction host. The destroy operation is distributed to remote nodes (far side). The intend is to make sure a normal region can destroy the key if it exists (far side). Currently a destroy event is invoked for this no op on remote node even though the node does not have the key.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.8.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.LocalRegionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.RegionCommitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXEntryState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.partitioned.PersistentPartitionedRegionWithTransactionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5546" opendate="2018-8-8 00:00:00" fixdate="2018-8-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>auto-reconnecting member reuses old address including vmViewId</summary>
      <description>During network-down testing I found that if I restore the network immediately after all "losing side" servers go into auto-reconnect that sometimes they receive a view-preparation message from the surviving cluster that holds their old membership ID. They use this ID instead of waiting for a valid new ID and end up being shut down as rogue processes.For instance, this process used to have an identifier with &lt;v3&gt; before it went into auto-reconnect. When it tried to rejoin it ended up using that same identifier due to receiving a view-preparation message holding it:&amp;#91;info 2018/07/28 22:17:14.588 PDT gemfire1_rs-FullRegression29040205a1i3xlarge-hydra-client-18_15643 &lt;ReconnectThread&gt; tid=0x2d2&amp;#93; Attempting to join the distributed system through coordinator 10.32.110.93(gemfire6_rs-FullRegression29040205a1i3xlarge-hydra-client-50_13624:13624:locator)&lt;ec&gt;&lt;v1&gt;:1024 using address 10.32.108.125(gemfire1_rs-FullRegression29040205a1i3xlarge-hydra-client-18_15643:15643)&lt;v3&gt;:1026In this run it then proceeded to hang trying to send startup messages to the cluster. Cluster members rejected all of its attempts to contact them but were also unsuccessful in getting the rogue process to shut down.</description>
      <version>1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RemoteTransportConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.QuorumChecker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSQuorumChecker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.interfaces.Messenger.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalDistributedSystem.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessengerJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSQuorumCheckerJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache30.ReconnectDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5548" opendate="2018-8-8 00:00:00" fixdate="2018-8-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Adjust available ram in heavy lifters</summary>
      <description>Reduce available memory because we don't need as much.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.test-stubs.upgrade.yml</file>
      <file type="M">ci.pipelines.geode-build.test-stubs.distributed.yml</file>
      <file type="M">ci.pipelines.geode-build.test-stubs.acceptance.yml</file>
      <file type="M">ci.pipelines.geode-build.test-stubs.integration.yml</file>
    </fixedFiles>
  </bug>
  <bug id="5587" opendate="2018-8-15 00:00:00" fixdate="2018-8-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Randomize internal http service working directory</summary>
      <description>When starting the http service a given webapp is extracted into a working directory of the form: &lt;host&gt;&lt;port&gt;&lt;context&gt;. As part of shutdown this directory is cleaned up. However the directory is only completely removed when the JVM exits.Occasionally subsequent tests will request to use the same port. This results in the same working directory being used. On Windows this will fail as the directory does not let itself be cleaned up before the webapp is redeployed to the same location as before.We can randomize the working directory a bit more by adding a short sequence of random chars as part of the directory name.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.JettyHelper.java</file>
    </fixedFiles>
  </bug>
  <bug id="5594" opendate="2018-8-17 00:00:00" fixdate="2018-11-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enable endpoint validation during using SSL handshake</summary>
      <description>Users can set `ssl-endpoint-identification-enabled` to true to enable validation of hostname in server's identity when using SSL to harden against certain man-in-the-middle attacksÂ </description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-junit.build.gradle</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.junit.rules.ClientCacheRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionConfigJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLConfigurationFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.SSLConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.ssl.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.SSLConfigJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5605" opendate="2018-8-20 00:00:00" fixdate="2018-9-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In flight cache operation may not be part of GII if the GII provider cache closes</summary>
      <description>An in-flight operation may not be seen by the new GII requester if the GII provider cache closes. This happens when there are more than one replica for the region.Scenario:There are 3 nodes (N1 with primary bucket, N2 with secondary bucket and N3 new node doing GII request) accessor begins putAll accessor sends putAll to N1 N1 locally processes putAll N1 attempts to replicate putAll to N2 during this putAll, N1 is shutdown normally during this putAll (after N1 has started to shutdown), N3 attempts to GII from N1 it fails because N1 is shutting down N3 then GIIs from N2 (but before the put is received by it) after GII, N3 doesn't have the entry, but N2 does accessor completes putAll successfullyÂ </description>
      <version>1.6.0</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.RemoveAllPRMessageTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PutAllPRMessageTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RemoveAllPRMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PutAllPRMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="5613" opendate="2018-8-21 00:00:00" fixdate="2018-8-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support Windows builds on &amp;#39;heavy-lifter&amp;#39; instances</summary>
      <description>In order for Windows builds to be consistent with the Linux build process.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.alpine-tools.Dockerfile</file>
      <file type="M">ci.docker.Dockerfile</file>
    </fixedFiles>
  </bug>
  <bug id="5619" opendate="2018-8-22 00:00:00" fixdate="2018-8-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Change scanning for XSDRootElement to consider all packages on the classpath</summary>
      <description>This used to be the case but switched to "org.apache.geode" with the classpath scanner upgrade to 4.0.6 (possibly because of memory issues).</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.ClasspathScanLoadHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceService.java</file>
    </fixedFiles>
  </bug>
  <bug id="562" opendate="2015-11-16 00:00:00" fixdate="2015-3-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade commons collections to v3.2.2</summary>
      <description>The commons-collections jar v3.2.1 is present on the classpath as part of the hdfs integration (see GEODE-10). We need to upgrade to version 3.2.2 due to COLLECTIONS-580.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.build.gradle</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">gradle.java.gradle</file>
      <file type="M">geode-rebalancer.build.gradle</file>
      <file type="M">geode-pulse.build.gradle</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">extensions.geode-modules.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="5622" opendate="2018-8-22 00:00:00" fixdate="2018-8-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SUPERFLAKY: AlterRuntimeCommandDUnitTest is flaky due to port conflicts</summary>
      <description>All of the methods of this test are failing in CI with port conflicts:org.apache.geode.management.internal.cli.commands.AlterRuntimeCommandDUnitTest: 5 failures (98.333% success rate) | .alterLogFileSizeLimitNegative_errorCanNotSet(true): 2 failures (99.333% success rate) | | Failed build 215 at https://concourse.apachegeode-ci.info/teams/staging/pipelines/concourse-staging/jobs/DistributedTest/builds/215 | | Failed build 79 at https://concourse.apachegeode-ci.info/teams/staging/pipelines/concourse-staging/jobs/DistributedTest/builds/79 | .testAlterUpdatesSharedConfig(false): 1 failures (99.667% success rate) | | Failed build 232 at https://concourse.apachegeode-ci.info/teams/staging/pipelines/concourse-staging/jobs/DistributedTest/builds/232 | .alterMemberWithoutOptions_needsRelevantParameter(true): 1 failures (99.667% success rate) | | Failed build 110 at https://concourse.apachegeode-ci.info/teams/staging/pipelines/concourse-staging/jobs/DistributedTest/builds/110 | .alterArchiveFileSizeLimitWithGroup_updatesSelectedServerConfigs(false): 1 failures (99.667% success rate) | | Failed build 124 at https://concourse.apachegeode-ci.info/teams/staging/pipelines/concourse-staging/jobs/DistributedTest/builds/124org.apache.geode.management.internal.cli.commands.AlterRuntimeCommandDUnitTest &gt; alterLogFileSizeLimitNegative_errorCanNotSet(true) [0] FAILED java.lang.AssertionError: Suspicious strings were written to the log during this run. Fix the strings or use IgnoredException.addIgnoredException to ignore. ----------------------------------------------------------------------- Found suspect string in log4jat line 43 [error 2018/08/17 09:26:45.259 UTC &lt;RMI TCP Connection(1)-172.17.0.14&gt; tid=32] Jmx manager could not be started because java.rmi.server.ExportException: Port already in use: 20961; nested exception is: java.net.BindException: Failed to create server socket on null[20,961] org.apache.geode.management.ManagementException: java.rmi.server.ExportException: Port already in use: 20961; nested exception is: java.net.BindException: Failed to create server socket on null[20,961] at org.apache.geode.management.internal.ManagementAgent.startAgent(ManagementAgent.java:161) at org.apache.geode.management.internal.SystemManagementService.startManager(SystemManagementService.java:435) at org.apache.geode.management.internal.beans.ManagementAdapter.handleCacheCreation(ManagementAdapter.java:173) at org.apache.geode.management.internal.beans.ManagementListener.handleEvent(ManagementListener.java:118) at org.apache.geode.distributed.internal.InternalDistributedSystem.notifyResourceEventListeners(InternalDistributedSystem.java:2201) at org.apache.geode.distributed.internal.InternalDistributedSystem.handleResourceEvent(InternalDistributedSystem.java:591) at org.apache.geode.internal.cache.GemFireCacheImpl.initialize(GemFireCacheImpl.java:1218) at org.apache.geode.internal.cache.GemFireCacheImpl.basicCreate(GemFireCacheImpl.java:793) at org.apache.geode.internal.cache.GemFireCacheImpl.create(GemFireCacheImpl.java:779) at org.apache.geode.cache.CacheFactory.create(CacheFactory.java:177) at org.apache.geode.cache.CacheFactory.create(CacheFactory.java:224) at org.apache.geode.distributed.internal.InternalLocator.startCache(InternalLocator.java:662) at org.apache.geode.distributed.internal.InternalLocator.startDistributedSystem(InternalLocator.java:649) at org.apache.geode.distributed.internal.InternalLocator.startLocator(InternalLocator.java:311) at org.apache.geode.distributed.Locator.startLocator(Locator.java:253) at org.apache.geode.distributed.Locator.startLocatorAndDS(Locator.java:140) at org.apache.geode.test.junit.rules.LocatorStarterRule.startLocator(LocatorStarterRule.java:87) at org.apache.geode.test.junit.rules.LocatorStarterRule.before(LocatorStarterRule.java:68) at org.apache.geode.test.dunit.rules.ClusterStartupRule.lambda$startLocatorVM$1c67b668$1(ClusterStartupRule.java:197) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at hydra.MethExecutor.executeObject(MethExecutor.java:244) at org.apache.geode.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:70) at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:357) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:573) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:834) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:688) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:687) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) Caused by: java.rmi.server.ExportException: Port already in use: 20961; nested exception is: java.net.BindException: Failed to create server socket on null[20,961] at sun.rmi.transport.tcp.TCPTransport.listen(TCPTransport.java:346) at sun.rmi.transport.tcp.TCPTransport.exportObject(TCPTransport.java:254) at sun.rmi.transport.tcp.TCPEndpoint.exportObject(TCPEndpoint.java:411) at sun.rmi.transport.LiveRef.exportObject(LiveRef.java:147) at sun.rmi.server.UnicastServerRef.exportObject(UnicastServerRef.java:236) at sun.rmi.registry.RegistryImpl.setup(RegistryImpl.java:213) at sun.rmi.registry.RegistryImpl.&lt;init&gt;(RegistryImpl.java:173) at sun.rmi.registry.RegistryImpl.&lt;init&gt;(RegistryImpl.java:144) at java.rmi.registry.LocateRegistry.createRegistry(LocateRegistry.java:239) at org.apache.geode.management.internal.ManagementAgent.configureAndStart(ManagementAgent.java:452) at org.apache.geode.management.internal.ManagementAgent.startAgent(ManagementAgent.java:159) ... 40 more Caused by: java.net.BindException: Failed to create server socket on null[20,961] at org.apache.geode.internal.net.SocketCreator.createServerSocket(SocketCreator.java:752) at org.apache.geode.internal.net.SocketCreator.createServerSocket(SocketCreator.java:709) at org.apache.geode.management.internal.ManagementAgent$GemFireRMIServerSocketFactory.createServerSocket(ManagementAgent.java:611) at sun.rmi.transport.tcp.TCPEndpoint.newServerSocket(TCPEndpoint.java:666) at sun.rmi.transport.tcp.TCPTransport.listen(TCPTransport.java:335) ... 50 more Caused by: java.net.BindException: Address already in use (Bind failed) at java.net.PlainSocketImpl.socketBind(Native Method) at java.net.AbstractPlainSocketImpl.bind(AbstractPlainSocketImpl.java:387) at java.net.ServerSocket.bind(ServerSocket.java:375) at org.apache.geode.internal.net.SocketCreator.createServerSocket(SocketCreator.java:748) ... 54 moreKirk and I looked into this. It looks like Brian fixed this rule to not have port conflicts in GEODE-5467, but his fix was lost with the changes in GEODE-5475. So now this test can end up using the same port for JMX and HTTP.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.junit.rules.MemberStarterRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="5667" opendate="2018-8-30 00:00:00" fixdate="2018-11-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh create gateway-receiver option "--manual-start" has counterintuitive default</summary>
      <description>The "--manual-start" option for the `gfsh create gateway-receiver` command, when specified without a value (=true or =false), should set manual-start=true.Current behavior is that if specified without a value, the parameter is set to null, which invokes the system's default behavior, which happens to be `false`.This is counterintuitive to the user, who (I'm certain) would expect `--manual-start` to result in the parameter being set to `true`.</description>
      <version>1.6.0</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.wancommand.CreateGatewayReceiverCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateGatewayReceiverCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateGatewayReceiverCommand.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.sockets.and.gateways.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5668" opendate="2018-8-30 00:00:00" fixdate="2018-11-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Switch Windows build jobs to &amp;#39;heavy-lifter&amp;#39; model</summary>
      <description>Use the same approach we do for Linux builds, which is to launch a build system for every job.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
      <file type="M">ci.scripts.start.instance.sh</file>
      <file type="M">ci.scripts.rsync.code.down.sh</file>
      <file type="M">ci.scripts.execute.tests.sh</file>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="5671" opendate="2018-8-30 00:00:00" fixdate="2018-8-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - Correct bullet list format on "Configuring a Client/Server System" page</summary>
      <description>The "Configuring a Client/Server System" page contains an incorrectly-formatted bullet list.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.topologies.and.comm.cs.configuration.setting.up.a.client.server.system.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5678" opendate="2018-9-4 00:00:00" fixdate="2018-1-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Primary Key index results should work correctly with cq results</summary>
      <description>When a cq is executed and the query ends up using a primary key index, the result is not being wrapped in a cq entry.Â  This causes a class cast exception.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.CQDistributedTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.PrimaryKeyIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.HashIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.CompactRangeIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.AbstractIndex.java</file>
    </fixedFiles>
  </bug>
  <bug id="5683" opendate="2018-9-4 00:00:00" fixdate="2018-4-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove unnecessarily gendered language from comments</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.8.0,1.10.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.OverflowOplog.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.cache30.MultiVMRegionTestCase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementResourceRepo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.ServerDelegate.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.MsgDestreamer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.Connection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatArchiveReader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.ObjIdMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.ManagerLogWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.LoggingThreadGroup.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.RegionAttributesCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.DiskStoreAttributesCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheXmlGenerator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.versions.RegionVersionHolder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.UpdateAttributesProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXCommitMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.AcceptorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.SearchLoadAndWriteProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.GetMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ClusterDistributionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.GrantorRequestProcessor.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache30.ReconnectDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.DistributedLockServiceDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.EntriesDoNotExpireDuringGiiRegressionTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.GridAdvisorDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.NetSearchMessagingDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.tier.sockets.DataSerializerPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.tier.sockets.VerifyUpdatesFromNonInterestEndPointDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.statistics.StatisticsDistributedTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.ComplexDiskRegionJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.DiskRandomOperationsAndRecoveryJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.logging.CacheLogRollingIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.AdminDistributedSystemImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.SystemMemberCacheEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.AutoConnectionSourceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ConnectionFactoryImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.OpExecutorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.ConnectionManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.PooledConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.EvictionAttributes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.MemoryIndexStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.CopyHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.direct.DirectChannel.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.FunctionExecutionPooledExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.LocatorLoadSnapshot.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DeposeGrantorProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockGrantor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockRequestProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.ElderState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.NonGrantorDestroyedProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.fd.GMSHealthMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.mgr.GMSMembershipManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.PooledExecutorWithDMStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ReplyProcessor21.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.StartupOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.LocatorLauncher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.ListenerIdMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.CliLegacyMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.Assert.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheDistributionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheServerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.entries.AbstractRegionEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.CountLRUEviction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.locks.TXLockServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Oplog.java</file>
    </fixedFiles>
  </bug>
  <bug id="5684" opendate="2018-9-4 00:00:00" fixdate="2018-9-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add check for exception cause type to concurrency rule</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.ConcurrencyRuleTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.ConcurrencyRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="5685" opendate="2018-9-4 00:00:00" fixdate="2018-9-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>rename whitelist to acceptlist and blacklist to denylist</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.WANDistributedSystemService.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.internal.LuceneDistributedSystemService.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.internal.CQDistributedSystemService.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.InternalDataSerializerSerializationWhitelistTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.RestrictedMethodInvocationAuthorizerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.ServerBlackListJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.ObjectInputStreamFilterWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalDataSerializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DSFIDFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.RemoveClientFromBlacklistMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientBlacklistProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributedSystemService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.RestrictedMethodInvocationAuthorizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ServerBlackList.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.QueueManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.QueueConnectionImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PoolImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ConnectionFactoryImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ConnectionFactory.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.client.internal.QueueManagerJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.client.internal.pooling.ConnectionManagerJUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache.ConnectionPoolDUnitTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.internal.ConnectorsDistributedSystemService.java</file>
    </fixedFiles>
  </bug>
  <bug id="5731" opendate="2018-9-12 00:00:00" fixdate="2018-5-12 01:00:00" resolution="Cannot Reproduce">
    <buginformation>
      <summary>--hostname-for-client not working correclty</summary>
      <description>When starting a server cluster on EC2 andÂ --hostname-for-client set for locator and server then the locator does not return the client-bind-address.Locator and server were initially started withstart locator --name=locator --port=41111 --properties-file=./gemfire.properties --initial-heap=256M --hostname-for-clients=ec2-12-345-678-90.compute-1.amazonaws.comstart server --name=server1 --server-port=44666 --properties-file=./gemfire.properties --initial-heap=256M --start-rest-api=true --http-service-port=7676After some debugging the hostname-for-client on the server was also set to be the public IP address.</description>
      <version>1.6.0</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.StartServerCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.StartLocatorCommand.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.cli.commands.StartServerCommandIntegrationTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.cli.commands.StartLocatorCommandIntegrationTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.StartServerCommandDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.StartLocatorCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5761" opendate="2018-9-19 00:00:00" fixdate="2018-8-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>jsonassert has incompatible transitive dependency on android-json</summary>
      <description>The fix for GEODE-5696 added geode-junit dependency on org.skyscreamer:jsonassert which brings in a transitive dependency on com.vaadin.external.google:android-json which is incompatible with geode-json.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="5762" opendate="2018-9-19 00:00:00" fixdate="2018-9-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix typos in transaction docs code examples</summary>
      <description>The variable used for the transaction manager object in the code examples within the docs section on Transactions is inconsistent.Â  Pick one variable name, and use it throughout all examples in a consistent way.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.directed.example.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5765" opendate="2018-9-21 00:00:00" fixdate="2018-9-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AlterRuntimeCommandDUnitTest slows down due to large numbers of classes loaded</summary>
      <description>We observed that several tests in this class are taking minutes when they should be taking a few seconds at most. After some debugging, we determined that the JVM itself is struggling to deal with having 100K+ classes loaded. They are loaded because the test is repeated starting and stopping the http service, which creates a classloader and causes soft references to all of the loaded classes to be cached.By setting a flag to clear the soft references faster, the test times go back to normal.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="5778" opendate="2018-9-25 00:00:00" fixdate="2018-8-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>On Windows - rsync fails intermittently</summary>
      <description>Can we just retry when rsync fails just like start_instance task?https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsGfshDistributedTest/builds/11https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsUnitTest/builds/10https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsAcceptanceTest/builds/10rsync fails intermittently with following error:Warning: Permanently added '35.184.2.138' (ECDSA) to the list of known hosts. 1 [main] rsync 3440 child_info_fork::abort: C:\ProgramData\chocolatey\lib\rsync\cwrsync_5.5.0_x86_free\bin\cyggcc_s-1.dll: Loaded to different address: parent(0x2E20000) != child(0x150000)rsync: fork failed in do_recv: Resource temporarily unavailable (11)rsync error: error in IPC code (code 14) at main.c(879) [Receiver=3.1.2]real 0m1.226suser 0m0.004ssys 0m0.020s</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="578" opendate="2015-11-19 00:00:00" fixdate="2015-11-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cluster-config and cache.xml do not work together</summary>
      <description>When cluster configuration is used and the server is started with a cache.xml, server startup fails due to a bind exception. This occurs because we try to start the default cache-server twice, once when processing the cluster-config and once while parsing the cache.xml file.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheCreationJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6048" opendate="2018-11-13 00:00:00" fixdate="2018-9-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>./gradlew build install should work by default on release branches</summary>
      <description>due to a post-1.7 refactoring we no longer use the nexus plugin, which was smart enough not to try to sign artifacts if signing key is not providedwe should emulate that same behavior again so anyone can do a build on any branch at any time</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.publish.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="6156" opendate="2018-12-6 00:00:00" fixdate="2018-12-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a --id option to create jdbc-mapping to specify the column name</summary>
      <description>Currently gfsh create jdbc-mapping only supports tables with a single primary column and always uses that column as the region key. A --id option should be added to create jdbc-mapping allowing any column of the table to be used as the region key.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.ElementTypeTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManagerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.RegionMappingTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.main.resources.org.apache.geode.internal.sanctioned-geode-connectors-serializables.txt</file>
      <file type="M">geode-connectors.src.main.resources.META-INF.schemas.geode.apache.org.schema.jdbc.jdbc-1.0.xsd</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlParser.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.xml.ElementType.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManager.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.configuration.RegionMapping.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.internal.TestConfigService.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManagerIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="616" opendate="2015-12-1 00:00:00" fixdate="2015-12-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>failure detection ports not copied to new membership view</summary>
      <description>While debugging a different problem I noticed that only the membership coordinator had a failure detection port set in a new view it had created. The becomeCoordinator code is not copying failure detection information from the old view to the new view.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.NetView.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
    </fixedFiles>
  </bug>
  <bug id="6166" opendate="2018-12-7 00:00:00" fixdate="2018-12-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Reduce garbage production in put operation path</summary>
      <description>While debugging another issue I notice a less than optimal path for serializing Operation objects during puts and destroys. The class is java.io.Serializable so it goes through Â several checks to see if it can be serialized another way before falling back to Java serialization. One of these checks creates a few objects that are not necessary until later I the function but after it would short circuit for Operation. Additionally, the only member in the class that is non-transient is a byte field indicating the ordinal. This results in a 64 byte Java serialization to transmit a byte. Converting to DataSerializableFixedID poses a challenge with backwards compatibility when deserializing a message sent as Java serializable. It also costs about 4 bytes for a single byte &amp;#91;DSCODE (byte) + FIXED-ID (short) + VALUEÂ (byte)&amp;#93;. Writing a single byte to the message part costs a single byte and makes detecting old clients sending objects trivial.Â </description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalDataSerializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.Part.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.Message.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Put65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Destroy65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.BaseCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PutOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.ConnectionManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.OpExecutorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.DestroyOp.java</file>
    </fixedFiles>
  </bug>
  <bug id="617" opendate="2015-12-1 00:00:00" fixdate="2015-12-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Change lucene xsd namespace to geode.apache.org</summary>
      <description>The current namespace for the geode lucene integration is geode.incubator.apache.org. Based on discussions on GEODE-386, this should be geode.apache.org.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-lucene.src.test.resources.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserIntegrationJUnitTest.parseIndex.cache.xml</file>
      <file type="M">gemfire-lucene.src.test.resources.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserIntegrationJUnitTest.createIndex.cache.xml</file>
      <file type="M">gemfire-lucene.src.main.resources.META-INF.schemas.geode.incubator.apache.org.lucene.lucene-1.0.xsd</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneXmlConstants.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.GeodeEntityResolver.java</file>
    </fixedFiles>
  </bug>
  <bug id="6174" opendate="2018-12-10 00:00:00" fixdate="2018-6-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create Region REST API</summary>
      <description>I want to be able to interact with the cluster without having to be on the cluster in order to effect the configuration. Either as a developer, I want to develop code in my IDE and as part of developing that code, I need to create regions. Or as a data operator, I need to perform configurations on the cluster and I want to interact with the cluster.Â As a DeveloperI want to create a region in the cluster using the JAVA API on the clusterwhen I am not located on the cluster (I do not need to be be on a node on the cluster)when I am authenticated and authorized for create regionSo thatÂ  a region is created on the clusterSo that I can put and get data in that region</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.api.ClusterManagementService.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizerTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.RegionManagementDunitTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.DisabledClusterConfigTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.ClusterManagementResultTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.LocatorClusterManagementServiceTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.api.ClusterManagementResult.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.api.Status.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementSecurityIntegrationTest.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.ManagementControllerAdvice.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizerIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizer.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.assertions.ClusterManagementResultAssert.java</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">geode-assembly.geode-assembly-test.src.main.java.org.apache.geode.test.junit.rules.GeodeDevRestClient.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.AgentUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementAgent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.RestAgent.java</file>
      <file type="M">geode-web-api.src.integrationTest.java.org.apache.geode.rest.internal.web.controllers.RestAccessControllerTest.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.GeodeAuthenticationProvider.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.RestSecurityService.java</file>
      <file type="M">gradle.geode-dependency-management.gradle</file>
      <file type="M">settings.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.HttpServiceIntegrationTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.api.RegionAPIDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CliFunctionResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigMutator.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.junit.rules.MemberStarterRule.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClusterManagementLocatorReconnectDunitTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementResult.java</file>
      <file type="M">geode-assembly.src.acceptanceTest.resources.ManagementClientCreateRegion.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionConfig.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.ClientClusterManagementService.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.security.RestSecurityConfiguration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionNameValidation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.ConfigurationMutator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.ConfigurationValidator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.RegionConfigValidator.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.RegionConfigValidatorTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.RegionManagementSecurityIntegrationTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.internal.CacheConfigDAODUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigMutatorIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.CacheConfigTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.RegionConfigTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.config.JAXBServiceTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6177" opendate="2018-12-10 00:00:00" fixdate="2018-12-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gateway senders can shut down due to authentication failures</summary>
      <description>When a gateway sender connects to a gateway receiver and authentication is used, the receiver first determines if the provided credentials are valid.Â  If they are valid, then event processing/dispatching is allowed.Â However, once the initial authentication is performed, it is possible that the gateway sender stops processing events if the connection with the receiver is destroyed and the credentials used are no longer valid (disallowed, password changed, etc).Â Â This is an edge case where theÂ ack reader thread is the first to attempt to acquire the connection, rather than the dispatcher thread.Â  The ack reader thread currently does not have the proper retry logic for authentication exceptions, while the dispatcher thread does.Â  We should ensure that connection retries occur regardless of which thread gets the authentication exception.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.PdxRegistryMismatchException.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventRemoteDispatcher.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.misc.NewWanAuthenticationDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6178" opendate="2018-12-11 00:00:00" fixdate="2018-12-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use Gradle 5 as our build tool.</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.wrapper.gradle-wrapper.jar</file>
    </fixedFiles>
  </bug>
  <bug id="6179" opendate="2018-12-11 00:00:00" fixdate="2018-12-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>improve create data-source help</summary>
      <description>Current description from gfshÂ {{help create data-source}}command includes some unclear descriptions:"SYNOPSIS(Experimental) Create a JDBC data source."I think the result of this command does not create the data-source, but instead creates a connection to an external JDBC data-source. Instead:"SYNOPSIS(Experimental) Creates a JDBC data-source and verifies connectivity to an external JDBC database."AND" usernameThis element specifies the default username used when creating a new connection.Required: falsepasswordThis element specifies the default password used when creating a new connection.Required: false"It is not clear if these are credentials for GemFire or the external data-source.Please modify help message to:" usernameThis element specifies the default username that may be required by the external JDBC database when creating a new connection.Required: falsepasswordThis element specifies the default password that may be required by the external JDBC database when creating a new connection.Required: false"</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateDataSourceCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="6683" opendate="2019-4-22 00:00:00" fixdate="2019-5-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>java.lang.NullPointerException</summary>
      <description>when Pulse is ran without embedded mode in Locator, throw NullPointException during running code : repository.getJavaSslProperties().stringPropertyNames()look like repository.javaSslProperties is null.2019-04-24 02:08:06,767 INFO o.a.g.t.p.i.d.JMXDataUpdater [http-nio-7070-exec-1] Locator has found a jmx manager: Host=10.116.37.211 &amp; Port=1099, with SSL2019-04-24 02:08:06,773 FATAL o.a.g.t.p.i.d.JMXDataUpdater [http-nio-7070-exec-1] nulljava.lang.NullPointerException: null at org.apache.geode.tools.pulse.internal.data.JMXDataUpdater.connect(JMXDataUpdater.java:217) [classes/:?] at org.apache.geode.tools.pulse.internal.data.Cluster.connectToGemFire(Cluster.java:2805) [classes/:?] at org.apache.geode.tools.pulse.internal.data.Repository.getCluster(Repository.java:139) [classes/:?] at org.apache.geode.tools.pulse.internal.security.GemFireAuthenticationProvider.authenticate(GemFireAuthenticationProvider.java:57) [classes/:?] at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:174)</description>
      <version>1.6.0</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.internal.PulseAppListenerTest.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.PulseAppListener.java</file>
    </fixedFiles>
  </bug>
  <bug id="6690" opendate="2019-4-22 00:00:00" fixdate="2019-5-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>more client/server messages could take advantage of org.apache.geode.internal.cache.tier.sockets.Message.addStringPart(String, true)</summary>
      <description>org.apache.geode.internal.cache.tier.sockets.Message.addStringPart(String, boolean) when passed true will cache the result of serializing the String so that future calls do not need to pay the cost of serialization. An obvious place to use the optimization would be when adding the region name which is done for most all client/server messages. But very few of the messages currently do this including the common get and put messages.Â </description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.main.java.org.apache.geode.cache.client.internal.GatewaySenderBatchOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientTombstoneMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientInterestMessageImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.UnregisterInterestOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.UnregisterInterestListOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.SizeOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.RemoveAllOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.RegisterInterestOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.RegisterInterestListOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PutOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PutAllOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.KeySetOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.InvalidateOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.GetOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.GetEntryOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.GetClientPRMetaDataOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.GetClientPartitionAttributesOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.GetAllOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ExecuteRegionFunctionSingleHopOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ExecuteRegionFunctionOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ExecuteRegionFunctionNoAckOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.DestroyRegionOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.DestroyOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ContainsKeyOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ClearOp.java</file>
    </fixedFiles>
  </bug>
  <bug id="6692" opendate="2019-4-22 00:00:00" fixdate="2019-4-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>DataSerializer.readString can be optimized for zero length strings</summary>
      <description>DataSerializer.readString still allocates an instance of String when the string being deserialized is an empty string. If instead it just returned the canonical "" it would save some object allocations.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.DataSerializerTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalDataSerializer.java</file>
    </fixedFiles>
  </bug>
  <bug id="6696" opendate="2019-4-23 00:00:00" fixdate="2019-5-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Only create EntryEvenImpl.offHeapLock if off heap is in use.</summary>
      <description>Reduce allocation of unnecessary lock object if not using off heap storage.{{ private final Object offHeapLock = new Object();}}</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderEventProcessorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.SearchLoadAndWriteProcessorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.RemoveAllPRMessageTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PutAllPRMessageTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.event.DistributedEventTrackerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.EntryEventImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTxApplyDestroyTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EntryEventImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.ClientStatsManager.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.tier.sockets.ConnectionProxyJUnitTest.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
