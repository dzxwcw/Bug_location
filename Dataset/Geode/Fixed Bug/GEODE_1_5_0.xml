<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="GEODE">
  <bug id="4247" opendate="2018-1-8 00:00:00" fixdate="2018-4-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Email does not get sent when a unit test takes too long to execute</summary>
      <description>If a concourse task hangs and the container is killed, email is not sent out.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.test-run.sh</file>
    </fixedFiles>
  </bug>
  <bug id="4252" opendate="2018-1-8 00:00:00" fixdate="2018-1-8 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>gfsh user functions return strings on error instead of appropriate exit codes</summary>
      <description>For example:Command result for &lt;execute function --id=bootstrapping-function&gt;: Execution summary Member ID/Name | Function Execution Result------------------------------------------------------ | --------------------------------------------------------------10.118.20.99(server:13930:loner):53679:24c543d7:server | Function : bootstrapping-function is not registered on member.Does not result in a non-zero exit code</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.FunctionCommandsOverHttpDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommandWithSecurityDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.test.LuceneFunctionSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.FunctionCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommandSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.functions.TestFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.UserFunctionExecution.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommand.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JDBCConnectorFunctionsSecurityTest.java</file>
      <file type="M">extensions.geode-modules.src.test.java.org.apache.geode.modules.util.ModuleFunctionsSecurityTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4257" opendate="2018-1-8 00:00:00" fixdate="2018-1-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh jdbc-mapping defaults to true for --primary-key-in-value</summary>
      <description>The gfsh jdbc-mapping defaults to true for --primary-key-in-value. It should default to false.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="4286" opendate="2018-1-12 00:00:00" fixdate="2018-1-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Parallel distributed tests do not run correctly when PWD is a sym-link</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="4325" opendate="2018-1-19 00:00:00" fixdate="2018-2-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Clarify eviction actions</summary>
      <description>Astute reader Gideon Low observes:The documentation for eviction action configuration don't make clear that localDestroy is invalid for Partitioned Regions. This is made more confusing by the following verbiage on overflow-to-disk, which implies that other eviction action options exist for PR's: "For partitioned regions, this provides the most reliable read behavior across the region" . . . Yes, it is the most reliable behavior, but it is also the ONLY supported behavior. The fact that local-destroy eviction action states "Not available for replicated regions" without mentioning PR's makes this even more confusing. Here's the link for lru-entry-count (lru-heap-percentage and lru-memory-size have the exact same problem): http://gemfire82.docs.pivotal.io/docs-gemfire/latest/reference/topics/cache_xml.html#lru-entry-count</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.client-cache.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.chapter.overview.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.developing.general.region.data.management.html.md.erb</file>
      <file type="M">geode-docs.developing.expiration.how.expiration.works.html.md.erb</file>
      <file type="M">geode-docs.developing.expiration.configuring.data.expiration.html.md.erb</file>
      <file type="M">geode-docs.developing.expiration.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.eviction.how.eviction.works.html.md.erb</file>
      <file type="M">geode-docs.developing.eviction.configuring.data.eviction.html.md.erb</file>
      <file type="M">geode-docs.developing.eviction.chapter.overview.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4327" opendate="2018-1-19 00:00:00" fixdate="2018-2-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>OQL Support for Modulus &amp; Other Arithmetic Operators</summary>
      <description>It would be nice to be able to do 'mod', '%', '+', '-', '/', '*' in a query and have the corresponding arithmetic/mod calculation be evaluated in the query. simple example:"Select * from /region r where r.id % 12 = 1"or"Select * from /region r where r.age * 10 = 100"</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.select.the.where.clause.html.md.erb</file>
      <file type="M">geode-docs.developing.query.additional.operators.html.md.erb</file>
      <file type="M">geode-docs.developing.querying.basics.reserved.words.html.md.erb</file>
      <file type="M">geode-docs.developing.querying.basics.query.grammar.and.reserved.words.html.md.erb</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.CompactRangeIndexQueryIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.QCompiler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledValue.java</file>
      <file type="M">geode-core.src.main.antlr.org.apache.geode.cache.query.internal.parse.oql.g</file>
    </fixedFiles>
  </bug>
  <bug id="4328" opendate="2018-1-19 00:00:00" fixdate="2018-1-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make backup a single task</summary>
      <description>Currently, a backup involves two distributed messages: one that starts the process up until a synchronization point and a second that signals to complete the backup once synchronization is complete. The current implementation results in different threads doing the two halves of the process and causes complex logic in locking resources that must be maintained over the two threads. To improve this, the entire backup action can be refactored into a single task that gates on CountdownLatches to be released on message receipt. </description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.beans.DistributedSystemBridgeJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.IncrementalBackupDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupPrepareAndFinishMsgDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupLockTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.MemberMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.TemporaryBackupFiles.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.PrepareBackupRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.PrepareBackupOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.PrepareBackup.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupLock.java</file>
    </fixedFiles>
  </bug>
  <bug id="4332" opendate="2018-1-19 00:00:00" fixdate="2018-1-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gfsh start locator should not retrieve cluster status when --connect=false</summary>
      <description> When user starts locator with --connect=false, it should not retrieve cluster-configuration service status.gfsh&gt;start locator --name=locator1 --connect=falseStarting a Geode Locator in /Users/sai/workspace/debug/apache-geode-1.5.0-SNAPSHOT/bin/locator1......Locator in /Users/sai/workspace/debug/apache-geode-1.5.0-SNAPSHOT/bin/locator1 on 10.118.19.26[10334] as locator1 is currently online.Process ID: 21762Uptime: 2 secondsGeode Version: 1.5.0-SNAPSHOTJava Version: 1.8.0_151Log File: /Users/sai/workspace/debug/apache-geode-1.5.0-SNAPSHOT/bin/locator1/locator1.logJVM Arguments: -Dgemfire.enable-cluster-configuration=true -Dgemfire.load-cluster-configuration-from-dir=false -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806Class-Path: /Users/sai/workspace/debug/apache-geode-1.5.0-SNAPSHOT/lib/geode-core-1.5.0-SNAPSHOT.jar:/Users/sai/workspace/debug/apache-geode-1.5.0-SNAPSHOT/lib/geode-dependencies.jarCluster configuration service is up and running.As you can see that it retrieves the status and displays cluster configuration service is running.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.StartLocatorCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="4334" opendate="2018-1-20 00:00:00" fixdate="2018-1-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Merge protobuf modules</summary>
      <description>Currently there are three modules used for the new client protocol: geode-client-protocol, geode-protobuf, and geode-protobuf-messages. There's not much potential for reuse of geode-client-protocol code, and splitting the two protobuf modules may be unnecessary. Let's do some merging.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ConnectionShiroAuthenticatingStateProcessor.java</file>
      <file type="M">settings.gradle</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.TestExecutionContext.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufUtilitiesJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.serializer.ProtobufProtocolSerializerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.serialization.codec.JsonPdxConverterJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufProtocolServiceJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ProtocolVersionHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.OperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetServerOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionNamesRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAndPutJsonDocumentsDUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.MessageUtil.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.ErrorCodesJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.AuthorizationIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.LocatorConnectionDUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.CacheOperationsJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.CacheMaxConnectionJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.CacheConnectionTimeoutJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.CacheConnectionJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufResponseUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionHandshakeStateProcessor.java</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">geode-client-protocol.build.gradle</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.ClientProtocolMessageHandler.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.exception.InvalidProtocolMessageException.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.Failure.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.LocatorMessageExecutionContext.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.MessageExecutionContext.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.OperationContext.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.operations.OperationHandler.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.ProtocolErrorCode.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.ProtocolSerializer.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.Result.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.serialization.exception.EncodingException.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.serialization.JsonPdxConverter.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.serialization.SerializationService.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.serialization.SerializationType.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.serialization.TypeConverter.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.ServerMessageExecutionContext.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.state.ConnectionAuthenticatingStateProcessor.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.state.ConnectionShiroAuthorizingStateProcessor.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.state.ConnectionStateProcessor.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.state.ConnectionTerminatingStateProcessor.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.state.exception.ConnectionStateException.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.state.exception.OperationNotAuthorizedException.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.state.LegacySecurityConnectionStateProcessor.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.state.NoSecurityConnectionStateProcessor.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.statistics.NoOpStatistics.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.statistics.ProtocolClientStatistics.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.Success.java</file>
      <file type="M">geode-experimental-driver.build.gradle</file>
      <file type="M">geode-protobuf.build.gradle</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.operations.ProtobufOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.statistics.ProtobufClientStatisticsImpl.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionNamesRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetServerOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ProtocolVersionHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.security.AuthenticationRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufCachePipeline.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufOperationContext.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufOpsProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufProtocolService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufSerializationService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufStreamProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.serializer.ProtobufProtocolSerializer.java</file>
    </fixedFiles>
  </bug>
  <bug id="4338" opendate="2018-1-22 00:00:00" fixdate="2018-3-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode Native C++ Example (Continuous Query)</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.continuous.querying.implementing.continuous.querying.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4353" opendate="2018-1-22 00:00:00" fixdate="2018-2-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Deprecate security-client-dhalgo property</summary>
      <description>security-client-dhalgo{{ should be deprecated in favor of using the ssl-* settings.}} [https://geode.apache.org/docs/guide/10/managing/security/encrypting_with_diffie_helman.html]{{}}</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-docs.managing.security.encrypting.with.diffie.hellman.html.md.erb</file>
      <file type="M">geode-docs.managing.security.authentication.overview.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4354" opendate="2018-1-22 00:00:00" fixdate="2018-2-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>On create region command change option --skip-if-exists to --if-not-exists</summary>
      <description>The gfsh create region command tries to be idempotent. If I try to create the same region twice I get the below message:Member | Status------ | ----------------------------------------------serv1 | Skipping "serv1". Region "foo" already exists.Currently, there is a --skip-if-exists option. This should be consistent with other gfsh commands and should be rename --if-not-existsThis option should also be added the help create region command.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserAutoCompletionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionFunctionArgs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
    </fixedFiles>
  </bug>
  <bug id="4622" opendate="2018-2-7 00:00:00" fixdate="2018-2-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update library dependencies</summary>
      <description>Using com.github.ben-manes:gradle-versions-plugin we can determine which libraries have newer versions and update libraries where appropriate.  Some major version updates (like spring) may be deferred since those are larger efforts.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-web-api.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-pulse.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.shared.NativeCallsJNAImpl.java</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-assembly.src.test.resources.expected.jars.txt</file>
      <file type="M">geode-assembly.src.main.dist.NOTICE</file>
      <file type="M">geode-assembly.src.main.dist.LICENSE</file>
      <file type="M">build.gradle</file>
      <file type="M">gradle.dependency-versions.properties</file>
    </fixedFiles>
  </bug>
  <bug id="4624" opendate="2018-2-7 00:00:00" fixdate="2018-4-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a new stat for AyncEventQueue/GatewaySender to track the processing of queueRemovals</summary>
      <description>We currently track the number of events queues, queue size and eventsDistributed ... but we don't track the number of events removed via queue removal.</description>
      <version>1.5.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelWANConflationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.bean.stats.AsyncEventQueueStatsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelQueueRemovalMessageJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.AsyncEventQueueTestBase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.asyncqueue.internal.SerialAsyncEventQueueImplJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ParallelQueueRemovalMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRegionQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractBucketRegionQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.asyncqueue.internal.AsyncEventQueueStats.java</file>
      <file type="M">geode-docs.reference.statistics.list.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4625" opendate="2018-2-7 00:00:00" fixdate="2018-2-7 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Create region with the same name on different groups in gfsh should fail early</summary>
      <description>1. creating non-proxy region: check to see if there is a non-proxy region with the same name on the entire cluster or not. If yes, abort the creation.2. creating proxy region: check to see if there is any region with the same name on the group or not, if yes, abort the creation.email thread:http://mail-archives.apache.org/mod_mbox/geode-user/201802.mbox/%3CCAHEKSUKj65m+-Lc-HseR01DJvGGEq6up0Ondq0pXemi1tbm13A@mail.gmail.com%3E</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.stats.RegionClusterStatsMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.DistributedRegionBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.RegionShortcut.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.DistributedRegionMXBean.java</file>
    </fixedFiles>
  </bug>
  <bug id="4636" opendate="2018-2-8 00:00:00" fixdate="2018-2-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Spotless should not adjust block comments</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">etc.eclipse-java-google-style.xml</file>
    </fixedFiles>
  </bug>
  <bug id="4638" opendate="2018-2-8 00:00:00" fixdate="2018-2-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>review protobuf server error responses and logging for region-not-found</summary>
      <description>Some operation handlers log region-not-found problems at error level and some at warning level. Some return a SERVER_ERROR error code and some return an INVALID_REQUEST error code. These should probably all behave in the same way.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnRegionRequestOperationHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="4644" opendate="2018-2-9 00:00:00" fixdate="2018-4-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove static ClientSideHandshake.deltaEnabledOnServer</summary>
      <description>This static is used by the cache</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalDistributedSystem.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ClientSideHandshakeImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4676" opendate="2018-2-14 00:00:00" fixdate="2018-4-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Activate call stacks capture on all tests</summary>
      <description>Currently callstacks are only captured for AcceptanceTest and DistributedTest. Add callstacks capturing to IntegrationTest and FlakyTests.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.capture-call-stacks.sh</file>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  <bug id="4685" opendate="2018-2-14 00:00:00" fixdate="2018-3-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replace setPdxReadSerialized in org.apache.geode.cache.lucene.internal</summary>
      <description>Replace with the solution from GEODE-4679</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.PartitionedRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneEventListenerJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneEventListener.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.IndexRepositoryFactory.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqServiceImpl.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.fake.Fakes.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.PdxSerializableJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.PdxClientServerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.PdxDeleteFieldJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.codeAnalysis.AnalyzeSerializablesJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.PdxStringQueryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.partitioned.PRQueryRemoteNodeExceptionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.PdxStringQueryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.BaseLineAndCompareQueryPerfJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.TypeRegistry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.QueryMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.streaming.StreamingOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.IndexManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.DefaultQuery.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcWriterTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcLoaderTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcLoaderIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriterTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.AbstractJdbcCallbackTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.JdbcWriter.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.JdbcLoader.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriter.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.AbstractJdbcCallback.java</file>
    </fixedFiles>
  </bug>
  <bug id="4688" opendate="2018-2-15 00:00:00" fixdate="2018-4-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add metrics pipeline</summary>
      <description>Add a pipeline that checks the develop pipeline jobs and reports on their success rates and where they fail if applicable.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.yml</file>
    </fixedFiles>
  </bug>
  <bug id="469" opendate="2015-10-22 00:00:00" fixdate="2015-10-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: PersistentColocatedPartitionedRegionDUnitTest.testReplaceOfflineMemberAndRestartTwoDiskStores</summary>
      <description>java.lang.AssertionError: Suspicious strings were written to the log during this run.Fix the strings or use DistributedTestCase.addExpectedException to ignore.-----------------------------------------------------------------------Found suspect string in log4j at line 3982com.gemstone.gemfire.cache.RegionDestroyedException: The DiskRegion has been closed or destroyed at org.junit.Assert.fail(Assert.java:88) at dunit.standalone.DUnitLauncher.closeAndCheckForSuspects(DUnitLauncher.java:307) at dunit.DistributedTestCase.cleanupAllVms(DistributedTestCase.java:784) at dunit.DistributedTestCase.realTearDown(DistributedTestCase.java:759) at dunit.DistributedTestCase.tearDown(DistributedTestCase.java:737) at junit.framework.TestCase.runBare(TestCase.java:146) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:129) at junit.framework.TestSuite.runTest(TestSuite.java:252) at junit.framework.TestSuite.run(TestSuite.java:247) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Previously run tests: &amp;#91;RemoveAllDAckDUnitTest, RemoveDAckDUnitTest, RemoveGlobalDUnitTest, SizingFlagDUnitTest, SystemFailureDUnitTest, PersistentPartitionedRegionWithTransactionDUnitTest, Bug39356DUnitTest, Bug43684DUnitTest, Bug47388DUnitTest, Bug51400DUnitTest, ElidedPutAllDUnitTest, PartitionResolverDUnitTest, PartitionedRegionLoaderWriterDUnitTest, PartitionedRegionMetaDataCleanupDUnitTest, PersistPRKRFDUnitTest, PersistentColocatedPartitionedRegionDUnitTest&amp;#93;</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.LocalRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="4690" opendate="2018-2-15 00:00:00" fixdate="2018-2-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ClusterStartupRule causes System properties to &amp;#39;disappear&amp;#39;</summary>
      <description>The ClusterStartupRule uses DistributedRestoreSystemProperties internally to capture and restore system properties. However, the result is that system properties appear to 'disappear' (they are actually captured as defaults) but Geode does not consider default properties when looking for gemfire or geode prefixed properties.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientExecuteFunctionAuthDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientDataAuthorizationUsingLegacySecurityWithFailoverDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientDataAuthorizationUsingLegacySecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShowDeadlockDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.RemoveCommandJsonDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.LocateEntryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsShareConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.ClientFunctionTimeoutRegressionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalDataSerializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4691" opendate="2018-2-15 00:00:00" fixdate="2018-2-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gfsh command Start Locator shows inconsistent behavior with auto-connecting with a Security Manager</summary>
      <description>When starting a locator in gfsh like thisstart locator --name=locator1the default behavior is to auto-connect gfsh to the locator.From the gfsh start locator help:connectWhen connect is set to false , Gfsh does not automatically connect to the locator which is startedusing this command.Required: falseDefault (if the parameter is specified without value): trueDefault (if the parameter is not specified): trueWhen starting the locator with a Security Manager like thisstart locator --name=locator1 --J=-Dgemfire.security-manager=org.apache.geode.examples.SimpleSecurityManagerThe result is that gfsh does not auto connect to the locator. However this is not listed in the help command and is inconsistent in the user expectation. Solution and accceptance criteria:Update the output of start locator --J=-Dgemfire.security-manager=org.apache.geode.examples.SimpleSecurityManagerto indicate that it is not auto-connected. New output:Security Manager is enabled - unable to auto-connect. Please use connect with --user and --password to connect to locator.Update gfsh help to correctly list the behavior when the Security Manager is set via the --J parameter gfsh should display correct connect help message forhelp start locatorwhen using Security Manager.connectWhen connect is set to false or when locator is started with a security manager using --J=-Dgemfire.security-manager option, Gfsh does not automatically connect to the locator which is started using this command.Required: falseDefault (if the parameter is specified without value): trueDefault (if the parameter is not specified): true </description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.StartLocatorCommand.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.management.internal.cli.commands.StartLocatorAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4703" opendate="2018-2-16 00:00:00" fixdate="2018-2-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>DestroyGatewayReceiver may cause hang if executed during RollingUpgrade</summary>
      <description>GEODE-2667 introduced the ability to destroy gateway receiver -&gt; destroy cache server. However if executed in a cluster with mixed servers (servers prior to 1.5) the distribution of the message causes a DSFID deserialization failure on the older versions, which causes the sender to wait for replies infinitely.</description>
      <version>1.5.0</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.cache.wan.WANRollingUpgradeDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4709" opendate="2018-2-21 00:00:00" fixdate="2018-4-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Sample output missing in gfsh docs for &amp;#39;list gateways&amp;#39;</summary>
      <description>It looks like all other 'list' commands have both Example commands and Sample Output except for 'list gateways'. Please add.</description>
      <version>None</version>
      <fixedVersion>1.12.10,1.14.5,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.topologies.and.comm.multi.site.configuration.setting.up.a.multisite.system.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.list.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4716" opendate="2018-2-22 00:00:00" fixdate="2018-4-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The Gateway Sender MBean needs to monitor events overflowed to disk</summary>
      <description>The Gateway Sender MBean needs to monitor events overflowed to disk.These stats provide that info: DiskRegionStatistics entriesOnlyOnDisk and bytesOnlyOnDisk stats for the sender queue (e.g. /ny_PARALLEL_GATEWAY_SENDER_QUEUE) MemLRUStatistics lruEvictions stat for the sender queue (e.g. MemLRUStatistics-/ny_PARALLEL_GATEWAY_SENDER_QUEUE)</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.MyGatewaySenderEventListener.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.asyncqueue.AsyncEventListenerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.AsyncEventQueueTestBase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.stats.StatsKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.GatewaySenderMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.GatewaySenderMBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.AsyncEventQueueMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.AsyncEventQueueMBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.GatewaySenderMXBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.AsyncEventQueueMXBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.asyncqueue.internal.AsyncEventQueueFactoryImpl.java</file>
      <file type="M">geode-docs.reference.statistics.list.html.md.erb</file>
      <file type="M">geode-docs.managing.management.list.of.mbeans.full.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4718" opendate="2018-2-22 00:00:00" fixdate="2018-2-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>DefaultQuery.setPdxReadSerialized must rest in computeRepository</summary>
      <description>In method computeRepository we set setPdxReadSerialized to true but after the method is done executing we reset it back to false.This behavior must be to reset to the state it was in before we set it to true.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.IndexRepositoryFactory.java</file>
    </fixedFiles>
  </bug>
  <bug id="4719" opendate="2018-2-22 00:00:00" fixdate="2018-2-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a comment to explain getRepository&amp;#39;s function in createLuceneIndexOnDataRegion</summary>
      <description>Add comments above the getRepository call in createLuceneIndexOnDataRegion method so that it explains that getRepository will call computeRepository which will in turn index the user region.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneServiceImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4768" opendate="2018-3-2 00:00:00" fixdate="2018-3-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>protobuf driver is not closing its socket connections to the locator</summary>
      <description>While reviewing code in the experimental protobuf driver I noticed that the findAServer method is creating socket connections to locators but is not closing them. Ideally it would abort the socket connections by setting solinger to zero so the locator doesn't accumulate sockets in a time-wait state. See GEODE-871.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufChannel.java</file>
    </fixedFiles>
  </bug>
  <bug id="4769" opendate="2018-3-2 00:00:00" fixdate="2018-3-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Serialize region entry before putting in local cache</summary>
      <description>This will prevent cache inconsistency when dealing with key or value objects that have broken serialization.Test should create two members with a REPLICATE region. If one member performs a put, but the serialization fails then the region entry currently ends up existing in only the cache of the member that performed the put locally. The change will prevent this from occurring.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalEntryEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.PdxInstanceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.SystemPropertyHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXEntryState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXCommitMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Token.java</file>
      <file type="M">extensions.geode-modules-session.src.test.java.org.apache.geode.modules.session.installer.InstallerJUnitTest.java</file>
      <file type="M">extensions.geode-modules-session.src.test.java.org.apache.geode.modules.session.internal.filter.SessionReplicationIntegrationJUnitTest.java</file>
      <file type="M">extensions.geode-modules-session.src.test.java.org.apache.geode.modules.session.internal.filter.SessionReplicationJUnitTest.java</file>
      <file type="M">extensions.geode-modules-session.src.test.java.org.apache.geode.modules.session.internal.filter.SessionReplicationLocalCacheJUnitTest.java</file>
      <file type="M">extensions.geode-modules-tomcat7.src.test.java.org.apache.geode.modules.session.Tomcat7SessionsJUnitTest.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.test.java.org.apache.geode.modules.session.Tomcat8SessionsClientServerDUnitTest.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.test.java.org.apache.geode.modules.session.Tomcat8SessionsDUnitTest.java</file>
      <file type="M">extensions.geode-modules.src.test.java.org.apache.geode.modules.session.Tomcat6SessionsJUnitTest.java</file>
      <file type="M">extensions.geode-modules.src.test.java.org.apache.geode.modules.util.ClassLoaderObjectInputStreamTest.java</file>
      <file type="M">extensions.geode-modules.src.test.java.org.apache.geode.modules.util.ModuleFunctionsSecurityTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.management.internal.cli.commands.PutCommandWithJsonTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionRegionConfig.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.Bug38741DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml80DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml81DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.PRBucketSynchronizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.RRSynchronizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.Bug32947ValueConstraintJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.data.Address.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.data.Data.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.data.Employee.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.data.Keywords.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.data.Manager.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.data.PhoneNo.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.data.Portfolio.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.data.Street.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.data.TradingLine.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.functional.INOperatorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.functional.IUMRMultiIndexesMultiRegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.functional.IUMRShuffleIteratorsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.functional.LikePredicateJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.functional.MiscJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.functional.MultipleRegionsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.functional.ReservedKeywordsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.CopyOnReadQueryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.HashIndexQueryIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.IndexMaintenanceJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.IndexUseJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.MapRangeIndexMaintenanceJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.QueryObserverCallbackJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.QueryUtilsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.PdxStringQueryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.DeltaTestImpl.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionQueryEvaluatorIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.QueryCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.model.EmptyObject.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.PRDeltaPropagationDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.QueryCommandOverHttpTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EntryEventImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4772" opendate="2018-3-5 00:00:00" fixdate="2018-3-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protobuf: add region clear message/operation</summary>
      <description>As a dev using the new protocol, I want to be able to clear a region completely.Add a region clear message/operation that clears a replicated region.GEODE-788 will implement .clear for partitioned regions - when that is complete we can add support for clearing PRs. Client should receive error if the region does not exist or the client does not have authorization on the region. </description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.KeySetOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetServerOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionNamesRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAndPutJsonDocumentsDUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.MessageUtil.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.LocatorConnectionDUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.LocatorConnectionAuthenticationDUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.CacheOperationsJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufRequestUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.registry.ProtobufOperationContextRegistry.java</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.region.API.proto</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.clientProtocol.proto</file>
      <file type="M">geode-experimental-driver.src.test.java.org.apache.geode.experimental.driver.RegionIntegrationTest.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.Region.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="4776" opendate="2018-3-5 00:00:00" fixdate="2018-3-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Migrate to chrome driver for Pulse UI Tests</summary>
      <description>Migrate to use chrome web driver Remove unused mock implementations on Pulse UI tests Fix any failing tests</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.ui.PulseAutomatedTest.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.ui.PulseAnonymousUserTest.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.rules.WebDriverRule.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.rules.ServerRule.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.MemberMBean.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.Member.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.testbed.TestBed.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.testbed.PropMockDataUpdater.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.testbed.PropFileHelper.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.testbed.GemfireTopology.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.testbed.GemFireDistributedSystem.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.IClusterUpdater.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.Cluster.java</file>
      <file type="M">geode-pulse.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="4778" opendate="2018-3-5 00:00:00" fixdate="2018-1-5 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Code clean up and refactoring for Lucene</summary>
      <description>There are various areas that could be cleaned up in the Lucene module.This ticket is a general ticket to reduce method calls, condense classes and remove unneeded variables, among other code clarity/clean up tasks</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.test.IndexRepositorySpy.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.RawLuceneRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.PartitionedRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneServiceImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexForPartitionedRegionTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.StringQueryProvider.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.RawLuceneRepositoryManager.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.RawIndexRepositoryFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.PartitionedRepositoryManager.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.management.LuceneServiceBridge.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneServiceImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneRegionListener.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneRawIndex.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexForPartitionedRegion.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneBucketListener.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.InternalLuceneIndex.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.IndexRepositoryFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.distributed.LuceneQueryFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.AbstractPartitionedRepositoryManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="4782" opendate="2018-3-6 00:00:00" fixdate="2018-4-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Categorize Gfsh tests</summary>
      <description>Add Category annotation for gfsh integration and distributed tests.</description>
      <version>1.5.0</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.QueryDataFunctionIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.deployment.FunctionScannerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.shell.GfshMultilineCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.SizeExportLogsFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.SizeExportLogsFunctionFileTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ListJndiBindingFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ExportLogsFunctionIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.DestroyJndiBindingFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.DataCommandFunctionWithPDXJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.DataCommandFunctionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.CreateJndiBindingFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.VersionCommandJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShowMetricsCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShellCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.RemoveCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.QueryCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.PutCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListDiskStoreCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsShareConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GfshCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GetCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GemfireDataCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GcCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.FunctionCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportStackTraceCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommandSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeMembersCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeConfigCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DeployCommandFunctionRegistrationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAlterDestroyRegionCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ConnectCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ConfigurePDXCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4785" opendate="2018-3-6 00:00:00" fixdate="2018-3-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Categorize Pulse tests</summary>
      <description>Add Category annotation for pulse tests</description>
      <version>1.5.0</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.controllers.PulseControllerJUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.PulseSecurityWithSSLTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.PulseSecurityTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.PulseSecurityIntegrationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.PulseJmxPasswordFileTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.PulseDataExportTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.PulseConnectivityTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="480" opendate="2015-10-23 00:00:00" fixdate="2015-10-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: ConcurrentIndexUpdateWithoutWLDUnitTest.testRangeIndex</summary>
      <description>Error Messagedunit.RMIException: While invoking com.gemstone.gemfire.cache.query.internal.index.ConcurrentIndexUpdateWithoutWLDUnitTest$1.run in VM 0 running on Host angola.gemstone.com with 4 VMsStacktracedunit.RMIException: While invoking com.gemstone.gemfire.cache.query.internal.index.ConcurrentIndexUpdateWithoutWLDUnitTest$1.run in VM 0 running on Host angola.gemstone.com with 4 VMs at dunit.VM.invoke(VM.java:360) at dunit.VM.invoke(VM.java:303) at dunit.VM.invoke(VM.java:257) at com.gemstone.gemfire.cache.query.internal.index.ConcurrentIndexUpdateWithoutWLDUnitTest.testRangeIndex(ConcurrentIndexUpdateWithoutWLDUnitTest.java:208) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at junit.framework.TestCase.runTest(TestCase.java:176) at junit.framework.TestCase.runBare(TestCase.java:141) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:129) at junit.framework.TestSuite.runTest(TestSuite.java:252) at junit.framework.TestSuite.run(TestSuite.java:247) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: junit.framework.AssertionFailedError: No of index entries NOT equals the No of RegionEntries for index:secidIndex expected:&lt;36&gt; but was:&lt;37&gt; at junit.framework.Assert.fail(Assert.java:57) at junit.framework.Assert.failNotEquals(Assert.java:329) at junit.framework.Assert.assertEquals(Assert.java:78) at junit.framework.Assert.assertEquals(Assert.java:234) at junit.framework.TestCase.assertEquals(TestCase.java:401) at com.gemstone.gemfire.cache.query.internal.index.ConcurrentIndexUpdateWithoutWLDUnitTest$IndexValidator.validate(ConcurrentIndexUpdateWithoutWLDUnitTest.java:626) at com.gemstone.gemfire.cache.query.internal.index.ConcurrentIndexUpdateWithoutWLDUnitTest$IndexValidator.validate(ConcurrentIndexUpdateWithoutWLDUnitTest.java:439) at com.gemstone.gemfire.cache.query.internal.index.ConcurrentIndexUpdateWithoutWLDUnitTest$1.run2(ConcurrentIndexUpdateWithoutWLDUnitTest.java:179) at com.gemstone.gemfire.cache30.CacheSerializableRunnable.run(CacheSerializableRunnable.java:46) at sun.reflect.GeneratedMethodAccessor6.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at hydra.MethExecutor.executeObject(MethExecutor.java:258) at dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:68) at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$241(TCPTransport.java:683) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1/868282079.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ... 3 moreStandard OutputPreviously run tests: [PRQueryRemoteNodeExceptionDUnitTest, IndexTrackingQueryObserverDUnitTest, ConcurrentIndexOperationsOnOverflowRegionDUnitTest, MultiIndexCreationDUnitTest, InitializeIndexEntryDestroyQueryDUnitTest, ConcurrentIndexInitOnOverflowRegionDUnitTest, ConcurrentIndexUpdateWithInplaceObjectModFalseDUnitTest, CopyOnReadIndexDUnitTest, ConcurrentIndexUpdateWithoutWLDUnitTest]</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.index.AbstractIndex.java</file>
    </fixedFiles>
  </bug>
  <bug id="4800" opendate="2018-3-7 00:00:00" fixdate="2018-3-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Handle relative paths for backup baseline directories</summary>
      <description>Backups that specify a relative path for the baseline directory for incremental backups no longer function correctly: the restore script has invalid paths for recovery.</description>
      <version>None</version>
      <fixedVersion>1.5.0,1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupWriterFactoryTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.FileSystemBackupWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupWriterFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupWriter.java</file>
    </fixedFiles>
  </bug>
  <bug id="4801" opendate="2018-3-8 00:00:00" fixdate="2018-3-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Readme should link to "how to contribute" on wiki</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">README.md</file>
    </fixedFiles>
  </bug>
  <bug id="4807" opendate="2018-3-8 00:00:00" fixdate="2018-3-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse UI tests using locator/cluster rule.</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="481" opendate="2015-10-23 00:00:00" fixdate="2015-2-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: QueryUsingFunctionContextDUnitTest.testQueriesWithFilterKeysOnPRWithBucketDestroy</summary>
      <description>Error Messagedunit.RMIException: While invoking com.gemstone.gemfire.cache.query.dunit.QueryUsingFunctionContextDUnitTest$10.run in VM 3 running on Host japan.gemstone.com with 4 VMsStacktracedunit.RMIException: While invoking com.gemstone.gemfire.cache.query.dunit.QueryUsingFunctionContextDUnitTest$10.run in VM 3 running on Host japan.gemstone.com with 4 VMs at dunit.VM.invoke(VM.java:360) at dunit.VM.invoke(VM.java:303) at dunit.VM.invoke(VM.java:257) at com.gemstone.gemfire.cache.query.dunit.QueryUsingFunctionContextDUnitTest.testQueriesWithFilterKeysOnPRWithBucketDestroy(QueryUsingFunctionContextDUnitTest.java:386) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at junit.framework.TestCase.runTest(TestCase.java:176) at junit.framework.TestCase.runBare(TestCase.java:141) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:129) at junit.framework.TestSuite.runTest(TestSuite.java:252) at junit.framework.TestSuite.run(TestSuite.java:247) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: junit.framework.AssertionFailedError: Should have received an QueryInvocationTargetException but recievedcom.gemstone.gemfire.cache.client.ServerConnectivityException: Pool unexpected IOException connection=Pooled Connection to japan.gemstone.com:25754: Connection[DESTROYED]). Server unreachable: could not connect after 1 attempts at junit.framework.Assert.fail(Assert.java:57) at junit.framework.TestCase.fail(TestCase.java:227) at com.gemstone.gemfire.cache.query.dunit.QueryUsingFunctionContextDUnitTest$10.run2(QueryUsingFunctionContextDUnitTest.java:410) at com.gemstone.gemfire.cache30.CacheSerializableRunnable.run(CacheSerializableRunnable.java:46) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at hydra.MethExecutor.executeObject(MethExecutor.java:258) at dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:68) at sun.reflect.GeneratedMethodAccessor49.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$241(TCPTransport.java:683) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1/1242147135.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ... 3 moreStandard OutputPreviously run tests: [InitializeIndexEntryDestroyQueryDUnitTest, QueryParamsAuthorizationDUnitTest, CompactRangeIndexDUnitTest, QueryUsingFunctionContextDUnitTest]</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
    </fixedFiles>
  </bug>
  <bug id="4811" opendate="2018-3-8 00:00:00" fixdate="2018-1-8 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Add a @Disabled annotation to various endpoints to facilitate feature-flagging.</summary>
      <description>Many gfsh commands are mutually required by each other for full functionality. For instance, destroy jndi-binding is meaningless without the create jndi-binding command.As a developer, I would like to be able to coordinate release of multiple related commands at once, across multiple commits. A @FeatureFlag annotation on gfsh command classes would be extremely useful.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.CommandManagerJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CommandManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="4813" opendate="2018-3-9 00:00:00" fixdate="2018-1-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Categorize register interest tests</summary>
      <description>Add the ClientSubscription category to all register interest tests</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.RegisterInterestServerMetaDataDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.RegisterInterestIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.HAInterestTestCase.java</file>
    </fixedFiles>
  </bug>
  <bug id="4815" opendate="2018-3-9 00:00:00" fixdate="2018-3-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ParallelGatewaySenderOperation_2_DUnitTest testParallelGatewaySender_SingleNode_UserPR_Destroy_SimultaneousPut_RecreateRegion failed with suspect string</summary>
      <description>ParallelGatewaySenderOperation_2_DUnitTest testParallelGatewaySender_SingleNode_UserPR_Destroy_SimultaneousPut_RecreateRegion failed with suspect stringFound suspect string in log4j at line 2444[fatal 2018/03/06 23:47:36.347 UTC &lt;Geode Membership View Creator&gt; tid=770] Possible loss of quorum due to the loss of 1 cache processes: [172.17.0.5(181)&lt;ec&gt;&lt;v0&gt;:32771] at org.junit.Assert.fail(Assert.java:88) at org.apache.geode.test.dunit.standalone.DUnitLauncher.closeAndCheckForSuspects(DUnitLauncher.java:403) at org.apache.geode.test.dunit.internal.JUnit4DistributedTestCase.cleanupAllVms(JUnit4DistributedTestCase.java:561) at org.apache.geode.test.dunit.internal.JUnit4DistributedTestCase.doTearDownDistributedTestCase(JUnit4DistributedTestCase.java:508) at org.apache.geode.test.dunit.internal.JUnit4DistributedTestCase.tearDownDistributedTestCase(JUnit4DistributedTestCase.java:495)</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.Simple2CacheServerDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.CacheClientNotifierDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.UpdateVersionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.AsyncEventQueueTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug id="4816" opendate="2018-3-9 00:00:00" fixdate="2018-3-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enhance experimental driver with authentication</summary>
      <description>The experimental driver does not experiment with authentication. It ought.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionAuthorizingStateProcessor.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufDriver.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufChannel.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.DriverFactory.java</file>
    </fixedFiles>
  </bug>
  <bug id="4817" opendate="2018-3-9 00:00:00" fixdate="2018-4-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enhance experimental driver with SSL</summary>
      <description>The experimental driver does not experiment with SSL. It ought.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-experimental-driver.src.test.java.org.apache.geode.experimental.driver.SSLTest.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.SocketFactory.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufDriver.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufChannel.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.DriverFactory.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.client.internal.cacheserver.truststore</file>
    </fixedFiles>
  </bug>
  <bug id="4823" opendate="2018-3-12 00:00:00" fixdate="2018-3-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Indexes should not be updated on a destroy if the old value is a TOMBSTONE</summary>
      <description>If a destroy operation is called but the old value is a TOMBSTONE, the index operation is a no op but certain indexes may spend cycles trying to locate the entry in the index. Instead we should short circuit and ignore an operation if the action is DESTROY and the old value is a TOMBSTONE</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.entries.AbstractRegionEntryTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.entries.AbstractRegionEntry.java</file>
    </fixedFiles>
  </bug>
  <bug id="4830" opendate="2018-3-13 00:00:00" fixdate="2018-4-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modify list jndi-binding gfsh command</summary>
      <description>The list jndi-binding command currently displays jndi-bindings that are active.We need to modify the output of this command to list all jndi-bindings that are listed in the cluster config and indicate in the output of this command whether the binding is active or configured.We should update the help text to reflect this change. A suggested help text is:List all jndi bindings, active and configured. An active binding is one that is bound to the server's jndi context (and also listed in the cluster config). A configured binding is one that is listed in the cluster config, but is not active. </description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalClusterConfigurationServiceTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListJndiBindingFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ListJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.configuration.ObjectFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.configuration.CacheConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.configuration.cache-1.0.xsd</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ClusterConfigurationService.java</file>
    </fixedFiles>
  </bug>
  <bug id="4840" opendate="2018-3-14 00:00:00" fixdate="2018-4-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CacheLoader that loads PdxInstance requires class to be on classpath if pdx-read-serialized is false</summary>
      <description>When remote get invokes the CacheLoader that loads PdxInstance; it tries to deserialize the object if pdx-read-serialized is false (requires pdx domain class to be on classpath): which may not be true in client-server scenario.</description>
      <version>1.5.0</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.PdxInstanceLoaderIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.SearchLoadAndWriteProcessorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DistributedRegionSearchLoadJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.SearchLoadAndWriteProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.HARegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="4874" opendate="2018-3-16 00:00:00" fixdate="2018-4-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Inconsistency in gfsh help for create jndi-binding</summary>
      <description>I see an error and an inconsistency when trying to use the gfsh help functionality for create jndi-binding.Tab completion ofcreate jndi-bindingoutputs gfsh&gt;create jndi-binding – create jndi-binding --connection-url create jndi-binding --jdbc-driver-class create jndi-binding --name create jndi-binding --typeThis is inconsistent with the output of other tab completions, which just give the options, and do not repeat the "create jndi-binding" portion of the command. </description>
      <version>1.5.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="4888" opendate="2018-3-19 00:00:00" fixdate="2018-3-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document security-udp-dhalgo property</summary>
      <description>Document the security-udp-dhalgo property.  It is a string that defines the name of a valid symmetric key cipher supported by the JDK.  When defined, the cipher will be used for server to server UDP communications.Also update the ssl-enabled-components property definition to recommend to users that when ssl-enabled-components is defined, they should also set security-udp-dhalgo to secure cluster communications.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="489" opendate="2015-10-23 00:00:00" fixdate="2015-10-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: OffHeapValidationJUnitTest.testMemoryInspection</summary>
      <description>java.lang.AssertionError: expected:&lt;0&gt; but was:&lt;52&gt; at org.junit.Assert.fail(Assert.java:88) at org.junit.Assert.failNotEquals(Assert.java:834) at org.junit.Assert.assertEquals(Assert.java:645) at org.junit.Assert.assertEquals(Assert.java:631) at com.gemstone.gemfire.internal.offheap.OffHeapValidationJUnitTest.testMemoryInspection(OffHeapValidationJUnitTest.java:112) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.offheap.SimpleMemoryAllocatorImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4913" opendate="2018-3-22 00:00:00" fixdate="2018-3-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh start server cmd is not recognizing local properties and cache.xml, instead using default</summary>
      <description>The attached tarfile contains scripts to start up 2 clusters and connect them with a WAN gateway. The script for starting the servers for the first cluster (ln) fail because the default 40404 port is being used for each server. Instead, the start server command should be using the local cache.xml files found under config/gemfire-XX-hub.xml which contain:&lt;cache-server port="0"/&gt;This should force gfsh to choose the next available port, rather than the default 40404.It appears that the default cache.xml is being used. This problem does not exist with Geode 1.4.0.</description>
      <version>1.5.0,1.6.0</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ClusterConfigurationService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.domain.Configuration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalClusterConfigurationService.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4941" opendate="2018-3-26 00:00:00" fixdate="2018-3-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Increase UITests timeout to 2h</summary>
      <description>Some of the runs timed out after 1hr. Lets increase it to 2h.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  <bug id="4947" opendate="2018-3-27 00:00:00" fixdate="2018-4-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add tests that use MySql and Postrgres for JDBC connector</summary>
      <description>Current tests only validate that in-memory Derby database is compatible with the connector. Need to add tests that validate support for popular databases.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcLoaderIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TestConfigService.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManagerIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlStatementFactoryTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlStatementFactory.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.build.gradle</file>
      <file type="M">ci.pipelines.develop.yml</file>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="5029" opendate="2018-4-6 00:00:00" fixdate="2018-4-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve docs for query timeout and low memory due to a query</summary>
      <description>The section labeled "Monitoring Queries for Low Memory" can use a bit of improvement. Separate the section into 2 sections: Queries and low memory Query timeout Make the prose clear that this is not just about monitoring, but about action that is taken (exceptions thrown) for queries.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.additional.advanced.querying.html.md.erb</file>
      <file type="M">geode-docs.developing.querying.basics.monitor.queries.for.low.memory.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="503" opendate="2015-10-27 00:00:00" fixdate="2015-12-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode can leak SSL keystore password via the log file</summary>
      <description>KeyStore password can be leaked via the log file, as this may get printed and is unintended. This could cause a security issue for some users by leaking information that could allow access to the keystore holding the SSL certificate used to validate connections between members.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.AbstractConfig.java</file>
    </fixedFiles>
  </bug>
  <bug id="5032" opendate="2018-4-9 00:00:00" fixdate="2018-12-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Massage Configuration Objects for Better Intuition.</summary>
      <description>For instance, various port fields are declared as Strings where an Integer makes more sense. This is true for many "count" fields as well.These may be best resolved via a JAXB bindings file and regenerating the POJOs from scratch. Additionally if all the minor adjustments that have been already made (removing the xsd:choice and manually enforcing it, having each item implement CacheElement and have a getId() method) can also be resolved via a bindings file, then the POJOs could be removed from the git tree and generated during the build step, if desired.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ListJndiBindingFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.DestroyJndiBindingFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.config.JAXBServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.CacheConfigDAODUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.DeclarableTypeTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverFunctionArgs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateJndiBindingFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateAsyncEventQueueFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportImportClusterConfigurationCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DescribeJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateGatewayReceiverCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.SerializationRegistrationType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.PoolType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.JndiBindingsType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.DiskDirsType.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.CacheConfigTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ConfigurePDXCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.StringType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.ServerType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.RegionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.RegionAttributesType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.PdxType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.ParameterType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.InitializerType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.FunctionServiceType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.ExpirationAttributesType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.DeclarableType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.ClassWithParametersType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheWriterType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheTransactionManagerType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheLoaderType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheConfig.java</file>
    </fixedFiles>
  </bug>
  <bug id="5039" opendate="2018-4-9 00:00:00" fixdate="2018-4-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>EvictionAttributesMutator.setMaximum does not work</summary>
      <description>EvictionAttributesMutator.setMaximum does not change the lru count. Given I am configuring evictionWhen setting EvictionAttributesMutator.setMaximumThen the lru count should update accordingly</description>
      <version>1.5.0</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="5047" opendate="2018-4-11 00:00:00" fixdate="2018-5-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modify gfsh command &amp;#39;list Lucene index&amp;#39; to list status of re-indexing.</summary>
      <description>As a GemFire developer, I want to use gfsh to check if the Lucene index creation has completed successfully using the 'list lucene indexes' and 'describe lucene index' commands.Acceptance criteria:When I use gfsh to add a new Lucene index to an existing region with data, I can check its status using 'list lucene index': If indexing is in progress, the list command will display this If indexing is complete, the list command will display this and I can execute a Lucene search.Implementation ideasCheck for completed file. If not present, status is 'initializing'. Once re-indexing is complete, status changes to 'initialized'.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.xml.LuceneIndexXmlGeneratorJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.configuration.LuceneClusterConfigurationDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsWithReindexAllowedDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneListIndexFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.resources.org.apache.geode.internal.sanctioned-geode-lucene-serializables.txt</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.xml.LuceneIndexXmlGenerator.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.xml.LuceneIndexCreation.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneRawIndex.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexForPartitionedRegion.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexDetails.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommands.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneListIndexFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneIndex.java</file>
    </fixedFiles>
  </bug>
  <bug id="5103" opendate="2018-4-18 00:00:00" fixdate="2018-4-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>During rebalance, a client node may miss a transactional event</summary>
      <description>During rebalance, a new primary bucket could be created on another node while the original primary bucket become secondary in a short period of time. If a transaction occurs on the primary bucket node, TXCommitMessage will be sent to the secondary primary bucket node. There is a race that a event could be missed to be added to the subscription queue when the now secondary bucket is being removed to satisfy the redundancy.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug id="5104" opendate="2018-4-18 00:00:00" fixdate="2018-4-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI output git SHA when updating passing reference file.</summary>
      <description>When concourse updates the file indicating the SHA that has passed all tests, print it out.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.update-passing-ref.sh</file>
    </fixedFiles>
  </bug>
  <bug id="5106" opendate="2018-4-18 00:00:00" fixdate="2018-4-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI Failure: ParallelWANConflationOffHeapDUnitTest.testParallelPropagationBatchConflation failed with AssertionError</summary>
      <description>https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/DistributedTest/builds/282org.apache.geode.internal.cache.wan.offheap.ParallelWANConflationOffHeapDUnitTest &gt; testParallelPropagationBatchConflation FAILEDjava.lang.AssertionError: Event in secondary queue should be 0 after dispatched expected:&lt;0&gt; but was:&lt;11&gt;</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelWANConflationDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5109" opendate="2018-4-19 00:00:00" fixdate="2018-5-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Concurrent create lucene reindex ops must fail</summary>
      <description>Concurrent lucene reindex ops originating with same index profile must fail.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesReindexDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneServiceImplJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CreateRegionProcessor.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneServiceImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="5111" opendate="2018-4-19 00:00:00" fixdate="2018-5-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>show missing-disk-stores sometimes does not show the missing disk stores</summary>
      <description>When geode logs are showing there is in fact a missing disk store, running the show-missing-disk-store command sometimes returns that there are no missing disk stores</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.SystemPropertyHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheDistributionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketPersistenceAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug id="5114" opendate="2018-4-19 00:00:00" fixdate="2018-4-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Archive UITest results</summary>
      <description>It would be great to archive test results for concourse job UITest.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  <bug id="5118" opendate="2018-4-20 00:00:00" fixdate="2018-4-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix common typos in strings and comments</summary>
      <description>Some string literals and comments contain common typographical errors, e.g., "teh" instead of "the". These ought to be fixed.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.PdxBasedCrudController.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.GatewayReceiverImplJUnitTest.java</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.lib.jquery.sparkline.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.lib.jquery.jqGrid.src.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.lib.jquery-1.7.2.js</file>
      <file type="M">geode-pulse.src.main.webapp.regionDetail.html</file>
      <file type="M">geode-pulse.src.main.webapp.queryStatistics.html</file>
      <file type="M">geode-pulse.src.main.webapp.memberDetails.html</file>
      <file type="M">geode-pulse.src.main.webapp.dataBrowser.html</file>
      <file type="M">geode-pulse.src.main.webapp.css.style.css</file>
      <file type="M">geode-pulse.src.main.webapp.css.popup.css</file>
      <file type="M">geode-pulse.src.main.webapp.clusterDetail.html</file>
      <file type="M">geode-old-versions.src.test.java.org.apache.geode.test.dunit.standalone.VersionManagerJUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.tier.sockets.DurableClientTestCase.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.PRDeltaPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.RedundancyLevelPart3DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.InterestListEndpointDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.Bug36805DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.Bug36269DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistentPartitionedRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionSingleNodeOperationsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.OplogJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.TestBlockingHARegionQueue.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.PutAllDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.OperationsPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.HASlowReceiverDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.HARegionQueueDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.HARegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.HAEventIdPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.EventIdOptimizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.BlockingHARegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.FaultingInJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegRecoveryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegCachexmlGeneratorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DeltaPropagationStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DeltaPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ClientServerInvalidAndDestroyedEntryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupFileCopierIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.partitioned.PRQueryDUnitHelper.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.ResultsCollectionWrapperLimitJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.ResultsBagLimitBehaviourJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.NWayMergeResultsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.ConcurrentIndexInitOnOverflowRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.AsynchIndexMaintenanceJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.QueryUsingFunctionContextDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheMapTxnDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.main.WANBootStrapping.Site2.Add.java</file>
      <file type="M">geode-core.src.test.java.com.main.MyDistributedSystemListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.ExportLogsCacheWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.GfshParser.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.jta.TransactionManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalInstantiator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.datasource.AbstractPoolCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPITestBase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.MBeanUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ExecuteFunctionOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.aggregate.CountPRQueryNode.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.Bag.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledIndexOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledSelect.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.ExecutionContext.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.AbstractMapIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.CompactRangeIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.FunctionalIndexCreationHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.HashIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.IndexData.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.MemoryIndexStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.MapIndexable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.QCompiler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.ResultsBag.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.ResultsCollectionWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.SortedStructBag.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.StructBag.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.SelectResults.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.deadlock.DependencyGraph.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.CacheCollector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupFileCopier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.DistributedRegionFunctionResultSender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.FunctionStreamingResultCollector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.LocalResultCollectorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.MemberFunctionExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.MemberFunctionResultSender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.PartitionedRegionFunctionResultSender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.PartitionedRegionFunctionResultWaiter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.StreamingFunctionOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ha.HARegionQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InitialImageOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionQueryEvaluator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.BucketBackupMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.FlushMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.IndexCreationMsg.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PRFunctionStreamingResultCollector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RegionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RemoveIndexesMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientHealthMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetAllForRI.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.UnregisterInterest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXManagerImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="512" opendate="2015-10-28 00:00:00" fixdate="2015-10-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>unit test suspect string detector needs to provide more info</summary>
      <description>The suspect string detector used by the unit test framework only gives a single line that is suspect. This makes it hard to fix suspect string tickets.Often times the suspect is the beginning of a exception stack. If the entire call stack was included it would be helpful.Also having some context around the suspect string can help. For example what thread logged the suspect and what happened right before and after the suspect can help.Often times the actual logs are no longer available and getting the suspect string to reproduce can take lots of time.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.batterytest.greplogs.LogConsumer.java</file>
    </fixedFiles>
  </bug>
  <bug id="5130" opendate="2018-4-24 00:00:00" fixdate="2018-1-24 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Refactor pipeline in anticipation of PR pipeline</summary>
      <description>In order to facilitate the upcoming PR Pipeline functionality, refactor the geode pipeline to be branch-independent, and dry up configuration via templates.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.yml</file>
      <file type="M">ci.pipelines.develop.yml</file>
      <file type="M">ci.pipelines.geode-build.base.yml</file>
      <file type="M">ci.scripts.test-run.sh</file>
    </fixedFiles>
  </bug>
  <bug id="5255" opendate="2018-5-25 00:00:00" fixdate="2018-5-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In a race condition, a colocated bucket may not be created during rebalance when member nodes are restarted</summary>
      <description>During rebalance, a member node may request a newly started member node to grab a bucket from a parent partitioned region based on its calculated model. When the new member creates the parent bucket, it is required to grab the bucket's colocated child buckets. If the colocated child bucket underlying partitioned region is not yet initialized, the child bucket will not be created on the member.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.7.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.ManageBackupBucketMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
    </fixedFiles>
  </bug>
  <bug id="5302" opendate="2018-6-8 00:00:00" fixdate="2018-6-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>the totalLiveCount should be set to 0 after oplog is compacted (all live data has been copied forward to new oplog)</summary>
      <description>There are race conditions in which liveEntries list is empty but the liveCount has not yet been decremented. liveCount should be set to 0 after liveEntries list is successfully copied forward.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.7.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Oplog.java</file>
    </fixedFiles>
  </bug>
  <bug id="5307" opendate="2018-6-8 00:00:00" fixdate="2018-6-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Hang with servers all in waitForPrimaryMember and one server in NO_PRIMARY_HOSTING state</summary>
      <description>I've run into a hang in a test where servers are continuously creating PRs, doing putAll ops on them and closing/local-destroying the PR. Sometimes the servers hang with any thread needing a particular bucket in waitingForPrimaryMember().This seems to happen because of this sequence of events:1. two servers create a partitioned region2. one server initiates a putAll and requests the other server manage a bucket3. the putAll server closes or locally-destroys its region4. the close() operation completes5. the other server initializes its bucket and still uses the requesting server as a primaryElector. This keeps it from deciding to volunteer to become primary.The problem is that the server that closed its region caused exceptions to be thrown in the putAll thread and abandon creation of the bucket. No-one will ever trip the switch that makes the other server become the primary for the bucket.</description>
      <version>1.1.0,1.2.0,1.2.1,1.3.0,1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.Host.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BucketAdvisorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PRHARedundancyProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RegionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug id="5308" opendate="2018-6-11 00:00:00" fixdate="2018-8-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - simplify terminology: "cache transactions" can be "transactions"</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.with.external.db.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.monitor.troubleshoot.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.how.cache.transactions.work.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.data.location.cache.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transaction.performance.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.by.region.type.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5311" opendate="2018-6-11 00:00:00" fixdate="2018-6-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - simplify navigation for "Client Transactions" section</summary>
      <description>The "Client Transactions" section has short subsections which do not need entries in the left-hand navigation pane. Remove the subnav links for those subsections.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5313" opendate="2018-6-11 00:00:00" fixdate="2018-8-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - consolidate transaction coding examples</summary>
      <description>The examples are short, but currently housed in separate files.Merge into a single file, simplify left-hand nav.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.suspend.resume.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.coding.examples.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactions.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactional.function.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.jca.adapter.example.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5318" opendate="2018-6-12 00:00:00" fixdate="2018-8-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>create defined index does not update cluster config if methods are invoked in the from clause</summary>
      <description>Steps to reproduce the issue. start locator start server create region define index as "define index --name=index --region="Member.entrySet" --expression="value.getId" " create defined indexesThis is will result in a failure causing no updates to the cluster config for the newly created indexes, even though the indexes are created. So when a server is restarted , it won't recreate these indexes.Cause of the problem:We try to extract the region name to update the cluster config from the index's "from clause".We end up getting &lt;region_name&gt;.entrySet . But there are no region named as such so no updates to the cluster config. Solution  Use the fix for GEODE-2764 where we can extract the proper region name from the "from clause"problematic code:RegionConfig region = config.findRegionConfiguration(index.getFromClause());fix:String regionPath = getValidRegionName(index.getFromClause(), config);RegionConfig regionConfig = config.findRegionConfiguration(regionPath);Example:Below we can see an complete execution in gfsh which leads to this failure. Including the failure to update the config and inability of the server to recreate the index after being restarted._________________________ __ / _____/ ______/ ______/ /____/ / / / __/ /___ /_____ / _____ / / /__/ / ____/ _____/ / / / / /______/_/ /______/_/ /_/ 1.8.0-SNAPSHOTMonitor and Manage Apache Geodegfsh&gt;start locatorStarting a Geode Locator in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/untie-happy-can.......Locator in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/untie-happy-can on 10.0.0.40[10334] as untie-happy-can is currently online.Process ID: 29310Uptime: 4 secondsGeode Version: 1.8.0-SNAPSHOTJava Version: 1.8.0_161Log File: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/untie-happy-can/untie-happy-can.logJVM Arguments: -Dgemfire.enable-cluster-configuration=true -Dgemfire.load-cluster-configuration-from-dir=false -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806Class-Path: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-core-1.8.0-SNAPSHOT.jar:/home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-dependencies.jarSuccessfully connected to: JMX Manager [host=10.0.0.40, port=1099]Cluster configuration service is up and running.gfsh&gt;start serverStarting a Geode Server in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo......Server in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo on 10.0.0.40[40404] as fix-vast-kilo is currently online.Process ID: 29498Uptime: 2 secondsGeode Version: 1.8.0-SNAPSHOTJava Version: 1.8.0_161Log File: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo/fix-vast-kilo.logJVM Arguments: -Dgemfire.default.locators=10.0.0.40[10334] -Dgemfire.start-dev-rest-api=false -Dgemfire.use-cluster-configuration=true -XX:OnOutOfMemoryError=kill -KILL %p -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806Class-Path: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-core-1.8.0-SNAPSHOT.jar:/home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-dependencies.jargfsh&gt;create region --name=Member --type=PARTITION Member | Status------------- | -------------------------------------------fix-vast-kilo | Region "/Member" created on "fix-vast-kilo"gfsh&gt;define index --name=memberPartyIdIndex --expression="value.getPartyId" --region="/Member.entrySet"Index successfully defined with following detailsName : memberPartyIdIndexExpression : value.getPartyIdRegionPath : /Member.entrySetgfsh&gt;create defined indexes Member | Status | Message--------------------------------------- | ------ | --------------------------------10.0.0.40(fix-vast-kilo:29498)&lt;v1&gt;:1025 | OK | Created index memberPartyIdIndexfailed to update cluster config for cluster. Reason: RegionConfig is nullgfsh&gt;list indexes Member Name | Member ID | Region Path | Name | Type | Indexed Expression | From Clause | Valid Index------------- | --------------------------------------- | ----------- | ------------------ | ----- | ------------------ | ---------------- | -----------fix-vast-kilo | 10.0.0.40(fix-vast-kilo:29498)&lt;v1&gt;:1025 | /Member | memberPartyIdIndex | RANGE | value.getPartyId | /Member.entrySet | truegfsh&gt;stop server --nameoptional --name: Member name or ID of the Cache Server in the Geode cluster.; no default valuegfsh&gt;stop server --name=fix-vast-kiloStopping Cache Server running in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo on 10.0.0.40[40404] as fix-vast-kilo...Process ID: 29498Log File: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo/fix-vast-kilo.log...gfsh&gt;start server --nameoptional --name: The member name to give this Cache Server in the Geode cluster.; no default valuegfsh&gt;start server --nameoptional --name: The member name to give this Cache Server in the Geode cluster.; no default valuegfsh&gt;start server --name=fix-vast-kiloStarting a Geode Server in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo......Server in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo on 10.0.0.40[40404] as fix-vast-kilo is currently online.Process ID: 29893Uptime: 2 secondsGeode Version: 1.8.0-SNAPSHOTJava Version: 1.8.0_161Log File: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo/fix-vast-kilo.logJVM Arguments: -Dgemfire.default.locators=10.0.0.40[10334] -Dgemfire.start-dev-rest-api=false -Dgemfire.use-cluster-configuration=true -XX:OnOutOfMemoryError=kill -KILL %p -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806Class-Path: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-core-1.8.0-SNAPSHOT.jar:/home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-dependencies.jargfsh&gt;list regionList of regions---------------Membergfsh&gt;list indexesNo Indexes Found</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigurationIndexWithFromClauseDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="5376" opendate="2018-7-3 00:00:00" fixdate="2018-7-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In JTA, Geode afterCompletion may fail even though the JTA host still available</summary>
      <description>When JTA is hosted on a server S2, and there is another server S1 handles the client JTA request. After the S1 executed JTA beforeCompletion initiated from client, the S2's P2P reader thread for S1 will hold the locks for the JTA. If at the time, S1 is lost/shut down, client will failover to another server to try afterCompletion. The afterCompletion attempt will fail as the new thread does not hold the lock. This will cause the client JTA to fail due to CommitConflict, even though there is not concurrent commit operations.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.7.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXSynchronizationRunnableTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tx.ClientTXStateStub.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXSynchronizationRunnable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.TXSynchronizationCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PausedTXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistTXStateProxyImplOnCoordinator.java</file>
    </fixedFiles>
  </bug>
  <bug id="5378" opendate="2018-7-3 00:00:00" fixdate="2018-7-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AcceptanceTests fail because they cannot start service db</summary>
      <description>The build 125-127 have had 10 failures that were related to failure to start a service db in the JDBC tests.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.docker.initdocker</file>
    </fixedFiles>
  </bug>
  <bug id="54" opendate="2015-6-8 00:00:00" fixdate="2015-3-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing javadocs</summary>
      <description>The current build process is not generating javadocs and once they're generated it's still be defined where to host the pages. Current Geode docs are hosted at http://geode-docs.cfapps.io/ but javadocs can be part of that or be hosted under geode.incubator.apache.org.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.docs.index.html</file>
      <file type="M">geode-site.website.Rules</file>
      <file type="M">geode-site.website.README.md</file>
      <file type="M">geode-site.website.layouts.header.html</file>
      <file type="M">geode-site.website.layouts.footer.html</file>
      <file type="M">geode-site.website.layouts.default.html</file>
      <file type="M">geode-site.website.content.community.index.html</file>
    </fixedFiles>
  </bug>
  <bug id="5401" opendate="2018-7-6 00:00:00" fixdate="2018-10-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Client transaction should not be expired once it is failed over</summary>
      <description>When a client is disconnected from the server, the client's originated transactions are scheduled to be expired. However, when the client transaction failed over, the expire transaction task is not cancelled. If transaction is not finished/committed within the timeout period (transactionTimeToLive default to 180 seconds), the transaction will be expired. The consequence is that only part of the transaction gets committed. The expire transaction task will close the transaction and remove it from the hosted txstates map removing the existing operations. The subsequent operations will starts a new transaction &amp;#8211; only the operations afterwards will be recored and committed.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXStateProxyImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXManagerImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DSFIDFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientHealthMonitor.java</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5402" opendate="2018-7-9 00:00:00" fixdate="2018-8-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Disk recovery sometimes hangs when no member is recognized as having the most recent data</summary>
      <description>During disk recovery, sometimes a the system will hang because every member is waiting for others to initialize first, and nobody is recognized as having the most recent data.This can happen when a member persists its most recent view of another member to disk, then that member is killed before it can remove the older view of the other member from the op log files. When starting the cluster from disk, the member then has two views of the other member, one recent and the other stale. The member then decides is needs to wait for the stale view of the other member which causes the hang.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.TransformUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.sequencelog.RegionLogger.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentStateQueryResults.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentStateQueryMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentMemberPattern.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentMemberID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskInitFile.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheDistributionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketPersistenceAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug id="5408" opendate="2018-7-9 00:00:00" fixdate="2018-7-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document gfsh remove -all option not avail for partitioned regions</summary>
      <description>The command reference page for gfsh remove in the documentation ought to explicitly say that the -all option is not available for partitioned regions.  The gfsh help text and the error message (if one tries to use the -all option do explicitly state this.  So, just the docs need updating.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.remove.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="541" opendate="2015-11-11 00:00:00" fixdate="2015-11-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The latest GemFire 800x clients can&amp;#39;t connect to Geode servers</summary>
      <description>GemFire 8009 introduced an on-the-wire compatibility change between client and server. Geode needs to be updated to support this change.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.Version.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunctionSingleHop.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteFunction66.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.CommandInitializer.java</file>
    </fixedFiles>
  </bug>
  <bug id="5420" opendate="2018-7-11 00:00:00" fixdate="2018-8-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protect events in HAContainer from being removed prematurely</summary>
      <description>This can occur when:1) Events are added to queuedEvents during message dispatcher initialization2) Events are added to giiQueue while serving initial image to peerWe have seen this issue when QRM messages are being processed after becoming primary. This causes the event to be removed prematurely from the HAContainer, and then the wrapper is in a bad state (null client update message) when we try to replace the event.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.HAEventWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ha.HARegionQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ha.HAContainerMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.HARegion.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.ha.HARegionQueueJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.ha.HARegionQueueIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5515" opendate="2018-8-1 00:00:00" fixdate="2018-8-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Transaction originated from peer sets the onBehalfOfClientMember on remote transaction host</summary>
      <description>Currently a transaction originated from a peer and if the transaction host is on another server, the transaction onBehalfOfClientMember is incorrectly set on the transaction host.</description>
      <version>1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXStateTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PausedTXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PartitionMessage.java</file>
    </fixedFiles>
  </bug>
  <bug id="5519" opendate="2018-8-2 00:00:00" fixdate="2018-8-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add stackdriver monitoring to heavy-lifters</summary>
      <description>In order to properly gauge resource requirements implement stackdriver monitoring.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.start.instance.sh</file>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
      <file type="M">ci.images.google-geode-builder.packer.json</file>
    </fixedFiles>
  </bug>
  <bug id="5520" opendate="2018-8-2 00:00:00" fixdate="2018-8-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Inconsistency created by delta-propagation interaction with concurrency control</summary>
      <description>I tracked a cache inconsistency down to a delta propagation operation that failed over from one server to another and then failed to apply the delta on the new server.When the full value is sent from the client the message is not marked as a possible-duplicate. Because it was missing this flag the server did not try to recover a concurrency version tag for the operation but instead generated a new version.When this server propagated the operation to another server it was rejected by that server because it had already processed the operation from the client's original attempt. It recognized this by way of the operation's EventID being recorded in its EventTracker.This resulted in one server having version X and the other having version X+1 for the entry.The client then destroyed the same entry with the same server, generating version X+1 in that server. When the server propagated the operation the other server already had X+1 and threw a ConcurrentCacheModificationException. The result was one server having a tombstone for the entry and the other having the value from the delta-propagation operation.This can be fixed by setting the possible-duplicate flag on the message from the client that contains the full value. The server will then search for a concurrency version tag and use it instead of generating a new one.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PutOp.java</file>
    </fixedFiles>
  </bug>
  <bug id="5521" opendate="2018-8-3 00:00:00" fixdate="2018-8-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>After an exception is received from a remote server function execution, local threads should not send back result to client later</summary>
      <description>In the method cmdExecute()if the local co-ordinator receives an FunctionException of type FunctionInvocationTargetException or QueryInvocationTargetException from the remote server, setException is called which sets the lastResultReceived flag. This flag prevents other results from other threads to be sent to the client, as the client may have moved on. If there were any other function exception it will just send the exception but not set the flag. if (cause instanceof FunctionInvocationTargetException || cause instanceof QueryInvocationTargetException) { if (cause instanceof InternalFunctionInvocationTargetException) { // Fix for #44709: User should not be aware of // InternalFunctionInvocationTargetException. No instance of // InternalFunctionInvocationTargetException is giving useful // information to user to take any corrective action hence logging // this at fine level logging // 1&gt; When bucket is moved // 2&gt; Incase of HA FucntionInvocationTargetException thrown. Since // it is HA, fucntion will be reexecuted on right node // 3&gt; Multiple target nodes found for single hop operation // 4&gt; in case of HA member departed if (logger.isDebugEnabled()) { logger.debug(LocalizedMessage.create( LocalizedStrings.ExecuteFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0, new Object[] {function}), fe); } } else if (functionObject.isHA()) { logger.warn(LocalizedMessage.create( LocalizedStrings.ExecuteRegionFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0, function + " :" + message)); } else { logger.warn(LocalizedMessage.create( LocalizedStrings.ExecuteRegionFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0, function), fe); } resultSender.setException(fe); } else { if(!resultSender.isLastResultReceived()){ resultSender.setLastResultReceived(true); logger.warn(LocalizedMessage.create( LocalizedStrings.ExecuteRegionFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0, function), fe); sendException(hasResult, clientMessage, message, serverConnection, fe); } }</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction61.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.BaseCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.ServerToClientFunctionResultSender65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.ServerToClientFunctionResultSender.java</file>
    </fixedFiles>
  </bug>
  <bug id="5522" opendate="2018-8-3 00:00:00" fixdate="2018-8-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Gradle 4.9</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.wrapper.gradle-wrapper.properties</file>
      <file type="M">gradle.wrapper.gradle-wrapper.jar</file>
      <file type="M">gradle.properties</file>
    </fixedFiles>
  </bug>
  <bug id="5541" opendate="2018-8-8 00:00:00" fixdate="2018-1-8 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>A create followed by a destroy of the same key in a transaction invokes cache listener on remote node</summary>
      <description>A create followed by a destroy of the same key in a transaction is treated as a no op on the near side (transaction host), and no destroy event is invoked on the transaction host. The destroy operation is distributed to remote nodes (far side). The intend is to make sure a normal region can destroy the key if it exists (far side). Currently a destroy event is invoked for this no op on remote node even though the node does not have the key.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.8.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.LocalRegionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.RegionCommitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXEntryState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.partitioned.PersistentPartitionedRegionWithTransactionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5761" opendate="2018-9-19 00:00:00" fixdate="2018-8-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>jsonassert has incompatible transitive dependency on android-json</summary>
      <description>The fix for GEODE-5696 added geode-junit dependency on org.skyscreamer:jsonassert which brings in a transitive dependency on com.vaadin.external.google:android-json which is incompatible with geode-json.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="5762" opendate="2018-9-19 00:00:00" fixdate="2018-9-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix typos in transaction docs code examples</summary>
      <description>The variable used for the transaction manager object in the code examples within the docs section on Transactions is inconsistent.  Pick one variable name, and use it throughout all examples in a consistent way.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.directed.example.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5765" opendate="2018-9-21 00:00:00" fixdate="2018-9-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AlterRuntimeCommandDUnitTest slows down due to large numbers of classes loaded</summary>
      <description>We observed that several tests in this class are taking minutes when they should be taking a few seconds at most. After some debugging, we determined that the JVM itself is struggling to deal with having 100K+ classes loaded. They are loaded because the test is repeated starting and stopping the http service, which creates a classloader and causes soft references to all of the loaded classes to be cached.By setting a flag to clear the soft references faster, the test times go back to normal.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="5778" opendate="2018-9-25 00:00:00" fixdate="2018-8-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>On Windows - rsync fails intermittently</summary>
      <description>Can we just retry when rsync fails just like start_instance task?https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsGfshDistributedTest/builds/11https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsUnitTest/builds/10https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsAcceptanceTest/builds/10rsync fails intermittently with following error:Warning: Permanently added '35.184.2.138' (ECDSA) to the list of known hosts. 1 [main] rsync 3440 child_info_fork::abort: C:\ProgramData\chocolatey\lib\rsync\cwrsync_5.5.0_x86_free\bin\cyggcc_s-1.dll: Loaded to different address: parent(0x2E20000) != child(0x150000)rsync: fork failed in do_recv: Resource temporarily unavailable (11)rsync error: error in IPC code (code 14) at main.c(879) [Receiver=3.1.2]real 0m1.226suser 0m0.004ssys 0m0.020s</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="578" opendate="2015-11-19 00:00:00" fixdate="2015-11-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cluster-config and cache.xml do not work together</summary>
      <description>When cluster configuration is used and the server is started with a cache.xml, server startup fails due to a bind exception. This occurs because we try to start the default cache-server twice, once when processing the cluster-config and once while parsing the cache.xml file.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheCreationJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6048" opendate="2018-11-13 00:00:00" fixdate="2018-9-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>./gradlew build install should work by default on release branches</summary>
      <description>due to a post-1.7 refactoring we no longer use the nexus plugin, which was smart enough not to try to sign artifacts if signing key is not providedwe should emulate that same behavior again so anyone can do a build on any branch at any time</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.publish.gradle</file>
    </fixedFiles>
  </bug>
</bugrepository>
