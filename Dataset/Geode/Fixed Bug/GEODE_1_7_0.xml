<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="GEODE">
  <bug id="3825" opendate="2017-10-12 00:00:00" fixdate="2017-10-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to JUnitParams 1.1.0</summary>
      <description>Geode currently uses JUnitParams 1.0.6. Versions 1.1.0 was released on 2017-04-17&amp;#91;1&amp;#93;. I'd like to upgrade to 1.1.0.&amp;#91;1&amp;#93; https://github.com/Pragmatists/JUnitParams/blob/master/RELEASES.md</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
    </fixedFiles>
  </bug>
  <bug id="5134" opendate="2018-4-24 00:00:00" fixdate="2018-4-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>RegionMap tx methods should expect the pendingCallbacks parameter to never be null</summary>
      <description>All the tx* methods on RegionMap (txApplyPut, txApplyInvalidate, txApplyDestroy) have a pendingCallbacks parameter. All the implementations of these methods have special code that handles pendingCallbacks being null. But the callers have been changed to never pass a null pendingCallbacks.Changing these methods to only handle a non-null pendingCallbacks will make these methods easier to understand.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXCommitMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ProxyRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug id="5138" opendate="2018-4-24 00:00:00" fixdate="2018-4-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>rename a stats for gateway sender with meaningful name</summary>
      <description>Document team reviewed and suggest to use EVENTS_DROPPED_DUE_TO_PRIMARY_SENDER_NOT_RUNNING: "Number of events dropped because the primary gateway sender is not running." instead of:NOT_QUEUED_EVENTS_AT_YET_RUNNING_PRIMARY_SENDER: "Number of events not added to primary queue due to sender yet running."</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderOperationsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.bean.stats.AsyncEventQueueStatsJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.asyncqueue.internal.AsyncEventQueueStats.java</file>
    </fixedFiles>
  </bug>
  <bug id="514" opendate="2015-10-29 00:00:00" fixdate="2015-3-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>DistributionManagerDUnitTest.testKickOutSickMember has suspect string</summary>
      <description>revision 0cc9d895b9f4465138d0fa223b0a0cadc1107893java.lang.AssertionError: Suspicious strings were written to the log during this run.Fix the strings or use DistributedTestCase.addExpectedException to ignore.-----------------------------------------------------------------------Found suspect string in log4j at line 990[fatal 2015/10/29 06:28:31.322 PDT &lt;Quorum Lost Notification&gt; tid=0xada] Possible loss of quorum due to the loss of 2 cache processes: [cc8-rh64(16364)&lt;v658&gt;:1121, cc8-rh64(sleeper:16419)&lt;v680&gt;:30890]-----------------------------------------------------------------------Found suspect string in log4j at line 992[fatal 2015/10/29 06:28:31.323 PDT &lt;Quorum Lost Notification&gt; tid=0xe04] Possible loss of quorum due to the loss of 2 cache processes: [cc8-rh64(16364)&lt;v658&gt;:1121, cc8-rh64(sleeper:16419)&lt;v680&gt;:30890]</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
    </fixedFiles>
  </bug>
  <bug id="5165" opendate="2018-5-1 00:00:00" fixdate="2018-5-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Avoid OOME when scanning for annotated classes</summary>
      <description>when we scan the entire classpath for a certain annotated class, we ran into OOME in our test environment. Need to add a capability to limit the packages to scan if geode.packagesToScan system property is set.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.SystemPropertyHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceService.java</file>
    </fixedFiles>
  </bug>
  <bug id="5183" opendate="2018-5-4 00:00:00" fixdate="2018-5-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>require toData/fromData methods for backward-compatibility to correspond to a known version</summary>
      <description>Developers currently have no way of knowing if they correctly named their toDataPre_ and fromDataPre_ methods. We need to at least have the AnalyzeSerializables tests check to ensure that the toDataPre/fromDataPre methods found in DataSerializables correspond to real Version instances.</description>
      <version>1.7.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.codeAnalysis.CompiledClassUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalInstantiator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentMemberID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.DiskInitFileParser.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.StartupResponseMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.StartupMessage.java</file>
    </fixedFiles>
  </bug>
  <bug id="5184" opendate="2018-5-4 00:00:00" fixdate="2018-1-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add tests for PersistentInitialImageAdvisor</summary>
      <description>Test CasesCondition: replicates &amp;&amp; disk image &amp;&amp; at least one equal Result: return advice with empty replicates (load from disk)Condition: replicates &amp;&amp; disk image &amp;&amp; none equal Results: clear equal members return advice with all replicates (attempt GII)Condition: replicates &amp;&amp; no disk image Results: return advice with all replicates (attempt GII)Condition: no replicates &amp;&amp; non-persistent Result: update membership view from non-persistentCondition: no replicates &amp;&amp; previous replicates Results: clear previous advice fetch new advice from cache distribution advisor (which will have replicates) react to new adviceCondition: no replicates &amp;&amp; no previous replicates &amp;&amp; members to wait for Result: return advice from cache distribution advisorAdditional test scenarios TBD: no replicates &amp;&amp; no previous replicates &amp;&amp; members to wait for</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.persistence.PersistenceInitialImageAdvisorTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5185" opendate="2018-5-7 00:00:00" fixdate="2018-5-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Correct recent backward-compatibility violation in &amp;#39;create gateway-receiver&amp;#39; command.</summary>
      <description>Commit 4dff0cde9c3abca2dad03897c055e9c443a81b60 changed create gateway-receiver to fail if any server fails to create the gateway receiver when the if-not-exists command is not given. This is inconsistent with the expected behavior of previous minor releases.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverCreateFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateGatewayReceiverCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverFunctionArgs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateGatewayReceiverCommand.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.DestroyGatewayReceiverCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.CreateGatewayReceiverCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5199" opendate="2018-5-10 00:00:00" fixdate="2018-6-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unable to deploy Scala JARs</summary>
      <description>Using the gfsh (Geode 1.6.0) command to deploy a JAR containing the Scala library results in the following error:[error 2018/05/09 21:00:21.201 PDT server1 &lt;Function Execution Processor1&gt; tid=0x4f] Could not deploy JAR file java.lang.IllegalArgumentException: A class and its auxiliary class have different superclasses: class extends scala.runtime.AbstractFunction1&lt;java.util.Properties, scala.collection.convert.Wrappers$JPropertiesWrapper&gt; implements scala.Serializable ; class extends scala.collection.mutable.AbstractMap&lt;java.lang.String, java.lang.String&gt; implements scala.Product, scala.Serializablejava.lang.RuntimeException: java.lang.IllegalArgumentException: A class and its auxiliary class have different superclasses: class extends scala.runtime.AbstractFunction1&lt;java.util.Properties, scala.collection.convert.Wrappers$JPropertiesWrapper&gt; implements scala.Serializable ; class extends scala.collection.mutable.AbstractMap&lt;java.lang.String, java.lang.String&gt; implements scala.Product, scala.Serializable at io.github.lukehutch.fastclasspathscanner.FastClasspathScanner.scan(FastClasspathScanner.java:1513) at io.github.lukehutch.fastclasspathscanner.FastClasspathScanner.scan(FastClasspathScanner.java:1544) at io.github.lukehutch.fastclasspathscanner.FastClasspathScanner.scan(FastClasspathScanner.java:1567) at org.apache.geode.management.internal.deployment.FunctionScanner.findFunctionsInJar(FunctionScanner.java:38) at org.apache.geode.internal.DeployedJar.findFunctionsInThisJar(DeployedJar.java:338) at org.apache.geode.internal.DeployedJar.registerFunctions(DeployedJar.java:157) at org.apache.geode.internal.JarDeployer.registerNewVersions(JarDeployer.java:373) at org.apache.geode.internal.JarDeployer.deploy(JarDeployer.java:413) at org.apache.geode.management.internal.cli.functions.DeployFunction.execute(DeployFunction.java:79) at org.apache.geode.internal.cache.MemberFunctionStreamingMessage.process(MemberFunctionStreamingMessage.java:193) at org.apache.geode.distributed.internal.DistributionMessage.scheduleAction(DistributionMessage.java:378) at org.apache.geode.distributed.internal.DistributionMessage$1.run(DistributionMessage.java:444) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at org.apache.geode.distributed.internal.ClusterDistributionManager.runUntilShutdown(ClusterDistributionManager.java:1121) at org.apache.geode.distributed.internal.ClusterDistributionManager.access$000(ClusterDistributionManager.java:109) at org.apache.geode.distributed.internal.ClusterDistributionManager$9$1.run(ClusterDistributionManager.java:990) at java.lang.Thread.run(Thread.java:748)Caused by: java.lang.IllegalArgumentException: A class and its auxiliary class have different superclasses: class extends scala.runtime.AbstractFunction1&lt;java.util.Properties, scala.collection.convert.Wrappers$JPropertiesWrapper&gt; implements scala.Serializable ; class extends scala.collection.mutable.AbstractMap&lt;java.lang.String, java.lang.String&gt; implements scala.Product, scala.Serializable at io.github.lukehutch.fastclasspathscanner.typesignature.ClassTypeSignature.merge(ClassTypeSignature.java:177) at io.github.lukehutch.fastclasspathscanner.scanner.ClassInfo.addTypeDescriptor(ClassInfo.java:691) at io.github.lukehutch.fastclasspathscanner.scanner.ClassInfoUnlinked.link(ClassInfoUnlinked.java:208) at io.github.lukehutch.fastclasspathscanner.scanner.Scanner.call(Scanner.java:443) at io.github.lukehutch.fastclasspathscanner.scanner.Scanner.call(Scanner.java:56) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ... 1 moreHere is a minimal reproduction # download Scala 2.11.12 curl -O [http://central.maven.org/maven2/org/scala-lang/scala-library/2.11.12/scala-library-2.11.12.jar] # or Scala 2.12.6 curl -O [http://central.maven.org/maven2/org/scala-lang/scala-library/2.11.12/scala-library-2.11.12.jar]gfsh \ -e "start locator --name=locator1" \ -e "start server --name=server1" \ -e "deploy --jar=scala-library-2.12.6.jar"This appears to be a [known issue|https://github.com/lukehutch/fast-classpath-scanner/issues/193] with fast-classpath-scanner and has been fixed in &gt;= 2.19.0. Changing `fast-classpath-scanner.version` to `2.19.0` allows the Scala library JAR to be deployed.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
    </fixedFiles>
  </bug>
  <bug id="5255" opendate="2018-5-25 00:00:00" fixdate="2018-5-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In a race condition, a colocated bucket may not be created during rebalance when member nodes are restarted</summary>
      <description>During rebalance, a member node may request a newly started member node to grab a bucket from a parent partitioned region based on its calculated model. When the new member creates the parent bucket, it is required to grab the bucket's colocated child buckets. If the colocated child bucket underlying partitioned region is not yet initialized, the child bucket will not be created on the member.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.7.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.ManageBackupBucketMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
    </fixedFiles>
  </bug>
  <bug id="5265" opendate="2018-5-30 00:00:00" fixdate="2018-6-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>PartitionedRegionStats dataStoreEntryCount can go negative</summary>
      <description>The statistic dataStoreEntryCount on PartitionedRegionStats is supposed to be the number of entries in a partitioned region stored in a member. So it should never be negative.But in some cases it is decremented more than once when an entry is removed.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTxApplyDestroyTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.map.RegionMapDestroyTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.map.RegionMapDestroy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug id="5266" opendate="2018-5-30 00:00:00" fixdate="2018-6-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add additional tests for gfsh region creation</summary>
      <description>Add additional tests to check various incompatible options when using --template-region.Specifically set region-idle-time-expiration when using a PARTITION region as the template (should error).Ensure correct error when creating a PARTITION region with region-idle-time-expiration.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5267" opendate="2018-5-30 00:00:00" fixdate="2018-6-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - un-document deprecated JTA transaction manager</summary>
      <description>As of Geode 1.2, Geode’s JTA transaction manager is deprecated.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.client-cache.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.images.transactions.jta.png</file>
      <file type="M">geode-docs.developing.transactions.transaction.jta.gemfire.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.coding.examples.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.configuring.db.connections.using.JNDI.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.plugins.with.jta.html.md.erb</file>
      <file type="M">geode-docs.developing.outside.data.sources.sync.outside.data.html.md.erb</file>
      <file type="M">geode-docs.developing.outside.data.sources.how.data.loaders.work.html.md.erb</file>
      <file type="M">geode-docs.developing.outside.data.sources.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5270" opendate="2018-5-31 00:00:00" fixdate="2018-6-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Close the input stream when closing connection.</summary>
      <description>Issue: If the gateway stomper thread is activated while a dispatcher activates a ackReadThread, they both may end up reading the on the same connection, resulting in reading wrong header and causing out of memory issues by allocating wrong memory.Fix:Close the input streams before closing the connection and also shutdown any AckThreadReaders operating on the connection.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.pooling.PooledConnectionJUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.GatewaySenderEventRemoteDispatcherJUnitTest.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventRemoteDispatcher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.PooledConnection.java</file>
    </fixedFiles>
  </bug>
  <bug id="5302" opendate="2018-6-8 00:00:00" fixdate="2018-6-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>the totalLiveCount should be set to 0 after oplog is compacted (all live data has been copied forward to new oplog)</summary>
      <description>There are race conditions in which liveEntries list is empty but the liveCount has not yet been decremented. liveCount should be set to 0 after liveEntries list is successfully copied forward.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.7.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Oplog.java</file>
    </fixedFiles>
  </bug>
  <bug id="5306" opendate="2018-6-8 00:00:00" fixdate="2018-6-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add disconnect/reconnect of members to clusterStarterRule</summary>
      <description>Currently there are lots of DUnit tests using different ways to perform a disconnect/reconnect, and no one seems to know what the right way is. None of the current methods of reconnecting seem to restore the system to a good state. It would be nice to have an easy way to do this common task.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigurationIndexWithFromClauseDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.VMProvider.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.MemberStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.LocatorStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.MemberVM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.ClusterStartupRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.DistributedTestUtils.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientDataAuthorizationUsingLegacySecurityWithFailoverDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ImportOldClusterConfigDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ImportClusterConfigDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigLocatorRestartDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShowMissingDiskStoresDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsShareConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DeployCommandRedeployDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterDiskStoreDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterCompressorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.MembershipManagerHelper.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcClusterConfigDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5320" opendate="2018-6-13 00:00:00" fixdate="2018-6-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add a test for thread-owned connection cleanup</summary>
      <description>I noticed that while we have this nifty feature and perform cleanup in our executor thread pools we actually have no tests to ensure that connection cleanup works. Let's add one!</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.tcp.ConnectionTableTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.ConnectionTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="5328" opendate="2018-6-15 00:00:00" fixdate="2018-6-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>MemberMBean.showLog does not work when &amp;#39;log-file&amp;#39; has not been set</summary>
      <description>This is not a bug but the exception message displayed is not very informative. It should be updated.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.MemberMBeanBridge.java</file>
    </fixedFiles>
  </bug>
  <bug id="5335" opendate="2018-6-20 00:00:00" fixdate="2018-6-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Do not resolve addresses for gfsh &amp;#39;netstat&amp;#39; output.</summary>
      <description>For the gfsh netstat command we call the underlying host's netstat utility. If DNS is misconfigured or slow, the command can result in long runtimes, potentially failing some tests or resulting in the user wondering if there is something wrong with the command.We should call the command with the -n option (similarly -nP for lsof) so that addresses do not need to be resolved.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.NetstatDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.NetstatFunction.java</file>
    </fixedFiles>
  </bug>
  <bug id="5336" opendate="2018-6-20 00:00:00" fixdate="2018-3-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add concurrent dev rest region API to improve test coverage</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.PulseSecurityWithSSLTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.PulseSecurityTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.PulseJmxPasswordFileTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.PulseDataExportTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.PulseConnectivityTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.test.junit.rules.HttpClientRule.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.SwaggerVerificationIntegrationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestServersIntegrationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityWithSSLTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityPostProcessorTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityIntegrationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestFunctionExecuteDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.GeodeRestClient.java</file>
    </fixedFiles>
  </bug>
  <bug id="5337" opendate="2018-6-21 00:00:00" fixdate="2018-4-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode1.5 end-port is not exclusive when creating a gateway-receiver</summary>
      <description>When created,  a gateway-receiver shall be assign a range of port to  use.  In document http://geode.apache.org/docs/guide/16/tools_modules/gfsh/command-pages/create.html#topic_a4x_pb1_dk, the description for --end-port says "The ENDPORT value is exclusive while the STARTPORT value is inclusive. ". However, sometimes, the port number of endport is also assigned to receiver anyway. Besides, in code for gatewayreceiver, the endport will be randomly assigned to receiver. I supposed this shall be a document bug.</description>
      <version>None</version>
      <fixedVersion>1.12.10,1.14.5,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5338" opendate="2018-6-21 00:00:00" fixdate="2018-11-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode client to support Trust and Keystore rotation</summary>
      <description>WHY: Cloud Foundry provides ability to rotate certs pretty frequently. By default the certs are rotated every day and change be changed to rotate every hour. Which creates a issue with Java applications. This rotation is essential to provide a strong security stance on client applications.WHAT: Today Geode client applications, when establishing a TLS connection to the servers requires a path to the certificate, since these files would be changing we need a mechanism in Geode which will watch for these changes and use the new certs without causing service disruption. Solution options:Some options to consider Cloud Foundry has a lib which watches for changes to these certs (which are in pem format)and converts them and creates inmemory objects of TrustStore and KeyStore. If we have a mechanism in Geode to pass these objects instead of path to them, we might have a solution. Also, these objects gets updates after rotation so the geode code needs to consider that as well. Geode can develop its own capability to watch for change on the files and convert them to right format using OpenSSL and create files and pass them in. Update these file everytime someone updates the certs Geode starts accepting pem files and watches them directly for changes. Key Outcomes to watch for: 1. Provide ability to rotate cert easily without downtime. </description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.integrationTest.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.CacheConnectionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionConfigJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLConfigurationFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.SSLConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.tcpserver.TCPClientSSLIntegrationTest.java</file>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.ssl.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5339" opendate="2018-6-21 00:00:00" fixdate="2018-1-21 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Unable to run any integration tests in Geode-assembly inside IntelliJ</summary>
      <description>When run RestSecurityIntegrationTest in IntelliJ, we get the following error:java.lang.IllegalArgumentException: Unknown configuration attribute name "pulse-regiontablePathColName-custom". Valid attribute names are:  ack-severe-alert-threshold ack-wait-threshold archive-disk-space-limit archive-file-size-limit async-distribution-timeout async-max-queue-size async-queue-timeout bind-address cache-xml-file cluster-configuration-dir cluster-ssl-ciphers cluster-ssl-enabled cluster-ssl-keystore cluster-ssl-keystore-password cluster-ssl-keystore-type cluster-ssl-protocols cluster-ssl-require-authentication cluster-ssl-truststore cluster-ssl-truststore-password ........</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.main.resources.sqlfire.properties</file>
      <file type="M">geode-pulse.src.main.resources.gemfire.properties</file>
      <file type="M">geode-pulse.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="5342" opendate="2018-6-22 00:00:00" fixdate="2018-11-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh commands related to offline disk store operations create the given disk store directory if it doesn&amp;#39;t exist</summary>
      <description>gfsh&gt; validate offline-disk-store --name=diskStore2 --disk-dirs=/Users/lynn/doesNotExistValidating diskStore2Error in validating disk store diskStore2 is : The init file "/Users/lynn/doesNotExist/BACKUPdiskStore2.if" does not exist.The directory "/Users/lynn/doesNotExist" is now created.List of commands that create the disk-store when it doesn't exist: alter disk-store  validate offline-disk-store upgrade offline-disk-store compact offline-disk-store describe offline-disk-store</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterDiskStoreJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ValidateDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.UpgradeOfflineDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DescribeOfflineDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CompactOfflineDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.AlterOfflineDiskStoreCommand.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.DiskStoreFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5350" opendate="2018-6-26 00:00:00" fixdate="2018-7-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Adjust documentation to be more clear regarding the requirement of stats for expiration</summary>
      <description>In the documentation, there are several areas that could be made more clear regarding the requirement for statistics to be enabled in order to use expiration.Specifically these are the stats for the region, and not the stats for the cluster/config.xml level.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.alter.html.md.erb</file>
      <file type="M">geode-docs.managing.statistics.setting.up.statistics.html.md.erb</file>
      <file type="M">geode-docs.managing.statistics.how.statistics.work.html.md.erb</file>
      <file type="M">geode-docs.managing.statistics.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.expiration.configuring.data.expiration.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5351" opendate="2018-6-26 00:00:00" fixdate="2018-7-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve doc terminology that uses distributed system</summary>
      <description>The Geode docs appear to use the term "distributed system" in a specialized way. Readers would rarely discover that the doc use of "distributed system" is something other than a more standard definition (from Wikipedia):A distributed system is a system whose components are located on different networked computers, which then communicate and coordinate their actions by passing messages to each other.Under this more standard definition, Geode WAN-connected clusters are still a single distributed system.The task at hand is to attempt to find and revise all doc prose that refers to a distributed system such that it uses standard terminology.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.outside.data.sources.implementing.data.loaders.html.md.erb</file>
      <file type="M">geode-docs.topologies.and.comm.topology.concepts.topology.types.html.md.erb</file>
      <file type="M">geode-docs.topologies.and.comm.topology.concepts.multisite.overview.html.md.erb</file>
      <file type="M">geode-docs.topologies.and.comm.topology.concepts.member.communication.html.md.erb</file>
      <file type="M">geode-docs.topologies.and.comm.topology.concepts.how.multisite.systems.work.html.md.erb</file>
      <file type="M">geode-docs.topologies.and.comm.topology.concepts.how.member.discovery.works.html.md.erb</file>
      <file type="M">geode-docs.topologies.and.comm.topology.concepts.how.communication.works.html.md.erb</file>
      <file type="M">geode-docs.topologies.and.comm.topology.concepts.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.topologies.and.comm.p2p.configuration.setting.up.a.p2p.system.html.md.erb</file>
      <file type="M">geode-docs.topologies.and.comm.p2p.configuration.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.topologies.and.comm.multi.site.configuration.setting.up.a.multisite.system.html.md.erb</file>
      <file type="M">geode-docs.topologies.and.comm.multi.site.configuration.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.topologies.and.comm.cs.configuration.client.server.example.configurations.html.md.erb</file>
      <file type="M">geode-docs.topologies.and.comm.book.intro.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.pulse.pulse-views.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.pulse.pulse-hosted.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.pulse.pulse-embedded.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.weblogic.changing.gf.default.cfg.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.tour.of.gfsh.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.quick.ref.commands.by.area.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.gfsh.command.index.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.getting.started.gfsh.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.show.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.revoke.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.list.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.import.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.export.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.change.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.alter.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.about.gfsh.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.setup.config.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.admin.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.servers.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.memory.requirements.for.cache.data.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.handling.exceptions.and.failures.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.glossary.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.client-cache.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.reference.statistics.list.html.md.erb</file>
      <file type="M">geode-docs.reference.book.intro.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.system.failure.and.recovery.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.recovering.from.network.outages.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.recovering.from.machine.crashes.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.recovering.from.cs.crashes.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.recovering.from.app.crashes.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.recovering.conflicting.data.exceptions.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.producing.troubleshooting.artifacts.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.prevent.and.recover.disk.full.errors.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.diagnosing.system.probs.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.statistics.setting.up.statistics.html.md.erb</file>
      <file type="M">geode-docs.managing.statistics.how.statistics.work.html.md.erb</file>
      <file type="M">geode-docs.managing.statistics.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.security.ssl.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.security.security.intro.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.ssl.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.security.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.authorization.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.authentication.html.md.erb</file>
      <file type="M">geode-docs.managing.security.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.security.authorization.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.security.authentication.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.network.partitioning.network.partitioning.scenarios.html.md.erb</file>
      <file type="M">geode-docs.managing.network.partitioning.membership.coordinators.lead.members.and.weighting.html.md.erb</file>
      <file type="M">geode-docs.managing.network.partitioning.how.network.partitioning.management.works.html.md.erb</file>
      <file type="M">geode-docs.managing.network.partitioning.handling.network.partitioning.html.md.erb</file>
      <file type="M">geode-docs.managing.network.partitioning.failure.detection.html.md.erb</file>
      <file type="M">geode-docs.managing.network.partitioning.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.system.member.performance.distributed.system.member.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.system.member.performance.connection.thread.settings.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.system.member.performance.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.socket.communication.setting.socket.buffer.sizes.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.socket.communication.have.enough.sockets.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.sockets.and.gateways.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.slow.receivers.managing.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.slow.receivers.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.performance.controls.managing.slow.receivers.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.performance.controls.controlling.socket.use.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.multicast.communication.testing.multicast.speed.limits.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.multicast.communication.runtime.considerations.html.md.erb</file>
      <file type="M">geode-docs.managing.member-reconnect.html.md.erb</file>
      <file type="M">geode-docs.managing.management.programming.example.html.md.erb</file>
      <file type="M">geode-docs.managing.management.notification.federation.and.alerts.html.md.erb</file>
      <file type="M">geode-docs.managing.management.mm.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.management.mbean.architecture.html.md.erb</file>
      <file type="M">geode-docs.managing.management.mbeans.jconsole.html.md.erb</file>
      <file type="M">geode-docs.managing.management.management.system.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.management.management.and.monitoring.features.html.md.erb</file>
      <file type="M">geode-docs.managing.management.management.and.monitoring.html.md.erb</file>
      <file type="M">geode-docs.managing.management.list.of.mbeans.full.html.md.erb</file>
      <file type="M">geode-docs.managing.management.jmx.manager.operations.html.md.erb</file>
      <file type="M">geode-docs.managing.management.jmx.manager.node.html.md.erb</file>
      <file type="M">geode-docs.managing.logging.logging.categories.html.md.erb</file>
      <file type="M">geode-docs.managing.heap.use.heap.management.html.md.erb</file>
      <file type="M">geode-docs.managing.disk.storage.using.disk.stores.html.md.erb</file>
      <file type="M">geode-docs.managing.disk.storage.managing.disk.stores.cmds.html.md.erb</file>
      <file type="M">geode-docs.managing.disk.storage.how.disk.stores.work.html.md.erb</file>
      <file type="M">geode-docs.managing.disk.storage.handling.missing.disk.stores.html.md.erb</file>
      <file type="M">geode-docs.managing.disk.storage.compacting.disk.stores.html.md.erb</file>
      <file type="M">geode-docs.managing.disk.storage.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.disk.storage.backup.restore.disk.store.html.md.erb</file>
      <file type="M">geode-docs.managing.cache.snapshots.importing.a.snapshot.html.md.erb</file>
      <file type="M">geode-docs.managing.cache.snapshots.exporting.a.snapshot.html.md.erb</file>
      <file type="M">geode-docs.managing.cache.snapshots.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.book.intro.html.md.erb</file>
      <file type="M">geode-docs.images.svg.JMX.Architecture.svg</file>
      <file type="M">geode-docs.getting.started.product.intro.html.md.erb</file>
      <file type="M">geode-docs.getting.started.geode.overview.html.md.erb</file>
      <file type="M">geode-docs.getting.started.15.minute.quickstart.gfsh.html.md.erb</file>
      <file type="M">geode-docs.developing.storing.data.on.disk.how.persist.overflow.work.html.md.erb</file>
      <file type="M">geode-docs.developing.region.options.storage.distribution.options.html.md.erb</file>
      <file type="M">geode-docs.developing.region.options.region.types.html.md.erb</file>
      <file type="M">geode-docs.developing.region.options.dynamic.region.creation.html.md.erb</file>
      <file type="M">geode-docs.developing.region.options.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.rebalancing.pr.data.html.md.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.how.partitioning.works.html.md.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.chapter.overview.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.basic.config.book.intro.html.md.erb</file>
      <file type="M">geode-docs.basic.config.config.concepts.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.basic.config.config.concepts.distributed.system.member.configuration.html.md.erb</file>
      <file type="M">geode-docs.basic.config.config.concepts.local.vs.remote.html.md.erb</file>
      <file type="M">geode-docs.basic.config.data.regions.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.basic.config.data.regions.create.a.region.with.gfsh.html.md.erb</file>
      <file type="M">geode-docs.basic.config.data.regions.managing.data.regions.html.md.erb</file>
      <file type="M">geode-docs.basic.config.data.regions.new.region.existing.data.html.md.erb</file>
      <file type="M">geode-docs.basic.config.gemfire.properties.setting.distributed.properties.html.md.erb</file>
      <file type="M">geode-docs.basic.config.the.cache.intro.cache.management.html.md.erb</file>
      <file type="M">geode-docs.basic.config.the.cache.managing.a.client.cache.html.md.erb</file>
      <file type="M">geode-docs.basic.config.the.cache.managing.a.peer.server.cache.html.md.erb</file>
      <file type="M">geode-docs.basic.config.the.cache.setting.cache.properties.html.md.erb</file>
      <file type="M">geode-docs.configuring.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.deploying.application.jars.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.persist.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.using.member.groups.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.change.file.spec.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.deploy.config.files.intro.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.firewalls.ports.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.running.the.cacheserver.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.running.the.locator.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.starting.up.shutting.down.html.md.erb</file>
      <file type="M">geode-docs.developing.book.intro.html.md.erb</file>
      <file type="M">geode-docs.developing.data.serialization.PDX.Serialization.Features.html.md.erb</file>
      <file type="M">geode-docs.developing.data.serialization.use.pdx.high.level.steps.html.md.erb</file>
      <file type="M">geode-docs.developing.delta.propagation.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.delta.propagation.implementing.delta.propagation.html.md.erb</file>
      <file type="M">geode-docs.developing.delta.propagation.when.to.use.delta.prop.html.md.erb</file>
      <file type="M">geode-docs.developing.distributed.regions.choosing.level.of.dist.html.md.erb</file>
      <file type="M">geode-docs.developing.distributed.regions.how.distribution.works.html.md.erb</file>
      <file type="M">geode-docs.developing.distributed.regions.how.region.versioning.works.html.md.erb</file>
      <file type="M">geode-docs.developing.distributed.regions.how.replication.works.html.md.erb</file>
      <file type="M">geode-docs.developing.events.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.events.configure.p2p.event.messaging.html.md.erb</file>
      <file type="M">geode-docs.developing.events.conflate.multisite.gateway.queue.html.md.erb</file>
      <file type="M">geode-docs.developing.events.conflate.server.subscription.queue.html.md.erb</file>
      <file type="M">geode-docs.developing.events.how.cache.events.work.html.md.erb</file>
      <file type="M">geode-docs.developing.events.how.client.server.distribution.works.html.md.erb</file>
      <file type="M">geode-docs.developing.events.how.events.work.html.md.erb</file>
      <file type="M">geode-docs.developing.events.how.multisite.distribution.works.html.md.erb</file>
      <file type="M">geode-docs.developing.events.implementing.durable.client.server.messaging.html.md.erb</file>
      <file type="M">geode-docs.developing.events.list.of.event.handlers.and.events.html.md.erb</file>
      <file type="M">geode-docs.developing.events.tune.client.server.event.messaging.html.md.erb</file>
      <file type="M">geode-docs.developing.expiration.how.expiration.works.html.md.erb</file>
      <file type="M">geode-docs.developing.function.exec.function.execution.html.md.erb</file>
      <file type="M">geode-docs.developing.function.exec.how.function.execution.works.html.md.erb</file>
      <file type="M">geode-docs.developing.outside.data.sources.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.outside.data.sources.how.data.loaders.work.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5353" opendate="2018-6-26 00:00:00" fixdate="2018-9-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh hint should be case independent</summary>
      <description>The gfsh hint command does not accept topic arguments that start with lower case letters.  It should. Here is an example:gfsh&gt;hint helpUnknown topic: help. Use hint; to view the list of available topics. gfsh&gt;hint HelpProvides usage information for gfsh &amp; its commands.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.help.Helper.java</file>
    </fixedFiles>
  </bug>
  <bug id="5371" opendate="2018-7-2 00:00:00" fixdate="2018-7-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure all tests marked as Flaky have not been resolved and still are accurately tagged</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.HAStartupAndFailoverDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.management.WANManagementDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialWANPropagationDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelWANStatsDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelWANPropagationDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelWANPersistenceEnabledGatewaySenderDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.misc.WanAutoDiscoveryDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.security.ClientPostAuthorizationDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.security.ClientAuthzObjectModDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.management.internal.cli.commands.DurableClientCommandsDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.tier.sockets.DurableClientSimpleDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.PutAllCSDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.cache.query.cq.dunit.PrCqUsingPoolDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.cache.query.cq.dunit.CqResultSetUsingPoolDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.cache.query.cq.dunit.CqPerfDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.SecurityManagerLifecycleIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.P2PAuthenticationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.DeltaClientPostAuthorizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientAuthenticationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientAuthDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.redis.RedisServerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.redis.HashesJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.memcached.GemcachedDevelopmentJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.RegionCreateDestroyDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.MemberMBeanAttributesDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.pulse.TestFunctionsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ConfigurationPersistenceServiceUsingDirDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GemfireDataCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAlterDestroyRegionCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.GemFireStatSamplerIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.ScheduledThreadPoolExecutorWithKeepAliveJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.process.FileProcessControllerIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.process.BaseProcessStreamReaderIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.asyncqueue.AsyncEventQueueStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ReliableMessagingDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.RegionCloseDUnitTest.java</file>
      <file type="M">extensions.geode-modules-session.src.test.java.org.apache.geode.modules.session.internal.filter.SessionReplicationIntegrationJUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.management.internal.cli.commands.LauncherLifecycleCommandsDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPIsOnGroupsFunctionExecutionDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.MergeLogs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.GeodeRedisServer.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.DistributedAckPersistentRegionCCEDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.DistributedAckPersistentRegionCCEOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.DistributedAckRegionCCEDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.DistributedNoAckRegionCCEDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.MultiVMRegionTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.PartitionedRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.RegionReliabilityTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.TXDistributedDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.ConnectionPoolDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.management.MemoryThresholdsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.management.MemoryThresholdsOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.management.ResourceManagerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.ProxyJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.CompiledInDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.QueryDataInconsistencyDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.QueryUsingFunctionContextDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.RemoteQueryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.functional.QueryREUpdateInProgressJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.ConcurrentIndexOperationsOnOverflowRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.ConcurrentIndexUpdateWithInplaceObjectModFalseDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.partitioned.PRColocatedEquiJoinDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.ClusterDistributionManagerForAdminDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.ProductUseLogDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.LocatorLauncherRemoteIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.SystemAdminDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ClientServerTransactionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DeprecatedCacheServerLauncherIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegionAsyncRecoveryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.EvictionStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.OffHeapEvictionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.DistributedRegionFunctionExecutionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionFailoverDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionNoSingleHopDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionSelectorNoSingleHopDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.GIIDeltaDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.HARegionQueueDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionDelayedRecoveryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionSingleHopDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.fixed.FixedPartitioningDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistentColocatedPartitionedRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistentPartitionedRegionDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.DestroyEntryPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.DurableRegistrationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.HAInterestPart2DUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5376" opendate="2018-7-3 00:00:00" fixdate="2018-7-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In JTA, Geode afterCompletion may fail even though the JTA host still available</summary>
      <description>When JTA is hosted on a server S2, and there is another server S1 handles the client JTA request. After the S1 executed JTA beforeCompletion initiated from client, the S2's P2P reader thread for S1 will hold the locks for the JTA. If at the time, S1 is lost/shut down, client will failover to another server to try afterCompletion. The afterCompletion attempt will fail as the new thread does not hold the lock. This will cause the client JTA to fail due to CommitConflict, even though there is not concurrent commit operations.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.7.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXSynchronizationRunnableTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tx.ClientTXStateStub.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXSynchronizationRunnable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.TXSynchronizationCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PausedTXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistTXStateProxyImplOnCoordinator.java</file>
    </fixedFiles>
  </bug>
  <bug id="5378" opendate="2018-7-3 00:00:00" fixdate="2018-7-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AcceptanceTests fail because they cannot start service db</summary>
      <description>The build 125-127 have had 10 failures that were related to failure to start a service db in the JDBC tests.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.docker.initdocker</file>
    </fixedFiles>
  </bug>
  <bug id="54" opendate="2015-6-8 00:00:00" fixdate="2015-3-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing javadocs</summary>
      <description>The current build process is not generating javadocs and once they're generated it's still be defined where to host the pages. Current Geode docs are hosted at http://geode-docs.cfapps.io/ but javadocs can be part of that or be hosted under geode.incubator.apache.org.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.docs.index.html</file>
      <file type="M">geode-site.website.Rules</file>
      <file type="M">geode-site.website.README.md</file>
      <file type="M">geode-site.website.layouts.header.html</file>
      <file type="M">geode-site.website.layouts.footer.html</file>
      <file type="M">geode-site.website.layouts.default.html</file>
      <file type="M">geode-site.website.content.community.index.html</file>
    </fixedFiles>
  </bug>
  <bug id="5528" opendate="2018-8-3 00:00:00" fixdate="2018-8-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>client event listener invoked multiple times for the same transactional operation</summary>
      <description>I observed a client cache's cache listener being invoked multiple times for the same transactional operation. The server handling the transaction commit was killed some time during the commit. Stats and logs seem to indicate that the commit had finished on the servers but the results had not been sent to the client. The client's stats show it retried the commit on another server and then got the results.Here are client logs for the transaction, which had a single destroy() operation:[info 2018/07/13 18:24:00.506 PDT &lt;vm_25_thr_51_edge8_rs-2052RSFulla5i32xlarge-hydra-client-1_11909&gt; tid=0xbd] Committing transaction with id TXId: rs-2052RSFulla5i32xlarge-hydra-client-1(edgegemfire8_rs-2052RSFulla5i32xlarge-hydra-client-1_11909:11909:loner):34556:c8ff5e96:edgegemfire8_rs-2052RSFulla5i32xlarge-hydra-client-1_11909:2036[info 2018/07/13 18:24:02.659 PDT &lt;vm_25_thr_51_edge8_rs-2052RSFulla5i32xlarge-hydra-client-1_11909&gt; tid=0xbd] Invoked util.SilenceListener for key Object_19653: afterDestroy in edge8, pid 11909, vmID 25, operation DESTROY[info 2018/07/13 18:24:02.660 PDT &lt;vm_25_thr_51_edge8_rs-2052RSFulla5i32xlarge-hydra-client-1_11909&gt; tid=0xbd] Invoked util.SilenceListener for key Object_19653: afterDestroy in edge8, pid 11909, vmID 25, operation DESTROY[info 2018/07/13 18:24:02.660 PDT &lt;vm_25_thr_51_edge8_rs-2052RSFulla5i32xlarge-hydra-client-1_11909&gt; tid=0xbd] Invoked util.SilenceListener for key Object_19653: afterDestroy in edge8, pid 11909, vmID 25, operation DESTROY[info 2018/07/13 18:24:02.660 PDT &lt;vm_25_thr_51_edge8_rs-2052RSFulla5i32xlarge-hydra-client-1_11909&gt; tid=0xbd] Invoked util.SilenceListener for key Object_19653: afterDestroy in edge8, pid 11909, vmID 25, operation DESTROY[info 2018/07/13 18:24:02.660 PDT &lt;vm_25_thr_51_edge8_rs-2052RSFulla5i32xlarge-hydra-client-1_11909&gt; tid=0xbd] Invoked util.SilenceListener for key Object_19653: afterDestroy in edge8, pid 11909, vmID 25, operation DESTROY[info 2018/07/13 18:24:02.661 PDT &lt;vm_25_thr_51_edge8_rs-2052RSFulla5i32xlarge-hydra-client-1_11909&gt; tid=0xbd] Invoked util.SilenceListener for key Object_19653: afterDestroy in edge8, pid 11909, vmID 25, operation DESTROY[info 2018/07/13 18:24:02.661 PDT &lt;vm_25_thr_51_edge8_rs-2052RSFulla5i32xlarge-hydra-client-1_11909&gt; tid=0xbd] Invoked util.SilenceListener for key Object_19653: afterDestroy in edge8, pid 11909, vmID 25, operation DESTROY[info 2018/07/13 18:24:02.661 PDT &lt;vm_25_thr_51_edge8_rs-2052RSFulla5i32xlarge-hydra-client-1_11909&gt; tid=0xbd] Invoked util.SilenceListener for key Object_19653: afterDestroy in edge8, pid 11909, vmID 25, operation DESTROY</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXCommitMessage.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.RemoteTransactionDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.ClientServerTransactionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5531" opendate="2018-8-6 00:00:00" fixdate="2018-8-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh echo variable does not work as documented</summary>
      <description>Variables are documented here to work with gfsh echo, but do not. This applies to both pre-defined shell variables and user-defined variables (set variable...).For example,echo --string=$*will show all shell variables and values, but echo --string=${SYS_USER}simply displays ${SYS_USER}Indeed, EchoCommand.java has a special case for `$*`, but does not include the other documented cases.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.shell.GfshJunitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.Gfsh.java</file>
    </fixedFiles>
  </bug>
  <bug id="5534" opendate="2018-8-6 00:00:00" fixdate="2018-8-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>With oql indexes and compression enabled, memory usage is greater after compression than before</summary>
      <description>A test that shows the behavior is: xml configuration like:&lt;region name="order"&gt; &lt;region-attributes scope="distributed-ack" data-policy="persistent-replicate" disk-store-name="orderDiskStore" disk-synchronous="false" cloning-enabled="true"&gt; &lt;compressor&gt; &lt;class-name&gt;org.apache.geode.compression.SnappyCompressor&lt;/class-name&gt; &lt;/compressor&gt; &lt;/region-attributes&gt; &lt;index name="order_clOrdID" from-clause="/order index_from" expression="index_from.clOrdID" type="range"/&gt; &lt;index name="order_externalOrderID" from-clause="/order index_from" expression="index_from.externalOrderID" type="range"/&gt; &lt;index name="order_externalOrderIDSource" from-clause="/order index_from" expression="index_from.externalOrderIDSource" type="range"/&gt; &lt;index name="order_orderID" from-clause="/order index_from" expression="index_from.orderID" type="range"/&gt; &lt;index name="order_parentOrderID" from-clause="/order index_from" expression="index_from.parentOrderID" type="range"/&gt;&lt;/region&gt; an Order object defining string fields for clOrdID, externalOrderID, orderID and parentOrderID and an enum field for externalOrderIDSourceHere are some histograms showing the behavior:With indexes and no compression: num #instances #bytes class name---------------------------------------------- 1: 502136 562132008 [B 2: 2000000 48000000 org.apache.geode.internal.concurrent.CompactConcurrentHashSet2$Node 3: 499990 35999280 org.apache.geode.internal.cache.entries.VersionedThinDiskRegionEntryHeapStringKey2 4: 500004 24000192 org.apache.geode.internal.cache.DiskId$PersistenceWithIntOffset 5: 1503 15457776 [Lorg.apache.geode.internal.concurrent.CompactConcurrentHashSet2$Node; 6: 501508 12036192 java.util.concurrent.ConcurrentSkipListMap$Node 7: 501500 12036000 org.apache.geode.pdx.internal.PdxString 8: 500000 8000000 org.apache.geode.internal.cache.PreferBytesCachedDeserializable 9: 250680 6016320 java.util.concurrent.ConcurrentSkipListMap$Index 10: 80 4196104 [Lorg.apache.geode.internal.util.concurrent.CustomEntryConcurrentHashMap$HashEntry;Total 5474612 739440976With indexes and compression num #instances #bytes class name---------------------------------------------- 1: 1003644 643754184 [B 2: 2000000 48000000 org.apache.geode.internal.concurrent.CompactConcurrentHashSet2$Node 3: 499990 35999280 org.apache.geode.internal.cache.entries.VersionedThinDiskRegionEntryHeapStringKey2 4: 500004 24000192 org.apache.geode.internal.cache.DiskId$PersistenceWithIntOffset 5: 1503 15457776 [Lorg.apache.geode.internal.concurrent.CompactConcurrentHashSet2$Node; 6: 501508 12036192 java.util.concurrent.ConcurrentSkipListMap$Node 7: 501500 12036000 org.apache.geode.pdx.internal.PdxString 8: 250889 6021336 java.util.concurrent.ConcurrentSkipListMap$Index 9: 80 4196096 [Lorg.apache.geode.internal.util.concurrent.CustomEntryConcurrentHashMap$HashEntry; 10: 34380 3261936 [CTotal 5476808 813096488</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.AbstractIndex.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.index.AbstractIndexMaintenanceIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5535" opendate="2018-8-7 00:00:00" fixdate="2018-8-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade fast-classpath-scanner to 4.x</summary>
      <description>The package has been renamed to 'ClassGraph'.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.test.resources.expected.jars.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.ClasspathScanLoadHelperJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CommandManager.java</file>
      <file type="M">LICENSE</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.deployment.FunctionScanner.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.ClasspathScanLoadHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceService.java</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.resources.expected.jars.txt</file>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="5538" opendate="2018-8-7 00:00:00" fixdate="2018-8-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Move examples job to a different pipeline</summary>
      <description>Since it uses different resources and is it's own repository, testing geode-examples should be separate from the develop pipeline.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.yml</file>
      <file type="M">ci.pipelines.geode-build.base.yml</file>
      <file type="M">ci.pipelines.deploy.meta.sh</file>
    </fixedFiles>
  </bug>
  <bug id="5539" opendate="2018-8-7 00:00:00" fixdate="2018-8-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove pr tags from all jobs.</summary>
      <description>Given the workflow change, we no longer need workers tagged with pr.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.pr-template.yml</file>
      <file type="M">ci.pipelines.pull-request.deploy.pr.pipeline.sh</file>
      <file type="M">ci.pipelines.pull-request.base.yml</file>
    </fixedFiles>
  </bug>
  <bug id="5627" opendate="2018-8-23 00:00:00" fixdate="2018-8-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ConcurrencyTestHelper fails with tests that don&amp;#39;t use it</summary>
      <description>The field allThreadsExecuted is set to false when the test runs, so if the helper doesn't see any use at all it will fail.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.ConcurrencyRuleTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.ConcurrencyRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="5704" opendate="2018-9-6 00:00:00" fixdate="2018-9-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI Failure: DistributedAckOverflowRegionCCEDUnitTest &gt; testConcurrentEventsOnEmptyRegion - Data loss</summary>
      <description>Return value is unexpectedly null in org.apache.geode.cache30.DistributedAckOverflowRegionCCEDUnitTest &gt; testConcurrentEventsOnEmptyRegion.The failure on CI can be found here: https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/DistributedTest/builds/364Failed with stack trace:org.apache.geode.cache30.DistributedAckOverflowRegionCCEDUnitTest &gt; testConcurrentEventsOnEmptyRegion FAILED org.junit.ComparisonFailure: &amp;#91;1 region contents are not consistent for i cckey2&amp;#93; expected:&lt;"ccvalue3362298"&gt; but was:&lt;null&gt;</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.cache30.MultiVMRegionTestCase.java</file>
    </fixedFiles>
  </bug>
  <bug id="5709" opendate="2018-9-7 00:00:00" fixdate="2018-1-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create pipeline job to build windows image</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-windows-geode-builder.windows-packer.json</file>
      <file type="M">ci.pipelines.images.images.yml</file>
    </fixedFiles>
  </bug>
  <bug id="5711" opendate="2018-9-10 00:00:00" fixdate="2018-2-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>create jndi-binding gfsh command does not hide password</summary>
      <description>The create jndi-binding gfsh command currently accepts -username and -password options, but the content text of these options is visible.In oder to hide the content, we should model this behavior after gfsh connect command. When the user does not enter –username then the user should be prompted for a username and password. If they enter a --username then they should be only prompted for a password.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.shell.GfshExecutionStrategyTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.GfshParseResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5725" opendate="2018-9-11 00:00:00" fixdate="2018-9-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Many WAN DUnit tests with off-heap enabled aren&amp;#39;t actually exercising off-heap</summary>
      <description>Many of the WAN DUnit tests are run with both off-heap disabled and enabled. However, there is an optimization in the off-heap implementation where if the entry value is less than 8-bytes, off-heap is bypassed and the value is put on the heap. This is due to the value being equal to or less than the size of the off-heap address that would have been used. It is therefore pointless to use off-heap if the value itself is less than the size of the address.In many WAN tests we are using longs as values, which will bypass off-heap in this way. However, it is expected that off-heap is being exercised. We should instead use another data type (strings) as values to be sure that the off-heap feature is actually being exercised.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug id="5727" opendate="2018-9-11 00:00:00" fixdate="2018-9-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Export cluster-configuration does not work filename only</summary>
      <description>Using the latest Geode snapshot (aaac1e5cefe6ad7ca533a7ca87eef9dd779912e4), exporting cluster config with only a filename (no path) results in an error:gfsh&gt; start locatorgfsh&gt; start servergfsh&gt; create region --name=test --type=PARTITIONgfsh&gt; export cluster-configuration --zip-file-name=cluster-config.zipCould not process command due to error. nullIt does (sort of) work if you use a path:gfsh&gt; start locatorgfsh&gt; start servergfsh&gt; create region --name=test --type=PARTITIONgfsh&gt; export cluster-configuration --zip-file-name=./cluster-config.zipHowever, it appears that the cluster config file is written to both the specified path and the current working directory.gfsh &gt; export cluster-configuration --zip-file-name=/tmp/cluster-config.zip$ md5 /tmp/cluster-config.zip cluster-config.zipMD5 (/tmp/cluster-config.zip) = 50022493fa54f54da700adfc1a8f709cMD5 (cluster-config.zip) = 50022493fa54f54da700adfc1a8f709c</description>
      <version>None</version>
      <fixedVersion>1.7.0,1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.integrationTest.java.org.apache.geode.management.internal.cli.commands.CommandOverHttpTest.java</file>
      <file type="M">geode-web.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ExportConfigCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.Gfsh.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.model.ResultModel.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.model.FileResultModel.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.ModelCommandResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportConfigCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportClusterConfigurationCommand.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.configuration.ClusterConfigImportDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ExportClusterConfigurationCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5761" opendate="2018-9-19 00:00:00" fixdate="2018-8-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>jsonassert has incompatible transitive dependency on android-json</summary>
      <description>The fix for GEODE-5696 added geode-junit dependency on org.skyscreamer:jsonassert which brings in a transitive dependency on com.vaadin.external.google:android-json which is incompatible with geode-json.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="5762" opendate="2018-9-19 00:00:00" fixdate="2018-9-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix typos in transaction docs code examples</summary>
      <description>The variable used for the transaction manager object in the code examples within the docs section on Transactions is inconsistent.  Pick one variable name, and use it throughout all examples in a consistent way.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.directed.example.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5765" opendate="2018-9-21 00:00:00" fixdate="2018-9-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AlterRuntimeCommandDUnitTest slows down due to large numbers of classes loaded</summary>
      <description>We observed that several tests in this class are taking minutes when they should be taking a few seconds at most. After some debugging, we determined that the JVM itself is struggling to deal with having 100K+ classes loaded. They are loaded because the test is repeated starting and stopping the http service, which creates a classloader and causes soft references to all of the loaded classes to be cached.By setting a flag to clear the soft references faster, the test times go back to normal.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="5778" opendate="2018-9-25 00:00:00" fixdate="2018-8-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>On Windows - rsync fails intermittently</summary>
      <description>Can we just retry when rsync fails just like start_instance task?https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsGfshDistributedTest/builds/11https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsUnitTest/builds/10https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsAcceptanceTest/builds/10rsync fails intermittently with following error:Warning: Permanently added '35.184.2.138' (ECDSA) to the list of known hosts. 1 [main] rsync 3440 child_info_fork::abort: C:\ProgramData\chocolatey\lib\rsync\cwrsync_5.5.0_x86_free\bin\cyggcc_s-1.dll: Loaded to different address: parent(0x2E20000) != child(0x150000)rsync: fork failed in do_recv: Resource temporarily unavailable (11)rsync error: error in IPC code (code 14) at main.c(879) [Receiver=3.1.2]real 0m1.226suser 0m0.004ssys 0m0.020s</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="578" opendate="2015-11-19 00:00:00" fixdate="2015-11-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cluster-config and cache.xml do not work together</summary>
      <description>When cluster configuration is used and the server is started with a cache.xml, server startup fails due to a bind exception. This occurs because we try to start the default cache-server twice, once when processing the cluster-config and once while parsing the cache.xml file.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheCreationJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6003" opendate="2018-11-6 00:00:00" fixdate="2018-11-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>windows image java 11 install fails when successfully installed</summary>
      <description>the step at the end to kill java fails the entire build, if java has already exited normally.  lack of a java process to kill should be treated as success instead.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-windows-geode-builder.windows-packer.json</file>
    </fixedFiles>
  </bug>
  <bug id="6009" opendate="2018-11-7 00:00:00" fixdate="2018-12-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add Java11 to PR pipeline</summary>
      <description>Now that Java 11 is gating for the develop pipeline, it should be tested in PR pipeline as well!  Otherwise you can end up with a checkin that passes PR but breaks develop, which has already happened at least once.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="6010" opendate="2018-11-7 00:00:00" fixdate="2018-11-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JDBC Connector should automatically configure JDBCLoader and JDBCAsyncWriter</summary>
      <description>As a Geode userWhen I create a JDBC mapping using the create jdbc-mapping commandThen I should not be required to perform additional configuration to get the data flowing between Geode and relational database.Currently, the user is expected to specify a CacheLoader and an AsyncEventQueue, which should not be required. We should also go ahead and create an async event queue with default values when a jdbc-mapping is created. (one queue per mapping)Acceptance Criteria:Given that a partitioned region has previously been createdWhen a mapping is created using create jdbc-mapping commandThen list async-event-queues command shows a newly created parallel AEQAnd describe region command shows our cache-loader and async-event-queue-id configuredGiven that a replicated region has previously been createdWhen a mapping is created using create jdbc-mapping commandThen list async-event-queues command shows a newly created serial AEQAnd describe region command shows our cache-loader and async-event-queue-id configuredIf cluster configuration is not enabled, it should throw an error.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.integrationTest.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-connectors.src.integrationTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.JdbcDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6013" opendate="2018-11-7 00:00:00" fixdate="2018-11-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>A recovered node may not be consistent with peer after getting initial image</summary>
      <description>A node recovered from its persistent data may not receive all the expected data from peer after doing GII (delta); if there is an ongoing tombstone GC at the GII (get initial image) provider; resulting data inconsistency between the replicas.While doing code walk through noticed that; when a node comes up with the persistent data requests delta GII from another replica (GII provider); at the provider side while comparing the tombstone GC version to determine whether to perform full or Delta GII, the provider was using its GC version instead of requester's gc version, resulting in performing delta GII instead of full gii. </description>
      <version>1.7.0</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.versions.RegionVersionVectorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.versions.RegionVersionVector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InitialImageOperation.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.PersistentRegionRecoveryDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6014" opendate="2018-11-7 00:00:00" fixdate="2018-1-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove unnecessary null checks in the code.</summary>
      <description>&lt;place holder will be updated soon&gt;</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.AbstractBaseController.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.codeAnalysis.decode.CompiledClass.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.CompactMapRangeIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.jndi.JNDIInvoker.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.distributed.LuceneQueryFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneSearchIndexFunction.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.CloseCQ.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.ReadWriteFile.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.json.TypedJson.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GetMemberConfigInformationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CompactDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.LocatorMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.shared.NativeCallsJNAImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.OSProcess.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.concurrent.CompactConcurrentHashSet2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheXmlGenerator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.StateFlushOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ServerPingMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.locks.TXLockServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.FilterProfile.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.entries.DiskEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RemoteGfManagerAgent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpClient.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ClusterDistributionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.HashIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledGroupBySelect.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PoolImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.DistributedSystemConfigImpl.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.DeltaSessionManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="6048" opendate="2018-11-13 00:00:00" fixdate="2018-9-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>./gradlew build install should work by default on release branches</summary>
      <description>due to a post-1.7 refactoring we no longer use the nexus plugin, which was smart enough not to try to sign artifacts if signing key is not providedwe should emulate that same behavior again so anyone can do a build on any branch at any time</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.publish.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="6058" opendate="2018-11-14 00:00:00" fixdate="2018-11-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>recordVersion should allow update higher local version if for non-persistent region</summary>
      <description>When we introduced RVV, we put an assertion to disallow recordVersion to be a higher local version. i.e. the local version should be increased by local member, not from remote (such as GII). But we forgot to enforce this assertion for persistent region only. The reason is: If in persist region, the operation increased local version and persist it first before sending out distribution. And it will recover from disk. So there's no reason for a persistent region to get a higher local version from remote (such as GII).  But this is not the case for non-persistent region.  If we have a non-persistent region with concurrencyCheckEnabled, memberA initiated an operation and distributed to remote. The remote member keeps memberA's region version as 1. If we destroy and recreate region on memberA, it cannot recover from disk. The only way to get RVV back is through GII from remote. So we have to allow updating region version 1 for memberA into memberA's empty RVV. </description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.versions.RegionVersionVectorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.versions.RegionVersionVector.java</file>
    </fixedFiles>
  </bug>
  <bug id="6059" opendate="2018-11-15 00:00:00" fixdate="2018-11-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>StressNewTests is not actually running</summary>
      <description>The StressNewTest jobs seem to be failing in a way that still causes the job to pass without running any tests. This appears to have something to do with changes to the concourse infrastructure and the way it creates the git repository, there is no origin/develop. Here is some sample output:https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-pr/jobs/StressNewTestOpenJDK8/builds/78fatal: Not a valid object name origin/developfatal: Not a valid object name origin/developfatal: Not a valid object name origin/developfatal: Not a valid object name origin/developfatal: Not a valid object name origin/develop 0 changed testsNo changed test files, nothing to test.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.repeat-new-tests.sh</file>
    </fixedFiles>
  </bug>
  <bug id="6142" opendate="2018-12-4 00:00:00" fixdate="2018-12-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>`destroy region` should throw an exception if it has a jdbc-mapping</summary>
      <description>If I try to destroy a region that has a jdbc-mapping, I should get an exception that directs me to destroy any jdbc-mappings first.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommand.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandDunitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6143" opendate="2018-12-4 00:00:00" fixdate="2018-4-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>PowerMock should not be used in Geode tests [PERMANENT]</summary>
      <description>At least one usage of PowerMock in our unit tests is leaking and causing other tests to fail with the following stack.No further tests should be written using PowerMock and all tests that currently use it need to be identified and changed (along with product code refactoring) to not use PowerMock.We will then remove PowerMock as a dependency from Geode.2018-12-04 18:11:36,258 Distributed system shutdown hook ERROR Could not reconfigure JMX java.lang.LinkageError: loader constraint violation: loader (instance of org/powermock/core/classloader/MockClassLoader) previously initiated loading for a different type with name "javax/management/MBeanServer" at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:763) at org.powermock.core.classloader.MockClassLoader.loadUnmockedClass(MockClassLoader.java:262) at org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:206) at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass1(DeferSupportingClassLoader.java:89) at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:79) at java.lang.ClassLoader.loadClass(ClassLoader.java:357) at org.apache.logging.log4j.core.jmx.Server.unregisterAllMatching(Server.java:337) at org.apache.logging.log4j.core.jmx.Server.unregisterLoggerContext(Server.java:261) at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:165) at org.apache.logging.log4j.core.jmx.Server.reregisterMBeansAfterReconfigure(Server.java:141) at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:558) at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:619) at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:636) at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:231) at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:243) at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:45) at org.apache.logging.log4j.LogManager.getContext(LogManager.java:174) at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:661) at org.apache.geode.internal.logging.LogService.getLogger(LogService.java:64) at org.apache.geode.internal.tcp.ConnectionTable.&lt;clinit&gt;(ConnectionTable.java:61) at org.apache.geode.distributed.DistributedSystem.setThreadsSocketPolicy(DistributedSystem.java:263) at org.apache.geode.distributed.internal.InternalDistributedSystem.lambda$static$0(InternalDistributedSystem.java:2317) at java.lang.Thread.run(Thread.java:748)</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.functions.GetClusterConfigurationFunction.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.DataTypeJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.platform.LinuxProcFsStatistics.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.statistics.LinuxSystemStatsTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.logging.log4j.FastLoggerWithDefaultConfigIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tx.RemotePutMessageTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.MBeanProxyFactoryTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.MBeanProxyFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifier.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.ha.HARegionQueueJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.ha.HARegionQueueIntegrationTest.java</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-gfsh.build.gradle</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientProxy.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifierIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.UnregisterInterestTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneEventListenerJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneEventListener.java</file>
      <file type="M">geode-gfsh.src.main.resources.org.apache.geode.management.internal.sanctioned-geode-gfsh-serializables.txt</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.result.TableBuilderHelper.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.result.TableBuilder.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.result.CommandResult.java</file>
      <file type="M">geode-gfsh.src.integrationTest.java.org.apache.geode.management.internal.cli.TableBuilderJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.functions.GetClusterConfigurationFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DistributedRegionSearchLoadJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.wan.GatewayReceiverXmlParsingValidationsJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.internal.cache.wan.GatewayReceiverXmlParsingValidationsJUnitTest.correctConfiguration[DTD].cache.xml</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.internal.cache.wan.GatewayReceiverXmlParsingValidationsJUnitTest.correctConfiguration[XSD].cache.xml</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.internal.cache.wan.GatewayReceiverXmlParsingValidationsJUnitTest.multipleReceiversShouldThrowException[DTD].cache.xml</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.internal.cache.wan.GatewayReceiverXmlParsingValidationsJUnitTest.multipleReceiversShouldThrowException[XSD].cache.xml</file>
      <file type="M">geode-pulse.build.gradle</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockGrantor.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.locks.DLockGrantorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.LocalManagerTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.backup.BackupFileCopierIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupFileCopier.java</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractBucketRegionQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRegionQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.FreeListManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.OffHeapRegionEntryHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.OffHeapStoredObject.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.ReferenceCountHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.ReferenceCountHelperImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.concurrent.CustomEntryConcurrentHashMap.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.FreeListManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.OffHeapRegionEntryHelperJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.ReferenceCountHelperImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.ReferenceCountHelperJUnitTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderOperationsDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.PartitionedRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.client.internal.AutoConnectionSourceImplJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.beans.ManagementAdapterTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.persistence.PersistenceInitialImageAdvisorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListGatewayCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.internal.PdxInstanceImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.types.TypeUtilsJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.MemoryThresholds.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.control.HeapMemoryMonitorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.InternalFunctionService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction66.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction70.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction65Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction66Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunctionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.stats.VMStatsMonitor.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.beans.stats.VMStatsMonitorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="6144" opendate="2018-12-4 00:00:00" fixdate="2018-12-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>fix red jobs in meta pipeline</summary>
      <description>concourse-pipeline-resource has accepted a PR to fix the issue, now we need. to either wait for an official release with the fix and/or point to latest dev release until then (last release interval was 2 years).this is the fix we need to pick up: https://github.com/concourse/concourse-pipeline-resource/pull/47</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="6151" opendate="2018-12-5 00:00:00" fixdate="2018-12-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The jdbc-mapping commands should use consistent terminology when referring to a jdbc mapping</summary>
      <description>Multiple gfsh jdbc-mapping commands exist. They currently use the following terms to refer to a jdbc-mapping: "mapping", "region mapping", and "JDBC mapping". They should consistently use the term "JDBC mapping".</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.JdbcConnectorServiceImpl.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6154" opendate="2018-12-6 00:00:00" fixdate="2018-11-6 01:00:00" resolution="Not A Problem">
    <buginformation>
      <summary>Spring-shell is not an optional dependency if you create a Cache in an application</summary>
      <description>The geode-core pom should be considered the pom for Geode Cache, not Geode Client Cache. If we want to have a separate module for clients which leaves out certain dependencies then that would be one approach. Moving GFSH and the spring-shell dependent code to another Geode module would also be another approach that works. But simply crippling a pom so that one of the main uses of Geode does not work out of box is a big no-no.Creating a Cache in an application using maven dependencies (geode-core specifically) is supported but broken because we flag spring-shell as optional.A User who creates a Cache in an application should not be forced to either have JMX broken or explicitly add in spring-shell to their application's dependencies.10:31:55.168 [main] WARN o.a.g.d.i.InternalDistributedSystem - org/springframework/shell/core/Parserjava.lang.NoClassDefFoundError: org/springframework/shell/core/Parser at org.apache.geode.management.internal.beans.MemberMBeanBridge.&lt;init&gt;(MemberMBeanBridge.java:333) at org.apache.geode.management.internal.beans.ManagementAdapter.handleCacheCreation(ManagementAdapter.java:144) at org.apache.geode.management.internal.beans.ManagementListener.handleEvent(ManagementListener.java:115) at org.apache.geode.distributed.internal.InternalDistributedSystem.notifyResourceEventListeners(InternalDistributedSystem.java:2201) at org.apache.geode.distributed.internal.InternalDistributedSystem.handleResourceEvent(InternalDistributedSystem.java:606) at org.apache.geode.internal.cache.GemFireCacheImpl.initialize(GemFireCacheImpl.java:1214) at org.apache.geode.internal.cache.GemFireCacheImpl.basicCreate(GemFireCacheImpl.java:799) at org.apache.geode.internal.cache.GemFireCacheImpl.create(GemFireCacheImpl.java:785) at org.apache.geode.cache.CacheFactory.create(CacheFactory.java:176) at org.apache.geode.cache.CacheFactory.create(CacheFactory.java:223) at io.github.kirklund.geode.GeodeApplicationIntegrationTest.setUp(GeodeApplicationIntegrationTest.java:35) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)Caused by: java.lang.ClassNotFoundException: org.springframework.shell.core.Parser at java.net.URLClassLoader.findClass(URLClassLoader.java:381) at java.lang.ClassLoader.loadClass(ClassLoader.java:424) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ... 34 common frames omittedYou can reproduce this bug by specifying geode-core as a dependency in maven: &lt;dependency&gt; &lt;groupId&gt;org.apache.geode&lt;/groupId&gt; &lt;artifactId&gt;geode-core&lt;/artifactId&gt; &lt;version&gt;1.9.0-SNAPSHOT&lt;/version&gt; &lt;/dependency&gt;And then create a Cache: cache = new CacheFactory().set(LOCATORS, "").create();You will see the above warning get logged and Geode JMX will be broken.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="6156" opendate="2018-12-6 00:00:00" fixdate="2018-12-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a --id option to create jdbc-mapping to specify the column name</summary>
      <description>Currently gfsh create jdbc-mapping only supports tables with a single primary column and always uses that column as the region key. A --id option should be added to create jdbc-mapping allowing any column of the table to be used as the region key.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.ElementTypeTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManagerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.RegionMappingTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.main.resources.org.apache.geode.internal.sanctioned-geode-connectors-serializables.txt</file>
      <file type="M">geode-connectors.src.main.resources.META-INF.schemas.geode.apache.org.schema.jdbc.jdbc-1.0.xsd</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlParser.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.xml.ElementType.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManager.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.configuration.RegionMapping.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.internal.TestConfigService.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManagerIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="616" opendate="2015-12-1 00:00:00" fixdate="2015-12-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>failure detection ports not copied to new membership view</summary>
      <description>While debugging a different problem I noticed that only the membership coordinator had a failure detection port set in a new view it had created. The becomeCoordinator code is not copying failure detection information from the old view to the new view.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.NetView.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
    </fixedFiles>
  </bug>
  <bug id="6166" opendate="2018-12-7 00:00:00" fixdate="2018-12-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Reduce garbage production in put operation path</summary>
      <description>While debugging another issue I notice a less than optimal path for serializing Operation objects during puts and destroys. The class is java.io.Serializable so it goes through  several checks to see if it can be serialized another way before falling back to Java serialization. One of these checks creates a few objects that are not necessary until later I the function but after it would short circuit for Operation. Additionally, the only member in the class that is non-transient is a byte field indicating the ordinal. This results in a 64 byte Java serialization to transmit a byte. Converting to DataSerializableFixedID poses a challenge with backwards compatibility when deserializing a message sent as Java serializable. It also costs about 4 bytes for a single byte &amp;#91;DSCODE (byte) + FIXED-ID (short) + VALUE (byte)&amp;#93;. Writing a single byte to the message part costs a single byte and makes detecting old clients sending objects trivial. </description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalDataSerializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.Part.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.Message.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Put65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Destroy65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.BaseCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PutOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.ConnectionManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.OpExecutorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.DestroyOp.java</file>
    </fixedFiles>
  </bug>
  <bug id="617" opendate="2015-12-1 00:00:00" fixdate="2015-12-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Change lucene xsd namespace to geode.apache.org</summary>
      <description>The current namespace for the geode lucene integration is geode.incubator.apache.org. Based on discussions on GEODE-386, this should be geode.apache.org.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-lucene.src.test.resources.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserIntegrationJUnitTest.parseIndex.cache.xml</file>
      <file type="M">gemfire-lucene.src.test.resources.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserIntegrationJUnitTest.createIndex.cache.xml</file>
      <file type="M">gemfire-lucene.src.main.resources.META-INF.schemas.geode.incubator.apache.org.lucene.lucene-1.0.xsd</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneXmlConstants.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.GeodeEntityResolver.java</file>
    </fixedFiles>
  </bug>
  <bug id="6174" opendate="2018-12-10 00:00:00" fixdate="2018-6-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create Region REST API</summary>
      <description>I want to be able to interact with the cluster without having to be on the cluster in order to effect the configuration. Either as a developer, I want to develop code in my IDE and as part of developing that code, I need to create regions. Or as a data operator, I need to perform configurations on the cluster and I want to interact with the cluster. As a DeveloperI want to create a region in the cluster using the JAVA API on the clusterwhen I am not located on the cluster (I do not need to be be on a node on the cluster)when I am authenticated and authorized for create regionSo that  a region is created on the clusterSo that I can put and get data in that region</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.api.ClusterManagementService.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizerTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.RegionManagementDunitTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.DisabledClusterConfigTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.ClusterManagementResultTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.LocatorClusterManagementServiceTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.api.ClusterManagementResult.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.api.Status.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementSecurityIntegrationTest.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.ManagementControllerAdvice.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizerIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizer.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.assertions.ClusterManagementResultAssert.java</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">geode-assembly.geode-assembly-test.src.main.java.org.apache.geode.test.junit.rules.GeodeDevRestClient.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.AgentUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementAgent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.RestAgent.java</file>
      <file type="M">geode-web-api.src.integrationTest.java.org.apache.geode.rest.internal.web.controllers.RestAccessControllerTest.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.GeodeAuthenticationProvider.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.RestSecurityService.java</file>
      <file type="M">gradle.geode-dependency-management.gradle</file>
      <file type="M">settings.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.HttpServiceIntegrationTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.api.RegionAPIDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CliFunctionResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigMutator.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.junit.rules.MemberStarterRule.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClusterManagementLocatorReconnectDunitTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementResult.java</file>
      <file type="M">geode-assembly.src.acceptanceTest.resources.ManagementClientCreateRegion.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionConfig.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.ClientClusterManagementService.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.security.RestSecurityConfiguration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionNameValidation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.ConfigurationMutator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.ConfigurationValidator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.RegionConfigValidator.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.RegionConfigValidatorTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.RegionManagementSecurityIntegrationTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.internal.CacheConfigDAODUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigMutatorIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.CacheConfigTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.RegionConfigTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.config.JAXBServiceTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6177" opendate="2018-12-10 00:00:00" fixdate="2018-12-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gateway senders can shut down due to authentication failures</summary>
      <description>When a gateway sender connects to a gateway receiver and authentication is used, the receiver first determines if the provided credentials are valid.  If they are valid, then event processing/dispatching is allowed. However, once the initial authentication is performed, it is possible that the gateway sender stops processing events if the connection with the receiver is destroyed and the credentials used are no longer valid (disallowed, password changed, etc).  This is an edge case where the ack reader thread is the first to attempt to acquire the connection, rather than the dispatcher thread.  The ack reader thread currently does not have the proper retry logic for authentication exceptions, while the dispatcher thread does.  We should ensure that connection retries occur regardless of which thread gets the authentication exception.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.PdxRegistryMismatchException.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventRemoteDispatcher.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.misc.NewWanAuthenticationDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6178" opendate="2018-12-11 00:00:00" fixdate="2018-12-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use Gradle 5 as our build tool.</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.wrapper.gradle-wrapper.jar</file>
    </fixedFiles>
  </bug>
  <bug id="6179" opendate="2018-12-11 00:00:00" fixdate="2018-12-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>improve create data-source help</summary>
      <description>Current description from gfsh {{help create data-source}}command includes some unclear descriptions:"SYNOPSIS(Experimental) Create a JDBC data source."I think the result of this command does not create the data-source, but instead creates a connection to an external JDBC data-source. Instead:"SYNOPSIS(Experimental) Creates a JDBC data-source and verifies connectivity to an external JDBC database."AND" usernameThis element specifies the default username used when creating a new connection.Required: falsepasswordThis element specifies the default password used when creating a new connection.Required: false"It is not clear if these are credentials for GemFire or the external data-source.Please modify help message to:" usernameThis element specifies the default username that may be required by the external JDBC database when creating a new connection.Required: falsepasswordThis element specifies the default password that may be required by the external JDBC database when creating a new connection.Required: false"</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateDataSourceCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="6209" opendate="2018-12-17 00:00:00" fixdate="2018-12-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove cache.xml anchor/links from docs subnav</summary>
      <description>In the Reference section of the manual, the subsection titled &lt;cache&gt; Element Reference contains individual links to each of the elements.  This stuffs the subnav with an enormous number of unneeded links, making it hard to find anything.  So, keep the one link to the top level for the reference of elements, and eliminate all the unnecessary links.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="6216" opendate="2018-12-18 00:00:00" fixdate="2018-12-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add netstat to test environment</summary>
      <description>tests such as geode-core/src/distributedTest/java/org/apache/geode/management/internal/cli/NetstatDUnitTest.java expect netstat utility to be available, but current images do not include it.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.test-container.Dockerfile</file>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
      <file type="M">ci.docker.Dockerfile</file>
    </fixedFiles>
  </bug>
  <bug id="6261" opendate="2019-1-9 00:00:00" fixdate="2019-1-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>When a remove does not find the entry with expected value in a transaction, it should not cleanup existing entries in the txState</summary>
      <description>Currently if a remove operation find the entry with different value in a transaction, it clears the entries not yet modified in the transaction. This would break the repeatable read.</description>
      <version>1.7.0,1.8.0</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXStateTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.TXJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6270" opendate="2019-1-14 00:00:00" fixdate="2019-1-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Correctly set up user-provided client cache regions for session modules</summary>
      <description>When a user provides their own client cache region, we need to make sure that additional constructs, such as expiration listeners, are set up as appropriate.Specifically, if a user provides a PROXY client cache region it needs to have the SessionExpirationCacheListener attached and it also needs to register interest on all keys. The former could be done in the provided xml, but the latter cannot.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.session.tests.TomcatClientServerTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.session.tests.CargoTestBase.java</file>
      <file type="M">geode-assembly.geode-assembly-test.src.main.java.org.apache.geode.session.tests.ServerContainer.java</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.ClientServerSessionCache.java</file>
    </fixedFiles>
  </bug>
  <bug id="6271" opendate="2019-1-14 00:00:00" fixdate="2019-1-14 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Unknown pdx type error occurs when a single client is connected to two separate clusters</summary>
      <description>If A client is connected through two different pools to two different geode clusters The clusters are not connected by WAN The same pdx serialized class is used in both clusters and the client puts into one or more clustersThen it is possible that the client put will result in a value in one of the clusters that will fail deserialization with "java.lang.IllegalStateException: Unknown pdx type." This is because the client will use a type id that is generated in one cluster but is not known to the other cluster.I've attached a test case that replicates this scenario. The client used to have some logic that copied PDX types from one cluster to another in some cases. That logic was removed with cf0b378429b643513366ce90226e4f6472056c7b. However, other cases were still not copying the type. In the attached test case, one of the tests will pass if the changes from cf0b3784 are reverted, but the others still fail.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.pdx.PdxMultiClusterClientServerDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.ClientTypeRegistration.java</file>
    </fixedFiles>
  </bug>
  <bug id="6272" opendate="2019-1-14 00:00:00" fixdate="2019-1-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>the JDBC connector should use PDX instances instead of JSON for composite keys</summary>
      <description>As a GemFire user with composite keysI want to to replace JSON with PDX for these keysso that I can support any order for the keys and have minimal memory impact.Acceptance Criteria:Given a jdbc-mapping uses a composite keyWhen I do CRUD operations on data in the regionThen I must specify the key as a "stable" PDX instance that contains fields that match those specified by --id.Given an existing cache with a jdbc-mapping that uses a composite keyWhen I want to specify a composite key for a CRUD operationThen I have a method on the cache to create a "stable" PDX instance.Given an existing cache with a jdbc-mapping that uses a composite keyWhen I want to specify a composite key for a CRUD operationThen I have a method on the cache to create a "stable" PDX instance and the order of fields in the composite key doesn't matter.Given an existing cache with pdx-read-serialized is set to falseWhen I do an operation that triggers deserialization of a "stable" PDX instanceThen the "stable" PDX instance will be deserialized as the same "stable" PDX instance.Given a "stable" PDX instanceWhen I call its getObject methodThen it will return the same "stable" PDX instance. </description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.PdxInstanceFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.PdxInstance.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.PdxType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.PdxInstanceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.PdxInstanceFactoryImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.PdxInstanceEnum.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.InternalPdxInstance.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.FieldNotFoundInPdxVersion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.EnumInfo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.RuntimeIterator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.PathUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.AttributeDescriptor.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.pdx.PdxInstanceFactoryJUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.PostgresJdbcLoaderIntegrationTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.JdbcWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.JdbcLoaderIntegrationTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.JdbcDistributedTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriterIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6273" opendate="2019-1-14 00:00:00" fixdate="2019-2-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add server group support for JDBC mapping</summary>
      <description>As a Geode user, I want to specify which server group holds the region, so that I can add the JDBC mapping to that region.Given a Geode region exists on a server group, when I run create jdbc-mapping for that regionThen I can specify the server group with an option on the command line, so that the jdbc-mapping is successfully recognized and completed.Given create jdbc-mapping has a server group option defined, when I run describe jdbc-mapping, then I can see the server group option definition.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.assertions.CommandResultAssert.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CliUtil.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.util.internal.DescribeMappingResultTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.org.apache.geode.connectors.util.DescribeMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.main.resources.org.apache.geode.internal.sanctioned-geode-connectors-serializables.txt</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.util.internal.MappingConstants.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.util.internal.DescribeMappingResult.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6275" opendate="2019-1-15 00:00:00" fixdate="2019-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Benchmarks CI job silently fails</summary>
      <description>The benchmark task in CI silently fails when it fails to build geode or get resources. The benchmark job should go red when it fails to build geode or fails to get resources from Maven.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.properties</file>
      <file type="M">ci.scripts.run.benchmarks.sh</file>
    </fixedFiles>
  </bug>
  <bug id="6276" opendate="2019-1-15 00:00:00" fixdate="2019-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Benchmark CI should fetch versions and build develop</summary>
      <description>The benchmark ci job should build all non-release branches and fetch geode releases. This avoids the cost of rebuilding released versions of Geode and illiminates the challenge of the build parameters diverging between old versions and develop.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.run.benchmarks.sh</file>
      <file type="M">ci.scripts.cleanup.benchmarks.sh</file>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="6653" opendate="2019-4-15 00:00:00" fixdate="2019-5-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gfsh command output trimed</summary>
      <description>While executing query on entry with a large key, gfsh automatically trims the columns width so it can fit in available width of the terminal.gfsh&gt;query --query="select * from /example-region"Result : trueLimit  : 100Rows   : 1Result------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut ali.. In a documentation state following:gfsh commands such as query produce output with wide columns that may become misaligned and require manual reformatting to view the output. If the output cannot fit in the available width of the terminal, gfsh automatically trims the columns widths to fit. You can disable this behavior by setting the gfsh environment variable GFSH.TRIMSCRWIDTH to false.But this is wrong described. Only way to disable this behavior is setting gfsh environment variable APP_RESULT_VIEWER to an arbitrary value except 'external' as it enables viewing of the output using UNIX less command.  </description>
      <version>1.7.0,1.8.0,1.9.0</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.configuring.gfsh.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="6654" opendate="2019-4-15 00:00:00" fixdate="2019-6-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Stats documentation issues</summary>
      <description>Hi,There is no information in documentation (https://geode.apache.org/docs/guide/18/reference/statistics_list.html) about the following statistics: Region Entry Eviction - Heap based eviction (HeapLRUStatistics) Thread stats (VMThreadStats) Client-to-Server communication (ClientSendStats) Disk Store stats (DiskStoreStatistics) There are also these errors in statistics names (doc not aligned with code): "Locator (LocatorStatistics)" should be "Locator (LocatorStats)" "Region Entry Eviction – Size-based (LRUStatistics)" should be "Region Entry Eviction – Size-based (MemLRUStatistics)" "Continuous Querying (CQStatistics)" should be "Continuous Querying (CqQueryStats)" "Gateway Queue (GatewayStatistics)" should be "Gateway Sender statistics (GatewaySenderStatistics)" "Function Execution (FunctionServiceStatistics)" should be "Function Execution (FunctionStatistics)" Also, I cannot find references in the code about the "Delta Propagation (DeltaPropagationStatistics)" described in the documentation</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.statistics.list.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="666" opendate="2015-12-14 00:00:00" fixdate="2015-12-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update awaitility dependency from 1.6.5 to 1.7.0</summary>
      <description>com.jayway.awaitility:awaitility releases are now up to 1.7.0. We should update our dependency from 1.6.5 to 1.7.0.Awaitility is used in IntegrationTests and DistributedTests for awaiting and asserting on asynchronous conditions.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
    </fixedFiles>
  </bug>
  <bug id="6954" opendate="2019-7-10 00:00:00" fixdate="2019-7-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>GatewaySenderMXBean wrongly reports state</summary>
      <description>After creating gateways senders and receivers between two geode clusters replications is established. After restart gateway receiver, list gateways command shows that everything is connected and replication works.But when checking gateway sender state over JMX with GatewaySenderMXBean and checking isConnected() I got false, but should be true as it is connected.Steps to reproduce issue: create two sites (geode-examples/wan) check GW sender stats with jconsole (Connected = true) stop GW receiver on the remote site (Connected = false) put some entry (it will be in the queue waiting for connection) start GW receiver on the remote site (Connected = false) replication is established, the event is processed to the remote site (Connected = false, should be true)</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.management.WANManagementDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.GatewaySenderMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.ConcurrentSerialGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ConcurrentParallelGatewaySenderEventProcessor.java</file>
    </fixedFiles>
  </bug>
  <bug id="8055" opendate="2020-4-30 00:00:00" fixdate="2020-5-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>can not create index on sub regions</summary>
      <description>When trying to use "create index" command in gfsh to create index on sub regions, we get the following message:"Sub-regions are unsupported"Pre-1.6, we were able to do that.</description>
      <version>1.7.0,1.8.0,1.9.2,1.10.0,1.11.0,1.12.0</version>
      <fixedVersion>1.12.1,1.13.0,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.management.internal.configuration.ClusterConfigurationIndexWithFromClauseDUnitTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommand.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.CacheConfigTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheConfig.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
