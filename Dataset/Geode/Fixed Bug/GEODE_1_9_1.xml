<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="GEODE">
  <bug id="7242" opendate="2019-9-24 00:00:00" fixdate="2019-9-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incorrect documentation for AVG and SUM aggregate functions</summary>
      <description>The documentation for OQL Aggregate Functions states that AVG and SUM always return either a Float or Double, but the actual return type can be any of Integer, Long, Float or Double.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.select.aggregates.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="7261" opendate="2019-10-1 00:00:00" fixdate="2019-10-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode V1 admin rest does not start with Spring 5.x jars on the classpath</summary>
      <description>The geode-web war includes several spring jars, but does not include spring-core. With Jetty debug logging enabled we can see the following error: [vm0] 07:30:50.469 [RMI TCP Connection(1)-127.0.0.1] DEBUG org.eclipse.jetty.servlet.ServletHandler - EXCEPTION [vm0] java.lang.NoClassDefFoundError: org/springframework/core/ErrorCoded [vm0] at java.lang.ClassLoader.defineClass1(Native Method) [vm0] at java.lang.ClassLoader.defineClass(ClassLoader.java:763) [vm0] at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142) [vm0] at java.net.URLClassLoader.defineClass(URLClassLoader.java:468) [vm0] at java.net.URLClassLoader.access$100(URLClassLoader.java:74) [vm0] at java.net.URLClassLoader$1.run(URLClassLoader.java:369) [vm0] at java.net.URLClassLoader$1.run(URLClassLoader.java:363)In addition, the war file also include commons-logging which causes the war logging to be redirected to stderr.</description>
      <version>1.9.0,1.9.1,1.10.0,1.11.0</version>
      <fixedVersion>1.9.2,1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-web.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="7268" opendate="2019-10-2 00:00:00" fixdate="2019-11-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make gfsh alter region command similar to the API behavior</summary>
      <description>currently the gfsh command for alter region assigns the buckets to the region, before starting with the PR update config. This is not what the API does while altering a region This was requirement from the Lucene reindex story but that feature follows a different code path and will the be not affected if the assign buckets command was removed from the gfsh command. This also results in soft hangs when there are a lot of regions and gateway senders.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="7272" opendate="2019-10-3 00:00:00" fixdate="2019-10-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docker image to build and preview the user guide</summary>
      <description>For building the Geode user guide it is needed to install Ruby and Bookbinder. It would be useful to have a docker image to do this task.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-book.README.md</file>
      <file type="M">dev-tools.docker.docs.view-docs.sh</file>
      <file type="M">dev-tools.docker.docs.Dockerfile</file>
      <file type="M">dev-tools.docker.docs.build-image-common.sh</file>
      <file type="M">dev-tools.docker.docs.build-docs.sh</file>
      <file type="M">dev-tools.docker.base.Dockerfile</file>
    </fixedFiles>
  </bug>
  <bug id="7273" opendate="2019-10-3 00:00:00" fixdate="2019-10-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode transaction should throw TransactionDataNotColocatedException if the transaction is on replicate region then partitioned region</summary>
      <description>A client transaction should fail with TransactionDataNotColocatedException instead of TransactionDataRebalancedException if transaction worked on the replicate regions first and then worked on an entry in a partitioned region where primary bucket is on another node.User should not work on replicate region first in a transaction, but Geode should throw correct exception as well.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXStateProxyImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tx.PartitionedTXRegionStub.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.ClientServerNotColocatedTransactionDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7414" opendate="2019-11-7 00:00:00" fixdate="2019-6-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SSL ClientHello server_name extension</summary>
      <description>We propose to add theÂ server_name extension to the ClientHello message. The extension would hold the distributed system ID of the site where the connection originated from.This will be used to determine internal geode communication, and communication between geode sites.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionConfigJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLConfigurationFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">gradle.japicmp.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.build.gradle</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.net.SSLParameterExtension.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.SSLConfig.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.net.SSLSocketParameterExtensionIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7417" opendate="2019-11-7 00:00:00" fixdate="2019-11-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI checks do not trigger on geode-book changes</summary>
      <description>due to new branch protection rules, it is now impossible to submit geode-book changes as the required checks will never firewe should remove the exclusion so checks can run</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="7421" opendate="2019-11-7 00:00:00" fixdate="2019-3-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability: can deploy jar by REST API for Management</summary>
      <description>WHAT 1. can deploy jar file by REST API 2. from feature point , it will cover current 'gfsh deploy' 3. if two files have same file name, the later wins 4. can recognize version pattern. "filename-version&amp;#91;-label&amp;#93;.jar" . filename=&amp;#91;a-zA-Z/-&amp;#93;+, not single "", not end with "" version=&amp;#91;0-9/.&amp;#93;*, not single ".", not end with "." label=&amp;#91;a-zA-Z0-9&amp;#93;*such as: &lt;commons-beanutils-1.9.3.jar&gt; is a later version of &lt;commons-beanutils-1.9.2.jar&gt;, will deploy. &lt;commons-beanutils-1.9.3.jar&gt; is a same version of &lt;commons-beanutils-1.9.3-SNAPSHOT.jar&gt;, the later wins &lt;commons-beanutils-1.9.3-RELEASE.jar&gt; is a same version of &lt;commons-beanutils-1.9.3-SNAPSHOT.jar&gt;, the later wins &lt;commons-beanutils-1.9.1.jar&gt; is an earlier version of &lt;commons-beanutils-1.9.2.jar&gt;, will block it. 5. if there is a version part in the file name, we will deploy them without append "#1" part to the file name 6. can accept "group"</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RebalanceIntegrationTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.DeploymentTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.EntityInfo.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.assertions.ClusterManagementListResultAssert.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.web.http.support.HttpRequesterTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.ExportClusterConfigurationCommandTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.web.shell.HttpOperationInvoker.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.web.http.support.HttpRequester.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.functions.DeployFunction.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.realizers.DeploymentRealizerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.mutators.DeploymentManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.domain.ConfigurationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.LocatorClusterManagementServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceDeployedJarTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-management-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.functions.CacheRealizationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.DeploymentRealizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.ConfigurationRealizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.DeploymentManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.ConfigurationManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.domain.Configuration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DeployedJar.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.DeployedJarTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.codeAnalysis.AnalyzeManagementSerializablesJUnitTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ListIndexOnPartitionRegionTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.DeployToMultiGroupDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.DeploymentManagementDUnitTest.java</file>
      <file type="M">geode-web-management.src.main.webapp.WEB-INF.management-servlet.xml</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.security.RestSecurityConfiguration.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.DeploymentManagementController.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.internal.ClientClusterManagementServiceTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.ClientClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.Deployment.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.AbstractConfiguration.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.RestTemplateClusterManagementServiceTransport.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.CommandType.java</file>
    </fixedFiles>
  </bug>
  <bug id="7424" opendate="2019-11-8 00:00:00" fixdate="2019-2-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability: can create index in RESTAPI for Management</summary>
      <description>WHAT 1. endpoint: &amp;#91;POST&amp;#93; `management/v1/indexes` 1. parameter: "name(indexID)", "expression", "region", "type", "group" 1. expected result: create index by specified parameters 1. type: default is "range" 1. region is required 1. name(indexID) is required 1. expression is required 1. "hash" type is not supported. Note1. request body```JSON{ "name": "Foo6name3", "expression": "name3", "regionPath": "/Foo6", âgroupâï¼ââï¼ âtypeâï¼ââ range|key }```</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.IndexValidatorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.IndexValidator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.IndexConfigManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.ManagementLoggingFilter.java</file>
    </fixedFiles>
  </bug>
  <bug id="7425" opendate="2019-11-8 00:00:00" fixdate="2019-2-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability: can delete index in RESTAPI for Management</summary>
      <description>WHAT 1. endpoint: &amp;#91;DELETE&amp;#93; `management/v1/indexes` 1. parameter: "name", "region", "group" 1. expected result: delete index as specified parameters</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.RegionManagementController.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementControllerSpringTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.ClusterManagementSecurityRestIntegrationTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementRealizationResult.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.IndexValidatorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.realizers.IndexRealizerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.mutators.IndexConfigManagerTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.IndexValidator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.IndexRealizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.IndexConfigManager.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ListIndexManagementDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7428" opendate="2019-11-8 00:00:00" fixdate="2019-2-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>adjustment: set the log-lvl of REST API of Management from info to debug</summary>
      <description>WHY 1. too many logs in the log file, that is a customer concern 2. broker team call RESTAPI for Management for healthcheck per 10 seconds. it will produce too many logs. WHAT 1. change every log which is produced by RESTAPI for management to be DEBUG.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.ManagementLoggingFilter.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.rest.controllers.ClusterManagementRestLoggingTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ManagementRequestLoggingDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7431" opendate="2019-11-9 00:00:00" fixdate="2019-11-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>benchmarks may fail due to infrastructure quota</summary>
      <description>For example, https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/Benchmark/builds/677Â failed because there were already 3 benchmarks jobs running at the timeSince the quota is 40 and each benchmark uses 12, we should restrict max_in_flight to 3 for this job</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="7432" opendate="2019-11-11 00:00:00" fixdate="2019-11-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix spelling error in Aggregate Function Tests</summary>
      <description>Some of the aggregate function tests define/use the method parametrizedSetUp, it should be parameterizedSetUp instead.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.aggregate.SumIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.aggregate.MinIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.aggregate.MaxIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.aggregate.CountIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.aggregate.AvgIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7436" opendate="2019-11-11 00:00:00" fixdate="2019-2-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability: can recognize version part when deploy function jar in GFSH</summary>
      <description>WHAT 1. recognize version part of file name, for the file to be deployed 1. can recognize version pattern. "filename-version&amp;#91;label&amp;#93;.jar" . filename=&amp;#91;a-zA-Z/-&amp;#93;+, not single "", not end with "" version=&amp;#91;0-9/.&amp;#93;*, not single ".", not end with "." label=&amp;#91;-/.&amp;#93;{1}&amp;#91;a-zA-Z0-9&amp;#93;*such as: &lt;commons-beanutils-1.9.3.jar&gt; is a later version of &lt;commons-beanutils-1.9.2.jar&gt;, will deploy. &lt;commons-beanutils-1.9.3.jar&gt; is a same version of &lt;commons-beanutils-1.9.3-SNAPSHOT.jar&gt;, the later wins &lt;commons-beanutils-1.9.3-RELEASE.jar&gt; is a same version of &lt;commons-beanutils-1.9.3-SNAPSHOT.jar&gt;, the later wins</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ClusterConfigurationLoaderTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceJunitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.JarDeployerFileTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.DeployedJarTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DeploySemanticVersionJarDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.domain.ConfigurationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportClusterConfigurationCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.ClassPathLoaderTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.domain.Configuration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.UndeployFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListDeployedFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DeployFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DeployCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.JarDeployer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DeployJarChildFirstClassLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DeployedJar.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.ClassPathLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ClusterConfigurationLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceService.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.JarDeployerIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.JarDeployerDeadlockTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.DeployedJarJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.ClassPathLoaderJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.ClassPathLoaderIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.ClassPathLoaderDeployTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.backup.IncrementalBackupIntegrationTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DeployWithGroupsDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DeployCommandRedeployDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8076" opendate="2020-5-5 00:00:00" fixdate="2020-5-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>simplify redis concurrency code</summary>
      <description>Currently when doing a redis set operation, for example sadd, the code has to be careful to deal with other threads concurrently changing the same set.It does this in a number of ways but this could be simplified by having a higher level layer of the code ensure that for a given redis "key" operations will done in sequential order.This can be done safely in a distributed cluster because we now route all operations for a given key to the server that is storing the primary copy of data for that key.I spike was done and we found that this form of locking did not hurt performance. Since it allows simpler code that is less likely to have subtle concurrency issues we plan on merging the work done in the spike into the product.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.RegionProviderJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SRemExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SRandMemberExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SPopExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SMoveExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SMembersExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SIsMemberExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SetOpExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SCardExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SAddExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.RedisSet.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.GeodeRedisSetWithFunctions.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.DeltaSet.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.CommandFunction.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
    </fixedFiles>
  </bug>
</bugrepository>
