<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="GEODE">
  <bug id="1988" opendate="2016-10-11 00:00:00" fixdate="2016-11-11 01:00:00" resolution="Cannot Reproduce">
    <buginformation>
      <summary>CI failure: ParallelWANPropagationClientServerDUnitTest.testParallelPropagationWithClientServer fails with NoSubscriptionServersAvailableException: Primary discovery failed.</summary>
      <description>:geode-core:distributedTestorg.apache.geode.internal.cache.tier.sockets.RegisterInterestKeysPRDUnitTest &gt; testRegisterCreatesInvalidEntry FAILED org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.internal.cache.tier.sockets.RegisterInterestKeysDUnitTest$$Lambda$18/601024495.run in VM 3 running on Host 583dcf0e97d9 with 4 VMs Caused by: java.lang.AssertionError: failed while registering interest Caused by: org.apache.geode.cache.NoSubscriptionServersAvailableException: org.apache.geode.cache.NoSubscriptionServersAvailableException: Primary discovery failed. Caused by: org.apache.geode.cache.NoSubscriptionServersAvailableException: Primary discovery failed.7578 tests completed, 1 failed, 588 skipped</description>
      <version>1.3.0,1.4.0</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug id="1993" opendate="2016-10-12 00:00:00" fixdate="2016-10-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>value returned through /region/key rest service needs to be post processed</summary>
      <description>The new rest security did not use post processor before returning the value back to the client.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.PDXPostProcessorDUnitTest.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.CommonCrudController.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.security.CQPostProcessorDunitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.security.CQPDXPostProcessorDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.security.CQClientAuthDunitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorServerConfigurationRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.PostProcessorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClusterConfigWithoutSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.PeerAuthenticatorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.SecurityClusterConfigDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.SecurityWithoutClusterConfigDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.StartServerAuthorizationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorServerStartupRule.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.configuration.LuceneClusterConfigurationDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.Customer.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPIsQueryAndFEJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledValue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.DefaultQuery.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.IntegratedSecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.PostProcessor.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.PdxLocalQueryVersionedClassDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.ClientServerFunctionExecutionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.functions.TestFunction.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.NoShowValue1PostProcessor.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.PDXPostProcessor.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.AbstractBaseController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.FunctionAccessController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.PdxBasedCrudController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.QueryAccessController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.RestSecurityService.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.util.JsonWriter.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.AccessControlMBeanJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.CacheServerMBeanAuthenticationJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.CacheServerMBeanAuthorizationJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.CacheServerMBeanShiroJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.CliCommandsSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.DataCommandsSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.DiskStoreMXBeanSecurityJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GatewayReceiverMBeanSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GatewaySenderMBeanSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshCommandsPostProcessorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshCommandsSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshShellConnectionRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.JavaRmiServerNameTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.JMXConnectionConfiguration.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.JsonAuthorizationCacheStartRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.LockServiceMBeanAuthorizationJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.ManagerMBeanAuthorizationJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.MBeanSecurityJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.MBeanServerConnectionRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.MemberMBeanSecurityJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.ResourcePermissionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.ShiroCacheStartRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.AbstractSecureServerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.IntegratedClientAuthDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.NoShowValue1PostProcessorDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1996" opendate="2016-10-12 00:00:00" fixdate="2016-5-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>There are confusing references to "multicast" for locators ports</summary>
      <description>The documentation seems to contain confusing terms when it comes to locators and locators ports. In the documentation, we state that port the locator runs on as a multicast port. This is incorrect as the multicast port is configured by the property `mcast-port`.http://geode.apache.org/docs/guide/11/configuring/running/firewalls_ports.html - mentions By default, if not otherwise specified, Geode locators use the default multicast port 10334.We might have to scour the documentation for the term multicast and validate that this is the correct usage for that scenario</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.connect.html.md.erb</file>
      <file type="M">geode-docs.reference.statistics.statistics.list.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.udp.communication.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.socket.communication.tcpip.p2p.handshake.timeouts.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.socket.communication.setting.socket.buffer.sizes.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.socket.communication.have.enough.sockets.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.socket.communication.ephemeral.tcp.port.limits.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.sockets.and.gateways.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.multicast.communication.runtime.considerations.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.firewalls.ports.html.md.erb</file>
      <file type="M">geode-docs.basic.config.config.concepts.distributed.system.member.configuration.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="307" opendate="2015-9-2 00:00:00" fixdate="2015-9-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Failure from SnapshotDUnitTest due to listener installed in a previous test</summary>
      <description>com.gemstone.gemfire.cache.snapshot.SnapshotDUnitTest.testCacheExportFilterExceptionStacktracecom.gemstone.gemfire.cache.DiskAccessException at com.gemstone.gemfire.internal.cache.persistence.PersistentRVVRecoveryDUnitTest$3.afterWriteGCRVV(PersistentRVVRecoveryDUnitTest.java:206) at com.gemstone.gemfire.internal.cache.DiskStoreObserver.endWriteGCRVV(DiskStoreObserver.java:51) at com.gemstone.gemfire.internal.cache.Oplog.writeGCRVV(Oplog.java:4982) at com.gemstone.gemfire.internal.cache.DiskStoreImpl.writeRVVGC(DiskStoreImpl.java:4798) at com.gemstone.gemfire.internal.cache.DiskRegion.writeRVVGC(DiskRegion.java:841) at com.gemstone.gemfire.internal.cache.InitialImageOperation.saveReceivedRVV(InitialImageOperation.java:1140) at com.gemstone.gemfire.internal.cache.InitialImageOperation.getFromOne(InitialImageOperation.java:465) at com.gemstone.gemfire.internal.cache.DistributedRegion.getInitialImageAndRecovery(DistributedRegion.java:1429) at com.gemstone.gemfire.internal.cache.DistributedRegion.initialize(DistributedRegion.java:1215) at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.createVMRegion(GemFireCacheImpl.java:3111) at com.gemstone.gemfire.pdx.internal.PeerTypeRegistration.initialize(PeerTypeRegistration.java:179) at com.gemstone.gemfire.pdx.internal.TypeRegistry.initialize(TypeRegistry.java:103) at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.initializePdxRegistry(GemFireCacheImpl.java:1354) at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.initializeDeclarativeCache(GemFireCacheImpl.java:1292) at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.init(GemFireCacheImpl.java:1131) at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.create(GemFireCacheImpl.java:758) at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.create(GemFireCacheImpl.java:778) at com.gemstone.gemfire.cache.CacheFactory.create(CacheFactory.java:170) at com.gemstone.gemfire.cache.CacheFactory.create(CacheFactory.java:217) at com.gemstone.gemfire.cache30.CacheTestCase.createCache(CacheTestCase.java:105) at com.gemstone.gemfire.cache30.CacheTestCase.getCache(CacheTestCase.java:315) at com.gemstone.gemfire.cache30.CacheTestCase.getCache(CacheTestCase.java:290) at com.gemstone.gemfire.cache.snapshot.SnapshotDUnitTest$4.call(SnapshotDUnitTest.java:183) at com.gemstone.gemfire.cache.snapshot.SnapshotDUnitTest.forEachVm(SnapshotDUnitTest.java:212) at com.gemstone.gemfire.cache.snapshot.SnapshotDUnitTest.loadCache(SnapshotDUnitTest.java:200) at com.gemstone.gemfire.cache.snapshot.SnapshotDUnitTest.setUp(SnapshotDUnitTest.java:156) at junit.framework.TestCase.runBare(TestCase.java:139) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:129) at junit.framework.TestSuite.runTest(TestSuite.java:252) at junit.framework.TestSuite.run(TestSuite.java:247) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50) at sun.reflect.GeneratedMethodAccessor173.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106) at sun.reflect.GeneratedMethodAccessor172.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) at java.lang.Thread.run(Thread.java:745)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.dunit.DistributedTestCase.java</file>
    </fixedFiles>
  </bug>
  <bug id="3079" opendate="2017-6-14 00:00:00" fixdate="2017-9-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure new protocol shuts down cleanly</summary>
      <description>As a user of the new protocol, I need to be sure my servers shut down cleanly in order to manage my grid. Ensure new protocol shuts down cleanly and does not impact server restarts/shutdowns.Specifically, investigate:Implement at least the terminateNow(), emergencyClose(), and cleanup() methods (and do a check for others) on NewClientServerConnection. Make sure that we handle each one in a similar fashion to how the legacy ServerConnection does.AcceptorImpl and its callers use loadEmergencyClasses() to make sure that classes which are needed for a proper shutdown are loaded when the Cache starts, and prior to shutdown (which could be an OOM or similar situation).In the parent call (I think AcceptorImpl) add a call to our own method, and call the same method on any classes we depend on.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.GenericProtocolServerConnectionTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="3184" opendate="2017-7-11 00:00:00" fixdate="2017-4-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Clean up session replication testing</summary>
      <description>Would be good to review the code base and make sure methods are properly organized.Also, the previous session replication testing is still in place in the extensions folder. This needs to be reviewed and any tests not covered by cargo should be transferred over into the new cargo replication testing. An example of something within this that needs to be cleaned up would be QueryCommand and CommandServlet classes, which are both in the extensions/geode-modules and extensions/session-testing-war projects. the QueryCommand and Command Servlet class within the extensions/geode-modules project could be removed if the previous session tests were all ported to cargo and then removed.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.session.tests.TomcatInstall.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.session.tests.TomcatContainer.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.session.tests.TomcatClientServerTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.session.tests.ServerContainer.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.session.tests.GenericAppServerInstall.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.session.tests.GenericAppServerContainer.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.session.tests.GenericAppServerClientServerTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.session.tests.ContainerManager.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.session.tests.ContainerInstall.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.session.tests.Client.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.session.tests.CargoTestBase.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.DeltaSession.java</file>
    </fixedFiles>
  </bug>
  <bug id="3185" opendate="2017-7-11 00:00:00" fixdate="2017-9-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure (windows): org.apache.geode.internal.cache.BackupJUnitTest, 3 tests failing with java.lang.AssertionError: Null entry</summary>
      <description>org.apache.geode.internal.cache.BackupJUnitTest &gt; testBackupAndRecover FAILED java.lang.AssertionError: Null entry 512 at org.junit.Assert.fail(Assert.java:88) at org.junit.Assert.assertTrue(Assert.java:41) at org.apache.geode.internal.cache.BackupJUnitTest.validateEntriesExist(BackupJUnitTest.java:354) at org.apache.geode.internal.cache.BackupJUnitTest.backupAndRecover(BackupJUnitTest.java:229) at org.apache.geode.internal.cache.BackupJUnitTest.testBackupAndRecover(BackupJUnitTest.java:126)org.apache.geode.internal.cache.BackupJUnitTest &gt; testCompactionDuringBackup FAILED java.lang.AssertionError: Null entry 0 at org.junit.Assert.fail(Assert.java:88) at org.junit.Assert.assertTrue(Assert.java:41) at org.apache.geode.internal.cache.BackupJUnitTest.validateEntriesExist(BackupJUnitTest.java:354) at org.apache.geode.internal.cache.BackupJUnitTest.testCompactionDuringBackup(BackupJUnitTest.java:309)org.apache.geode.internal.cache.BackupJUnitTest &gt; testBackupAndRecoverOldConfig FAILED java.lang.AssertionError: Null entry 512 at org.junit.Assert.fail(Assert.java:88) at org.junit.Assert.assertTrue(Assert.java:41) at org.apache.geode.internal.cache.BackupJUnitTest.validateEntriesExist(BackupJUnitTest.java:354) at org.apache.geode.internal.cache.BackupJUnitTest.backupAndRecover(BackupJUnitTest.java:229) at org.apache.geode.internal.cache.BackupJUnitTest.testBackupAndRecoverOldConfig(BackupJUnitTest.java:136)</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.RestoreScript.java</file>
    </fixedFiles>
  </bug>
  <bug id="3192" opendate="2017-7-11 00:00:00" fixdate="2017-7-11 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>PutAll on new protocol informs client which keys couldn&amp;#39;t be inserted</summary>
      <description>When a putAll request fails to insert a given key/value pair the corresponding response will contain information about which keys/values failed to be inserted.Note: We left this out of GEODE-2997 which initially introduces putAll because we want to get something to test with early.Implementation Note: The new protocol uses Region#putAll which returns void, but the old protocol uses basicBridgePutAll, which we don't understand but which seems to give more information. Having a look at the old protocol's putAll command could be useful.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.RoundTripCacheConnectionJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.PutRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.PutAllRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.proto.region.API.proto</file>
      <file type="M">geode-protobuf.src.main.proto.clientProtocol.proto</file>
      <file type="M">geode-protobuf.src.main.proto.basicTypes.proto</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.codec.BooleanCodec.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.utilities.ProtobufUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.utilities.ProtobufResponseUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.Success.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.Result.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetRegionRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.OperationContext.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.Failure.java</file>
    </fixedFiles>
  </bug>
  <bug id="3275" opendate="2017-7-20 00:00:00" fixdate="2017-10-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Setting a LuceneSerializer should not cause PDX values to be deserialized</summary>
      <description>A LuceneSerializer should be given a PdxInstance, and not a deserialized value if the users value is serialized pdx data.Acceptance:If an the class for the pdx object is not on the classpath for the geode server, the serializer should still receive a pdx instance, without hitting any ClassNotFound exceptions.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexMaintenanceIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="3838" opendate="2017-10-13 00:00:00" fixdate="2017-10-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>roll project version to 1.4.0</summary>
      <description>roll Geode to v1.4.0</description>
      <version>1.4.0</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.Version.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializer.java</file>
      <file type="M">geode-book.redirects.rb</file>
      <file type="M">geode-book.config.yml</file>
    </fixedFiles>
  </bug>
  <bug id="3839" opendate="2017-10-13 00:00:00" fixdate="2017-8-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>log warning when --cache-xml-file is used with cluster config</summary>
      <description>When a server started using gfsh&gt;start server --cache-xml-file=file.xml the contents of cache.xml are overridden with contents of cluster config. For example: When I specify --server-port=0 the default cache server port is used. An ephemeral port is never created. Changing a region type from REPLICATE (cluster config) to PARTITION (cache.xml) retains the region as REPLICATE. Changing the persistence mode of a region retains the original setting; i.e. what is set in cluster config.When a user tries to start a server using cache.xml file, we should log a warning message saying that cluster xml is going to take precedence over contents of cache.xml. We should also change the gfsh help message to reflect this.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.StartServerCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="384" opendate="2015-10-6 00:00:00" fixdate="2015-10-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Failing tests: PRColocatedEquiJoinDUnitTest.testPRLocalQuerying and QueryREUpdateInProgressJUnitTest.testQueriesOnREWhenUpdateInProgress</summary>
      <description>Refactor and fix for GEODE-280 led to broken tests due to comparison of struct type not being accounted for.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.query.functional.StructSetOrResultsSet.java</file>
    </fixedFiles>
  </bug>
  <bug id="3843" opendate="2017-10-16 00:00:00" fixdate="2017-1-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh shutdown error message suggests non-existent option</summary>
      <description>1. Start gfsh.2. Start a locator.3. Issue the 'shutdown' command.gfsh prompts for 'do you really want to...', then issues an error message alerting you to the lack of data nodes. OK so far.This is followed by a line recommending that you use '--shutdown-locators' to stop your locator.Should be '--include-locators=true'.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserParsingTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ShutdownCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="3846" opendate="2017-10-17 00:00:00" fixdate="2017-12-17 01:00:00" resolution="Duplicate">
    <buginformation>
      <summary>create a 1.3.0 test set in geode-old-versions</summary>
      <description>When 1.3 is available on maven we need to create a test set for backward compatibility testing</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.Version.java</file>
    </fixedFiles>
  </bug>
  <bug id="3847" opendate="2017-10-17 00:00:00" fixdate="2017-10-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to AssertJ 3.8.0</summary>
      <description>Geode currently uses AssertJ 3.6.2. Version 3.8.0 was released on 2017-05-21&amp;#91;1&amp;#93;. I'd like to upgrade to 3.8.0.&amp;#91;1&amp;#93; http://joel-costigliola.github.io/assertj/assertj-core-news.html#assertj-core-3.8.0</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
    </fixedFiles>
  </bug>
  <bug id="3885" opendate="2017-10-20 00:00:00" fixdate="2017-10-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Backup refactoring broke legacy interface</summary>
      <description>Refactoring of the backup code accidentally broke functionality in the (deprecated) AdminDistributedSystem.</description>
      <version>1.4.0</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.BackupStatusImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.AdminDistributedSystemImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="3891" opendate="2017-10-23 00:00:00" fixdate="2017-3-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cannot enable ciphers for REST interface</summary>
      <description>SSL ciphers, required for REST APIs (either admin or dev) may not work depending on whether they have previously been excluded by default in Jetty.See this SO conversation: https://stackoverflow.com/questions/46828937/make-geode-use-tlsv1</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.SSLUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.JettyHelper.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPIsWithSSLDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="3894" opendate="2017-10-23 00:00:00" fixdate="2017-10-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create HandshakeRequest</summary>
      <description>Make Handshake a HandshakeRequest that is contained in a Message the same way other requests are handled.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.ProtobufShiroAuthenticatorJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.ProtobufTestExecutionContext.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.AuthorizationIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.AuthenticationIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.acceptance.CacheOperationsJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.acceptance.CacheMaxConnectionJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.acceptance.CacheConnectionJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.proto.clientProtocol.proto</file>
      <file type="M">geode-protobuf.src.main.proto.authentication.API.proto</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.utilities.ProtobufResponseUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.security.ProtobufShiroAuthorizer.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.security.ProtobufShiroAuthenticator.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.security.ProtobufSecurityLookupService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.security.processors.AuthenticationSecurityProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.registry.ProtobufOperationContextRegistry.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.ProtobufProtocolService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.ProtobufOpsProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.ProtobufLocatorPipeline.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.ProtobufCachePipeline.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.operations.security.AuthenticationRequestOperationHandler.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.security.SecurityProcessor.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.security.processors.NoAuthenticationSecurityProcessor.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.security.processors.AuthorizationSecurityProcessor.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.security.NoOpAuthorizer.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.security.NoOpAuthenticator.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.security.InvalidConfigAuthenticator.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.security.Authorizer.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.security.Authenticator.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.ProtocolErrorCode.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.MessageExecutionContext.java</file>
    </fixedFiles>
  </bug>
  <bug id="3895" opendate="2017-10-23 00:00:00" fixdate="2017-11-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Handshake/Message version byte</summary>
      <description>Add an extra protocol version byte so that the first two bytes will (initially) be 110 followed by 1. The '1' byte will be increased when the HandshakeRequest or Message changes in such a way that we can't make the handshake backward-compatible.Ensure that clients on newer versions will have their connections terminated.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.AuthorizationIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.AuthenticationIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.acceptance.LocatorConnectionDUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.acceptance.CacheOperationsJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.acceptance.CacheMaxConnectionJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.acceptance.CacheConnectionTimeoutJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.acceptance.CacheConnectionJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.ProtobufProtocolService.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ServerConnectionFactoryTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServiceLoadingFailureException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerConnectionFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.client.protocol.ClientProtocolServiceLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.client.protocol.ClientProtocolService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpServer.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
    </fixedFiles>
  </bug>
  <bug id="3898" opendate="2017-10-24 00:00:00" fixdate="2017-11-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Indexes created through the `create defined indexes` command are not persisted to the cluster configuration service</summary>
      <description>When using the cluster configuration service, indexes created through gfsh define index + gfsh create defined indexes are not persisted to the cluster configuration service.Steps to reproduce: Start a locator with enable-cluster-configuration-enabled=true. Start a server with enable-cluster-configuration-enabled=true. Create a sample region: gfsh create region --name=TestRegion --type=REPLICATE. Define an index: gfsh define index --name=index1 --expression=value1 --region=TestRegion. Created the defined indexes: gfsh create defined indexes. Restart the cluster. Execute list indexes. The command returns no indexes.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.fake.Fakes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateDefinedIndexesFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommand.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="3914" opendate="2017-10-26 00:00:00" fixdate="2017-10-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow gfsh test rules to use more than 4 VMs</summary>
      <description>We're currently capping the test rules at using 4 VMs although the underlying dunit machinery caters for an an arbitrary number.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorServerStartupRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="3915" opendate="2017-10-26 00:00:00" fixdate="2017-2-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>supply arguments over gfsh while initializing Declarable</summary>
      <description>User implementations of the Declarable interface may want to pass in arguments while the class is being initialized. We should provide ability to pass these arguments from gfsh.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserParsingTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShutdownCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.codeAnalysis.AnalyzeSerializablesJUnitTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.GfshParser.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionFunctionArgs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionAlterFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.RegionCommandsUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommand.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.alter.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="3920" opendate="2017-10-27 00:00:00" fixdate="2017-11-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add test for validating lucene 6 to 7 upgrade</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneSearchWithRollingUpgradeDUnit.java</file>
    </fixedFiles>
  </bug>
  <bug id="3922" opendate="2017-10-30 00:00:00" fixdate="2017-3-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Help Tab is broken in Pulse</summary>
      <description>Help Tab is broken in PulseSteps to reproduce the issue: 1. gfsh&gt;start locator --name=locator2. gfsh&gt;start pulse3. Login with default username and password as admin4. Click on Help Tab http://geode.apache.org/docs/guide/tools_modules/pulse/chapter_overview.htmlNot FoundThe requested URL /docs/guide/tools_modules/pulse/chapter_overview.html was not found on this server.For geode version 1.0: http://geode.apache.org/docs/guide/10/tools_modules/pulse/chapter_overview.htmlFor geode version 1.1: http://geode.apache.org/docs/guide/11/tools_modules/pulse/chapter_overview.htmlFor geode version 1.2: Overview could be found at : http://geode.apache.org/docs/guide/12/tools_modules/pulse/pulse-overview.htmlThe pattern is:geode version x.y:URL is: http://geode.apache.org/docs/guide/XY/tools_modules/pulse/pulse-overview.htmlPlease make this URL dynamic based on geode version number.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.main.webapp.regionDetail.html</file>
      <file type="M">geode-pulse.src.main.webapp.queryStatistics.html</file>
      <file type="M">geode-pulse.src.main.webapp.properties.gemfire.properties</file>
      <file type="M">geode-pulse.src.main.webapp.memberDetails.html</file>
      <file type="M">geode-pulse.src.main.webapp.dataBrowser.html</file>
      <file type="M">geode-pulse.src.main.resources.gemfire.properties</file>
    </fixedFiles>
  </bug>
  <bug id="3926" opendate="2017-10-30 00:00:00" fixdate="2017-4-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene Query should throw an exception while lucene index is being built on existing region</summary>
      <description>When GEODE-3928 is complete, we will have a process to index existing data in a region when a lucene index is added. That process may take some time. While indexing is going on queries should not block for a long period of time or return incorrect results. Instead the query should throw an exception indicating that the index does not exist/is not built yet.Acceptance:Queries executed while indexing is going on throw an exception, rather than blocking or returning incorrect results.Implementation Details:GEODE-3928 is about modifying computeRepository to actually do the indexing. Queries also call compute repository, so they will block until computeRepository is done.To avoid blocking, we can make computeRepo to return an IndexRepository in an "building" state. That index repo could contain an asynchronous task that is actually indexing the data. Until the asynchronous task is complete, the IndexRepostory could throw exceptions from query operations. This has the advantage of making sure that whenever computeRepository is called, we always at least start or make sure there is a task running to index the data.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.RebalanceWithRedundancyWithRegionCreatedBeforeReindexDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesReindexDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.RawLuceneRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.PartitionedRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneServiceImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneQueryImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexRecoveryHAIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexForPartitionedRegionTest.java</file>
      <file type="M">geode-lucene.src.main.resources.org.apache.geode.internal.sanctioned-geode-lucene-serializables.txt</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.RawLuceneRepositoryManager.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.PartitionedRepositoryManager.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneServiceImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneRegionListener.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneRawIndex.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneQueryImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexForPartitionedRegion.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexCreationInProgressException.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.InternalLuceneIndex.java</file>
    </fixedFiles>
  </bug>
  <bug id="3928" opendate="2017-10-30 00:00:00" fixdate="2017-2-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>After calling Internal API to create lucene index after region is created, data in the region should be included in the lucene index</summary>
      <description>After GEODE-3030 is complete, we will have an internal API to create an index on an existing region.After someone calls that API on all members that have the user's region we should index all of the data in the existing region.Acceptance:After calling the API to add the index to an existing region, at some point in the future calling a query on the region should include all of the entries that were in the existing region.Implementation Details:We think this should be implemented by modifying computeRepository so that it goes through the following steps: If there is no COMPLETE file in the fileAndChunkRegion for this bucket Iterate over the contents of the user region and add them to the lucene index Write a COMPLETE file to the fileAndChunkRegion Return the IndexRepository If there is a COMPLETE file, just return the IndexRepository.Note: When this task is complete, it's possible queries may block until the indexing is complete. We will address that issue in GEODE-3926</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexMaintenanceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.management.LuceneManagementDUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.IndexRepositoryFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.filesystem.FileSystem.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.RebalanceWithRedundancyDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesWithReindexFlagEnabledIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesWithReindexFlagEnabledDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesWithReindexFlagEnabledClientDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesWithRegionCreatedBeforeReindexIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesWithRegionCreatedBeforeReindexDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesWithRegionCreatedBeforeReindexClientDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesReindexDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesReindexClientDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesAccessorBase.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.PartitionedRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneServiceImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="3930" opendate="2017-10-30 00:00:00" fixdate="2017-11-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add method to InternalLuceneService to add an index to an existing region</summary>
      <description>This method should add the lucene index to the region on the member that it is invoked on.This will involve adding the file region and adding the async event listener to the region using an attributes mutator.If this method is called a second time with the same region and lucene index, the call should fail with LuceneIndexExistsException.Acceptance:After calling this method on all members that have the user region, the lucene index should be useable - it should index new updates and users should be able to query for data. Existing data does not need to be indexed as part of this JIRA.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneServiceImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexFactoryImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.xml.LuceneIndexCreation.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneServiceImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneRegionListener.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexFactoryImpl.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="3936" opendate="2017-10-31 00:00:00" fixdate="2017-5-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cleanup ThreadUtil</summary>
      <description>It's not useful anymore.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.lang.ThreadUtilsJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.log4j.AlertAppender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.ThreadUtils.java</file>
    </fixedFiles>
  </bug>
  <bug id="3953" opendate="2017-11-3 00:00:00" fixdate="2017-11-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene create index can fail due to comparison of fieldnames as an array</summary>
      <description>Note that Arrays.equals() fails if the entries are in a different order ... but order here is not significant and we should not fail the profile comparison // Verify fields are the same if (!Arrays.equals(remoteProfile.getFieldNames(), getFieldNames())) { return LocalizedStrings.LuceneService_CANNOT_CREATE_INDEX_0_ON_REGION_1_WITH_FIELDS_2_BECAUSE_ANOTHER_MEMBER_DEFINES_THE_SAME_INDEX_WITH_FIELDS_3 .toString(getIndexName(), regionPath, Arrays.toString(getFieldNames()), Arrays.toString(remoteProfile.getFieldNames())); }</description>
      <version>1.3.0,1.4.0</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexCreationProfileJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexCreationProfile.java</file>
    </fixedFiles>
  </bug>
  <bug id="3957" opendate="2017-11-6 00:00:00" fixdate="2017-11-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Strengthen anti-SYNCOOKIES host machine requirement</summary>
      <description>Current verbiage in "Host Machine Requirements" recommends disabling TCP SYN cookies on Linux platforms.Reports from users indicate that this should be mandatory, not merely optional.Suggest firewall protection to compensate for the absence of TCP SYN cookie security.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.monitor.tune.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.getting.started.system.requirements.host.machine.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="3961" opendate="2017-11-7 00:00:00" fixdate="2017-12-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Show metrics disregards specified --categories for CacheServer (--port option related) metrics</summary>
      <description>Those CacheServer metric categories (query, notification, and cache-server) are not checked against those categories specified by the user and are only checked against the cache server bean being non-null (implicitly: that the port was provided and valid).For unification and consistency, these categories should not be displayed when the --categories option is specified and excludes them.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShowMetricsCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.management.internal.cli.commands.golden-help-offline.properties</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.assertions.CommandResultAssert.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShowMetricsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShowMetricsCommandJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.Bug48571DUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.GfshParser.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ShowMetricsCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="3962" opendate="2017-11-8 00:00:00" fixdate="2017-11-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use Peer to Peer communication to request cluster configuration</summary>
      <description>We should not use a TCPClient to request the CC from the locator when a server is starting up.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigurationServiceDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfig.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.rollingupgrade.RollingUpgrade2DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.LocatorJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.messages.ConfigurationResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.messages.ConfigurationRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.handlers.ConfigurationRequestHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DSFIDFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ClusterConfigurationLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ClusterConfigurationService.java</file>
    </fixedFiles>
  </bug>
  <bug id="3964" opendate="2017-11-9 00:00:00" fixdate="2017-12-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add another severe-alert option</summary>
      <description>Since suspect processing only commences when the ack-severe-alert-threshold is reached it would be nice to have yet another alert if that processing failed to kick out the slow-to-respond member and a thread is stuck for a long time waiting for a reply.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ReplyProcessor21.java</file>
    </fixedFiles>
  </bug>
  <bug id="3967" opendate="2017-11-10 00:00:00" fixdate="2017-2-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>if put hits concurrent modification exception should still notify serial gateway sender</summary>
      <description>In serial gateway sender, the event arrives at secondary will be put into unprocessedMap and wait for event from primary queue to distribute over, then remove it from the unprocessedMap.If the put at primary member (member with primary queue) failed with CME, the event in unprocessedMap will never be removed.</description>
      <version>None</version>
      <fixedVersion>1.5.0,1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.DistributedAckRegionCCEDUnitTest.java</file>
      <file type="M">geode-wan.src.upgradeTest.java.org.apache.geode.cache.wan.WANRollingUpgradeDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderEventProcessorJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache30.DistributedAckRegionCCEDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractUpdateOperation.java</file>
    </fixedFiles>
  </bug>
  <bug id="3969" opendate="2017-11-10 00:00:00" fixdate="2017-11-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protobuf protocol requests includes a CallbackArgs field</summary>
      <description>We eventually want to support allowing clients to pass arguments to cache listeners in their requests, but this functionality is not going to be present in v1. Having this field is therefore misleading and it should be removed.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.main.proto.v1.clientProtocol.proto</file>
      <file type="M">geode-protobuf.src.main.proto.v1.basicTypes.proto</file>
    </fixedFiles>
  </bug>
  <bug id="3973" opendate="2017-11-13 00:00:00" fixdate="2017-11-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Do not start cluster configuration service asynchronously</summary>
      <description>starting CC asynchronously creates a gap between a locator startup and cluster configuration service being started and ready, which leads to some servers starting up not getting any cluster configuration.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalLocator.java</file>
    </fixedFiles>
  </bug>
  <bug id="3974" opendate="2017-11-13 00:00:00" fixdate="2017-2-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>improve permission for Internal functions</summary>
      <description>Internal functions needs to be updated to require appropriate permissionswe need to make sure:1) all the current functions that are marked as InternalEntity are not be called legitimately by a client api.2) make all internal functions (functions that implements both Function and InternalEntity) should require All permission.3) stretch goal: have a testing mechanism that would ensure new Function's permission is set correctly.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ExportLogsFunction.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneClientSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.execute.CoreFunctionSecurityTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.JmxManagerLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PRContainsValueFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionCreateFunction.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.util.RegionSizeFunction.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.util.BootstrappingFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.results.LuceneGetPageFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.distributed.WaitUntilFlushedFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.distributed.LuceneQueryFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.directory.DumpDirectoryFiles.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneSearchIndexFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneListIndexFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneDestroyIndexFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneDescribeIndexFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneCreateIndexFunction.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.ResourcePermissionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.functions.GetClusterConfigurationFunctionTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.security.ResourcePermissions.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.functions.RecreateCacheFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.functions.GetRegionNamesFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.functions.DownloadJarFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.UnregisterFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.UndeployFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.SizeExportLogsFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ShutDownFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ShowMissingDiskStoresFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionDestroyFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionAlterFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RebalanceFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.NetstatFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.MembersForRegionFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.MemberRegionFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListIndexFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListFunctionFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListDurableCqNamesFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListDiskStoresFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListDeployedFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListAsyncEventQueuesFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GetSubscriptionQueueSizeFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GetStackTracesFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GetRegionsFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GetRegionDescriptionFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GetMemberInformationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GetMemberConfigInformationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewaySenderDestroyFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewaySenderCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GarbageCollectionFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.FetchSharedConfigurationStatusFunction.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.util.CreateRegionFunction.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.util.TouchPartitionedRegionEntriesFunction.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.util.TouchReplicatedRegionEntriesFunction.java</file>
      <file type="M">extensions.geode-modules.src.test.java.org.apache.geode.modules.util.ModuleFunctionsSecurityTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JDBCConnectorFunctionsSecurityTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.deadlock.GemFireDeadlockDetector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.MemberFunctionStreamingMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.snapshot.ClientExporter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.snapshot.RegionSnapshotServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.snapshot.WindowedExporter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.QueryDataFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ExportDataFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.FetchRegionAttributesFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ImportDataFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.UserFunctionExecution.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.functions.GetClusterConfigurationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.ResourcePermission.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.FunctionServiceBase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.functions.TestFunction.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientExecuteFunctionAuthDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.assertions.CommandResultAssert.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.test.LuceneFunctionSecurityTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcCliFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.util.FindRestEnabledServersFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.AlterRuntimeConfigFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ChangeLogLevelFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CloseDurableClientFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CloseDurableCqFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ContinuousQueryFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateAsyncEventQueueFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateDefinedIndexesFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateDiskStoreFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateIndexFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DataCommandFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DeployFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DescribeDiskStoreFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DestroyAsyncEventQueueFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DestroyDiskStoreFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DestroyIndexFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ExportConfigFunction.java</file>
    </fixedFiles>
  </bug>
  <bug id="3985" opendate="2017-11-16 00:00:00" fixdate="2017-5-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>rolling upgrade tests accidentally rolls vms back to the current version</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.cache.wan.WANRollingUpgradeDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneSearchWithRollingUpgradeDUnit.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.tier.sockets.ClientServerMiscBCDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.DUnitLauncher.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ClientServerMiscDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.rollingupgrade.RollingUpgradeDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.rollingupgrade.RollingUpgrade2DUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="3995" opendate="2017-11-17 00:00:00" fixdate="2017-11-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Rename server_api.proto</summary>
      <description>The server_api.proto file contains the message definitions for locator messages, making the name rather misleading (these are actually the only messages the cache server can't handle).</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAvailableServersOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.LocatorConnectionDUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.proto.v1.server.API.proto</file>
      <file type="M">geode-protobuf.src.main.proto.v1.clientProtocol.proto</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufRequestUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAvailableServersOperationHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="3996" opendate="2017-11-17 00:00:00" fixdate="2017-11-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CacheWriter methods that call EntryEvent.getOldValue may see it return null even when a non-null old value exists</summary>
      <description>If a region configures eviction with overflow to disk then it is possible that a CacheWriter method that calls EntryEvent.getOldValue may see it return null. This happens when the old value for that entry was evicted to disk.In the case of a CacheWriter, geode should in this case ask for the old value that is on disk and return it.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.EntryEventImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.SearchLoadAndWriteProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EntryEventImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.entries.AbstractRegionEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug id="4000" opendate="2017-11-20 00:00:00" fixdate="2017-11-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add 1.3.0 version to geode-old-versions gradle file</summary>
      <description>Adding 1.3.0 version tag in geode-old-versions for backward compatibility and rolling upgrade tests.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-old-versions.build.gradle</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexCreationProfile.java</file>
      <file type="M">geode-lucene.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
    </fixedFiles>
  </bug>
  <bug id="4002" opendate="2017-11-21 00:00:00" fixdate="2017-11-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Consolidate cache element descriptions</summary>
      <description>The &lt;cache&gt; Element Reference is implemented as two largely redundant files. This creates multiple paths to apparently identical, but duplicate, targets and confuses navigation. Consolidate into one file, fix up embedded references, update left-side subnav.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gfe.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.elements.ref.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.firewalls.ports.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4007" opendate="2017-11-22 00:00:00" fixdate="2017-12-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Authentication failures/bad handshake should close the socket from the server side</summary>
      <description>Ensure after failed auth/handshake the server (after sending error response) closes the socket and cleans up.While going over the code together, it looks like maybe authentication errors simply leave the socket in a state where it is expecting another authentication request. It might be better to close the socket from the server side for various error conditions like a failed handshake or authentication.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.HandshakeRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionNamesRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAvailableServersOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.HandshakeIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.CacheConnectionTimeoutJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufOpsProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufLocatorPipeline.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufCachePipeline.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.security.AuthenticationRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.HandshakeRequestOperationHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.GenericProtocolServerConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.client.protocol.ClientProtocolProcessor.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.state.ConnectionStateProcessor.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.state.ConnectionShiroAuthorizingStateProcessor.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.security.exception.IncompatibleAuthenticationMechanismsException.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.operations.OperationHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="4009" opendate="2017-11-22 00:00:00" fixdate="2017-1-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use connection pooling JDBC library for PDX-JDBC</summary>
      <description>We need a JDBC library for connection pooling, etc.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcCliFunctionTest.java</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcLoaderIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcServiceConfigurationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlGeneratorIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TestConfigService.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TestableConnectionManager.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.PreparedStatementCacheTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.JdbcConnectorServiceTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.ConnectionManagerUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.ConnectionConfigurationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcClusterConfigDistributedTest.java</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">geode-assembly.src.test.resources.expected.jars.txt</file>
      <file type="M">geode-connectors.build.gradle</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.AbstractJdbcCallback.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.FunctionContextArgumentProvider.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcCliFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.ConnectionConfiguration.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.ConnectionManager.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.InternalJdbcConnectorService.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.JdbcConnectorService.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.PreparedStatementCache.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcServiceConfiguration.java</file>
      <file type="M">geode-connectors.src.main.resources.META-INF.services.org.apache.geode.internal.cache.CacheService</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.AbstractJdbcCallbackTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandDunitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.FunctionContextArgumentProviderTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="409" opendate="2015-10-16 00:00:00" fixdate="2015-4-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI cleanup</summary>
      <description>CI cleanup master ticketThis is part of the "squashathon" effort to clean up CI failures.Tickets fixed as part of this effort should have this ticket as parent.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache30.CacheXml40DUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheServerCreation.java</file>
    </fixedFiles>
  </bug>
  <bug id="4090" opendate="2017-12-13 00:00:00" fixdate="2017-12-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use an enum for Error.errorCode, rather than an int32</summary>
      <description>Currently, the error codes in the new protocol are returned as integers and are documented on the wiki inhttps://cwiki.apache.org/confluence/display/GEODE/Error+Codes and in the code in ProtocolErrorCodes.Protobuf has support for enums, we should use an enum instead of an int32 for the error code so that the list of possible errors is part of the protobuf specification. This will make it clearer to the user what each error code means and will prevent them from having to put the constants in their own code.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.AuthorizationIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.LocatorConnectionDUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufResponseUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.basicTypes.proto</file>
    </fixedFiles>
  </bug>
  <bug id="4096" opendate="2017-12-14 00:00:00" fixdate="2017-1-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Race Condition between ConcurrentSerialGatewaySenderEventProcessor stopper thread and the _dispatchBatch method for the connection global variable.</summary>
      <description>Order of execution for this race condition to occur. _dispatchBatch is trying to dispatch a batch of events but was somehow unsuccessful It silently decides that the remote server may not be ready so it wants to retry Same time we decide to stop the SerialGatewaySenderEventProcessor hence we call the Stopper Thread. Before the threads are started on all the senders / dispatchers it sets the isStopped flag for the SerialGatewaySenderEventProcessor to true. Then the _dispatchBatch method which was in retry mode makes a getConnection call to get the connection. This method does a check on the SerialGatewaySenderEventProcessor's isStopped flag. It sees that the flag is set and this return null. This null is stored in the global variable connection for the dispatcher. Now that the _dispatchBatch method calls sees that the connection is null it should raise an exception and destroyConnection. Meanwhile there was a AckThreadReader that was running and the stopper thread for the event processor wants to stop it, but since the connection global variable was set to null by the get connection method call by _disptachBatch. Hence the shutDownAckReaderThreadConnection is executed on null and hence the AckReaderThread continues to keep running - being stuck on socketRead0. But the problem is that the AckReaderThread acquire a connectionLifeCycle.readLock. to readAcknowledgement, but the destroyConnection calls from the stopper thread and _dispatchBatch's exception handling code needs a connectionLifeCycleLock.writeLock which they can't because readLock is held by the AckReaderThread, causing a deadlock</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventRemoteDispatcher.java</file>
    </fixedFiles>
  </bug>
  <bug id="4097" opendate="2017-12-14 00:00:00" fixdate="2017-1-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>No way to give private fix for geode-core jar</summary>
      <description>No way to give private fix for geode-core jar in different path , always taken hard coded from %GEODE_HOME/lib</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.StartMemberUtils.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.StartMemberUtilsTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4106" opendate="2017-12-15 00:00:00" fixdate="2017-12-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Backup of DiskStoreIF file fails when relative path provided as destination</summary>
      <description>Backup functions correctly when absolute paths are used and when relative paths are used, only the DiskStoreIF file is copied to the incorrect location.</description>
      <version>1.4.0</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.FileSystemBackupDestinationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.FileSystemBackupDestination.java</file>
    </fixedFiles>
  </bug>
  <bug id="4109" opendate="2017-12-15 00:00:00" fixdate="2017-12-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>if the experimental eviction code is being used then a log message should say so</summary>
      <description>If the new experimental eviction code is configured, then a log message should say so.This will help diagnose issues caused by using the experimental feature.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.LRUListWithAsyncSorting.java</file>
    </fixedFiles>
  </bug>
  <bug id="411" opendate="2015-10-16 00:00:00" fixdate="2015-10-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: ConnectDisconnectDUnitTest.testManyConnectsAndDisconnects</summary>
      <description>Failed 4 times in the last 30 runs. Stability: 86 %Error Messagejava.lang.AssertionError: Suspicious strings were written to the log during this run.Fix the strings or use DistributedTestCase.addExpectedException to ignore.-----------------------------------------------------------------------Found suspect string in log4j at line 14com.gemstone.gemfire.distributed.DistributedSystemDisconnectedException: This connection to a distributed system has been disconnected.-----------------------------------------------------------------------Found suspect string in log4j at line 27com.gemstone.gemfire.distributed.DistributedSystemDisconnectedException: This connection to a distributed system has been disconnected.Stacktracejava.lang.AssertionError: Suspicious strings were written to the log during this run.Fix the strings or use DistributedTestCase.addExpectedException to ignore.-----------------------------------------------------------------------Found suspect string in log4j at line 14com.gemstone.gemfire.distributed.DistributedSystemDisconnectedException: This connection to a distributed system has been disconnected.-----------------------------------------------------------------------Found suspect string in log4j at line 27com.gemstone.gemfire.distributed.DistributedSystemDisconnectedException: This connection to a distributed system has been disconnected. at org.junit.Assert.fail(Assert.java:88) at dunit.standalone.DUnitLauncher.closeAndCheckForSuspects(DUnitLauncher.java:307) at dunit.DistributedTestCase.cleanupAllVms(DistributedTestCase.java:784) at dunit.DistributedTestCase.realTearDown(DistributedTestCase.java:759) at dunit.DistributedTestCase.tearDown(DistributedTestCase.java:737) at com.gemstone.gemfire.internal.cache.ConnectDisconnectDUnitTest.testManyConnectsAndDisconnects(ConnectDisconnectDUnitTest.java:75)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.DistributionManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="4111" opendate="2017-12-18 00:00:00" fixdate="2017-12-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add log message for cache service creation</summary>
      <description>Help for debugging</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4112" opendate="2017-12-18 00:00:00" fixdate="2017-12-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replace FunctionAdapter with Function in geode-lucene module</summary>
      <description>Replace FunctionAdapter with Function in geode-lucene moduleNOTE: As a fix for this issue SerialVersionUIDs were added. Java serialization isn't really used for these functions but that the serialVersionUID was added anyways. It was a pre-emptive measure.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.resources.org.apache.geode.internal.sanctioned-geode-lucene-serializables.txt</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneSearchIndexFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneListIndexFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneDescribeIndexFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneCreateIndexFunction.java</file>
    </fixedFiles>
  </bug>
  <bug id="4113" opendate="2017-12-18 00:00:00" fixdate="2017-1-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enhance experimental Java driver to support putting and getting objects</summary>
      <description>The Protobuf message-based Java experimental driver currently only supports putting and getting primitive Java values. It would be cool if it supported generic, run-of-the-mill Java objects and JSON.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-experimental-driver.src.test.java.org.apache.geode.experimental.driver.ValueEncoderTest.java</file>
      <file type="M">geode-experimental-driver.src.test.java.org.apache.geode.experimental.driver.RegionIntegrationTest.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ValueEncoder.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.Region.java</file>
    </fixedFiles>
  </bug>
  <bug id="4114" opendate="2017-12-18 00:00:00" fixdate="2017-12-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove all instances of GemFireCacheImpl.getInstance from geode-lucene</summary>
      <description>Remove all instances of GemFireCacheImpl.getInstance from geode-lucene and replace with the local instance of cache present in the test</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.xml.LuceneIndexXmlParserIntegrationJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.management.LuceneManagementDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexRecoveryHAIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4129" opendate="2017-12-19 00:00:00" fixdate="2017-1-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh list members command feels inconsistent</summary>
      <description>list members now also shows the 'coordinator':gfsh&gt;list members Name | Id------------ | ------------------------------------------------Coordinator: | 10.118.19.26(locator1:7903:locator)&lt;ec&gt;&lt;v0&gt;:1024locator1 | 10.118.19.26(locator1:7903:locator)&lt;ec&gt;&lt;v0&gt;:1024server1 | 10.118.19.26(server1:7933)&lt;v1&gt;:1025server2 | 10.118.19.26(server2:8075)&lt;v2&gt;:1026This just looks untidy.Here server-2 is part of a group:gfsh&gt;list members --group=group1 Name | Id------------ | ------------------------------------------------Coordinator: | 10.118.19.26(locator1:7903:locator)&lt;ec&gt;&lt;v0&gt;:1024server2 | 10.118.19.26(server2:8075)&lt;v2&gt;:1026But the 'coordinator' is not part of that group. Again, inconsistent and untidy.I would prefer the relevant member to be highlight somehow as a coordinator. For example:gfsh&gt;list members Name | Id------------ | ------------------------------------------------locator1 | 10.118.19.26(locator1:7903:locator)&lt;ec&gt;&lt;v0&gt;:1024 [coordinator]server1 | 10.118.19.26(server1:7933)&lt;v1&gt;:1025server2 | 10.118.19.26(server2:8075)&lt;v2&gt;:1026Or perhaps better yet would be to introduce a separate list coordinator command.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.assertions.CommandResultAssert.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.MultiGfshDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListMembersCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ListMembersCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.GfshCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="4139" opendate="2017-12-20 00:00:00" fixdate="2017-2-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve gradle task checkMissedTest to inspect annotations</summary>
      <description>To avoid repetition of this mistake, a safeguard should be in place to require the correct runner wherever the corresponding @RunWith appears.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.test.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.TestPropertiesWriter.groovy</file>
      <file type="M">buildSrc.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="4147" opendate="2017-12-21 00:00:00" fixdate="2017-1-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add variability to client rebalance logic</summary>
      <description>Clients periodically check with the locator to see if they would be better connected to another server, for load balancing purposes (ClientReplacementRequest). Currently the delay is always the same, which can cause clients to flip flop between servers that the locator thinks are more or less loaded. Adding variability to the delay will help reduce the amount of coordinated hammering.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.pooling.ConnectionManagerJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.ConnectionPoolImplJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.ConnectionManagerImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4148" opendate="2017-12-21 00:00:00" fixdate="2017-1-21 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Locator threshold before rebalancing clients</summary>
      <description>Clients periodically send ClientReplacementRequests to the locator to rebalance the number of client connections across the cluster. When multiple clients are getting rebalanced, the lack of any buffering can cause clients to move between servers without changing the loading. For example, if there are an odd number of clients on an even number of servers, the locator may ping-pong clients between the server that has one more client than the others.The locator should wait until some threshold to move clients, to avoid ping-ponging and unnecessary connection churn.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.LocatorLoadSnapshotJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.properties.html</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.LocatorLoadSnapshot.java</file>
    </fixedFiles>
  </bug>
  <bug id="4154" opendate="2017-12-21 00:00:00" fixdate="2017-12-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>GEODE-4154 : Remove GemFireCacheImpl.getInstance() calls from geode-wan module.</summary>
      <description>Refactor the wan module code so that it doesn't use calls to GemFireCacheImpl.getInstance() to get access to the cache.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.management.WANManagementDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.management.internal.pulse.TestRemoteClusterDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug id="4160" opendate="2017-12-22 00:00:00" fixdate="2017-1-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh describe jdbc-connections errors describing a valid connection</summary>
      <description>Steps to reproduce issue:1) create a jdbc-connection2) describe that jdbc-connection3) you get an error even though the mapping exists (via list mapping, etc)gfsh&gt;describe jdbc-mapping --region=employeeCould not process command due to error. Error while processing command &lt;describe jdbc-mapping --region=employee&gt; Reason : nullgfsh&gt;create jdbc-connection --name=connection1 --url="jdbc:derby://localhost:1527/MyDbTest"(Experimental)Member | Status------ | -----------------------------------------s1 | Created JDBC connection connection1 on s1gfsh&gt;describe jdbc-connection --name=connection1Could not process command due to error. Error while processing command &lt;describe jdbc-connection --name=connection1&gt; Reason : nullgfsh&gt;</description>
      <version>1.4.0</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.RegionMappingBuilderTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlGeneratorIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.ElementTypeTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.ConnectionConfigBuilderTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlGenerator.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.xml.ElementType.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.RegionMappingBuilder.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.ConnectionConfiguration.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.ConnectionConfigBuilder.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommand.java</file>
      <file type="M">gradle.dependency-versions.properties</file>
    </fixedFiles>
  </bug>
  <bug id="4161" opendate="2017-12-22 00:00:00" fixdate="2017-1-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh describe jdbc-mapping command errors describing a valid mapping</summary>
      <description>Steps to reproduce issue:1) create a jdbc-mapping2) describe that jdbc-mapping3) you get an error even though the mapping exists (via list mapping, etc)gfsh&gt;describe jdbc-mapping --region=employeeCould not process command due to error. Error while processing command &lt;describe jdbc-mapping --region=employee&gt; Reason : null</description>
      <version>1.4.0</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="417" opendate="2015-10-16 00:00:00" fixdate="2015-3-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>deprecated ssl-* gemfire properties should not be allowed with cluster-ssl-* properties</summary>
      <description>The ssl-* gemfire properties were deprecated in 8.0 in favor of the cluster-ssl-* properties. If you specify both then you are supposed to get an error if they are not the same. But instead you only get the error if they are both not equal to the default value. For the properties whose values are String the equality check does an identity check against the default value which will never be true. For the properties whose values are Boolean the equality check is ok but the logic is wrong. It should be asking if both of them were set to the same value; not if both of them are not equal to the default.The same problem exists for jmx-manager-ssl which was deprecated in favor of jmx-manager-ssl-enabled.Another related problem is that if you do get the exception it has a message that says "...Prefer way is to use" which is bad english.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.SSLConfigJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.SSLConfigIntegrationJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.AbstractConfig.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.DistributionConfigImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4170" opendate="2017-12-27 00:00:00" fixdate="2017-1-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make index docs easier to locate</summary>
      <description>The sections on indexing are buried under the Querying section called Advanced Querying. They shouldn't be.Promote the indexing section to a first class subsection of Querying.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.querying.basics.query.basics.html.md.erb</file>
      <file type="M">geode-docs.developing.querying.basics.chapter.overview.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4180" opendate="2018-1-2 00:00:00" fixdate="2018-1-2 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Tests should not mutate system property "user.dir"</summary>
      <description>We temporarily set the member-timeout to max value to allow us to step through some code in the debugger. We noticed that if we run all 4 tests together, tests 2-3 were hanging. After removing the member-timeout setting, we found that all of the tests after the 1st test are all trying to connect to the non-existent locator from the 1st test. This causes all tests after the 1st test to take ~2 seconds longer to run when run together than if you run them by individually.After digging a bit more, I discovered that even though the test is deleting the entire directory containing the locator0view.dat file, some code somewhere must still have an open connection or stream to it because its contents from the 1st test continue to be read for each subsequent test even after the file itself and its directory have been deleted.I believe some static code somewhere is keeping a reference to the file and/or its contents. So each test continues to read the same content even though the file no longer exists on disk.The following shows the relevant messages logged by 4 tests in a DUnit test that shows tests 2-3 find and using the file and/or its contents from test 1. Note that I used IntelliJ debugger to confirm that this occurs even after test 1 deletes the file and its directory.1) createsRegionMappingOnceOnly[vm0] [info 2017/12/29 10:59:30.826 PST &lt;RMI TCP Connection(1)-192.168.1.18&gt; tid=20] recovery file not found: /var/folders/28/m__9dv1906n60kmz7t71wm680000gn/T/junit543979839291182624/vm-0-createsRegionMappingOnceOnly/locator0view.dat[vm0] [info 2017/12/29 10:59:31.135 PST &lt;RMI TCP Connection(1)-192.168.1.18&gt; tid=20] received new view: View[192.168.1.18(58582:locator)&lt;ec&gt;&lt;v0&gt;:32770|0] members: [192.168.1.18(58582:locator)&lt;ec&gt;&lt;v0&gt;:32770][vm0] old view is: null2) createsRegionMappingWithMinimumParams[vm0] [info 2017/12/29 10:59:34.580 PST &lt;RMI TCP Connection(1)-192.168.1.18&gt; tid=20] Peer locator recovering from /var/folders/28/m__9dv1906n60kmz7t71wm680000gn/T/junit1076413749574999935/vm-0-createsRegionMappingWithMinimumParams/locator0view.dat[vm0] [info 2017/12/29 10:59:34.580 PST &lt;RMI TCP Connection(1)-192.168.1.18&gt; tid=20] Peer locator recovered membership is View[192.168.1.18(58582:locator)&lt;ec&gt;&lt;v0&gt;:32770|-1] members: [192.168.1.18(58580)&lt;v1&gt;:32771{lead}]3) createsRegionMappingInService[vm0] [info 2017/12/29 10:59:40.538 PST &lt;RMI TCP Connection(1)-192.168.1.18&gt; tid=20] Peer locator recovering from /var/folders/28/m__9dv1906n60kmz7t71wm680000gn/T/junit8253504123764665822/vm-0-createsRegionMappingInService/locator0view.dat[vm0] [info 2017/12/29 10:59:40.538 PST &lt;RMI TCP Connection(1)-192.168.1.18&gt; tid=20] Peer locator recovered membership is View[192.168.1.18(58582:locator)&lt;ec&gt;&lt;v0&gt;:32770|-1] members: [192.168.1.18(58580)&lt;v1&gt;:32771{lead}]4) recreatesCacheFromClusterConfigWithRegionMapping[vm0] [info 2017/12/29 10:59:46.495 PST &lt;RMI TCP Connection(1)-192.168.1.18&gt; tid=20] Peer locator recovering from /var/folders/28/m__9dv1906n60kmz7t71wm680000gn/T/junit1056719983598139185/vm-0-recreatesCacheFromClusterConfigWithRegionMapping/locator0view.dat[vm0] [info 2017/12/29 10:59:46.496 PST &lt;RMI TCP Connection(1)-192.168.1.18&gt; tid=20] Peer locator recovered membership is View[192.168.1.18(58582:locator)&lt;ec&gt;&lt;v0&gt;:32770|-1] members: [192.168.1.18(58580)&lt;v1&gt;:32771{lead}]</description>
      <version>1.4.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ExportConfigCommandDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeConfigCommandDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRuntimeCommandDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.MemberStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.tests.ClusterStartupRuleCanSpecifyOlderVersionsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.MemberVM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.ClusterStartupRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.MultiGfshDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigWithSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigStartMemberDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.NetstatDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsShareConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsWithMemberGroupDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ConnectCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterCompressorDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsStatsOverHttpDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.util.MergeLogsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsOnServerManagerDUnit.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocatorRecoveryJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ProductUseLog.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocator.java</file>
    </fixedFiles>
  </bug>
  <bug id="4181" opendate="2018-1-2 00:00:00" fixdate="2018-10-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update to JUnit 5.x</summary>
      <description>In addition to the expected benefits that come with new versions, updating to JUnit 5.x should allow us to remove the workaround required in GEODE-1350 / GEODE-4122.If migration guides are to be believed, migration from JUnit 4.x to 5.x in and of itself should not be difficult. However, interaction with Mockito and PowerMock appears to be significantly different and will require investigation.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.wan.misc.CommonAsyncEventQueueDUnitTest.java</file>
      <file type="M">gradle.jmh.gradle</file>
      <file type="M">geode-web-management.build.gradle</file>
      <file type="M">geode-apis-compatible-with-redis.build.gradle</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.runners.GeodeParamsRunner.java</file>
      <file type="M">static-analysis.pmd-rules.build.gradle</file>
      <file type="M">geode-rebalancer.build.gradle</file>
      <file type="M">geode-jmh.build.gradle</file>
      <file type="M">geode-concurrency-test.build.gradle</file>
      <file type="M">geode-common.build.gradle</file>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.internal.ProcessManager.java</file>
      <file type="M">gradle.test.gradle</file>
      <file type="M">geode-web.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ExportConfigCommandDUnitTest.java</file>
      <file type="M">geode-web.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DescribeConfigCommandDUnitTest.java</file>
      <file type="M">geode-web.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.AlterRuntimeCommandDistributedTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.management.internal.configuration.ClusterConfigurationIndexWithFromClauseDUnitTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.wancommand.CreateGatewayReceiverCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.parallel.ParallelWANPropagationDUnitTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.GatewaySenderOverflowMBeanAttributesDistributedTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.AsyncEventQueueOverflowMBeanAttributesDistributedTest.java</file>
      <file type="M">geode-membership.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.GMSUtilTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexCreationProfileJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.commands.LuceneIndexCommandsJUnitTest.java</file>
      <file type="M">geode-lucene.src.integrationTest.java.org.apache.geode.cache.lucene.LuceneQueriesPersistenceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.integrationTest.java.org.apache.geode.cache.lucene.LuceneIndexCreationPersistenceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.integrationTest.java.org.apache.geode.cache.lucene.LuceneIndexCreationIntegrationTest.java</file>
      <file type="M">geode-lucene.src.integrationTest.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsIntegrationTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.RebalanceWithRedundancyWithRegionCreatedBeforeReindexDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.RebalanceWithRedundancyDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.RebalanceDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.PaginationDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.MixedObjectIndexDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneQueriesWithReindexFlagEnabledDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneQueriesWithReindexFlagEnabledClientDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneQueriesWithRegionCreatedBeforeReindexDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneQueriesWithRegionCreatedBeforeReindexClientDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneQueriesReindexDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneQueriesReindexClientDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneQueriesDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneQueriesClientDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneIndexDestroyDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneIndexCreationOnFixedPRDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneIndexCreationDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneCommandsSecurityWithRegionCreatedBeforeIndexDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneCommandsSecurityDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneClientSecurityWithRegionCreatedBeforeIndexDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneClientSecurityPostProcessingDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.LuceneClientSecurityDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.internal.cli.DestroyLuceneIndexCommandsDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.ExpirationDUnitTest.java</file>
      <file type="M">geode-lucene.src.distributedTest.java.org.apache.geode.cache.lucene.EvictionDUnitTest.java</file>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.ConcurrencyRuleTest.java</file>
      <file type="M">geode-junit.build.gradle</file>
      <file type="M">geode-gfsh.src.integrationTest.java.org.apache.geode.management.internal.cli.commands.VersionCommandJUnitTest.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.RebalanceMembersColocationTest.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.OfflineDiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ListMembersCommandDUnitTest.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ExportStackTraceCommandDUnitTest.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.AlterTimeToLiveExpirationOnProxyRegionDUnitTest.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.AlterQueryServiceCommandWithSecurityDUnitTest.java</file>
      <file type="M">geode-dunit.src.test.java.org.apache.geode.test.dunit.internal.VMEventNotifierTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.AlterQueryServiceCommandDistributedTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.internal.cache.PutAllClientServerDistributedTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.internal.QueryConfigurationServiceConstraintsDistributedTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.InvalidatePartitionedRegionMessageDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.DestroyPartitionedRegionMessageDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.util.HostNameTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.GatewaySenderEventImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.region.entry.RegionEntryFactoryBuilderJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PRHARedundancyProviderTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.rebalance.PartitionedRegionLoadModelJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.control.RegionRedundancyStatusImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.QueryConfigurationServiceImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.QCompilerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.AttributeDescriptorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.AbstractCompiledValueTestJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.ExecuteRegionFunctionSingleHopOpRetryTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.ExecuteRegionFunctionOpTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.ExecuteRegionFunctionOpRetryTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.ExecuteRegionFunctionOpImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.ExecuteFunctionOpRetryTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.TXExpirationIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.SetOperationTXJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.pdx.JSONFormatterBasicJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.statistics.StatArchiveHandlerIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.jta.SetOperationJTAJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.wan.asyncqueue.AsyncEventQueueValidationsJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.map.DestroyEntryDuringCloseIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.event.DistributedEventTrackerIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.backup.FileSystemBackupWriterTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.AvailablePortHelperIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.JoinQueriesIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.QueryServiceXmlIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.index.IndexManagerIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.GroupJunctionIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.DefaultQuerySecurityIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.CompiledGroupBySelectIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.aggregate.AggregateFunctionQueryBaseIntegrationTest.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.catalina.AbstractCommitSessionValveIntegrationTest.java</file>
      <file type="M">extensions.geode-modules.src.integrationTest.java.org.apache.geode.modules.session.catalina.callback.LocalSessionCacheLoaderIntegrationTest.java</file>
      <file type="M">extensions.geode-modules.src.integrationTest.java.org.apache.geode.modules.session.catalina.callback.LocalSessionCacheWriterIntegrationTest.java</file>
      <file type="M">extensions.geode-modules.src.integrationTest.java.org.apache.geode.modules.session.catalina.callback.SessionExpirationCacheListenerIntegrationTest.java</file>
      <file type="M">extensions.geode-modules.src.integrationTest.java.org.apache.geode.modules.session.catalina.internal.DeltaSessionAttributeEventBatchIntegrationTest.java</file>
      <file type="M">extensions.geode-modules.src.integrationTest.java.org.apache.geode.modules.session.catalina.internal.DeltaSessionDestroyAttributeEventIntegrationTest.java</file>
      <file type="M">extensions.geode-modules.src.integrationTest.java.org.apache.geode.modules.session.catalina.internal.DeltaSessionStatisticsIntegrationTest.java</file>
      <file type="M">extensions.geode-modules.src.integrationTest.java.org.apache.geode.modules.session.catalina.internal.DeltaSessionUpdateAttributeEventIntegrationTest.java</file>
      <file type="M">extensions.geode-modules.src.integrationTest.java.org.apache.geode.modules.session.catalina.JvmRouteBinderValveIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.sortedset.AbstractZLexCountIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.sortedset.AbstractZRangeByLexIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.sortedset.AbstractZRemRangeByLexIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.sortedset.AbstractZRemRangeByRankIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.sortedset.AbstractZRevRangeByLexIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.sortedset.AbstractZRevRangeByScoreIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.sortedset.AbstractZRevRangeIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.data.RedisSortedSetTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.netty.CoderTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandForProxyRegionDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlToPdxInstanceCreatorTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlToPdxInstanceTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache.CreateAndLocalDestroyInTXRegressionTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache.query.internal.aggregate.AggregateFunctionsQueryDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache.query.internal.index.InitializeIndexEntryDestroyQueryDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache.query.internal.QueryConfigurationServiceConstraintsDistributedTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache.RegionExpirationDistributedTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.backup.BackupDistributedTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.ClientCachingProxyRegionDistributedTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.ClientDeserializationCopyOnReadRegressionTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.control.RebalanceOperationComplexDistributedTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.control.RebalanceOperationDistributedTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.control.RestoreRedundancyOperationDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.DestroyRegionDuringGIIDistributedTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.ClientFunctionTimeoutRegressionTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.FunctionOnRegionRetryDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.FunctionOnServerRetryDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.FunctionOnServersRetryDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRSetOperationJTADUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRSetOperationTXDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.PartitionedRegionCloseDistributedTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.partitioned.PersistentColocatedPartitionedRegionDistributedTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.partitioned.PersistentPartitionedRegionDistributedTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.persistence.PersistentPartitionedRegionWithRedundancyDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.persistence.PersistentRecoveryOrderDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.persistence.PersistentRVVRecoveryDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.PRQueryWithIndexAndPdxDistributedTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.PRQueryWithIndexDistributedTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.wan.AsyncEventQueueEntrySynchronizationDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.wan.asyncqueue.SerialAsyncEventListenersDifferentPrimariesDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4182" opendate="2018-1-2 00:00:00" fixdate="2018-3-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JDBC connector exception handling needs improvement</summary>
      <description>The JDBC connector currently has multiple places it catches SQLException and turns around and throws IllegalStateException. It should instead throw a new exception that is dedicated to the jdbc connector.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcWriterTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcLoaderTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriterTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TableKeyColumnManagerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.JdbcWriter.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.JdbcLoader.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriter.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.TableKeyColumnManager.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.HikariJdbcDataSourceFactory.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.HikariJdbcDataSource.java</file>
    </fixedFiles>
  </bug>
  <bug id="4184" opendate="2018-1-3 00:00:00" fixdate="2018-1-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Change mapIndexKeys hash set to able to handle concurrent access</summary>
      <description>Concurrent access to a HashSet results in inconsistent behavior.This needs to be changed to a set backed by a concurrent hash map</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.PartitionedIndex.java</file>
    </fixedFiles>
  </bug>
  <bug id="4185" opendate="2018-1-3 00:00:00" fixdate="2018-1-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create http endpoint that contains the SHA that most recently passed concourse CI</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.update-passing-ref.sh</file>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  <bug id="419" opendate="2015-10-16 00:00:00" fixdate="2015-12-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>javax.net.ssl.* gemfire properties ignored if ssl-enabled is false</summary>
      <description>You are supposed to be able to put javax.net.ssl.* system property definitions in your gemfire.properties and have them be used to configure ssl.They work ok if ssl-enabled is true and cluster-ssl-enabled is not set. But if you set cluster-ssl-enabled (to true or false) then the javax.net.ssl.* properties are ignored. The same is also true for http-service-ssl-enabled.This can be worked around by using the new cluster-ssl-keystore* and cluster-ssl-truststore* gemfire properties instead of javax.net.ssl.*.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SSLConfigurationFactoryJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4191" opendate="2018-1-3 00:00:00" fixdate="2018-1-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replace io.codearte.*.Mockito with actual Mockito</summary>
      <description>Some tests have imported the incorrect Mockito. These should be corrected for consistency and potential version mismatch issues.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.tier.sockets.ClientServerMiscBCDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.bean.stats.GatewayMBeanBridgeJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4192" opendate="2018-1-3 00:00:00" fixdate="2018-1-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>GetServer request should return error if no servers found</summary>
      <description>When a GetServer message is received but no servers are found, we should send back an error (rather than success and a null value for server location).</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetServerOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetServerOperationHandler.java</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.locator.API.proto</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.basicTypes.proto</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufDriver.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.ProtocolErrorCode.java</file>
    </fixedFiles>
  </bug>
  <bug id="4227" opendate="2018-1-5 00:00:00" fixdate="2018-1-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cache xml must be updated if lucene index was created after the region</summary>
      <description>Create region. Create Lucene Index Cache xml must contain the information about the newly created Lucene Index.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.xml.LuceneIndexXmlGeneratorIntegrationJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.configuration.LuceneClusterConfigurationDUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommands.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneCreateIndexFunction.java</file>
    </fixedFiles>
  </bug>
  <bug id="4229" opendate="2018-1-5 00:00:00" fixdate="2018-1-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure due to suspect string: "Locator socket was closed unexpectedly"</summary>
      <description>This is a new error-level log message that was recently introduced:geode-wan:distributedTestorg.apache.geode.internal.cache.wan.serial.SerialWANPersistenceEnabledGatewaySenderDUnitTest &gt; testPersistentReplicatedRegionWithGatewaySender_Restart FAILED java.lang.AssertionError: Suspicious strings were written to the log during this run. Fix the strings or use IgnoredException.addIgnoredException to ignore. ----------------------------------------------------------------------- Found suspect string in log4j at line 3971 [error 2018/01/05 02:46:24.098 UTC &lt;Distribution Locator on localhost/127.0.0.1&gt; tid=167] Locator socket was closed unexpectedly - server thread is exiting.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpServer.java</file>
    </fixedFiles>
  </bug>
  <bug id="4230" opendate="2018-1-5 00:00:00" fixdate="2018-1-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: gfsh doc example for starting server with --initial-heap= --max-heap= setting uses incorrect unit of measure</summary>
      <description>On the following page: https://geode.apache.org/docs/guide/12/managing/heap_use/heap_management.htmlAt the bottom, there is an example to start server with heap settings:gfsh&gt;start server --name=server1 --initial-heap=30MB --max-heap=30MB \--critical-heap-percentage=85 --eviction-heap-percentage=7530MB should be 30mgfsh&gt;start server --name=server1 --initial-heap=30m --max-heap=30m \--critical-heap-percentage=85 --eviction-heap-percentage=75</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.heap.use.heap.management.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4231" opendate="2018-1-5 00:00:00" fixdate="2018-1-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>FunctionAdapter.serializedFunctionAdapterWithDifferentSerialVersionUID fails rat checker</summary>
      <description>The Apache Geode Jenkins build rat check fails for the following file:FunctionAdapter.serializedFunctionAdapterWithDifferentSerialVersionUIDThis probably just needs to be renamed to a txt file or added to the ignored list.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.execute.FunctionAdapterJUnitTest.serializedFunctionAdapterWithDifferentSerialVersionUID</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.execute.FunctionAdapterJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4232" opendate="2018-1-5 00:00:00" fixdate="2018-1-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Javadoc deprecated tag is inappropriately capitalized</summary>
      <description>The Java annotation for deprecation uses a majuscule initial letter; the Javadoc tag for deprecation uses a minuscule initial letter. The cases where a majuscule initial letter is used for the Javadoc tag should be fixed, e.g.:geode-core/src/main/java/org/apache/geode/distributed/internal/DM.java: * @Deprecated admin members are deprecated</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="429" opendate="2015-10-19 00:00:00" fixdate="2015-4-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Move HdfsStore public API to a work-in-progress branch</summary>
      <description>Current implementation of HdfsStore is not stable. The code and the tests need to be worked on. As part of this task, HdfsStore development will take place in a new branch and merge when stable.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.web.controllers.HDFSStoreCommandsController.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.RegionShortcut.java</file>
      <file type="M">gemfire-junit.src.test.java.com.gemstone.gemfire.test.junit.categories.HoplogTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.SortedListForAsyncQueueJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.SignalledFlushObserverJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.management.internal.cli.functions.ListHDFSStoresFunctionJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.management.internal.cli.functions.DestroyHDFSStoreFunctionJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.management.internal.cli.functions.DescribeHDFSStoreFunctionJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.management.internal.cli.functions.CreateHDFSStoreFunctionJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.management.internal.cli.functions.AlterHDFSStoreFunctionJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.HDFSStoreCommandsJUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.web.controllers.ShellCommandsController.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.AttributesFactory.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.Cache.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.GemFireCache.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.admin.remote.RemoteRegionAttributes.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.HDFSConfigJUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.DataPolicy.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.PartitionedRegionHelper.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheXmlGenerator.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheXmlParser.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.ColocatedRegionWithHDFSDUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.RegionRecoveryDUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.RegionWithHDFSBasicDUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.RegionWithHDFSOffHeapBasicDUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.RegionWithHDFSPersistenceBasicDUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.HDFSQueueRegionOperationsJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.HDFSQueueRegionOperationsOffHeapJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.HDFSRegionOperationsJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.HDFSRegionOperationsOffHeapJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.HDFSEntriesSetJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.HdfsStoreMutatorJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.hoplog.BaseHoplogTestCase.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.hoplog.CardinalityEstimatorJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.hoplog.HDFSCacheLoaderJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.hoplog.HDFSCompactionManagerJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.hoplog.HDFSRegionDirectorJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.hoplog.HdfsSortedOplogOrganizerJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.hoplog.HDFSStatsJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.hoplog.HDFSUnsortedHoplogOrganizerJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.hoplog.HfileSortedOplogJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.hoplog.mapreduce.GFKeyJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.hoplog.mapreduce.HDFSSplitIteratorJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.hoplog.mapreduce.HoplogUtilJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.hoplog.SortedOplogListIterJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.hoplog.TieredCompactionJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.RegionWithHDFSTestBase.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.RegionFactory.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.functions.RegionCreateFunction.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.management.bean.stats.HDFSRegionMBeanAttributeJUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.RegionProvider.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.cli.ConverterHint.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.CreateAlterDestroyRegionCommands.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.HDFSStoreCommands.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.converters.HdfsStoreNameConverter.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.functions.AlterHDFSStoreFunction.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.functions.CreateHDFSStoreFunction.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.functions.DestroyHDFSStoreFunction.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.functions.ListHDFSStoresFunction.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.functions.RegionFunctionArgs.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.i18n.CliStrings.java</file>
    </fixedFiles>
  </bug>
  <bug id="4290" opendate="2018-1-12 00:00:00" fixdate="2018-1-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add operation time statistics to the protobuf server</summary>
      <description>While profiling performance of the new Protobuf server I found that we have no time-based statistics. It would be nice to have at least an operationTime statistic that uses System.nanoTime() to capture how much time we're spending processing requests.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.statistics.ProtobufClientStatisticsImpl.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.statistics.ProtocolClientStatistics.java</file>
      <file type="M">geode-client-protocol.src.main.java.org.apache.geode.internal.protocol.statistics.NoOpStatistics.java</file>
    </fixedFiles>
  </bug>
  <bug id="4293" opendate="2018-1-12 00:00:00" fixdate="2018-1-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>When jmx-manager-password-file is used Pulse may not work</summary>
      <description>When jmx-manager-password-file is used to enable security for JMX connections (using the old security model) embedded Pulse connections do not work.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementAgent.java</file>
    </fixedFiles>
  </bug>
  <bug id="4294" opendate="2018-1-12 00:00:00" fixdate="2018-1-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Region level expiration is not supported for partitioned regions</summary>
      <description>Akihiro Kitada reports:Partitioned regions do not support region level expiration. Please make this clear in the docs, like "Partitioned region does not support region level expiration".</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.expiration.configuring.data.expiration.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4295" opendate="2018-1-12 00:00:00" fixdate="2018-2-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Setting domain class on region-mapping but initial instance is always PdxInstance</summary>
      <description>For JDBC Connector Read serialized on the cache is set to false. Region mapping was created with pdx-instance-type set to a specific domain class (example: Employee). This means it should return this class on reads using the JdbcLoader. However the initial instance is a PdxInstance which results in a collision. Something like Employee employee = region.get(2); &lt;-- blows upThe type is correct (Employee) but wont cast.&amp;#91;vm1&amp;#93; PDX Instance: PDX&amp;#91;14933766,org.apache.geode.connectors.jdbc.Employee&amp;#93;{first_name=Fred, hire_date=2018-01-12 00:00:00.0, id=3, last_name=Krone} read serialized: false</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.SearchLoadAndWriteProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.HARegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4296" opendate="2018-1-15 00:00:00" fixdate="2018-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protobuf driver should turn off TCP delay, or make it configurable</summary>
      <description>While testing the driver's performance I found that transmission of small messages from client to server capped at about 50/second due to it not enabling "tcp nodelay" on its socket.  The default tcp/ip socket setting is to stall a little to see if the client is going to send another message, enabling tcp/ip to fill an MTU.  In the case of the current Protobuf driver this is never going to happen so this jitter should be disabled with Socket.setTcpNoDelay(true).</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufDriver.java</file>
    </fixedFiles>
  </bug>
  <bug id="4299" opendate="2018-1-16 00:00:00" fixdate="2018-1-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>some internal classes for eviction are serializable for no apparent reason</summary>
      <description>The eviction controller classes are serializable even though they can no longer be safely serialized.Also, in general, the internal classes for eviction are confusing. The dependencies between them are not clear and multiple classes attempt to do the same thing.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.DiskRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.RegionManagementDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.RegionFunctionArgsTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelQueueRemovalMessageJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXStateProxyImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.SizingFlagDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.region.entry.RegionEntryFactoryBuilderJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionEvictionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.LRUClearWithDiskRegionOpRegressionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.LIFOEvictionAlgoMemoryEnabledRegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.LIFOEvictionAlgoEnabledRegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.HAOverflowMemObjectSizerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.TestLRUListWithAsyncSorting.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.TestEvictionController.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.OffHeapEvictionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.LRUListWithSyncSortingTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.LRUListWithSyncSortingIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.LRUListWithAsyncSortingTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.LRUListWithAsyncSortingIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.LIFOListTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.EvictionTestBase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.EvictionStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.EvictionObjectSizerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.EvictionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.AbstractEvictionListTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegOplogSwtchingAndRollerJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.diskPerf.DiskRegOverflowSyncJUnitPerformanceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.diskPerf.DiskRegOverflowAsyncJUnitPerformanceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.diskPerf.DiskRegionOverflowSyncRollingOpLogJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.diskPerf.DiskRegionOverflowAsyncRollingOpLogJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DeltaPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DeltaFaultInDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractLRURegionMapTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.TestDiskRegion.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.MemLRUEvictionControllerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.LRUEvictionControllerDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.DynamicRegionFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.EvictionAttributes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractBucketRegionQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractDiskRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractLRURegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskInitFile.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.entries.DiskEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EvictionAttributesImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.AbstractEvictionController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.AbstractEvictionList.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.CountLRUEviction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.DisabledEvictionStatistics.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.EvictableMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.EvictionController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.EvictionList.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.EvictionListBuilder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.EvictionStatistics.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.EvictionStatisticsImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.HeapLRUController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.InternalEvictionStatistics.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.LIFOList.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.LRUListWithAsyncSorting.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.LRUListWithSyncSorting.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.MemoryLRUController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.RegionEvictorTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.eviction.SizeLRUController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.DiskRegionView.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PlaceHolderDiskRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ProxyRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionMapFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionStatus.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.region.entry.RegionEntryFactoryBuilder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMCachedDeserializable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMLRURegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheXmlParser.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.MemberMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.RegionMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.domain.EvictionAttributesInfo.java</file>
    </fixedFiles>
  </bug>
  <bug id="4360" opendate="2018-1-23 00:00:00" fixdate="2018-1-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Remove --eviction-enabled option from gfsh create region doc</summary>
      <description>This option was added to the docs per the writeup of GEODE-1897, but the option was never, in fact, implemented. Remove from docs.</description>
      <version>1.4.0</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4394" opendate="2018-1-26 00:00:00" fixdate="2018-2-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh put command: change option --skip-if-exists to --if-not-exists</summary>
      <description>Change the gfsh put command `-skip-if-exists` option to `-if-not-exists` for consistency with other gfsh commands, most notably create region (see GEODE-4354).</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.put.html.md.erb</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.PutCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.PutCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="4500" opendate="2018-2-2 00:00:00" fixdate="2018-1-2 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Remove singleton calls from all tests in org.apache.geode.distributed.internal.membership.gms.membership</summary>
      <description>These tests in org.apache.geode.distributed.internal.membership.gms.membership invoke singleton getters.InternalDistributedSystem.getAnyInstance(): GMSJoinLeaveTestHelper</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.LocatorUDPSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.LocatorDUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessengerJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4511" opendate="2018-2-2 00:00:00" fixdate="2018-2-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Avoid creation of unnecessary default pool</summary>
      <description>The Java API for creating a client cache automatically creates a default pool although this default pool is not used for almost all real use cases. Moreover, this pool periodically tries to connect to the server. This is basically harmless but it wastes resources a little bit.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.tests.ClusterStartupRuleCanSpecifyOlderVersionsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientDataAuthorizationUsingLegacySecurityWithFailoverDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientDataAuthorizationUsingLegacySecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientAuthorizationLegacyConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.ClusterStartupRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientAuthDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ClientServerMiscDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.ClientCacheFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.ClientCacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PoolFactoryImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.InternalClientCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ClientRegionFactoryImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.ClientCacheFactory.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.RegisterInterestIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PoolManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="453" opendate="2015-10-20 00:00:00" fixdate="2015-10-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: PersistentPartitionedRegionOldConfigDUnitTest.testRegisterInterestNoDataStores</summary>
      <description>java.lang.AssertionError: Suspicious strings were written to the log during this run.Fix the strings or use DistributedTestCase.addExpectedException to ignore.-----------------------------------------------------------------------Found suspect string in log4j at line 673&amp;#91;warn 2015/10/20 04:31:53.906 PDT &lt;ServerConnection on port 29243 Thread 0&gt; tid=0x1766&amp;#93; Server connection from &amp;#91;identity(cc1-rh6(16789:loner):60749:6d130585,connection=1; port=60749&amp;#93;: Unexpected IOException: -----------------------------------------------------------------------Found suspect string in log4j at line 674java.net.SocketException: Connection reset</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.partitioned.PersistentPartitionedRegionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4609" opendate="2018-2-6 00:00:00" fixdate="2018-2-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create region gfsh command option --skip-if-exists defaults to false</summary>
      <description>This ticket is filed for updating the documentation.The create region gfsh command's default behavior for --skip-if-exists default behavior changed in 1.4.0. The default behavior when you do not specify this option is now false.http://gemfire.docs.pivotal.io/geode/tools_modules/gfsh/command-pages/create.html#topic_54B0985FEC5241CA9D26B0CE0A5EA863 gfsh&gt;create region --name=test --type=PARTITION --skip-if-existsoptional --skip-if-exists: Skip region creation if the region already exists.; default if option present: 'true'; default if option not present: 'false'</description>
      <version>1.4.0</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4626" opendate="2018-2-7 00:00:00" fixdate="2018-2-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>deprecating create region using --template-region option in gfsh</summary>
      <description>currently, there are two ways to create a region, either to use a --type option indicating a region shortcut or a --template-region option specifying another regionPath where you want to copy the attribute from. First of all, we are not sure what set of attributes that make sense to copy to the new region. e.g listeners/loaders/writers, normally these are connected to a downstream database that user may/may not want the new region to read/write the same table. And the current implementation would fail to create a region from a template that has these custom callbacks (including listeners, loader, writer, compressor, resolvers etc).</description>
      <version>1.4.0</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
    </fixedFiles>
  </bug>
  <bug id="4628" opendate="2018-2-7 00:00:00" fixdate="2018-2-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gfsh connect command should infer the correct connection method</summary>
      <description>There are 2 main points here: If we want to connect with a URL (http) we have to give the -use-http option as well as url. -use-http is really redundant here and should be deprecated and ultimately removed. when connecting to the http service, the url (https or http) should have already indicated whether it's use-ssl or not, in this case, we should infer the value of use-ssl based on the protocol of the url.Note: this is only for --url case. the --use-ssl should still need to be specified for jmx connection.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ConnectCommandWithSSLTest.java</file>
      <file type="M">geode-core.src.test.resources.ssl.trusted.keystore</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.GfshCommandRule.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementAgent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ConnectCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="4630" opendate="2018-2-8 00:00:00" fixdate="2018-4-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add timestamps to test artifacts</summary>
      <description>In order to differentiate between multiple test runs on the same build, use timestamp-based directories to subdivide.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.test-archive.sh</file>
    </fixedFiles>
  </bug>
  <bug id="4633" opendate="2018-2-8 00:00:00" fixdate="2018-2-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>un-deprecate peer-auth-init</summary>
      <description>`peer-auth-init` is currently deprecated but allows the user to supply a class that generates credentials for peer authentication (instead of reading from cmd line or properties). This might be useful for integration with a key management system like CredHub, and allow user not to save password in a plain text format on file. please make sure this property still works as expected. and un-deprecate it in the docs.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.SecurityManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.AuthInitialize.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.shiro.GeodeAuthenticationToken.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.CacheCallback.java</file>
    </fixedFiles>
  </bug>
  <bug id="4645" opendate="2018-2-9 00:00:00" fixdate="2018-2-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh help: Improve description of create region &amp;#39;--if-not-exists&amp;#39; option</summary>
      <description>The create region option `&amp;#45;&amp;#45;if-not-exists` (formerly `--skip-if-exists`) is described as follows in the gfsh help:  Skip region creation if the region already exists.This is inaccurate, as `create region` never creates a duplicate region if one already exists. The option merely de-escalates the response level from "throw an error and stop" to "print an informational message and continue."Here's a suggested replacement for the help message based on the User Guide (edit as you see fit):  By default, an attempt to create a duplicate region is reported as an error. If this option is specified without a value or is specified with a value of `true`, then gfsh displays a "Skipping..." acknowledgement, but does not throw an error.</description>
      <version>1.4.0</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
    </fixedFiles>
  </bug>
  <bug id="4647" opendate="2018-2-9 00:00:00" fixdate="2018-4-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a new stat for AyncEventQueue/GatewaySender to track secondaryEventsQueueSize</summary>
      <description>Currently we have eventsQueueSize which tells us how big the queue is based on how many primary events are in the queue.It would be nice to have the same type of stat for how many secondary events are in the queue.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.statistics.list.html.md.erb</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialWANPropagationDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialWANConflationDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderQueueDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelWANStatsDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelWANConflationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.bean.stats.AsyncEventQueueStatsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelQueueRemovalMessageJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.asyncqueue.AsyncEventQueueStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.asyncqueue.AsyncEventListenerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.AsyncEventQueueTestBase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.asyncqueue.internal.SerialAsyncEventQueueImplJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ParallelQueueRemovalMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRegionQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractBucketRegionQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.asyncqueue.internal.AsyncEventQueueStats.java</file>
    </fixedFiles>
  </bug>
  <bug id="4649" opendate="2018-2-12 00:00:00" fixdate="2018-2-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: update minimum Java requirement</summary>
      <description>As of v1.4, the minimum Java requirement is Java 8 rev 121. </description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.weblogic.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tc.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tc.additional.info.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.tour.of.gfsh.html.md.erb</file>
      <file type="M">geode-docs.managing.management.jmx.manager.operations.html.md.erb</file>
      <file type="M">geode-docs.getting.started.system.requirements.host.machine.html.md.erb</file>
      <file type="M">geode-docs.getting.started.15.minute.quickstart.gfsh.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.running.the.locator.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.persisting.configurations.html.md.erb</file>
      <file type="M">geode-book.config.yml</file>
    </fixedFiles>
  </bug>
  <bug id="4651" opendate="2018-2-12 00:00:00" fixdate="2018-2-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>transactional region entry destroys do not remove from the eviction list</summary>
      <description>If a geode transaction destroys a region entry on a region that has eviction, then that region entry should be available for garbage collection.But the transaction code adds the destroy entry back to the eviction list which can cause the entry to not be garbage collected. In the future, if on operation is done on that region that triggers an evict, then these destroyed region entries will be released to the garbage collector. But if no future eviction occurs the destroyed entries will never be garbage collected. </description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.TransactionsWithOverflowTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.entries.AbstractRegionEntry.java</file>
    </fixedFiles>
  </bug>
  <bug id="4652" opendate="2018-2-12 00:00:00" fixdate="2018-2-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document Lucene Service MXBean</summary>
      <description>Documentation of the LuceneServiceMXBean is missing. Put it into the docs.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.management.list.of.mbeans.full.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4653" opendate="2018-2-13 00:00:00" fixdate="2018-2-13 01:00:00" resolution="Done">
    <buginformation>
      <summary>Document (with tests) simple situations in which JSONFormatter will and will not work</summary>
      <description>JSONFormatter doesn't work on primitives or lists. There aren't any tests showing this. Let's make some tests showing this.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.JSONPdxClientServerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.JSONFormatterJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4656" opendate="2018-2-13 00:00:00" fixdate="2018-2-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh command describe region should list custom expiry setting</summary>
      <description>The gfsh commanddescribe region --name=region1should list the MyCustomExpiry class as the value for the options given on the alter/create region command:--entry-idle-time-custom-expiry--entry-time-to-live-custom-expiryType | Name | Value------ | ----------------------- | ---------------Region | data-policy | REPLICATE | entry-idle-time-custom-expiry | MyCustomExpiry | size | 0 | statistics-enabled | true | scope | distributed-ack</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.assertions.CommandResultAssert.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeRegionDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.RegionAttributesNames.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.CommandResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.domain.RegionAttributesInfo.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
    </fixedFiles>
  </bug>
  <bug id="466" opendate="2015-10-21 00:00:00" fixdate="2015-10-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow for specifying debug ports for VMs launched during DUnit tests.</summary>
      <description>Although dunit VMs do launch with debugging enabed the ports used are ephemeral which makes attaching a debugger cumbersome.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.dunit.standalone.ProcessManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="4661" opendate="2018-2-13 00:00:00" fixdate="2018-3-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protobuf: add GetAllKeys message</summary>
      <description>As a dev using the new protocol, I need to be able to get all keys from a region.Add GetAllKeys message, returning collection of all keys for named region and an error if the region does not exist. </description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.CacheOperationsJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.registry.ProtobufOperationContextRegistry.java</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.region.API.proto</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.clientProtocol.proto</file>
      <file type="M">geode-experimental-driver.src.test.java.org.apache.geode.experimental.driver.RegionIntegrationTest.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.Region.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="4662" opendate="2018-2-13 00:00:00" fixdate="2018-3-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protobuf: Add GetEntryCount message</summary>
      <description>As a dev using the new protocol, I need to be able to retrive the entry count for a given region.Add GetEntryCount message, returning the count of entries for the provided region.  Return an error if the region does not exist. </description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.MessageUtil.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.CacheOperationsJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.registry.ProtobufOperationContextRegistry.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionRequestOperationHandler.java</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.region.API.proto</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.clientProtocol.proto</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.basicTypes.proto</file>
      <file type="M">geode-experimental-driver.src.test.java.org.apache.geode.experimental.driver.RegionIntegrationTest.java</file>
      <file type="M">geode-experimental-driver.src.test.java.org.apache.geode.experimental.driver.IntegrationTestBase.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.RegionAttributes.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.Region.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="4669" opendate="2018-2-14 00:00:00" fixdate="2018-3-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh start locator hangs under JDK 9</summary>
      <description>When trying to run geode using JDK 9, gfsh start locator hangs.With a little debugging, I tracked the problem down to some code that is trying to find jar file in the JDK directory. It's throwing an exception, which is getting silently swallowed. Below is the exception from a debugger.We need to figure out a better way to get the status of a locator with JDK 9.java.io.IOException: JDK management agent not found at org.apache.geode.internal.process.MBeanProcessController.getJMXServiceURL(MBeanProcessController.java:250) at org.apache.geode.internal.process.MBeanProcessController.connect(MBeanProcessController.java:195) at org.apache.geode.internal.process.MBeanProcessController.invokeOperationOnTargetMBean(MBeanProcessController.java:162) at org.apache.geode.internal.process.MBeanProcessController.status(MBeanProcessController.java:139) at org.apache.geode.internal.process.MBeanProcessController.status(MBeanProcessController.java:84) at org.apache.geode.distributed.LocatorLauncher.statusWithWorkingDirectory(LocatorLauncher.java:935) at org.apache.geode.distributed.LocatorLauncher.status(LocatorLauncher.java:863) at org.apache.geode.distributed.LocatorLauncher$LocatorState.fromDirectory(LocatorLauncher.java:1985) at org.apache.geode.management.internal.cli.commands.StartLocatorCommand.startLocator(StartLocatorCommand.java:232) at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.base/java.lang.reflect.Method.invoke(Method.java:564) at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:216) at org.apache.geode.management.internal.cli.remote.CommandExecutor.invokeCommand(CommandExecutor.java:97) at org.apache.geode.management.internal.cli.remote.CommandExecutor.execute(CommandExecutor.java:45) at org.apache.geode.management.internal.cli.remote.CommandExecutor.execute(CommandExecutor.java:39) at org.apache.geode.management.internal.cli.shell.GfshExecutionStrategy.execute(GfshExecutionStrategy.java:81) at org.springframework.shell.core.AbstractShell.executeCommand(AbstractShell.java:134) at org.apache.geode.management.internal.cli.shell.Gfsh.promptLoop(Gfsh.java:1014) at org.springframework.shell.core.JLineShell.run(JLineShell.java:179) at java.base/java.lang.Thread.run(Thread.java:844)</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.process.ProcessControllerFactoryTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.process.ProcessControllerFactoryIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.ProcessControllerFactory.java</file>
    </fixedFiles>
  </bug>
  <bug id="4671" opendate="2018-2-14 00:00:00" fixdate="2018-2-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Running dunit tests with JDK 9 fail with Unrecognized VM option &amp;#39;PrintGCTimeStamps&amp;#39;</summary>
      <description>linking IO streams for [locator] linking IO streams for [locator] [locator] Unrecognized VM option 'PrintGCTimeStamps'[locator] Error: Could not create the Java Virtual Machine.[locator] Error: A fatal exception has occurred. Program will exit.Process finished with exit code 130 (interrupted by signal 2: SIGINT)</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="4693" opendate="2018-2-16 00:00:00" fixdate="2018-3-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JDBCLoader on region with a pdx-class-name causes exception during deserialization when a get is done</summary>
      <description>When Region.get() is performed with JDBCLoader and pdx-class-name, the JDBCLoader always creates a PdxInstance whose fields are all of type object. If the domain class has the fields as some other type, for example string or int, then deserialization will fail.Workaround at this time is: Don't set the pdx-class-name on the jdbc region mapping. This will cause deserialization to never happen since the data will remain a PdxInstance.  Have all your domain class fields serialized as pdx object fields. This can be hard to do with the ReflectionBasedAutoSerializer so the recommendation is to use PdxSerializable or your own PdxSerializer. </description>
      <version>1.4.0</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.ServerStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.DistributedRestoreSystemProperties.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.PdxClientServerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.AutoSerializableJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.DataCommandFunctionWithPDXJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.TypeRegistry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.AutoSerializableManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.GemFireCache.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcLoaderIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcConnectorExceptionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TestConfigService.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TableKeyColumnManagerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.JdbcConnectorException.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.TableKeyColumnManager.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.AbstractJdbcCallback.java</file>
    </fixedFiles>
  </bug>
  <bug id="4694" opendate="2018-2-16 00:00:00" fixdate="2018-2-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: add gfsh destroy async-event-queue to subnav</summary>
      <description>The gfsh command reference page for destroy async-event-queue exists, but is not in the subnav for the documentation. Add it to the subnav.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4721" opendate="2018-2-22 00:00:00" fixdate="2018-4-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Being invoked within JTA Region.values() (and all iteration related operations) does return empty collection</summary>
      <description>Region.values() returns empty collection being invoked within JTA. Other operations returns data, for example this workaround works (though less efficient): region.getAll(region.keySet()).values(), also Region.size() returns correct value.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.jta.SetOperationJTAJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.jta.ClientServerJTADUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.PRSetOperationJTADUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4726" opendate="2018-2-22 00:00:00" fixdate="2018-7-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Documentation is misleading with a multi-homed Geode cluster</summary>
      <description>The necessary step for binding Geode to an arbitrary network interface (e.g. eth2), is not clearly documented. A multi-homing scenario (i.e. several non-loopback NICs) is quite common.The server-bind-address=w.x.y.z parameter appears to have no effect on the interface used by the server process;  however passing bind-address=w.x.y.z to the server startup produces the correct startup behavior. The documentation around this is a bit misleading.The symptom was a startup hang, ultimately timing out, like the following:[info 2018/02/22 13:13:29.134 MST server1 &lt;main&gt; tid=0x1] Attempting to join the distributed system through coordinator 172.16.139.1(locator1:70192:locator)&lt;ec&gt;&lt;v0&gt;:1024 using address 192.168.0.29(server1:70198):1024The following script was used successfully on Mac OS to bind to the "last" interface listed by ifconfig (vmnet8).#!/bin/bashrm -rf locator1 server1export GEODE_HOME=/opt/pivotal-gemfire-9.3.0export CLASSPATH=${GEODE_HOME}/lib/gemfire-greenplum-3.1.1.jargfsh &lt;&lt;EOFstart locator --name=locator1 --locators=172.16.139.1[10334] --bind-address=172.16.139.1 --port=10334 --include-system-classpathstart server --name=server1 --start-rest-api=true --http-service-port=28080 --locators=172.16.139.1[10334] --bind-address=172.16.139.1 --cache-xml-file=../config/ggc_cache.xml --classpath=${CLASSPATH} --include-system-classpathEOFThe contents of ggc_cache.xml is below.&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;cache xmlns="http://geode.apache.org/schema/cache" xmlns:gpdb="http://schema.pivotal.io/gemfire/gpdb" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://geode.apache.org/schema/cache http://geode.apache.org/schema/cache/cache-1.0.xsd http://schema.pivotal.io/gemfire/gpdb http://schema.pivotal.io/gemfire/gpdb/gpdb-2.4.xsd" version="1.0"&gt; &lt;disk-store name="pdx_meta_data"/&gt; &lt;pdx read-serialized="true" persistent="true" disk-store-name="pdx_meta_data"/&gt; &lt;jndi-bindings&gt; &lt;jndi-binding jndi-name="DemoDatasource" type="SimpleDataSource" jdbc-driver-class="org.postgresql.Driver" user-name="gpadmin" password="supersecret" connection-url="jdbc:postgresql://172.16.139.132:5432/gemfire_db"&gt; &lt;/jndi-binding&gt; &lt;/jndi-bindings&gt; &lt;region name="TestData" refid="PARTITION"&gt; &lt;/region&gt; &lt;region name="CustDim" refid="PARTITION"&gt; &lt;gpdb:store datasource="DemoDatasource"&gt; &lt;gpdb:types&gt; &lt;gpdb:pdx name="com.aexp.gemfire.demo.entity.Customer" schema="public" table="cust_dim"&gt; &lt;gpdb:id field="id" /&gt; &lt;gpdb:fields&gt; &lt;gpdb:field name="id" column="id" class="java.lang.String" /&gt; &lt;gpdb:field name="Name" class="java.lang.String" /&gt; &lt;gpdb:field name="income" class="java.lang.Double" /&gt; &lt;/gpdb:fields&gt; &lt;/gpdb:pdx&gt; &lt;/gpdb:types&gt; &lt;/gpdb:store&gt; &lt;/region&gt; &lt;!-- I put the following in as place mark to talk about enabling GemFire to watch and make sure the system doesn't run out of memory --&gt; &lt;resource-manager critical-heap-percentage="80" eviction-heap-percentage="75"/&gt; &lt;gpdb:gpfdist port="3333" /&gt;&lt;/cache&gt;</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="473" opendate="2015-10-22 00:00:00" fixdate="2015-12-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: LocatorLauncherRemoteFileJUnitTest.testStartCreatesPidFile</summary>
      <description>java.lang.IllegalArgumentException: Unable to create LocatorStatus from JSON: at com.gemstone.gemfire.distributed.LocatorLauncher$LocatorState.fromJson(LocatorLauncher.java:1901) at com.gemstone.gemfire.distributed.LocatorLauncher.statusWithWorkingDirectory(LocatorLauncher.java:888) at com.gemstone.gemfire.distributed.LocatorLauncher.status(LocatorLauncher.java:810) at com.gemstone.gemfire.distributed.LocatorLauncherRemoteJUnitTest.testStartCreatesPidFile(LocatorLauncherRemoteJUnitTest.java:174) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.rules.Verifier$1.evaluate(Verifier.java:35) at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1,1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.process.FileProcessController.java</file>
    </fixedFiles>
  </bug>
  <bug id="4734" opendate="2018-2-22 00:00:00" fixdate="2018-3-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cleanup some tests to use as examples on Geode wiki</summary>
      <description>I'm looking for some tests to use as recommended examples on the Geode wiki.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.misc.GatewayLegacyAuthenticationRegressionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.VM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.CacheRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.beans.CacheServerBridgeClientMembershipRegressionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatArchiveWithMissingResourceTypeRegressionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.RegisterInterestServerMetaDataTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ClientWithInterestFailoverTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ClientProxyWithDeltaTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ReplicateEntryIdleExpirationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ReplicateCacheListenerInvocationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PREntryIdleExpirationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PRCreationTotalNumBucketsDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PRCacheListenerWithInterestPolicyAllInvocationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PRCacheListenerInvocationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.BucketRebalanceStatRegressionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionCloseDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.FunctionExecution.ExceptionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.ClientFunctionTimeoutRegressionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.RegionExpirationIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.EntriesDoNotExpireDuringGIIRegressionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CreateAndLocalDestroyInTXRegressionTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4736" opendate="2018-2-23 00:00:00" fixdate="2018-2-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>New protocol should consistently record statistics</summary>
      <description>Some of the ProtobufOperationHandler classes update statistics by calling startOperation and endOperation on the statistics class. We should update the statistics consistently at a higher level.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufOpsProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="4737" opendate="2018-2-23 00:00:00" fixdate="2018-2-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Describe addition of JSON specs to gfsh commands</summary>
      <description>Some new gfsh commands can take a JSON spec. Examples include `alter region --entry-idle-time-custom-expiry` and `create region --cache-listener`.Add a general description of the syntax to the gfsh section of the manual so individual command-reference entries can point to a centralized explanation, rather than repeating the syntax details each time.One developer has requested that we state that the JSON parser recognizes double quotes as well as single quotes. Some JSON parsers accept only single quotes.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.alter.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.chapter.overview.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="474" opendate="2015-10-22 00:00:00" fixdate="2015-10-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Gradle Wrapper to Gradle 2.8</summary>
      <description>Currently the Gradle Wrapper is configured for Gradle 2.3 and the latest version of Gradle is 2.8. Features of 2.8 include: Faster configuration Continuous builds Incremental builds Faster builds Improved IDE supportBuild times:Gradle 2.3: 1 mins 55.045 secsGradle 2.8: 1 mins 21.865 secs</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.wrapper.gradle-wrapper.properties</file>
      <file type="M">gradle.wrapper.gradle-wrapper.jar</file>
      <file type="M">gradlew</file>
    </fixedFiles>
  </bug>
  <bug id="4750" opendate="2018-2-27 00:00:00" fixdate="2018-3-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add finer grained security to OQL queries with protobuf</summary>
      <description>After GEODE-3126 and GEODE-4406 are implemented, we should update the OqlOperationHandler to allow queries if the user has access to the individual regions. Currently the changes for GEODE-3126 are validating that the user has DATA:READ access for all regions in order to do a query.The QueryCommand class has an example of how to validate the regions involved in the query.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnRegionRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnMemberRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnGroupRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.AuthorizationIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.registry.ProtobufOperationContextRegistry.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.OqlQueryRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.AbstractFunctionRequestOperationHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.DefaultQuery.java</file>
    </fixedFiles>
  </bug>
  <bug id="4751" opendate="2018-2-27 00:00:00" fixdate="2018-3-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add function execution to Protobuf driver</summary>
      <description>The experimental protobuf driver needs to have function execution added to its API.executeFunctionOnServer(s) and executeFunctionOnGroup(s)The functionality has already been implemented in the server.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-experimental-driver.src.test.java.org.apache.geode.experimental.driver.IntegrationTestBase.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.QueryService.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.Query.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufDriver.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.Driver.java</file>
    </fixedFiles>
  </bug>
  <bug id="4753" opendate="2018-2-28 00:00:00" fixdate="2018-2-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protobuf GetServer request has wrong permission set</summary>
      <description>A recent change accidently changed this from a cluster scope permission to data scope.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.registry.ProtobufOperationContextRegistry.java</file>
    </fixedFiles>
  </bug>
  <bug id="4756" opendate="2018-3-1 00:00:00" fixdate="2018-3-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Help for list members shows alter region help message</summary>
      <description>The help for list members uses the text from the alter region command:gfsh&gt;help list membersNAMElist membersIS AVAILABLEtrueSYNOPSISDisplay all or a subset of members.SYNTAXlist members [--group=value(,value)*]PARAMETERSgroupGroup(s) of members on which the region will be altered.Synonyms: groupsRequired: falsegfsh&gt;list members --groupoptional --group: Group(s) of members on which the region will be altered.; no default valueHelp text should state:optional --group: Group name for which members will be displayed.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ListMembersCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="4757" opendate="2018-3-1 00:00:00" fixdate="2018-3-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Backing up from AdministrativeSystem can fail if baseline directory not provided</summary>
      <description>A baseline directory (used in incremental backups) is not required, but toString is being called on the File object, which could be null, resulting in an NPE if not conducting an incremental backup.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.AdminDistributedSystemImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4762" opendate="2018-3-1 00:00:00" fixdate="2018-3-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Code Cleanup: Remove dead code from o.a.g.admin, *.cache, and *.distributed.internal</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ProxyCacheCloseOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.GemFireCheckedException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.Transport.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.StatRecorder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSQuorumChecker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.interfaces.Manager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.GMSMember.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.direct.DirectChannel.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.deadlock.DLockDependencyMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.RequiredRoles.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.RegionService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.RegionReinitializedException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.RegionFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.parse.ASTParameter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.PartitionAttributesFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.PartitionAttributes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.operations.KeyValueOperationContext.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.operations.InterestType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.DynamicRegionFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.DiskStoreFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ServerRegionDataAccess.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.RemoveAllOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.RegisterInterestTracker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.RegisterInterestOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.QueueStateImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.QueueManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PutOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PutAllOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.GemFireMemberStatus.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.AdminDistributedSystemImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.DistributedSystemConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.DistributedSystemHealthMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.EnabledManagedEntityController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.GemFireHealthImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.InetAddressUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.ManagedEntityConfigXml.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.ManagedEntityConfigXmlParser.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.MemberHealthEvaluator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.StatisticResourceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.SystemMemberCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.SystemMemberImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.SystemMembershipEventImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.AdminDistributedSystemJmxImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.AgentConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.AgentImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.CacheServerJmxImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.GemFireHealthJmxImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.GenerateMBeanHTML.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.MBeanUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.MemberInfoWithStatsMBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.StatisticAttributeInfo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.SystemMemberJmx.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.SystemMemberJmxImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.SystemMembershipListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.AttributesFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.AbstractOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.AuthenticateUserOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.AutoConnectionSourceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ClientMetadataService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ClientRegionFactoryImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.CloseConnectionOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ConnectionFactoryImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ConnectionImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ConnectionStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.DestroyOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.EndpointManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ExecuteFunctionOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ExecuteRegionFunctionNoAckOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ExecuteRegionFunctionOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ExecuteRegionFunctionSingleHopOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.GetEventValueOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.GetPDXIdForEnumOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.GetPDXIdForTypeOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.KeySetOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.LiveServerPinger.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.OpExecutorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.ConnectionManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.PooledConnection.java</file>
    </fixedFiles>
  </bug>
  <bug id="4787" opendate="2018-3-6 00:00:00" fixdate="2018-4-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Re-instate Management REST API endpoints for &amp;#39;create index&amp;#39; and &amp;#39;create region&amp;#39;</summary>
      <description>As of Apache Geode 1.3, Apache Geode no longer supports proper (REST-like) Web service endpoints for the Geode's Management functionality.This primarily concerns the Management (REST-like) Web service API in org.apache.geode.management.internal.web.controllers, which in Apache Geode 1.2.1 and earlier, consisted of the following Spring Web MVC Cntrollers.However, as Apache Geode 1.3 and later (i.e. 1.4 and beyond), the Apache Geode community refactored and reduced the Controllers, and by extension, the Web service endpoints to, mostly, a single Web service endpoint, which essentially just accepts a Gfsh command string, such as `create region --name=Example --type=PARTITION`.This is an significant anti-pattern to be sure nor is it consistent with good/proper Web service/general API design, much less REST-ful design.While this Management REST-like API was not a "complete" REST API design, as measured against Richardson Maturity Model, it did consist of elements in both Levels 1 and 2.For instance, it used proper URLs and URIs to identify and access resources (e.g. Regions, Indexes, etc). Additionally, it also used property Verbs to affect (e.g. CRUD) the resources.Essentially, it only needed proper Resource abstractions representing the different resources (e.g. Regions, Indexes, etc) along with Hypermedia Controls to move beyond being a specific interface for Gfsh.The intent was never to make the Management REST API a specific extension for Gfsh. The initial purpose was to enable Gfsh to connect to the Manager via HTTP in order to transcend firewalls when a devops team wanted to manage a remote cluster deployed in a cloud environment, such as AWS or GCP. By using HTTP over JMX/RMI, a user would not need to punch additional holes in the firewall to expose the JMX/RMI port (1099) for instance.Still, the "intent" was never to stop at supporting just Gfsh, but to become a true REST API that can be consumed by any client (not just Gfsh): application, framework, tool, etc, regardless of language (e.g. Java, C++/C#, Ruby, Python, etc).However, the team that modified this API failed to recognize the benefit of this design and actually took a step backwards. The HTTP Verbs are not properly used. The Web service API endpoints are not resourceful, and imposing the Gfsh DSL on clients is foolish and too restrictive.While, it might be argued that this was an "internal" API, technically, speaking, guarding classes by putting them in an "internal" package is no safe-guard or guarantee that could have been properly enforced using Java access modifiers (e.g. private, package-protected, etc) and then only exposing an SPI for consumption.The fact remains that this API was changed in an incompatible way before an "alternative" solution was properly introduced.</description>
      <version>1.3.0,1.4.0</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.ShellCommandsController.java</file>
    </fixedFiles>
  </bug>
  <bug id="4788" opendate="2018-3-6 00:00:00" fixdate="2018-3-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>change back the behavior of test code of getSomeKeys to ignore exceptions</summary>
      <description>In GEODE-2673, getSomeKeys' behavior was changed to throw exception when detected some exceptions. We need to change it back to ignore the exceptions as test code. </description>
      <version>None</version>
      <fixedVersion>1.5.0,1.6.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionGetSomeKeys.java</file>
    </fixedFiles>
  </bug>
  <bug id="4789" opendate="2018-3-6 00:00:00" fixdate="2018-3-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update system-rules dependency from 1.16.1 to 1.17.1</summary>
      <description>com.github.stefanbirkner:system-rules releases are now up to 1.17.1. We should update our dependency from 1.16.1 to 1.17.1.System-Rules is a library of JUnit Rules used in UnitTests, IntegrationTests and DistributedTests for controlling System properties, stdout, stderr, etc.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.runners.TestRunner.java</file>
      <file type="M">geode-junit.build.gradle</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.DistributedRestoreSystemProperties.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.UniversalMembershipListenerAdapterDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.ClusterStartupRule.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeRegionDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.WANCommandUtils.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.WanCommandListDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.StopGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.StopGatewayReceiverCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.StatusGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.StatusGatewayReceiverCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.StartGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.StartGatewayReceiverCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.ResumeGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.PauseGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.CreateGatewayReceiverCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.CreateDestroyGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderQueueDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderOperationsDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.offheap.ParallelGatewaySenderOperationsOffHeapDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.misc.WANLocatorServerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.MXBeanAwaitility.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.MultiClientDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigLocatorRestartDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.CliUtilDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="479" opendate="2015-10-23 00:00:00" fixdate="2015-10-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bump Java Language level to 1.8</summary>
      <description>Change sourceCompatibility and targetCompatibility to 1.8 enabling Java 8 features in Geode codebase.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="4793" opendate="2018-3-7 00:00:00" fixdate="2018-3-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>DUnit tests fail on Windows</summary>
      <description>Various tests will fail on Windows with errors similar to the following:[vm0] [error 2018/03/07 04:38:13.670 UTC &lt;RMI TCP Connection(1)-10.32.110.121&gt; tid=19] Error occurred while initializing cluster configuration[vm0] java.lang.RuntimeException: Error occurred while initializing cluster configuration[vm0] at org.apache.geode.distributed.internal.ClusterConfigurationService.getConfigurationRegion(ClusterConfigurationService.java:731)[vm0] at org.apache.geode.distributed.internal.ClusterConfigurationService.initSharedConfiguration(ClusterConfigurationService.java:459)[vm0] at org.apache.geode.distributed.internal.InternalLocator.startSharedConfigurationService(InternalLocator.java:1332)[vm0] at org.apache.geode.distributed.internal.InternalLocator.startCache(InternalLocator.java:668)[vm0] at org.apache.geode.distributed.internal.InternalLocator.startDistributedSystem(InternalLocator.java:647)[vm0] at org.apache.geode.distributed.internal.InternalLocator.startLocator(InternalLocator.java:309)[vm0] at org.apache.geode.distributed.Locator.startLocator(Locator.java:253)[vm0] at org.apache.geode.distributed.Locator.startLocatorAndDS(Locator.java:140)[vm0] at org.apache.geode.test.junit.rules.LocatorStarterRule.startLocator(LocatorStarterRule.java:78)[vm0] at org.apache.geode.test.junit.rules.LocatorStarterRule.before(LocatorStarterRule.java:59)[vm0] at org.apache.geode.test.dunit.rules.ClusterStartupRule.lambda$startLocatorVM$1c67b668$1(ClusterStartupRule.java:157)[vm0] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[vm0] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)[vm0] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[vm0] at java.lang.reflect.Method.invoke(Method.java:498)[vm0] at hydra.MethExecutor.executeObject(MethExecutor.java:244)[vm0] at org.apache.geode.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:70)[vm0] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[vm0] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)[vm0] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[vm0] at java.lang.reflect.Method.invoke(Method.java:498)[vm0] at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:361)[vm0] at sun.rmi.transport.Transport$1.run(Transport.java:200)[vm0] at sun.rmi.transport.Transport$1.run(Transport.java:197)[vm0] at java.security.AccessController.doPrivileged(Native Method)[vm0] at sun.rmi.transport.Transport.serviceCall(Transport.java:196)[vm0] at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)[vm0] at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)[vm0] at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683)[vm0] at java.security.AccessController.doPrivileged(Native Method)[vm0] at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)[vm0] at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)[vm0] at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)[vm0] at java.lang.Thread.run(Thread.java:748)[vm0] Caused by: java.io.IOException: Cannot create directory at C:\Users\Administrator\geode\geode-core\dunit\vm0\ConfigDiskDir_locator-0[vm0] at org.apache.geode.distributed.internal.ClusterConfigurationService.getConfigurationRegion(ClusterConfigurationService.java:699)[vm0] ... 33 moreThe problem boils down to the use of `Files.list` which sometimes will hold open a directory and prevent its cleanup between tests.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4795" opendate="2018-3-7 00:00:00" fixdate="2018-3-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Inequality queries return UNDEFINED entries</summary>
      <description>The section describing OQL operators http://geode.apache.org/docs/guide/14/developing/query_additional/operators.html should state that inequality queries return results for which the search field is UNDEFINED.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.select.the.select.statement.html.md.erb</file>
      <file type="M">geode-docs.developing.query.additional.supported.keywords.html.md.erb</file>
      <file type="M">geode-docs.developing.query.additional.operators.html.md.erb</file>
      <file type="M">geode-docs.developing.query.additional.literals.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4833" opendate="2018-3-13 00:00:00" fixdate="2018-12-13 01:00:00" resolution="Not A Problem">
    <buginformation>
      <summary>JdbcWriter and JdbcAsyncWriter may fail to write null fields to database</summary>
      <description>Both JdbcWriter and JdbcAsyncWriter end up calling the JDBC method PreparedStatement.setObject with a value of "null" if the pdx field contains "null".This will work with jdbc drivers that support sending "non-typed Null" to the backend database.But some drivers do not support this and these puts will fail with a SQLException.For portability the jdbc connector should be changed to not pass "null" to setObject without a type. </description>
      <version>1.4.0</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.GemFireCacheImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.GemFireCache.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcLoaderIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TableKeyColumnManagerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlStatementFactoryTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.ColumnValueTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.TableKeyColumnManager.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.ColumnValue.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.AbstractJdbcCallback.java</file>
    </fixedFiles>
  </bug>
  <bug id="4835" opendate="2018-3-13 00:00:00" fixdate="2018-4-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>metrics pipeline jobs don&amp;#39;t work</summary>
      <description>python 3 is not installed so the metrics jobs are failing.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.concourse.job.performance.sh</file>
      <file type="M">ci.docker.Dockerfile</file>
    </fixedFiles>
  </bug>
  <bug id="4838" opendate="2018-3-14 00:00:00" fixdate="2018-4-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ClassCastException when registering interest against a Partitioned Region in LonerDistributedSystem</summary>
      <description>This is not a valid use case but we do get a ClassCastException when attempting to register interest on a Partitioned Region in a LonerDistributedSystem (mcast-port=0 and no locator specified).Instead we can detect this scenario and throw an IllegalStateException and a better explanation/message  </description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.ClientRegisterInterestDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterest61.java</file>
    </fixedFiles>
  </bug>
  <bug id="485" opendate="2015-10-23 00:00:00" fixdate="2015-11-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: DeltaSizingDUnitTest.testClientWithCloning</summary>
      <description>Error Messagejava.lang.AssertionError: Suspicious strings were written to the log during this run.Fix the strings or use DistributedTestCase.addExpectedException to ignore.-----------------------------------------------------------------------Found suspect string in log4j at line 96java.net.SocketException: Broken pipeStacktracejava.lang.AssertionError: Suspicious strings were written to the log during this run.Fix the strings or use DistributedTestCase.addExpectedException to ignore.-----------------------------------------------------------------------Found suspect string in log4j at line 96java.net.SocketException: Broken pipe at org.junit.Assert.fail(Assert.java:88) at dunit.standalone.DUnitLauncher.closeAndCheckForSuspects(DUnitLauncher.java:307) at dunit.DistributedTestCase.cleanupAllVms(DistributedTestCase.java:784) at dunit.DistributedTestCase.realTearDown(DistributedTestCase.java:759) at dunit.DistributedTestCase.tearDown(DistributedTestCase.java:737) at junit.framework.TestCase.runBare(TestCase.java:146) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:129) at junit.framework.TestSuite.runTest(TestSuite.java:252) at junit.framework.TestSuite.run(TestSuite.java:247) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Standard OutputPreviously run tests: [DeltaPropagationStatsDUnitTest, RemoveAllDAckDUnitTest, PartitionedRegionEvictionDUnitTest, DeltaSizingDUnitTest]</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.client.internal.pooling.ConnectionManagerImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4856" opendate="2018-3-15 00:00:00" fixdate="2018-1-15 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Public API for retrieving/persisting Cluster Configuration</summary>
      <description>Public API for Cluster Configuration Service: https://cwiki.apache.org/confluence/display/GEODE/Public+API+for+Cluster+Configuration Add @experimental to all the public apis we exposed for this story. </description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalClusterConfigurationServiceTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportImportClusterConfigurationCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DescribeJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalClusterConfigurationService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheConfig.java</file>
    </fixedFiles>
  </bug>
  <bug id="4858" opendate="2018-3-15 00:00:00" fixdate="2018-1-15 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>refactor internal commands to use the public ClusterConfigService</summary>
      <description>except the ones that would need to access the internal cluster configuration regions, like importClusterConfigCommand, exportClusterConfigCommand or deploy use the configuration object as much as possible to pass parameters to the functions.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.CacheConfigTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.exceptions.EntityExistsException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ConfigurePDXCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.DeclarableType.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ConfigurePDXCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ConfigurePDXCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.ModelCommandResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateAsyncEventQueueFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.ObjectType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.ClassNameType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.GfshCommand.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JDBCConnectorFunctionsSecurityTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcCliFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.main.resources.org.apache.geode.internal.sanctioned-geode-connectors-serializables.txt</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcCliFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ExceptionHandler.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionFunction.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.configuration.LuceneClusterConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.remote.CommandExecutorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsShareConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.GfshExecutionStrategy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.CommandResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.remote.OnlineCommandProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateIndexFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ClusterConfigurationLoader.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcClusterConfigDistributedTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommand.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.DestroyGatewayReceiverCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.DestroyGatewayReceiverFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyGatewayReceiverCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DestroyGatewayReceiverFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyGatewayReceiverCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.DiskStoreValidater.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.DiskStoreUpgrader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.DiskStoreCompacter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateDiskStoreFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ValidateDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.UpgradeOfflineDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ShowMissingDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.RevokeMissingDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ListDiskStoresCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportOfflineDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DescribeDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CompactOfflineDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CompactDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.BackupDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.AlterOfflineDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.DistributedSystemBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.DiskStoreType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.DiskDirsType.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.config.JAXBServiceTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.ClasspathScanLoadHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.config.JAXBService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheConfig.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.configuration.ConnectorServiceTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.configuration.ConnectorService.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.CreateDefinedIndexesFunctionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ListJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateJndiBindingFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DestroyJndiBindingFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListJndiBindingFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.remote.CommandExecutor.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyJndiBindingCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyIndexIfExistsTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DestroyIndexFunction.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsIntegrationTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalClusterConfigurationService.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommand.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheElement.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ClusterConfigurationService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ListAsyncEventQueuesCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.domain.AsyncEventQueueDetails.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListAsyncEventQueuesFunction.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListAsyncEventQueuesCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.assertions.CommandResultAssert.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.CacheConfigIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalClusterConfigurationServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.RegionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.IndexType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ClearDefinedIndexesCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DefineIndexCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.IndexDefinition.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.domain.IndexInfo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateDefinedIndexesFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.model.ResultModel.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4860" opendate="2018-3-15 00:00:00" fixdate="2018-5-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>make sure the extensions xsd is upgradable</summary>
      <description>when other module uses a different version of their own xsd (jdbc-2.0.xsd). We should have a strategy to make sure rolling upgrade still work.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.config.JAXBServiceTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4863" opendate="2018-3-15 00:00:00" fixdate="2018-4-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>refactor jdbc commands to use this public api</summary>
      <description>they will need to create a custom config object based on their own xsd.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.ResultBuilder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CliFunctionResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.InternalGfshCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.GfshCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ClusterConfigurationService.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcServiceConfigurationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlGeneratorTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlGeneratorIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.ElementTypeTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TestConfigService.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlToPdxInstanceCreatorTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.RegionMappingTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.RegionMappingBuilderTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.JdbcConnectorServiceTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.DataSourceManagerUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.ConnectionConfigurationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.ConnectionConfigBuilderTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JDBCConnectorFunctionsSecurityTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcClusterConfigDistributedTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandDunitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ExceptionHandler.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.FunctionContextArgumentProvider.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcCliFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.ConnectionConfigBuilder.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.ConnectionConfiguration.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.DataSourceManager.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.HikariJdbcDataSource.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.HikariJdbcDataSourceFactory.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.JdbcConnectorService.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.JdbcConnectorServiceImpl.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.JdbcDataSourceFactory.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.RegionMapping.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.RegionMappingBuilder.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlToPdxInstanceCreator.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.xml.ElementType.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlGenerator.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcServiceConfiguration.java</file>
      <file type="M">geode-connectors.src.main.resources.META-INF.schemas.geode.apache.org.schema.jdbc.jdbc-1.0.xsd</file>
      <file type="M">geode-connectors.src.main.resources.org.apache.geode.internal.sanctioned-geode-connectors-serializables.txt</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4864" opendate="2018-3-15 00:00:00" fixdate="2018-3-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document new gfsh create jndi binding command</summary>
      <description>The new gfsh command to create a JNDI binding was included in Geode 1.5, but the documentation of the command was forgotten. This ticket is to complete the documentation of the new gfsh command.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="4867" opendate="2018-3-16 00:00:00" fixdate="2018-4-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Query execution time expiration must stop all query execution</summary>
      <description>Current behavior :When the query execution time expires in the QueryMonitor, the isCancelled boolean is set. But this is used in only once in the executeQueryOnRemoteAndLocalNodes in DefaultQuery but this is checked at the end after the entire query is executed.This results in entire query being executed even though the time for query execution had expired.Solution :The time expiration flag needs to be checked in a similar fashion as isLowMemory, which is checked in nearly every step of execution of the query hence the query is stopped when the execution time had expired.&amp;#91;no checks needed in the index module&amp;#93;</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.ResourceManagerWithQueryMonitorDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.QueryMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionQueryEvaluator.java</file>
    </fixedFiles>
  </bug>
  <bug id="4894" opendate="2018-3-19 00:00:00" fixdate="2018-3-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JDBC connector needs to be work with databases support for mixed case identifiers</summary>
      <description>Currently, the jdbc connector will convert a database column name to all lower case if a region mapping for that column does not exist. But it is possible that the database supports mixed case identifiers in which case the connector should honor the mixed case column name.Also, when the connector is creating the prepared statement, the string it uses does not quote the column names in that string. They should be quoted since the database may support mixed case quoted identifiers. </description>
      <version>1.4.0</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.PdxQueryDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.TypeRegistry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.TypeRegistration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.PeerTypeRegistration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.NullTypeRegistration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.LonerTypeRegistration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.ClientTypeRegistration.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcLoaderIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.ElementTypeTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManagerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManagerIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlToPdxInstanceCreatorTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlStatementFactoryTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.RegionMappingTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.RegionMappingBuilderTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcClusterConfigDistributedTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.ClassWithSupportedPdxFields.java</file>
      <file type="M">geode-connectors.src.main.resources.org.apache.geode.internal.sanctioned-geode-connectors-serializables.txt</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataView.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManager.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.TableMetaData.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlToPdxInstanceCreator.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlStatementFactory.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.RegionMapping.java</file>
    </fixedFiles>
  </bug>
  <bug id="4922" opendate="2018-3-22 00:00:00" fixdate="2018-4-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JDBC connector does not handle java.util.Date</summary>
      <description>Pdx types can have java.util.Date fields or object fields that contain java.util.Date.When these are written that java.util.Date may cause a failure from the jdbc driver if it does not support java.util.Date. Jdbc drivers must support java.sql.Date, java.sql.Time, and java.sql.Timestamp but may not support java.util.Date.The JDBC connector should convert java.util.Date to one of the java.sql interfaces using the data type of the column to determine which one to convert it to.When reading from jdbc back into geode if the pdx field is java.util.Date then we should convert the java.sql.* instance to java.util.Date. It is also possible we should do this conversion if the pdx field is of type object. </description>
      <version>1.4.0</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcLoaderIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlToPdxInstanceCreatorTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlToPdxInstanceCreator.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="4923" opendate="2018-3-22 00:00:00" fixdate="2018-4-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Geode extensions jars to Geode&amp;#39;s classpath</summary>
      <description>The Geode extensions jars will be put in `extensions` directory. And the jars in the `extensions` directory should be added to the classpath of Geode locator/server and `gfsh`. So that Geode will pick up the extensions automatically.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.StartServerCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.StartMemberUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.StartLocatorCommand.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.StartMemberUtilsTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4928" opendate="2018-3-23 00:00:00" fixdate="2018-1-23 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Using a distributed lock to wrap a transaction will not prevent a CommitConflictException if members fail</summary>
      <description>I wrote a function that obtained a dlock and then performed a transaction.  It always operates on the same dlock key and the same keys in my region.  That protects against getting a commit conflict exception BUT this sometimes fails if the JVM holding the lock crashes.  One of the functions appears to get the dlock okay but then its transaction fails when it goes to commit.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.locks.TXLockServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockService.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.DUnitLauncher.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.internal.InternalBlackboard.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.DUnitBlackboard.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXFarSideCMTracker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.locks.TXLessorDepartureHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockLessorDepartureHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockGrantor.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DlockAndTxlockRegressionTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="4933" opendate="2018-3-23 00:00:00" fixdate="2018-3-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Entry Expiration on Replicate region does not function correctly for Normal or Preloaded regions</summary>
      <description>When eviction with local destroy action (which causes the data policy to be "preloaded") or a caching proxy ("normal" data policy) is involved in get actions, last access time-based expiration does not take into account those members. Members of these types are not included in the list of members to query about last access time for the possibly expiring event and this results in incorrect behavior: expiration of the recently accessed entry.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ReplicateEntryIdleExpirationDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PREntryIdleExpirationDistributedTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LatestLastAccessTimeOperation.java</file>
    </fixedFiles>
  </bug>
  <bug id="5001" opendate="2018-4-5 00:00:00" fixdate="2018-5-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update logj4 dependency to better integrate with Spring</summary>
      <description>The current geode log4j dependency is v2.8.2. Spring (Boot, Data, etc) use log4j v2.11.0. This make integration challenging. We should upgrade our dependency to match Spring. This will make it easier for our users to write geode applications.Checking for other updates usinggradle dependencyUpdatesfind . -name report.txt | xargs grep -e "\]$" | grep -v "org.apache.geode" | tr -s " " | cut -d' ' -f3- | sort | uniq | lessshow that we have some other libraries that can be updated as well:com.fasterxml.jackson.core:jackson-annotations [2.9.4 -&gt; 2.9.5]com.fasterxml.jackson.core:jackson-core [2.9.4 -&gt; 2.9.5]com.fasterxml.jackson.core:jackson-databind [2.9.4 -&gt; 2.9.5]com.fasterxml.jackson.module:jackson-module-scala_2.10 [2.9.4 -&gt; 2.9.5]com.google.guava:guava [24.0-jre -&gt; 24.1-jre]com.google.protobuf:protoc [3.5.1 -&gt; 3.5.1-1]com.zaxxer:HikariCP [2.7.6 -&gt; 3.0.0]</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">extensions.geode-modules-session.src.test.java.org.apache.geode.modules.session.junit.PerTestClassLoaderRunner.java</file>
      <file type="M">gradle.dependency-versions.properties</file>
    </fixedFiles>
  </bug>
  <bug id="5002" opendate="2018-4-5 00:00:00" fixdate="2018-1-5 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Create a sub-module geode-test</summary>
      <description>Having dunit framework published to maven can enable users &amp; developers to write integration tests, especially for developers who intended to extend the server side functionality. Create a new sub-module `geode-test` Move dunit framework, junit rules and related classes to this sub-module Publish geode-test artifact to maven</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.examples.LocatorPortClusterExampleTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.StatisticsTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.SnapshotTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.RegionsTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.PersistenceTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.PartitioningTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.OffHeapTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.LoggingTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.JMXTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.JDBCConnectorTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.HttpSessionTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.EvictionTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.ConfigurationTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.CompressionTest.java</file>
      <file type="M">geode-test.src.test.resources.org.apache.geode.test.compiler.ConcreteClass.java</file>
      <file type="M">geode-test.src.test.resources.org.apache.geode.test.compiler.AbstractClass.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.runners.CategoryWithParameterizedRunnerFactoryTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.TemporaryFileRuleTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.serializable.SerializableTimeoutTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.serializable.SerializableTestWatcherTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.serializable.SerializableTestNameTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.serializable.SerializableTemporaryFolderTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.serializable.SerializableRuleListTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.serializable.SerializableExternalResourceTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.RuleListTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.RetryRuleLocalWithExceptionTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.RetryRuleLocalWithErrorTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.RetryRuleGlobalWithExceptionTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.RetryRuleGlobalWithErrorTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.RestoreLocaleRuleTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.RepeatRuleTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.IgnoreUntilRuleTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.ExpectedTimeoutRuleTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.ExecutorServiceRuleTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.ExecutorServiceRuleIntegrationTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.examples.RuleAndClassRuleTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.examples.RetryRuleExampleTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.rules.examples.RepeatingTestCasesExampleTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.categories.CategoryTwo.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.categories.CategoryTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.junit.categories.CategoryOne.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.dunit.standalone.VersionManagerJUnitTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.concurrent.FileBasedCountDownLatchTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.compiler.UncompiledSourceCodeTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.compiler.JavaCompilerTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.compiler.JarBuilderTest.java</file>
      <file type="M">geode-test.src.test.java.org.apache.geode.test.compiler.ClassNameExtractorTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.support.IgnoreConditionEvaluationException.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.support.DefaultIgnoreCondition.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.runners.TestRunner.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.runners.SuiteRunner.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.runners.SuiteBlockRunner.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.runners.ExposedGetAnnotations.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.runners.CategoryWithParameterizedRunnerFactory.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.runners.CategoryWithParameterizedRunner.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.VMProvider.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.UseJacksonForJsonPathRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.TemporaryFileRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.ServerStarterRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.Server.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableTimeout.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableTestWatcher.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableTestRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableTestName.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableTemporaryFolder.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableStatement.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableRuleList.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableExternalResource.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableErrorCollector.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.serializable.FieldsOfTimeout.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.serializable.FieldsOfTestName.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.serializable.FieldsOfTemporaryFolder.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.serializable.FieldSerializationUtils.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.RuleList.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.RetryRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.RestoreTCCLRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.RestoreLocaleRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.RequiresGeodeHome.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.RepeatRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.MemberStarterRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.Member.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.MBeanServerConnectionRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.LocatorStarterRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.Locator.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.JarFileRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.IgnoreUntilRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.gfsh.internal.StreamGobbler.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.gfsh.internal.ProcessLogger.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.gfsh.internal.OutputLine.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.gfsh.GfshScript.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.gfsh.GfshRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.gfsh.GfshExecution.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.GfshParserRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.GfshCommandRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.ExpectedTimeoutRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.ExecutorServiceRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.DiskDirRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.DescribedExternalResource.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.ConnectionConfiguration.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.ConditionalIgnoreRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.ClientCacheRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.rules.accessible.AccessibleRestoreSystemProperties.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.Retry.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.ResultCaptor.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.Repeat.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.IgnoreUntil.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.IgnoreCondition.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.ConditionalIgnore.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.WanTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.UnitTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.UITest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.StatisticsTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.SnapshotTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.SessionTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.SerializationTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.SecurityTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.RestAPITest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.RegionsTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.RedisTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.PulseTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.PersistenceTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.PerformanceTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.PartitioningTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.OQLQueryTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.OQLIndexTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.OffHeapTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.MembershipTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.ManagementTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.LuceneTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.LoggingTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.JMXTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.JDBCConnectorTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.IntegrationTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.HydraTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.HttpSessionTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.GfshTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.FunctionServiceTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.FlakyTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.EvictionTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.DLockTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.DistributedTransactionsTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.DistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.ContainerTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.ConfigurationTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.CompressionTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.ClientSubscriptionTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.ClientServerTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.BackwardCompatibilityTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.AEQTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.categories.AcceptanceTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.assertions.CommandResultExecution.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.junit.assertions.CommandResultAssert.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.WaitCriterion.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.Wait.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.VM.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.ThreadUtils.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.tests.VMDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.tests.OverridingGetPropertiesDisconnectsAllDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.tests.GetUniqueNameDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.tests.GetTestMethodNameDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.tests.GetPidAndIdDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.tests.GetPidAndIdAfterBounceDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.tests.GetDefaultDiskStoreNameDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.tests.GetCurrentVmNumDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.tests.BasicDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.StoppableWaitCriterion.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.standalone.VersionManager.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.standalone.StandAloneDUnitEnv.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.standalone.RemoteDUnitVMIF.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.standalone.RemoteDUnitVM.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.standalone.DUnitLauncher.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.standalone.ChildVM.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.standalone.BounceResult.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.SerializableRunnableIF.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.SerializableRunnable.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.SerializableCallableIF.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.SerializableCallable.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.tests.SharedErrorCollectorDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.tests.SharedCountersRuleDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.tests.MemberStarterRuleTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.tests.DistributedTestRuleDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.tests.DistributedRestoreSystemPropertiesDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.tests.ClusterStartupRuleCanSpecifyOlderVersionsDUnitTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.tests.CacheRuleDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.tests.CacheRuleBuilderDistributedTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.SharedErrorCollector.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.SharedCountersRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.RemoteInvoker.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.MemberVM.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.DistributedUseJacksonForJsonPathRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.DistributedTestRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.DistributedRestoreSystemProperties.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.DistributedExternalResource.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.DistributedDiskDirRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.ClusterStartupRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.ClientVM.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.ClientCacheRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.CleanupDUnitVMsRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.CacheRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.rules.AbstractDistributedTestRule.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.RMIException.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.RepeatableRunnable.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.NetworkUtils.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.NamedRunnable.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.NamedCallable.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.LogWriterUtils.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.LocalVM.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.Jitter.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.Invoke.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.internal.JUnit4DistributedTestCase.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.internal.InternalBlackboardImpl.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.internal.InternalBlackboard.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.internal.DUnitBlackboardDUnitTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.internal.DistributedTestFixture.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.IgnoredException.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.Host.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.examples.ReplaceTryFinallyExampleTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.examples.LocatorPortClusterExampleTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.examples.InvokeRunnableExampleTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.examples.FixtureOrderingExampleTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.examples.DoNotHandleUnexpectedExceptionExampleTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.examples.DistributedTestRuleExampleTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.examples.DistributedTestCaseExampleTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.examples.CatchingUnexpectedExceptionExampleTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.examples.BeforeClassExampleTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.examples.AsyncInvokeRunnableExampleTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.examples.AsyncInvokeCallableExampleTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.DUnitEnv.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.DUnitBlackboard.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.DistributedTestUtils.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.DistributedTestCase.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.Disconnect.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.cache.internal.JUnit4CacheTestCase.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.cache.internal.CacheTestFixture.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.cache.examples.CacheTestCaseExampleTest.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.cache.CacheTestCase.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.AsyncInvocation.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.dunit.Assert.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.concurrent.FileBasedCountDownLatch.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.compiler.UncompiledSourceCode.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.compiler.JavaCompiler.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.compiler.JarBuilder.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.compiler.CompiledSourceCode.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.compiler.ClassNameExtractor.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.test.compiler.ClassBuilder.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.security.templates.UserPasswordAuthInit.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.management.internal.cli.ResultHandler.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.management.internal.cli.HeadlessGfsh.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheServerTestUtil.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.internal.AvailablePortHelper.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.distributed.internal.membership.gms.MembershipManagerHelper.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.cache.util.TxEventTestUtil.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.cache.query.QueryTestUtils.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.cache30.TestCacheWriter.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.cache30.TestCacheLoader.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.cache30.TestCacheListener.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.cache30.TestCacheCallback.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.cache30.RegionTestCase.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.cache30.MultiVMRegionTestCase.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.cache30.ClientServerTestCase.java</file>
      <file type="M">geode-test.src.main.java.org.apache.geode.cache30.CacheSerializableRunnable.java</file>
      <file type="M">geode-test.src.main.java.hydra.SchedulingOrder.java</file>
      <file type="M">geode-test.src.main.java.hydra.MethExecutorResult.java</file>
      <file type="M">geode-test.src.main.java.hydra.MethExecutor.java</file>
      <file type="M">geode-test.src.main.java.batterytest.greplogs.LogConsumer.java</file>
      <file type="M">geode-test.src.main.java.batterytest.greplogs.ExpectedStrings.java</file>
      <file type="M">geode-test.build.gradle</file>
      <file type="M">settings.gradle</file>
      <file type="M">geode-web.build.gradle</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-wan.build.gradle</file>
      <file type="M">geode-rebalancer.build.gradle</file>
      <file type="M">geode-pulse.build.gradle</file>
      <file type="M">geode-protobuf.build.gradle</file>
      <file type="M">geode-old-versions.src.test.java.org.apache.geode.test.dunit.standalone.VersionManagerJUnitTest.java</file>
      <file type="M">geode-old-versions.src.main.java.org.apache.geode.test.dunit.standalone.VersionManager.java</file>
      <file type="M">geode-old-versions.build.gradle</file>
      <file type="M">geode-old-client-support.build.gradle</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-junit.src.test.resources.org.apache.geode.test.compiler.ConcreteClass.java</file>
      <file type="M">geode-junit.src.test.resources.org.apache.geode.test.compiler.AbstractClass.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.runners.CategoryWithParameterizedRunnerFactoryTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.TemporaryFileRuleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.serializable.SerializableTimeoutTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.serializable.SerializableTestWatcherTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.serializable.SerializableTestNameTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.serializable.SerializableTemporaryFolderTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.serializable.SerializableRuleListTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.serializable.SerializableExternalResourceTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.RuleListTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.RetryRuleLocalWithExceptionTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.RetryRuleLocalWithErrorTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.RetryRuleGlobalWithExceptionTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.RetryRuleGlobalWithErrorTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.RestoreLocaleRuleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.RepeatRuleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.IgnoreUntilRuleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.ExpectedTimeoutRuleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.ExecutorServiceRuleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.ExecutorServiceRuleIntegrationTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.examples.RuleAndClassRuleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.examples.RetryRuleExampleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.examples.RepeatingTestCasesExampleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.categories.CategoryTwo.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.categories.CategoryTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.categories.CategoryOne.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.concurrent.FileBasedCountDownLatchTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.compiler.UncompiledSourceCodeTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.compiler.JavaCompilerTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.compiler.JarBuilderTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.compiler.ClassNameExtractorTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.support.IgnoreConditionEvaluationException.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.support.DefaultIgnoreCondition.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.runners.TestRunner.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.runners.SuiteRunner.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.runners.SuiteBlockRunner.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.runners.ExposedGetAnnotations.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.runners.CategoryWithParameterizedRunnerFactory.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.runners.CategoryWithParameterizedRunner.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.UseJacksonForJsonPathRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.TemporaryFileRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableTimeout.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableTestWatcher.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableTestRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableTestName.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableTemporaryFolder.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableStatement.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableRuleList.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableExternalResource.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableErrorCollector.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.FieldsOfTimeout.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.FieldsOfTestName.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.FieldsOfTemporaryFolder.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.FieldSerializationUtils.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.RuleList.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.RetryRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.RestoreTCCLRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.RestoreLocaleRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.RequiresGeodeHome.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.RepeatRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.JarFileRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.IgnoreUntilRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.gfsh.internal.StreamGobbler.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.gfsh.internal.ProcessLogger.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.gfsh.internal.OutputLine.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.gfsh.GfshScript.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.gfsh.GfshRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.gfsh.GfshExecution.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.ExpectedTimeoutRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.ExecutorServiceRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.DescribedExternalResource.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.ConditionalIgnoreRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.accessible.AccessibleRestoreSystemProperties.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.Retry.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.ResultCaptor.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.Repeat.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.IgnoreUntil.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.IgnoreCondition.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.ConditionalIgnore.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.WanTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.UnitTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.UITest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.SessionTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.SerializationTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.SecurityTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.RestAPITest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.RedisTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.PulseTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.PerformanceTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.OQLQueryTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.OQLIndexTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.MembershipTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.ManagementTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.LuceneTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.IntegrationTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.HydraTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.GfshTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.FunctionServiceTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.FlakyTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.DLockTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.DistributedTransactionsTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.DistributedTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.ContainerTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.ClientSubscriptionTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.ClientServerTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.BackwardCompatibilityTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.AEQTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.categories.AcceptanceTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.concurrent.FileBasedCountDownLatch.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.compiler.UncompiledSourceCode.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.compiler.JavaCompiler.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.compiler.JarBuilder.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.compiler.CompiledSourceCode.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.compiler.ClassNameExtractor.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.compiler.ClassBuilder.java</file>
      <file type="M">geode-junit.build.gradle</file>
      <file type="M">geode-json.build.gradle</file>
      <file type="M">geode-experimental-driver.build.gradle</file>
      <file type="M">geode-cq.build.gradle</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.VMProvider.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.ServerStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.Server.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.MemberStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.Member.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.MBeanServerConnectionRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.LocatorStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.Locator.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.GfshParserRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.GfshCommandRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.DiskDirRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.ConnectionConfiguration.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.ClientCacheRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.assertions.CommandResultExecution.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.assertions.CommandResultAssert.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.WaitCriterion.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.Wait.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.VM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.ThreadUtils.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.VMDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.OverridingGetPropertiesDisconnectsAllDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.GetUniqueNameDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.GetTestMethodNameDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.GetPidAndIdDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.GetPidAndIdAfterBounceDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.GetDefaultDiskStoreNameDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.GetCurrentVmNumDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.BasicDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.StoppableWaitCriterion.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.StandAloneDUnitEnv.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.RemoteDUnitVMIF.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.RemoteDUnitVM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.DUnitLauncher.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.ChildVM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.BounceResult.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.SerializableRunnableIF.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.SerializableRunnable.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.SerializableCallableIF.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.SerializableCallable.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.tests.SharedErrorCollectorDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.tests.SharedCountersRuleDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.tests.MemberStarterRuleTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.tests.DistributedTestRuleDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.tests.DistributedRestoreSystemPropertiesDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.tests.ClusterStartupRuleCanSpecifyOlderVersionsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.tests.CacheRuleDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.tests.CacheRuleBuilderDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.SharedErrorCollector.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.SharedCountersRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.RemoteInvoker.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.MemberVM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.DistributedUseJacksonForJsonPathRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.DistributedTestRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.DistributedRestoreSystemProperties.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.DistributedExternalResource.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.DistributedDiskDirRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.ClusterStartupRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.ClientVM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.ClientCacheRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.CleanupDUnitVMsRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.CacheRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.AbstractDistributedTestRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.RMIException.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.RepeatableRunnable.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.NetworkUtils.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.NamedRunnable.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.NamedCallable.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.LogWriterUtils.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.LocalVM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.Jitter.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.Invoke.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.internal.JUnit4DistributedTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.internal.InternalBlackboardImpl.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.internal.InternalBlackboard.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.internal.DUnitBlackboardDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.internal.DistributedTestFixture.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.IgnoredException.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.Host.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.examples.ReplaceTryFinallyExampleTest.java</file>
      <file type="M">extensions.geode-modules-session.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat7.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat8.build.gradle</file>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.test.junit.rules.GfshRuleTest.java</file>
      <file type="M">geode-common.build.gradle</file>
      <file type="M">geode-connectors.build.gradle</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-core.src.test.java.batterytest.greplogs.ExpectedStrings.java</file>
      <file type="M">geode-core.src.test.java.batterytest.greplogs.LogConsumer.java</file>
      <file type="M">geode-core.src.test.java.hydra.MethExecutor.java</file>
      <file type="M">geode-core.src.test.java.hydra.MethExecutorResult.java</file>
      <file type="M">geode-core.src.test.java.hydra.SchedulingOrder.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheSerializableRunnable.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.ClientServerTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.MultiVMRegionTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.RegionTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.TestCacheCallback.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.TestCacheListener.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.TestCacheLoader.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.TestCacheWriter.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.QueryTestUtils.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.util.TxEventTestUtil.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.MembershipManagerHelper.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.AvailablePortHelper.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.CacheServerTestUtil.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.HeadlessGfsh.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.ResultHandler.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.templates.UserPasswordAuthInit.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.Assert.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.AsyncInvocation.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.cache.CacheTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.cache.examples.CacheTestCaseExampleTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.cache.internal.CacheTestFixture.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.cache.internal.JUnit4CacheTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.Disconnect.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.DistributedTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.DistributedTestUtils.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.DUnitBlackboard.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.DUnitEnv.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.examples.AsyncInvokeCallableExampleTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.examples.AsyncInvokeRunnableExampleTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.examples.BeforeClassExampleTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.examples.CatchingUnexpectedExceptionExampleTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.examples.DistributedTestCaseExampleTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.examples.DistributedTestRuleExampleTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.examples.DoNotHandleUnexpectedExceptionExampleTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.examples.FixtureOrderingExampleTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.examples.InvokeRunnableExampleTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5007" opendate="2018-4-5 00:00:00" fixdate="2018-4-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add unit tests for TabularResultData</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.result.TabularResultDataTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5014" opendate="2018-4-5 00:00:00" fixdate="2018-7-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replace org.json with Jackson in geode-assembly</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.test.junit.rules.HttpResponseAssert.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.SwaggerVerificationIntegrationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestServersIntegrationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityPostProcessorTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityIntegrationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestRegionAPIDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestQueryAndFunctionIntegrationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPITestBase.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPIsWithSSLDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPIsAndInterOpsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5016" opendate="2018-4-5 00:00:00" fixdate="2018-3-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replace org.json with Jackson in geode-web-api</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-pulse.build.gradle</file>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.build.gradle</file>
      <file type="M">geode-json.src.test.resources.sample-01.json</file>
      <file type="M">geode-json.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-json.src.main.java.org.json.JSONTokener.java</file>
      <file type="M">geode-json.src.main.java.org.json.JSONStringer.java</file>
      <file type="M">geode-json.src.main.java.org.json.JSONString.java</file>
      <file type="M">geode-json.src.main.java.org.json.JSONObject.java</file>
      <file type="M">geode-json.src.main.java.org.json.JSONException.java</file>
      <file type="M">geode-json.src.main.java.org.json.JSONArray.java</file>
      <file type="M">geode-json.src.main.java.org.json.JSON.java</file>
      <file type="M">geode-json.build.gradle</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.internal.ProcessManager.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.pdx.JSONFormatVerifyUtility.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.result.InfoResultDataTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.json.GfJsonArrayTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.AbstractResultData.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.json.GfJsonObject.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.json.GfJsonArray.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.QueryDataDUnitTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">extensions.geode-modules-assembly.release.session.bin.modify.war</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.util.JSONUtils.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.FunctionAccessController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.CommonCrudController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.AbstractBaseController.java</file>
      <file type="M">geode-web-api.src.integrationTest.java.org.apache.geode.rest.internal.web.controllers.RestAccessControllerTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5029" opendate="2018-4-6 00:00:00" fixdate="2018-4-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve docs for query timeout and low memory due to a query</summary>
      <description>The section labeled "Monitoring Queries for Low Memory" can use a bit of improvement. Separate the section into 2 sections: Queries and low memory Query timeout Make the prose clear that this is not just about monitoring, but about action that is taken (exceptions thrown) for queries.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.additional.advanced.querying.html.md.erb</file>
      <file type="M">geode-docs.developing.querying.basics.monitor.queries.for.low.memory.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="503" opendate="2015-10-27 00:00:00" fixdate="2015-12-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode can leak SSL keystore password via the log file</summary>
      <description>KeyStore password can be leaked via the log file, as this may get printed and is unintended. This could cause a security issue for some users by leaking information that could allow access to the keystore holding the SSL certificate used to validate connections between members.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.AbstractConfig.java</file>
    </fixedFiles>
  </bug>
  <bug id="5032" opendate="2018-4-9 00:00:00" fixdate="2018-12-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Massage Configuration Objects for Better Intuition.</summary>
      <description>For instance, various port fields are declared as Strings where an Integer makes more sense. This is true for many "count" fields as well.These may be best resolved via a JAXB bindings file and regenerating the POJOs from scratch. Additionally if all the minor adjustments that have been already made (removing the xsd:choice and manually enforcing it, having each item implement CacheElement and have a getId() method) can also be resolved via a bindings file, then the POJOs could be removed from the git tree and generated during the build step, if desired.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ListJndiBindingFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.DestroyJndiBindingFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.config.JAXBServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.CacheConfigDAODUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.DeclarableTypeTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverFunctionArgs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateJndiBindingFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateAsyncEventQueueFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportImportClusterConfigurationCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DescribeJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateGatewayReceiverCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.SerializationRegistrationType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.PoolType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.JndiBindingsType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.DiskDirsType.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.CacheConfigTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ConfigurePDXCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.StringType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.ServerType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.RegionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.RegionAttributesType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.PdxType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.ParameterType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.InitializerType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.FunctionServiceType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.ExpirationAttributesType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.DeclarableType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.ClassWithParametersType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheWriterType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheTransactionManagerType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheLoaderType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheConfig.java</file>
    </fixedFiles>
  </bug>
  <bug id="5048" opendate="2018-4-11 00:00:00" fixdate="2018-4-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Availability Indicator for "list jndi-bindings", "list jdbc-connections" and "list jdbc-mappings" are wrong</summary>
      <description>those commands, when not connected to a locator, should be listed as "not available" in gfsh help, but they are listed as "available".</description>
      <version>1.4.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CommandAvailabilityIndicatorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ListJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CommandAvailabilityIndicator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.GfshCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="5103" opendate="2018-4-18 00:00:00" fixdate="2018-4-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>During rebalance, a client node may miss a transactional event</summary>
      <description>During rebalance, a new primary bucket could be created on another node while the original primary bucket become secondary in a short period of time. If a transaction occurs on the primary bucket node, TXCommitMessage will be sent to the secondary primary bucket node. There is a race that a event could be missed to be added to the subscription queue when the now secondary bucket is being removed to satisfy the redundancy.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug id="5104" opendate="2018-4-18 00:00:00" fixdate="2018-4-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI output git SHA when updating passing reference file.</summary>
      <description>When concourse updates the file indicating the SHA that has passed all tests, print it out.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.update-passing-ref.sh</file>
    </fixedFiles>
  </bug>
  <bug id="5106" opendate="2018-4-18 00:00:00" fixdate="2018-4-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI Failure: ParallelWANConflationOffHeapDUnitTest.testParallelPropagationBatchConflation failed with AssertionError</summary>
      <description>https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/DistributedTest/builds/282org.apache.geode.internal.cache.wan.offheap.ParallelWANConflationOffHeapDUnitTest &gt; testParallelPropagationBatchConflation FAILEDjava.lang.AssertionError: Event in secondary queue should be 0 after dispatched expected:&lt;0&gt; but was:&lt;11&gt;</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelWANConflationDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5109" opendate="2018-4-19 00:00:00" fixdate="2018-5-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Concurrent create lucene reindex ops must fail</summary>
      <description>Concurrent lucene reindex ops originating with same index profile must fail.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesReindexDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneServiceImplJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CreateRegionProcessor.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneServiceImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="5111" opendate="2018-4-19 00:00:00" fixdate="2018-5-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>show missing-disk-stores sometimes does not show the missing disk stores</summary>
      <description>When geode logs are showing there is in fact a missing disk store, running the show-missing-disk-store command sometimes returns that there are no missing disk stores</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.SystemPropertyHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheDistributionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketPersistenceAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug id="5114" opendate="2018-4-19 00:00:00" fixdate="2018-4-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Archive UITest results</summary>
      <description>It would be great to archive test results for concourse job UITest.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  <bug id="5118" opendate="2018-4-20 00:00:00" fixdate="2018-4-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix common typos in strings and comments</summary>
      <description>Some string literals and comments contain common typographical errors, e.g., "teh" instead of "the". These ought to be fixed.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.PdxBasedCrudController.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.GatewayReceiverImplJUnitTest.java</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.lib.jquery.sparkline.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.lib.jquery.jqGrid.src.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.lib.jquery-1.7.2.js</file>
      <file type="M">geode-pulse.src.main.webapp.regionDetail.html</file>
      <file type="M">geode-pulse.src.main.webapp.queryStatistics.html</file>
      <file type="M">geode-pulse.src.main.webapp.memberDetails.html</file>
      <file type="M">geode-pulse.src.main.webapp.dataBrowser.html</file>
      <file type="M">geode-pulse.src.main.webapp.css.style.css</file>
      <file type="M">geode-pulse.src.main.webapp.css.popup.css</file>
      <file type="M">geode-pulse.src.main.webapp.clusterDetail.html</file>
      <file type="M">geode-old-versions.src.test.java.org.apache.geode.test.dunit.standalone.VersionManagerJUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.tier.sockets.DurableClientTestCase.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.PRDeltaPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.RedundancyLevelPart3DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.InterestListEndpointDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.Bug36805DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.Bug36269DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistentPartitionedRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionSingleNodeOperationsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.OplogJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.TestBlockingHARegionQueue.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.PutAllDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.OperationsPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.HASlowReceiverDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.HARegionQueueDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.HARegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.HAEventIdPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.EventIdOptimizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.BlockingHARegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.FaultingInJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegRecoveryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegCachexmlGeneratorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DeltaPropagationStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DeltaPropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ClientServerInvalidAndDestroyedEntryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupFileCopierIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.partitioned.PRQueryDUnitHelper.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.ResultsCollectionWrapperLimitJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.ResultsBagLimitBehaviourJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.NWayMergeResultsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.ConcurrentIndexInitOnOverflowRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.AsynchIndexMaintenanceJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.QueryUsingFunctionContextDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheMapTxnDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.main.WANBootStrapping.Site2.Add.java</file>
      <file type="M">geode-core.src.test.java.com.main.MyDistributedSystemListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.ExportLogsCacheWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.GfshParser.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.jta.TransactionManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalInstantiator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.datasource.AbstractPoolCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPITestBase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.MBeanUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ExecuteFunctionOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.aggregate.CountPRQueryNode.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.Bag.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledIndexOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledSelect.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.ExecutionContext.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.AbstractMapIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.CompactRangeIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.FunctionalIndexCreationHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.HashIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.IndexData.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.MemoryIndexStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.MapIndexable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.QCompiler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.ResultsBag.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.ResultsCollectionWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.SortedStructBag.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.StructBag.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.SelectResults.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.deadlock.DependencyGraph.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.CacheCollector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupFileCopier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.DistributedRegionFunctionResultSender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.FunctionStreamingResultCollector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.LocalResultCollectorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.MemberFunctionExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.MemberFunctionResultSender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.PartitionedRegionFunctionResultSender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.PartitionedRegionFunctionResultWaiter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.StreamingFunctionOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ha.HARegionQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InitialImageOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionQueryEvaluator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.BucketBackupMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.FlushMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.IndexCreationMsg.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PRFunctionStreamingResultCollector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RegionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RemoveIndexesMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientHealthMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetAllForRI.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.UnregisterInterest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXManagerImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="512" opendate="2015-10-28 00:00:00" fixdate="2015-10-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>unit test suspect string detector needs to provide more info</summary>
      <description>The suspect string detector used by the unit test framework only gives a single line that is suspect. This makes it hard to fix suspect string tickets.Often times the suspect is the beginning of a exception stack. If the entire call stack was included it would be helpful.Also having some context around the suspect string can help. For example what thread logged the suspect and what happened right before and after the suspect can help.Often times the actual logs are no longer available and getting the suspect string to reproduce can take lots of time.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.batterytest.greplogs.LogConsumer.java</file>
    </fixedFiles>
  </bug>
  <bug id="5130" opendate="2018-4-24 00:00:00" fixdate="2018-1-24 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Refactor pipeline in anticipation of PR pipeline</summary>
      <description>In order to facilitate the upcoming PR Pipeline functionality, refactor the geode pipeline to be branch-independent, and dry up configuration via templates.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.yml</file>
      <file type="M">ci.pipelines.develop.yml</file>
      <file type="M">ci.pipelines.geode-build.base.yml</file>
      <file type="M">ci.scripts.test-run.sh</file>
    </fixedFiles>
  </bug>
  <bug id="5255" opendate="2018-5-25 00:00:00" fixdate="2018-5-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In a race condition, a colocated bucket may not be created during rebalance when member nodes are restarted</summary>
      <description>During rebalance, a member node may request a newly started member node to grab a bucket from a parent partitioned region based on its calculated model. When the new member creates the parent bucket, it is required to grab the bucket's colocated child buckets. If the colocated child bucket underlying partitioned region is not yet initialized, the child bucket will not be created on the member.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.7.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.ManageBackupBucketMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
    </fixedFiles>
  </bug>
  <bug id="5302" opendate="2018-6-8 00:00:00" fixdate="2018-6-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>the totalLiveCount should be set to 0 after oplog is compacted (all live data has been copied forward to new oplog)</summary>
      <description>There are race conditions in which liveEntries list is empty but the liveCount has not yet been decremented. liveCount should be set to 0 after liveEntries list is successfully copied forward.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.7.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Oplog.java</file>
    </fixedFiles>
  </bug>
  <bug id="5307" opendate="2018-6-8 00:00:00" fixdate="2018-6-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Hang with servers all in waitForPrimaryMember and one server in NO_PRIMARY_HOSTING state</summary>
      <description>I've run into a hang in a test where servers are continuously creating PRs, doing putAll ops on them and closing/local-destroying the PR. Sometimes the servers hang with any thread needing a particular bucket in waitingForPrimaryMember().This seems to happen because of this sequence of events:1. two servers create a partitioned region2. one server initiates a putAll and requests the other server manage a bucket3. the putAll server closes or locally-destroys its region4. the close() operation completes5. the other server initializes its bucket and still uses the requesting server as a primaryElector. This keeps it from deciding to volunteer to become primary.The problem is that the server that closed its region caused exceptions to be thrown in the putAll thread and abandon creation of the bucket. No-one will ever trip the switch that makes the other server become the primary for the bucket.</description>
      <version>1.1.0,1.2.0,1.2.1,1.3.0,1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.Host.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BucketAdvisorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PRHARedundancyProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RegionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug id="5308" opendate="2018-6-11 00:00:00" fixdate="2018-8-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - simplify terminology: "cache transactions" can be "transactions"</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.with.external.db.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.monitor.troubleshoot.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.how.cache.transactions.work.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.data.location.cache.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transaction.performance.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.by.region.type.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5311" opendate="2018-6-11 00:00:00" fixdate="2018-6-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - simplify navigation for "Client Transactions" section</summary>
      <description>The "Client Transactions" section has short subsections which do not need entries in the left-hand navigation pane. Remove the subnav links for those subsections.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5313" opendate="2018-6-11 00:00:00" fixdate="2018-8-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - consolidate transaction coding examples</summary>
      <description>The examples are short, but currently housed in separate files.Merge into a single file, simplify left-hand nav.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.suspend.resume.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.coding.examples.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactions.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactional.function.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.jca.adapter.example.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5318" opendate="2018-6-12 00:00:00" fixdate="2018-8-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>create defined index does not update cluster config if methods are invoked in the from clause</summary>
      <description>Steps to reproduce the issue. start locator start server create region define index as "define index --name=index --region="Member.entrySet" --expression="value.getId" " create defined indexesThis is will result in a failure causing no updates to the cluster config for the newly created indexes, even though the indexes are created. So when a server is restarted , it won't recreate these indexes.Cause of the problem:We try to extract the region name to update the cluster config from the index's "from clause".We end up getting &lt;region_name&gt;.entrySet . But there are no region named as such so no updates to the cluster config. Solution  Use the fix for GEODE-2764 where we can extract the proper region name from the "from clause"problematic code:RegionConfig region = config.findRegionConfiguration(index.getFromClause());fix:String regionPath = getValidRegionName(index.getFromClause(), config);RegionConfig regionConfig = config.findRegionConfiguration(regionPath);Example:Below we can see an complete execution in gfsh which leads to this failure. Including the failure to update the config and inability of the server to recreate the index after being restarted._________________________ __ / _____/ ______/ ______/ /____/ / / / __/ /___ /_____ / _____ / / /__/ / ____/ _____/ / / / / /______/_/ /______/_/ /_/ 1.8.0-SNAPSHOTMonitor and Manage Apache Geodegfsh&gt;start locatorStarting a Geode Locator in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/untie-happy-can.......Locator in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/untie-happy-can on 10.0.0.40[10334] as untie-happy-can is currently online.Process ID: 29310Uptime: 4 secondsGeode Version: 1.8.0-SNAPSHOTJava Version: 1.8.0_161Log File: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/untie-happy-can/untie-happy-can.logJVM Arguments: -Dgemfire.enable-cluster-configuration=true -Dgemfire.load-cluster-configuration-from-dir=false -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806Class-Path: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-core-1.8.0-SNAPSHOT.jar:/home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-dependencies.jarSuccessfully connected to: JMX Manager [host=10.0.0.40, port=1099]Cluster configuration service is up and running.gfsh&gt;start serverStarting a Geode Server in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo......Server in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo on 10.0.0.40[40404] as fix-vast-kilo is currently online.Process ID: 29498Uptime: 2 secondsGeode Version: 1.8.0-SNAPSHOTJava Version: 1.8.0_161Log File: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo/fix-vast-kilo.logJVM Arguments: -Dgemfire.default.locators=10.0.0.40[10334] -Dgemfire.start-dev-rest-api=false -Dgemfire.use-cluster-configuration=true -XX:OnOutOfMemoryError=kill -KILL %p -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806Class-Path: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-core-1.8.0-SNAPSHOT.jar:/home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-dependencies.jargfsh&gt;create region --name=Member --type=PARTITION Member | Status------------- | -------------------------------------------fix-vast-kilo | Region "/Member" created on "fix-vast-kilo"gfsh&gt;define index --name=memberPartyIdIndex --expression="value.getPartyId" --region="/Member.entrySet"Index successfully defined with following detailsName : memberPartyIdIndexExpression : value.getPartyIdRegionPath : /Member.entrySetgfsh&gt;create defined indexes Member | Status | Message--------------------------------------- | ------ | --------------------------------10.0.0.40(fix-vast-kilo:29498)&lt;v1&gt;:1025 | OK | Created index memberPartyIdIndexfailed to update cluster config for cluster. Reason: RegionConfig is nullgfsh&gt;list indexes Member Name | Member ID | Region Path | Name | Type | Indexed Expression | From Clause | Valid Index------------- | --------------------------------------- | ----------- | ------------------ | ----- | ------------------ | ---------------- | -----------fix-vast-kilo | 10.0.0.40(fix-vast-kilo:29498)&lt;v1&gt;:1025 | /Member | memberPartyIdIndex | RANGE | value.getPartyId | /Member.entrySet | truegfsh&gt;stop server --nameoptional --name: Member name or ID of the Cache Server in the Geode cluster.; no default valuegfsh&gt;stop server --name=fix-vast-kiloStopping Cache Server running in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo on 10.0.0.40[40404] as fix-vast-kilo...Process ID: 29498Log File: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo/fix-vast-kilo.log...gfsh&gt;start server --nameoptional --name: The member name to give this Cache Server in the Geode cluster.; no default valuegfsh&gt;start server --nameoptional --name: The member name to give this Cache Server in the Geode cluster.; no default valuegfsh&gt;start server --name=fix-vast-kiloStarting a Geode Server in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo......Server in /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo on 10.0.0.40[40404] as fix-vast-kilo is currently online.Process ID: 29893Uptime: 2 secondsGeode Version: 1.8.0-SNAPSHOTJava Version: 1.8.0_161Log File: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/bin/fix-vast-kilo/fix-vast-kilo.logJVM Arguments: -Dgemfire.default.locators=10.0.0.40[10334] -Dgemfire.start-dev-rest-api=false -Dgemfire.use-cluster-configuration=true -XX:OnOutOfMemoryError=kill -KILL %p -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806Class-Path: /home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-core-1.8.0-SNAPSHOT.jar:/home/nabarun/Documents/codeWork/dev2/gemfire/open/geode-assembly/build/install/apache-geode/lib/geode-dependencies.jargfsh&gt;list regionList of regions---------------Membergfsh&gt;list indexesNo Indexes Found</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigurationIndexWithFromClauseDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="5376" opendate="2018-7-3 00:00:00" fixdate="2018-7-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In JTA, Geode afterCompletion may fail even though the JTA host still available</summary>
      <description>When JTA is hosted on a server S2, and there is another server S1 handles the client JTA request. After the S1 executed JTA beforeCompletion initiated from client, the S2's P2P reader thread for S1 will hold the locks for the JTA. If at the time, S1 is lost/shut down, client will failover to another server to try afterCompletion. The afterCompletion attempt will fail as the new thread does not hold the lock. This will cause the client JTA to fail due to CommitConflict, even though there is not concurrent commit operations.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.7.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXSynchronizationRunnableTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tx.ClientTXStateStub.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXSynchronizationRunnable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.TXSynchronizationCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PausedTXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistTXStateProxyImplOnCoordinator.java</file>
    </fixedFiles>
  </bug>
  <bug id="5378" opendate="2018-7-3 00:00:00" fixdate="2018-7-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AcceptanceTests fail because they cannot start service db</summary>
      <description>The build 125-127 have had 10 failures that were related to failure to start a service db in the JDBC tests.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.docker.initdocker</file>
    </fixedFiles>
  </bug>
  <bug id="54" opendate="2015-6-8 00:00:00" fixdate="2015-3-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing javadocs</summary>
      <description>The current build process is not generating javadocs and once they're generated it's still be defined where to host the pages. Current Geode docs are hosted at http://geode-docs.cfapps.io/ but javadocs can be part of that or be hosted under geode.incubator.apache.org.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.docs.index.html</file>
      <file type="M">geode-site.website.Rules</file>
      <file type="M">geode-site.website.README.md</file>
      <file type="M">geode-site.website.layouts.header.html</file>
      <file type="M">geode-site.website.layouts.footer.html</file>
      <file type="M">geode-site.website.layouts.default.html</file>
      <file type="M">geode-site.website.content.community.index.html</file>
    </fixedFiles>
  </bug>
  <bug id="5401" opendate="2018-7-6 00:00:00" fixdate="2018-10-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Client transaction should not be expired once it is failed over</summary>
      <description>When a client is disconnected from the server, the client's originated transactions are scheduled to be expired. However, when the client transaction failed over, the expire transaction task is not cancelled. If transaction is not finished/committed within the timeout period (transactionTimeToLive default to 180 seconds), the transaction will be expired. The consequence is that only part of the transaction gets committed. The expire transaction task will close the transaction and remove it from the hosted txstates map removing the existing operations. The subsequent operations will starts a new transaction &amp;#8211; only the operations afterwards will be recored and committed.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXStateProxyImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXManagerImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DSFIDFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientHealthMonitor.java</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
    </fixedFiles>
  </bug>
  <bug id="5402" opendate="2018-7-9 00:00:00" fixdate="2018-8-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Disk recovery sometimes hangs when no member is recognized as having the most recent data</summary>
      <description>During disk recovery, sometimes a the system will hang because every member is waiting for others to initialize first, and nobody is recognized as having the most recent data.This can happen when a member persists its most recent view of another member to disk, then that member is killed before it can remove the older view of the other member from the op log files. When starting the cluster from disk, the member then has two views of the other member, one recent and the other stale. The member then decides is needs to wait for the stale view of the other member which causes the hang.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.TransformUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.sequencelog.RegionLogger.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentStateQueryResults.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentStateQueryMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentMemberPattern.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentMemberID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskInitFile.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheDistributionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketPersistenceAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug id="5408" opendate="2018-7-9 00:00:00" fixdate="2018-7-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document gfsh remove -all option not avail for partitioned regions</summary>
      <description>The command reference page for gfsh remove in the documentation ought to explicitly say that the -all option is not available for partitioned regions.  The gfsh help text and the error message (if one tries to use the -all option do explicitly state this.  So, just the docs need updating.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.remove.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="541" opendate="2015-11-11 00:00:00" fixdate="2015-11-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The latest GemFire 800x clients can&amp;#39;t connect to Geode servers</summary>
      <description>GemFire 8009 introduced an on-the-wire compatibility change between client and server. Geode needs to be updated to support this change.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.Version.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunctionSingleHop.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteFunction66.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.CommandInitializer.java</file>
    </fixedFiles>
  </bug>
  <bug id="5420" opendate="2018-7-11 00:00:00" fixdate="2018-8-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protect events in HAContainer from being removed prematurely</summary>
      <description>This can occur when:1) Events are added to queuedEvents during message dispatcher initialization2) Events are added to giiQueue while serving initial image to peerWe have seen this issue when QRM messages are being processed after becoming primary. This causes the event to be removed prematurely from the HAContainer, and then the wrapper is in a bad state (null client update message) when we try to replace the event.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.HAEventWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ha.HARegionQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ha.HAContainerMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.HARegion.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.ha.HARegionQueueJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.ha.HARegionQueueIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5455" opendate="2018-7-19 00:00:00" fixdate="2018-9-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ClassCastException in MemberMBean.showOSMetrics, OSMetrics is not reconstructible from CompositeData</summary>
      <description>The following code snippet throwsException in thread "main" java.lang.ClassCastException: javax.management.openmbean.CompositeDataSupport cannot be cast to org.apache.geode.management.OSMetrics at com.sun.proxy.$Proxy0.showOSMetrics(Unknown Source) public static MBeanServerConnection getLocalMBeanServerConnectionStatic(int pid) { try { String address = ConnectorAddressLink.importFrom(pid); JMXServiceURL jmxUrl = new JMXServiceURL(address); return JMXConnectorFactory.connect(jmxUrl).getMBeanServerConnection(); } catch (IOException e) { throw new RuntimeException( "Of course you still have to implement a good connection handling"); } } public static void main(String[] args) throws IOException, MalformedObjectNameException, InstanceNotFoundException, ReflectionException { MBeanServerConnection mbeanServerConnection = getLocalMBeanServerConnectionStatic(127510); ObjectName mbeanName = new ObjectName("GemFire:type=Member,member=server1"); MemberMXBean memberbeanInstance = (MemberMXBean) MBeanServerInvocationHandler .newProxyInstance(mbeanServerConnection, mbeanName, MemberMXBean.class, Boolean.TRUE); System.out.println(Arrays.toString(memberbeanInstance.listRegions())); OSMetrics cdOSMetrics = memberbeanInstance.showOSMetrics(); //..... }</description>
      <version>1.4.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.LauncherMemberMXBeanIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5456" opendate="2018-7-19 00:00:00" fixdate="2018-7-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Exceptions during SSL handshake are different for Windows</summary>
      <description>Some tests my produce SocketException during SSL handshaking instead of {{SSLException}}s.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-experimental-driver.src.integrationTest.java.org.apache.geode.experimental.driver.SSLTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5515" opendate="2018-8-1 00:00:00" fixdate="2018-8-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Transaction originated from peer sets the onBehalfOfClientMember on remote transaction host</summary>
      <description>Currently a transaction originated from a peer and if the transaction host is on another server, the transaction onBehalfOfClientMember is incorrectly set on the transaction host.</description>
      <version>1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXStateTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PausedTXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PartitionMessage.java</file>
    </fixedFiles>
  </bug>
  <bug id="5519" opendate="2018-8-2 00:00:00" fixdate="2018-8-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add stackdriver monitoring to heavy-lifters</summary>
      <description>In order to properly gauge resource requirements implement stackdriver monitoring.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.start.instance.sh</file>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
      <file type="M">ci.images.google-geode-builder.packer.json</file>
    </fixedFiles>
  </bug>
  <bug id="5520" opendate="2018-8-2 00:00:00" fixdate="2018-8-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Inconsistency created by delta-propagation interaction with concurrency control</summary>
      <description>I tracked a cache inconsistency down to a delta propagation operation that failed over from one server to another and then failed to apply the delta on the new server.When the full value is sent from the client the message is not marked as a possible-duplicate. Because it was missing this flag the server did not try to recover a concurrency version tag for the operation but instead generated a new version.When this server propagated the operation to another server it was rejected by that server because it had already processed the operation from the client's original attempt. It recognized this by way of the operation's EventID being recorded in its EventTracker.This resulted in one server having version X and the other having version X+1 for the entry.The client then destroyed the same entry with the same server, generating version X+1 in that server. When the server propagated the operation the other server already had X+1 and threw a ConcurrentCacheModificationException. The result was one server having a tombstone for the entry and the other having the value from the delta-propagation operation.This can be fixed by setting the possible-duplicate flag on the message from the client that contains the full value. The server will then search for a concurrency version tag and use it instead of generating a new one.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PutOp.java</file>
    </fixedFiles>
  </bug>
  <bug id="5521" opendate="2018-8-3 00:00:00" fixdate="2018-8-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>After an exception is received from a remote server function execution, local threads should not send back result to client later</summary>
      <description>In the method cmdExecute()if the local co-ordinator receives an FunctionException of type FunctionInvocationTargetException or QueryInvocationTargetException from the remote server, setException is called which sets the lastResultReceived flag. This flag prevents other results from other threads to be sent to the client, as the client may have moved on. If there were any other function exception it will just send the exception but not set the flag. if (cause instanceof FunctionInvocationTargetException || cause instanceof QueryInvocationTargetException) { if (cause instanceof InternalFunctionInvocationTargetException) { // Fix for #44709: User should not be aware of // InternalFunctionInvocationTargetException. No instance of // InternalFunctionInvocationTargetException is giving useful // information to user to take any corrective action hence logging // this at fine level logging // 1&gt; When bucket is moved // 2&gt; Incase of HA FucntionInvocationTargetException thrown. Since // it is HA, fucntion will be reexecuted on right node // 3&gt; Multiple target nodes found for single hop operation // 4&gt; in case of HA member departed if (logger.isDebugEnabled()) { logger.debug(LocalizedMessage.create( LocalizedStrings.ExecuteFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0, new Object[] {function}), fe); } } else if (functionObject.isHA()) { logger.warn(LocalizedMessage.create( LocalizedStrings.ExecuteRegionFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0, function + " :" + message)); } else { logger.warn(LocalizedMessage.create( LocalizedStrings.ExecuteRegionFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0, function), fe); } resultSender.setException(fe); } else { if(!resultSender.isLastResultReceived()){ resultSender.setLastResultReceived(true); logger.warn(LocalizedMessage.create( LocalizedStrings.ExecuteRegionFunction_EXCEPTION_ON_SERVER_WHILE_EXECUTIONG_FUNCTION_0, function), fe); sendException(hasResult, clientMessage, message, serverConnection, fe); } }</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction61.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.BaseCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.ServerToClientFunctionResultSender65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.ServerToClientFunctionResultSender.java</file>
    </fixedFiles>
  </bug>
  <bug id="5522" opendate="2018-8-3 00:00:00" fixdate="2018-8-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Gradle 4.9</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.wrapper.gradle-wrapper.properties</file>
      <file type="M">gradle.wrapper.gradle-wrapper.jar</file>
      <file type="M">gradle.properties</file>
    </fixedFiles>
  </bug>
  <bug id="5541" opendate="2018-8-8 00:00:00" fixdate="2018-1-8 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>A create followed by a destroy of the same key in a transaction invokes cache listener on remote node</summary>
      <description>A create followed by a destroy of the same key in a transaction is treated as a no op on the near side (transaction host), and no destroy event is invoked on the transaction host. The destroy operation is distributed to remote nodes (far side). The intend is to make sure a normal region can destroy the key if it exists (far side). Currently a destroy event is invoked for this no op on remote node even though the node does not have the key.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0,1.8.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.LocalRegionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.RegionCommitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXEntryState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.partitioned.PersistentPartitionedRegionWithTransactionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5761" opendate="2018-9-19 00:00:00" fixdate="2018-8-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>jsonassert has incompatible transitive dependency on android-json</summary>
      <description>The fix for GEODE-5696 added geode-junit dependency on org.skyscreamer:jsonassert which brings in a transitive dependency on com.vaadin.external.google:android-json which is incompatible with geode-json.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="5762" opendate="2018-9-19 00:00:00" fixdate="2018-9-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix typos in transaction docs code examples</summary>
      <description>The variable used for the transaction manager object in the code examples within the docs section on Transactions is inconsistent.  Pick one variable name, and use it throughout all examples in a consistent way.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.directed.example.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5765" opendate="2018-9-21 00:00:00" fixdate="2018-9-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AlterRuntimeCommandDUnitTest slows down due to large numbers of classes loaded</summary>
      <description>We observed that several tests in this class are taking minutes when they should be taking a few seconds at most. After some debugging, we determined that the JVM itself is struggling to deal with having 100K+ classes loaded. They are loaded because the test is repeated starting and stopping the http service, which creates a classloader and causes soft references to all of the loaded classes to be cached.By setting a flag to clear the soft references faster, the test times go back to normal.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="5778" opendate="2018-9-25 00:00:00" fixdate="2018-8-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>On Windows - rsync fails intermittently</summary>
      <description>Can we just retry when rsync fails just like start_instance task?https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsGfshDistributedTest/builds/11https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsUnitTest/builds/10https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsAcceptanceTest/builds/10rsync fails intermittently with following error:Warning: Permanently added '35.184.2.138' (ECDSA) to the list of known hosts. 1 [main] rsync 3440 child_info_fork::abort: C:\ProgramData\chocolatey\lib\rsync\cwrsync_5.5.0_x86_free\bin\cyggcc_s-1.dll: Loaded to different address: parent(0x2E20000) != child(0x150000)rsync: fork failed in do_recv: Resource temporarily unavailable (11)rsync error: error in IPC code (code 14) at main.c(879) [Receiver=3.1.2]real 0m1.226suser 0m0.004ssys 0m0.020s</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="578" opendate="2015-11-19 00:00:00" fixdate="2015-11-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cluster-config and cache.xml do not work together</summary>
      <description>When cluster configuration is used and the server is started with a cache.xml, server startup fails due to a bind exception. This occurs because we try to start the default cache-server twice, once when processing the cluster-config and once while parsing the cache.xml file.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheCreationJUnitTest.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
