<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="GEODE">
  <bug id="10083" opendate="2022-2-24 00:00:00" fixdate="2022-3-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix RedisProxy to correctly process MOVED responses</summary>
      <description>The RedisProxy test helper rewrites various redis responses to allow for address translation when using a docker-based redis cluster. Due to the way the internal netty processing pipeline was constructed, a received MOVED response could have disrupted subsequent requests flowing through the proxy.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.redis.internal.proxy.RedisProxyOutboundHandler.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.redis.internal.proxy.RedisProxyInboundHandler.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.redis.internal.proxy.MovedResponseHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="10087" opendate="2022-2-28 00:00:00" fixdate="2022-4-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enhance Off-heap memory fragmentation visibility</summary>
      <description>As pointed out in https://cwiki.apache.org/confluence/display/GEODE/Enhance+Off-heap+memory+fragmentation+visibility:"Even though Geode offers several stats related to the status of the off-heap memory area (usedMemory, freeMemory, fragmentation, largestFragment and fragments), the ones that provide information about the level of the fragmentation of the off-heap memory (fragmentation, largestFragment and fragments) are only updated when defragmentation is executed."The visibility of the off-heap memory fragmentation status must be made more visible as proposed in the above RFC by means of: Updating the largestFragment stat periodically. Adding a new off-heap stat called "freedChunks" that will provide the number of elements in the tiny and huge lists. This stat will be periodically updated.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.main.java.org.apache.geode.internal.offheap.NullOffHeapMemoryStats.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.ShowMetricsCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.MemberMXBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.MemberMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.MemberMBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.OffHeapStoredObjectAddressStack.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.OffHeapStorage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.OffHeapMemoryStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.MemoryAllocatorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.FreeListManager.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.MemberMXBeanAttributesDistributedTest.java</file>
      <file type="M">buildSrc.src.main.resources.japicmp.exceptions.json</file>
    </fixedFiles>
  </bug>
  <bug id="9923" opendate="2022-1-5 00:00:00" fixdate="2022-1-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: add Log Message troubleshooting section</summary>
      <description>GemFire support team (who are also Geode community members) have compiled a troubleshooting guide that maps log messages to suggested solutions.They have contributed this to Geode in the form of a Google doc.Reformat the Google doc and add it to the Geode user guide. There's an existing section under Managing Apache Geode called Troubleshooting and System Recovery that would be a good location for this material.</description>
      <version>1.14.2</version>
      <fixedVersion>1.12.9,1.13.8,1.14.4,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.troubleshooting.chapter.overview.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="9924" opendate="2022-1-6 00:00:00" fixdate="2022-1-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make repeat tests log each test class instance separately</summary>
      <description>Currently, our repeat test tasks merge the output from all executions of a given test class, making it very difficult to diagnose failures in repeat tests.CAUSE:In order to run tests repeatedly, our repeat test tasks override Gradle code to allow a test class to execute more than once.Gradle directs the output from each test to a log associated with the test class name.SOLUTION:Change Gradle to distinguish separate executions of a test class, and to log the output from each execution separately. This can be done by using a custom "test result processor" that appends an iteration counter to the end of the test class name before processing the result.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.internal.ProcessManager.java</file>
      <file type="M">buildSrc.src.main.java.org.apache.geode.gradle.testing.repeat.RepeatableTestExecuter.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.testing.repeat.RepeatTest.groovy</file>
    </fixedFiles>
  </bug>
  <bug id="9940" opendate="2022-1-11 00:00:00" fixdate="2022-1-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ci improvements</summary>
      <description>mass test report hangs, mass test may not trigger, RC may trigger prematurely/twice</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.deploy.rc.pipeline.sh</file>
      <file type="M">ci.pipelines.mass-test-run.jinja.template.yml</file>
      <file type="M">ci.bin.concourse.job.performance.py</file>
    </fixedFiles>
  </bug>
  <bug id="9965" opendate="2022-1-14 00:00:00" fixdate="2022-1-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>geode release should not delete Kafka connector release</summary>
      <description>logic intended to retain 3 most-recent Geode minors inadvertently deleted kafka-connector-1.1.0, which is on a separate release track but shares the same release location in ASF</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.promote.rc.sh</file>
    </fixedFiles>
  </bug>
  <bug id="9969" opendate="2022-1-18 00:00:00" fixdate="2022-3-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The region name starting with underscore lead to missing disk store after restart</summary>
      <description>The problem is when using the region with a name starting with an underscore(allowed by documentation region_naming).If we stop one of the members and then rename the working dir(include disk store dir) to some new name and start the server with the name like renamed working dir, it will lead that we have the same disk-store-id in the listed disk-stores and in the missing disk store.This happens only if we are using the region with an underscore at the beginning.Steps to reproduce:Run locator and 4 servers, create region with name starting by underscore start locator --name=locator start server --name=server1 --server-port=40401 start server --name=server2 --server-port=40402 start server --name=server3 --server-port=40403 start server --name=server4 --server-port=40404 create region --name=_test-region --type=PARTITION_REDUNDANT_PERSISTENT --redundant-copies=1 --total-num-buckets=10 --enable-synchronous-disk=false query --query="select * from /_test-region"From another terminal (Kill server and rename working dir) kill -9 $(cat server4/vf.gf.server.pid) mv server4/ server5gfsh&gt;list disk-storesMember Name |               Member Id                | Disk Store Name | Disk Store ID----------- | -------------------------------------- | --------------- | ------------------------------------server1     | 192.168.0.145(server1:16916)&lt;v1&gt;:41001 | DEFAULT         | d5d17b43-4a06-408b-917f-08e5b2533ebeserver2     | 192.168.0.145(server2:17004)&lt;v2&gt;:41002 | DEFAULT         | 31d47cb4-718e-4b58-bde3-ae15b4657910server3     | 192.168.0.145(server3:17094)&lt;v3&gt;:41003 | DEFAULT         | f12850c6-a73b-443e-9ee0-87f0819ae6bcserver5     | 192.168.0.145(server5:17428)&lt;v6&gt;:41004 | DEFAULT         | 7a552fb3-e43d-4fa8-baa8-f6dc794cbf74gfsh&gt;show missing-disk-storesMissing Disk Stores           Disk Store ID             |     Host      | Directory------------------------------------ | ------------- | --------------------------------------------------------------------7a552fb3-e43d-4fa8-baa8-f6dc794cbf74 | 192.168.0.145 | /home/mkevo/apache-geode-1.15.0-build.0/bin/server4/.No missing colocated region foundStart a new server with a name like you rename your working dir from the restarted server. start server --name=server5 --server-port=40405Now we have the following output:gfsh&gt;list disk-storesMember Name | Member Id | Disk Store Name | Disk Store ID----------- | -------------------------------------- | --------------- | ------------------------------------server1 | 192.168.0.145(server1:16916)&lt;v1&gt;:41001 | DEFAULT | d5d17b43-4a06-408b-917f-08e5b2533ebeserver2 | 192.168.0.145(server2:17004)&lt;v2&gt;:41002 | DEFAULT | 31d47cb4-718e-4b58-bde3-ae15b4657910server3 | 192.168.0.145(server3:17094)&lt;v3&gt;:41003 | DEFAULT | f12850c6-a73b-443e-9ee0-87f0819ae6bcserver5 | 192.168.0.145(server5:17428)&lt;v6&gt;:41004 | DEFAULT | 7a552fb3-e43d-4fa8-baa8-f6dc794cbf74gfsh&gt;show missing-disk-storesMissing Disk Stores Disk Store ID | Host | Directory------------------------------------ | ------------- | --------------------------------------------------------------------7a552fb3-e43d-4fa8-baa8-f6dc794cbf74 | 192.168.0.145 | /home/mkevo/apache-geode-1.15.0-build.0/bin/server4/.No missing colocated region found</description>
      <version>1.12.8,1.13.6,1.14.2,1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.acceptanceTest.java.org.apache.geode.cache.persistence.MissingDiskStoreAfterServerRestartAcceptanceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionHelperJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionHelper.java</file>
    </fixedFiles>
  </bug>
  <bug id="9972" opendate="2022-1-18 00:00:00" fixdate="2022-1-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>remove &amp;#39;wait overnight&amp;#39; step from release process</summary>
      <description>now that maven central syncs within 1 hour and closer.cgi mirrors use the new dlcdn which syncs within 15 minutes, we can eliminate the overnight step in the release steps</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.README.md</file>
      <file type="M">dev-tools.release.promote.rc.sh</file>
      <file type="M">dev-tools.release.create.support.branches.sh</file>
    </fixedFiles>
  </bug>
</bugrepository>
