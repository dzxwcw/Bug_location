<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="GEODE">
  <bug id="7414" opendate="2019-11-7 00:00:00" fixdate="2019-6-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SSL ClientHello server_name extension</summary>
      <description>We propose to add the server_name extension to the ClientHello message. The extension would hold the distributed system ID of the site where the connection originated from.This will be used to determine internal geode communication, and communication between geode sites.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionConfigJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLConfigurationFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">gradle.japicmp.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.build.gradle</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.net.SSLParameterExtension.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.SSLConfig.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.net.SSLSocketParameterExtensionIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7417" opendate="2019-11-7 00:00:00" fixdate="2019-11-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI checks do not trigger on geode-book changes</summary>
      <description>due to new branch protection rules, it is now impossible to submit geode-book changes as the required checks will never firewe should remove the exclusion so checks can run</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="7421" opendate="2019-11-7 00:00:00" fixdate="2019-3-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability: can deploy jar by REST API for Management</summary>
      <description>WHAT 1. can deploy jar file by REST API 2. from feature point , it will cover current 'gfsh deploy' 3. if two files have same file name, the later wins 4. can recognize version pattern. "filename-version&amp;#91;-label&amp;#93;.jar" . filename=&amp;#91;a-zA-Z/-&amp;#93;+, not single "", not end with "" version=&amp;#91;0-9/.&amp;#93;*, not single ".", not end with "." label=&amp;#91;a-zA-Z0-9&amp;#93;*such as: &lt;commons-beanutils-1.9.3.jar&gt; is a later version of &lt;commons-beanutils-1.9.2.jar&gt;, will deploy. &lt;commons-beanutils-1.9.3.jar&gt; is a same version of &lt;commons-beanutils-1.9.3-SNAPSHOT.jar&gt;, the later wins &lt;commons-beanutils-1.9.3-RELEASE.jar&gt; is a same version of &lt;commons-beanutils-1.9.3-SNAPSHOT.jar&gt;, the later wins &lt;commons-beanutils-1.9.1.jar&gt; is an earlier version of &lt;commons-beanutils-1.9.2.jar&gt;, will block it. 5. if there is a version part in the file name, we will deploy them without append "#1" part to the file name 6. can accept "group"</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RebalanceIntegrationTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.DeploymentTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.EntityInfo.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.assertions.ClusterManagementListResultAssert.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.web.http.support.HttpRequesterTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.ExportClusterConfigurationCommandTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.web.shell.HttpOperationInvoker.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.web.http.support.HttpRequester.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.functions.DeployFunction.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.realizers.DeploymentRealizerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.mutators.DeploymentManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.domain.ConfigurationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.LocatorClusterManagementServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceDeployedJarTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-management-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.functions.CacheRealizationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.DeploymentRealizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.ConfigurationRealizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.DeploymentManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.ConfigurationManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.domain.Configuration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DeployedJar.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.DeployedJarTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.codeAnalysis.AnalyzeManagementSerializablesJUnitTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ListIndexOnPartitionRegionTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.DeployToMultiGroupDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.DeploymentManagementDUnitTest.java</file>
      <file type="M">geode-web-management.src.main.webapp.WEB-INF.management-servlet.xml</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.security.RestSecurityConfiguration.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.DeploymentManagementController.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.internal.ClientClusterManagementServiceTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.ClientClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.Deployment.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.AbstractConfiguration.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.RestTemplateClusterManagementServiceTransport.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.CommandType.java</file>
    </fixedFiles>
  </bug>
  <bug id="7424" opendate="2019-11-8 00:00:00" fixdate="2019-2-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability: can create index in RESTAPI for Management</summary>
      <description>WHAT 1. endpoint: &amp;#91;POST&amp;#93; `management/v1/indexes` 1. parameter: "name(indexID)", "expression", "region", "type", "group" 1. expected result: create index by specified parameters 1. type: default is "range" 1. region is required 1. name(indexID) is required 1. expression is required 1. "hash" type is not supported. Note1. request body```JSON{ "name": "Foo6name3", "expression": "name3", "regionPath": "/Foo6", “group”：“”， “type”：“” range|key }```</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.IndexValidatorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.IndexValidator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.IndexConfigManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.ManagementLoggingFilter.java</file>
    </fixedFiles>
  </bug>
  <bug id="7425" opendate="2019-11-8 00:00:00" fixdate="2019-2-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability: can delete index in RESTAPI for Management</summary>
      <description>WHAT 1. endpoint: &amp;#91;DELETE&amp;#93; `management/v1/indexes` 1. parameter: "name", "region", "group" 1. expected result: delete index as specified parameters</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.RegionManagementController.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementControllerSpringTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.ClusterManagementSecurityRestIntegrationTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementRealizationResult.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.IndexValidatorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.realizers.IndexRealizerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.mutators.IndexConfigManagerTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.IndexValidator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.IndexRealizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.IndexConfigManager.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ListIndexManagementDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7428" opendate="2019-11-8 00:00:00" fixdate="2019-2-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>adjustment: set the log-lvl of REST API of Management from info to debug</summary>
      <description>WHY 1. too many logs in the log file, that is a customer concern 2. broker team call RESTAPI for Management for healthcheck per 10 seconds. it will produce too many logs. WHAT 1. change every log which is produced by RESTAPI for management to be DEBUG.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.ManagementLoggingFilter.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.rest.controllers.ClusterManagementRestLoggingTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ManagementRequestLoggingDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7431" opendate="2019-11-9 00:00:00" fixdate="2019-11-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>benchmarks may fail due to infrastructure quota</summary>
      <description>For example, https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/Benchmark/builds/677 failed because there were already 3 benchmarks jobs running at the timeSince the quota is 40 and each benchmark uses 12, we should restrict max_in_flight to 3 for this job</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="7432" opendate="2019-11-11 00:00:00" fixdate="2019-11-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix spelling error in Aggregate Function Tests</summary>
      <description>Some of the aggregate function tests define/use the method parametrizedSetUp, it should be parameterizedSetUp instead.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.aggregate.SumIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.aggregate.MinIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.aggregate.MaxIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.aggregate.CountIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.internal.aggregate.AvgIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7436" opendate="2019-11-11 00:00:00" fixdate="2019-2-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability: can recognize version part when deploy function jar in GFSH</summary>
      <description>WHAT 1. recognize version part of file name, for the file to be deployed 1. can recognize version pattern. "filename-version&amp;#91;label&amp;#93;.jar" . filename=&amp;#91;a-zA-Z/-&amp;#93;+, not single "", not end with "" version=&amp;#91;0-9/.&amp;#93;*, not single ".", not end with "." label=&amp;#91;-/.&amp;#93;{1}&amp;#91;a-zA-Z0-9&amp;#93;*such as: &lt;commons-beanutils-1.9.3.jar&gt; is a later version of &lt;commons-beanutils-1.9.2.jar&gt;, will deploy. &lt;commons-beanutils-1.9.3.jar&gt; is a same version of &lt;commons-beanutils-1.9.3-SNAPSHOT.jar&gt;, the later wins &lt;commons-beanutils-1.9.3-RELEASE.jar&gt; is a same version of &lt;commons-beanutils-1.9.3-SNAPSHOT.jar&gt;, the later wins</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ClusterConfigurationLoaderTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceJunitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.JarDeployerFileTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.DeployedJarTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DeploySemanticVersionJarDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.domain.ConfigurationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportClusterConfigurationCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.ClassPathLoaderTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.domain.Configuration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.UndeployFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListDeployedFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DeployFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DeployCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.JarDeployer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DeployJarChildFirstClassLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DeployedJar.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.ClassPathLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ClusterConfigurationLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceService.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.JarDeployerIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.JarDeployerDeadlockTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.DeployedJarJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.ClassPathLoaderJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.ClassPathLoaderIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.ClassPathLoaderDeployTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.backup.IncrementalBackupIntegrationTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DeployWithGroupsDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DeployCommandRedeployDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8055" opendate="2020-4-30 00:00:00" fixdate="2020-5-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>can not create index on sub regions</summary>
      <description>When trying to use "create index" command in gfsh to create index on sub regions, we get the following message:"Sub-regions are unsupported"Pre-1.6, we were able to do that.</description>
      <version>1.7.0,1.8.0,1.9.2,1.10.0,1.11.0,1.12.0</version>
      <fixedVersion>1.12.1,1.13.0,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.management.internal.configuration.ClusterConfigurationIndexWithFromClauseDUnitTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommand.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.CacheConfigTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheConfig.java</file>
    </fixedFiles>
  </bug>
  <bug id="8076" opendate="2020-5-5 00:00:00" fixdate="2020-5-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>simplify redis concurrency code</summary>
      <description>Currently when doing a redis set operation, for example sadd, the code has to be careful to deal with other threads concurrently changing the same set.It does this in a number of ways but this could be simplified by having a higher level layer of the code ensure that for a given redis "key" operations will done in sequential order.This can be done safely in a distributed cluster because we now route all operations for a given key to the server that is storing the primary copy of data for that key.I spike was done and we found that this form of locking did not hurt performance. Since it allows simpler code that is less likely to have subtle concurrency issues we plan on merging the work done in the spike into the product.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.RegionProviderJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SScanExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SRemExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SRandMemberExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SPopExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SMoveExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SMembersExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SIsMemberExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SetOpExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SCardExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SAddExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.RedisSet.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.GeodeRedisSetWithFunctions.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.DeltaSet.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.CommandFunction.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
    </fixedFiles>
  </bug>
  <bug id="8259" opendate="2020-6-16 00:00:00" fixdate="2020-6-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>when client singlehop getAll encountered SerializationException, it should retry</summary>
      <description>In GEOEDE-7090, DSFIDSerializerImpl.invokeFromData() will catch RunTimeException and throw. But convert Exception to be IOException. The idea is to avoid using SerializationException which is in another package. However, if my fromData() failed with IndexOutOfBoundary exception (which is an RTE), it will be thrown directly instead of treating it in handleException(), thus my serialization exception will never get handled. The fix is to merge the catch RunTimeException into catch Exception.</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.GetAllOp.java</file>
    </fixedFiles>
  </bug>
  <bug id="8489" opendate="2020-9-11 00:00:00" fixdate="2020-9-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse should keep the 1.8 behavior when doing a "Select *" query</summary>
      <description>After the TypedJson refactor, we see those different behaviors when using DistributedSysteemMBean to do a "select *" query:1. Jackson Json Annotations are taking into effect now. "Select *" won't show those `@JsonIgnore` fields anymore. And "JsonProperty" annotation values are showing up as headers2. null values fields are not showing up.</description>
      <version>1.9.2,1.10.0,1.11.0,1.13.0</version>
      <fixedVersion>1.12.1,1.13.1,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.json.QueryResultFormatterTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.json.QueryResultFormatter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.json.AbstractJSONFormatter.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.beans.DistributedSystemMBeanIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8490" opendate="2020-9-11 00:00:00" fixdate="2020-9-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docker containers are not properly cleaned up after native Redis acceptance tests</summary>
      <description>This CI failure is due to port conflicts with Docker containers that were not cleaned up properly in some native Redis acceptance tests that ran beforehand. Caused by: java.net.BindException: Network is unreachable; port (40404) is not available on localhost. at org.apache.geode.distributed.AbstractLauncher.assertPortAvailable(AbstractLauncher.java:142) at org.apache.geode.distributed.ServerLauncher.start(ServerLauncher.java:794)We created a test rule to properly close and clean up all Docker containers created by the native Redis acceptance tests.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.acceptanceTest.java.session.NativeRedisSessionExpirationAcceptanceTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.connection.AuthIntegrationTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.IgnoreOnWindowsRule.java</file>
      <file type="M">geode-redis.build.gradle</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.connection.AuthNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.connection.PingNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.GlobPatternNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.hash.HashesNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.DelNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.ExistsNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.ExpireAtNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.ExpireNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.KeysNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.PersistNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.PexpireNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.PTTLNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.RenameNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.TTLNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.key.TypeNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.pubsub.PubSubNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SDiffNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SetsNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SInterNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SIsMemberNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SMoveNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SPopNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SRemNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.set.SUnionNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.AppendNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.BitCountNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.BitOpNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.BitPosNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.DecrByNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.DecrNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.GetBitNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.GetNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.GetRangeNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.GetSetNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.IncrByFloatNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.IncrByNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.IncrNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.MGetNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.MSetNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.MSetNXNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.PSetEXNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.SetBitNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.SetExNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.SetNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.SetNXNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.SetRangeNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.string.StrLenNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.session.NativeRedisSessionAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8492" opendate="2020-9-14 00:00:00" fixdate="2020-9-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis "clients" statistic goes negative</summary>
      <description>When running a long running app, we noticed that our "clients" statistic was negative. It should always be greater than or equal to 0. It seems like the call to decrement the number of clients was being invoked multiple times for each client.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisStats.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
    </fixedFiles>
  </bug>
  <bug id="8493" opendate="2020-9-14 00:00:00" fixdate="2020-9-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>idle clients can cause server stuck thread warnings</summary>
      <description>Idle connection threads may produce warning messages like: {{&amp;#91;vm1&amp;#93; &amp;#91;warn 2020/09/02 14:31:36.580 PDT &lt;ThreadsMonitor&gt; tid=0x1c&amp;#93; Thread &lt;87&gt; (0x57) that was executed at &lt;02 Sep 2020 14:29:12 PDT&gt; has been stuck for &lt;144.113 seconds&gt; and number of thread monitor iteration &lt;2&gt; &amp;#91;vm1&amp;#93; Thread Name &lt;Pooled Waiting Message Processor 2&gt; state &lt;WAITING&gt;&amp;#91;vm1&amp;#93; Waiting on &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@25b1a95e&gt;&amp;#91;vm1&amp;#93; Executor Group &lt;PooledExecutorWithDMStats&gt;&amp;#91;vm1&amp;#93; Monitored metric &lt;ResourceManagerStats.numThreadsStuck&gt;&amp;#91;vm1&amp;#93; Thread stack:&amp;#91;vm1&amp;#93; sun.misc.Unsafe.park(Native Method)&amp;#91;vm1&amp;#93; java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)&amp;#91;vm1&amp;#93; java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)&amp;#91;vm1&amp;#93; java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)&amp;#91;vm1&amp;#93; org.apache.geode.redis.internal.netty.ExecutionHandlerContext.takeCommandFromQueue(ExecutionHandlerContext.java:139)&amp;#91;vm1&amp;#93; org.apache.geode.redis.internal.netty.ExecutionHandlerContext.processCommandQueue(ExecutionHandlerContext.java:125)&amp;#91;vm1&amp;#93; org.apache.geode.redis.internal.netty.ExecutionHandlerContext$$Lambda$320/28815321.run(Unknown Source)&amp;#91;vm1&amp;#93; java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)}}if the thread (client) becomes idle for some time. These messages will probably worry users. We should be able to safely switch to a having the ExecutionHandlerContext simply run its own thread to process the command Q.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
