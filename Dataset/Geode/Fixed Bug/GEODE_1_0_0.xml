<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="GEODE">
  <bug id="100" opendate="2015-7-10 00:00:00" fixdate="2015-7-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Nested count(*) query on pr causes NullPointerException</summary>
      <description>Executing a nested count query, where the from clause is a partitioned region, will cause a NullPointerException to be thrown. For example, a query such as:SELECT distinct COUNT FROM (SELECT DISTINCT tr.id, tr.domain FROM /TEST_REGION tr)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.query.partitioned.PRQueryJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.query.partitioned.PRQueryDUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.PartitionedRegion.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.CompiledSelect.java</file>
    </fixedFiles>
  </bug>
  <bug id="10000" opendate="2022-1-28 00:00:00" fixdate="2022-2-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Avoid gfsh stop gateway sender error when stopped a second time</summary>
      <description>After changing the implementation of the "stop gateway sender" command to be parallel, when it is invoked a second time it fails with the following error:Error while processing command &lt;stop gateway-sender --id=sender1&gt; Reason : Task java.util.concurrent.FutureTask@513d30f9 rejected from java.util.concurrent.ThreadPoolExecutor@85189b9&amp;#91;Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2&amp;#93;</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.wancommand.StopGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.StopGatewaySenderCommandTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.StopGatewaySenderCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="1027" opendate="2016-3-1 00:00:00" fixdate="2016-1-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>MBeans should be initialized with current stats when they are created.</summary>
      <description>Click to add description</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.stats.MBeanStatsMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.ValueMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatisticsMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.SampleCollector.java</file>
    </fixedFiles>
  </bug>
  <bug id="109" opendate="2015-7-14 00:00:00" fixdate="2015-8-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bugs in redis adapter when running with multiple vms</summary>
      <description>1) The meta data attached with the redis lists implementation does not always stay synchronized with the list.2) Queries run by sorted set requests fail in execution3) Potential deadlock when regions are created simultaneously in different vms</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.set.SMembersExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.redis.GemFireRedisServer.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.RegionCreationException.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.RegionCache.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.RedisDataType.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.RedisConstants.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.Extendable.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.UnkownExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.TypeExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.TTLExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.StrlenExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.StringExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.SetRangeExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.SetNXExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.SetEXExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.SetExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.SetBitExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.MSetNXExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.MSetExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.MGetExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.IncrExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.IncrByFloatExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.IncrByExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.GetSetExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.GetRangeExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.GetExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.GetBitExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.DecrExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.DecrByExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.BitPosExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.BitOpExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.BitCountExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.string.AppendExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.sortedset.ZScanExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.sortedset.ZRemRangeByScoreExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.sortedset.ZRemRangeByRankExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.sortedset.ZRemRangeByLexExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.sortedset.ZRemExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.sortedset.ZRangeByScoreExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.sortedset.ZRangeByLexExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.sortedset.SortedSetExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.SortedSetQuery.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.set.SScanExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.set.SRemExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.set.SRandMemberExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.set.SPopExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.set.SMoveExecutor.java</file>
      <file type="M">gemfire-assembly.build.gradle</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.ByteArrayWrapper.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.ByteToCommandDecoder.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.Coder.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.Command.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.DoubleWrapper.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.ExecutionHandlerContext.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.Executor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.AbstractExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.AbstractScanExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.DBSizeExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.DelExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.EchoExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.ExistsExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.ExpirationExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.ExpireAtExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.ExpireExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.FlushAllExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.hash.HashExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.hash.HDelExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.hash.HGetAllExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.hash.HKeysExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.hash.HScanExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.hash.HValsExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.hll.HllExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.hll.PFAddExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.hll.PFCountExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.hll.PFMergeExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.KeysExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.ListQuery.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.list.LIndexExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.list.ListExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.list.LLenExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.list.LRangeExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.list.LRemExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.list.LSetExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.list.LTrimExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.list.PopExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.list.PushExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.list.PushXExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.org.apache.hadoop.fs.GlobPattern.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.PersistExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.PingExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.QuitExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.ScanExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.set.SAddExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.set.SCardExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.set.SetOpExecutor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.executor.set.SIsMemberExecutor.java</file>
    </fixedFiles>
  </bug>
  <bug id="1095" opendate="2016-3-14 00:00:00" fixdate="2016-3-14 01:00:00" resolution="Duplicate">
    <buginformation>
      <summary>CI failure: ConcurrentParallelGatewaySenderOperation_2_OffHeapDUnitTest.testParallelGatewaySender_MultipleNode_UserPR_localDestroy_Recreate</summary>
      <description>java.lang.AssertionError: Suspicious strings were written to the log during this run.Fix the strings or use DistributedTestCase.addExpectedException to ignore.-----------------------------------------------------------------------Found suspect string in log4j at line 3798&amp;#91;fatal 2016/03/13 21:35:14.965 PDT &lt;Pooled Message Processor 1&gt; tid=0x26eb&amp;#93; Uncaught exception processing ParallelQueueRemovalMessage@68c67bea processorId=0 sender=buildtest(2624)&lt;ec&gt;&lt;v2&gt;:1029com.gemstone.gemfire.InternalGemFireError: Bucket BucketRegion&amp;#91;path=&amp;#39;/__PR/_B__ln__PARALLEL__GATEWAY__SENDER__QUEUE_1;serial=14140;primary=false;indexUpdater=null&amp;#93; size (-21) negative after applying delta of -21 at com.gemstone.gemfire.internal.cache.BucketRegion.updateBucketMemoryStats(BucketRegion.java:2371) at com.gemstone.gemfire.internal.cache.BucketRegion.updateBucket2Size(BucketRegion.java:2359) at com.gemstone.gemfire.internal.cache.BucketRegion.updateSizeOnRemove(BucketRegion.java:2226) at com.gemstone.gemfire.internal.cache.AbstractRegionMap.destroyEntry(AbstractRegionMap.java:3292) at com.gemstone.gemfire.internal.cache.AbstractRegionMap.destroy(AbstractRegionMap.java:1424) at com.gemstone.gemfire.internal.cache.LocalRegion.mapDestroy(LocalRegion.java:7192) at com.gemstone.gemfire.internal.cache.LocalRegion.mapDestroy(LocalRegion.java:7164) at com.gemstone.gemfire.internal.cache.BucketRegion.basicDestroy(BucketRegion.java:1179) at com.gemstone.gemfire.internal.cache.AbstractBucketRegionQueue.basicDestroy(AbstractBucketRegionQueue.java:390) at com.gemstone.gemfire.internal.cache.BucketRegionQueue.basicDestroy(BucketRegionQueue.java:371) at com.gemstone.gemfire.internal.cache.BucketRegionQueue.destroyKey(BucketRegionQueue.java:513) at com.gemstone.gemfire.internal.cache.wan.parallel.ParallelQueueRemovalMessage.destroyKeyFromBucketQueue(ParallelQueueRemovalMessage.java:200) at com.gemstone.gemfire.internal.cache.wan.parallel.ParallelQueueRemovalMessage.process(ParallelQueueRemovalMessage.java:124) at com.gemstone.gemfire.distributed.internal.DistributionMessage.scheduleAction(DistributionMessage.java:380) at com.gemstone.gemfire.distributed.internal.DistributionMessage$1.run(DistributionMessage.java:451) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at com.gemstone.gemfire.distributed.internal.DistributionManager.runUntilShutdown(DistributionManager.java:656) at com.gemstone.gemfire.distributed.internal.DistributionManager$4$1.run(DistributionManager.java:930) at java.lang.Thread.run(Thread.java:745)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.GatewaySenderEventImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="1097" opendate="2016-3-14 00:00:00" fixdate="2016-3-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>allow Lambda invocations to be named so that they show up in test logs</summary>
      <description>Currently lambda invocations are logged like this:&amp;#91;vm_1&amp;#93;&amp;#91;info 2016/03/14 10:17:04.395 PDT &lt;RMI TCP Connection(1)-10.118.33.195&gt; tid=0x14&amp;#93; Received method: com.gemstone.gemfire.test.dunit.DurableClientSimpleDUnitTest$$Lambda$5/1964980796.run with 0 args on object: com.gemstone.gemfire.test.dunit.DurableClientSimpleDUnitTest$$Lambda$5/1964980796@5e43dcd9It would be helpful to be able to have more context than this logged, such as&amp;#91;vm_0&amp;#93;&amp;#91;info 2016/03/14 15:30:36.314 PDT &lt;RMI TCP Connection(1)-10.118.33.195&gt; tid=0x14&amp;#93; Received method: com.gemstone.gemfire.test.dunit.NamedCallable.call with 0 args on object: callable(getTestGetNotifiedClients_port)so that we can tell what the Lambda is doing.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.dunit.VM.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.dunit.tests.BasicDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.ClientMembershipDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="11" opendate="2015-5-7 00:00:00" fixdate="2015-5-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene Integration</summary>
      <description>This is a feature that has been under development for GemFire but was not part of the initial drop of code for geode.Allow Lucene indexes to be stored in Geode regions allowing users to do text searches on data stored in Geode.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.directory.DumpDirectoryFiles.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.HeterogeneousLuceneSerializerJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.SerializerUtil.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.MockCacheServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.JMXNotificationType.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.MBeanJMXAdapter.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.ManagementConstants.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.beans.ManagementListener.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.beans.ManagementAdapter.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.CacheService.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.ResourceEvent.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.cli.functions.LuceneListIndexFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.cli.functions.LuceneDescribeIndexFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.functions.LuceneListIndexFunction.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.functions.LuceneDescribeIndexFunction.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionContextJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesPersistenceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryResultsImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQueryResults.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryResultsImpl.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneIndexInfo.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesIntegrationTest.java</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.InternalRegionArguments.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.CreateRegionProcessor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.CacheDistributionAdvisor.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.management.LuceneServiceMBean.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.management.LuceneServiceBridge.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.management.LuceneIndexMetrics.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.ManagementTestBase.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesFunctionCollector.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesCollectorManager.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.CollectorManager.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneServiceImplIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.test.LuceneTestUtilities.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexCreationIntegrationTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneService.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlGeneratorIntegrationJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.test.TestObject.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.PageableLuceneQueryResults.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.functions.RegionCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.CliUtil.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryFactoryImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryFactoryImpl.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQueryProvider.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQueryFactory.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunction.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.StringQueryProviderJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.StringQueryProvider.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.ReflectionLuceneSerializer.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.PdxLuceneSerializer.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.HeterogeneousLuceneSerializer.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.test.IndexRepositorySpy.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexImplJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.fake.Fakes.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.AbstractRegion.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileSystemStats.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneIndexCreationIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.cli.functions.LuceneSearchIndexFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneQueryInfo.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneCliStrings.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.functions.LuceneSearchIndexFunction.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesBase.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneEventListener.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesPRBase.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesPeerPRRedundancyDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesPeerPROverflowDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesPeerPRDUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.IndexRepositoryFactory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.parallel.ConcurrentParallelGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">geode-wan.src.test.java.com.gemstone.gemfire.management.internal.configuration.ClusterConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.extension.SimpleExtensionPointJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.extension.mock.CreateMockRegionExtensionFunction.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.extension.mock.CreateMockCacheExtensionFunction.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.extension.mock.AbstractMockExtension.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.CacheXml81DUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.RegionCreation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.extension.SimpleExtensionPoint.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.extension.Extension.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepository.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.File.java</file>
      <file type="M">geode-junit.src.main.java.com.gemstone.gemfire.test.junit.rules.DiskDirRule.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneService.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneResultStruct.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQueryFactory.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQuery.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneIndex.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.mergers.TopDocsMergeJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryResultsJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.mergers.TopDocsResultMerger.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.mergers.ResultMerger.java</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">gemfire-lucene.build.gradle</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.DataSerializableFixedID.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserIntegrationJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlGeneratorJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlGeneratorIntegrationJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.StringQueryProviderJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.Type2.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.Type1.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.ReflectionFieldMapperJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.PdxFieldMapperJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.HeterogenousLuceneSerializerJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepositoryImplJUnitPerformanceTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.PartitionedRepositoryManagerJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneServiceImplJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneResultStructImpJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryResultsImplJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryImplJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryFactoryImplJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexRecoveryHAJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneEventListenerJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileSystemJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.ChunkKeyJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionContextJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.EntryScoreJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.DistributedScoringJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.directory.RegionDirectoryJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneServiceProvider.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQueryResults.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQueryProvider.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneXmlParser.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneXmlConstants.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneServiceXmlGenerator.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlGenerator.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexCreation.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.StringQueryProvider.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.SerializerUtil.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.ReflectionLuceneSerializer.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.PdxLuceneSerializer.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.LuceneSerializer.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.HeterogenousLuceneSerializer.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.RepositoryManager.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepositoryImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepository.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.PartitionedRepositoryManager.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneServiceImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneResultStructImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryResultsImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryFactoryImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexForReplicatedRegion.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexForPartitionedRegion.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneEventListener.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.InternalLuceneService.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.InternalLuceneIndex.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.SeekableInputStream.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileSystem.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileOutputStream.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileInputStream.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.File.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.ChunkKey.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntries.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunction.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.EntryScore.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.directory.RegionDirectory.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.directory.FileIndexInput.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneIndexCreationPersistenceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQueryException.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.resources.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserIntegrationJUnitTest.createIndex.cache.xml</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserIntegrationJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.resources.META-INF.schemas.geode.apache.org.lucene.lucene-1.0.xsd</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneIndex.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneXmlParser.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneXmlConstants.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlGenerator.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexCreation.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.i18n.LocalizedStrings.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionReadPathDUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepositoryImplJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexResultCollector.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexForPartitionedRegionTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.directory.DumpDirectoryFilesIntegrationTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexForReplicatedRegion.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.InternalLuceneIndex.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.EntryScore.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntries.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryImpl.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.PageableLuceneQueryResultsImpl.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.DistributedScoringJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.EntryScoreJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesCollectorJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesFunctionCollectorJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.PageableLuceneQueryResultsImplJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.CollectorManager.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneQueryFunction.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneSearchFunctionArgs.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesCollector.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesCollectorManager.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneQueryFunctionJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesCollectorJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexForPartitionedRegion.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneIndexMaintenanceIntegrationTest.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionContext.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesFunctionCollector.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesFunctionCollectorJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionReadPathDUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexImpl.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQuery.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryImplIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.test.LuceneTestUtilities.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.functions.LuceneCreateIndexFunction.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneIndexCommands.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneIndexDetails.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneSearchResults.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexCreationProfile.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneIndexCommandsDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneIndexCommandsJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexCreationProfileJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneIndexCreationDUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.directory.RegionDirectory.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileSystem.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexStats.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.PartitionedRepositoryManager.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepositoryImpl.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.directory.RegionDirectoryJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileSystemJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexRecoveryHAIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexStatsJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.PartitionedRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepositoryImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepositoryImplPerformanceTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="110" opendate="2015-7-14 00:00:00" fixdate="2015-8-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>DistributedTransactionDUnitTest.testPutAllWithTransactions failed with CommitIncompleteException</summary>
      <description>com.gemstone.gemfire.disttx.DistributedTransactionDUnitTest &gt; testPutAllWithTransactions FAILED dunit.RMIException: While invoking com.gemstone.gemfire.disttx.DistributedTransactionDUnitTest$33.call in VM 0 running on Host pietas.apache.org with 4 VMs at dunit.VM.invoke(VM.java:359) at dunit.VM.invoke(VM.java:303) at dunit.VM.invoke(VM.java:271) at com.gemstone.gemfire.disttx.DistributedTransactionDUnitTest.execute(DistributedTransactionDUnitTest.java:118) at com.gemstone.gemfire.disttx.DistributedTransactionDUnitTest.testPutAllWithTransactions(DistributedTransactionDUnitTest.java:983) Caused by: com.gemstone.gemfire.cache.CommitIncompleteException: Incomplete commit of transaction TXId: pietas(30637)&lt;v362&gt;:53897:3. Caused by the following exceptions: From member: pietas(30663)&lt;v366&gt;:34083 com.gemstone.gemfire.distributed.internal.ReplyException: From pietas(30663)&lt;v366&gt;:34083: com.gemstone.gemfire.cache.UnsupportedOperationInTransactionException: Expected entry size of 1 for region /__PR/_B__customerPRRegion_3 during a distributed transaction but got 2 at com.gemstone.gemfire.internal.cache.TXMessage.process(TXMessage.java:114) at com.gemstone.gemfire.distributed.internal.DistributionMessage.scheduleAction(DistributionMessage.java:371) at com.gemstone.gemfire.distributed.internal.DistributionMessage.schedule(DistributionMessage.java:434) at com.gemstone.gemfire.distributed.internal.DistributionManager.scheduleIncomingMessage(DistributionManager.java:3862) at com.gemstone.gemfire.distributed.internal.DistributionManager.handleIncomingDMsg(DistributionManager.java:3486) at com.gemstone.gemfire.distributed.internal.DistributionManager$MyListener.messageReceived(DistributionManager.java:4683) at com.gemstone.gemfire.distributed.internal.membership.jgroup.JGroupMembershipManager.processMessage(JGroupMembershipManager.java:2160) at com.gemstone.gemfire.distributed.internal.membership.jgroup.JGroupMembershipManager.handleOrDeferMessage(JGroupMembershipManager.java:2069) at com.gemstone.gemfire.distributed.internal.membership.jgroup.JGroupMembershipManager$MyDCReceiver.messageReceived(JGroupMembershipManager.java:668) at com.gemstone.gemfire.distributed.internal.direct.DirectChannel.receive(DirectChannel.java:804) at com.gemstone.gemfire.internal.tcp.TCPConduit.messageReceived(TCPConduit.java:835) at com.gemstone.gemfire.internal.tcp.Connection.dispatchMessage(Connection.java:3932) at com.gemstone.gemfire.internal.tcp.Connection.processNIOBuffer(Connection.java:3515) at com.gemstone.gemfire.internal.tcp.Connection.runNioReader(Connection.java:1827) at com.gemstone.gemfire.internal.tcp.Connection.run(Connection.java:1702) at java.lang.Thread.run(Thread.java:745)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.TXRegionState.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DistTXStateProxyImplOnCoordinator.java</file>
    </fixedFiles>
  </bug>
  <bug id="1100" opendate="2016-3-15 00:00:00" fixdate="2016-3-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>NonExisting Member can remove member from existing cluster.</summary>
      <description>There is possibility that non-existing member can remove member from existing cluster. While processing view message we need to make sure that is coming from member which is in current view.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.messages.InstallViewMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
    </fixedFiles>
  </bug>
  <bug id="1114" opendate="2016-3-21 00:00:00" fixdate="2016-1-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove sqlfire/GemFireXD references from Pulse</summary>
      <description>No need to drag around this old code</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.ui.PulseAutomatedTest.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.controllers.PulseControllerJUnitTest.java</file>
      <file type="M">geode-pulse.src.main.webapp.WEB-INF.spring-security.xml</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.regionView.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.queryStatistics.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.pages.Login.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.pages.DataBrowser.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.MemberDetails.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.common.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.clusterDetail.js</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.MemberRegionsService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.MemberDetailsService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterSelectedRegionService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterRegionsService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterRegionService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterMemberService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.PulseAppListener.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.JMXDataUpdater.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.controllers.PulseController.java</file>
    </fixedFiles>
  </bug>
  <bug id="1122" opendate="2016-3-22 00:00:00" fixdate="2016-11-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Dependency on environment variable GEMFIRE needs to be removed</summary>
      <description>There is still a strong dependency on the environment variable GEMFIRE within GEODE. This should be replaced with GEODE_HOME or removed completely from the system.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptorJUnitTest.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.configuring.gfsh.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.Gfsh.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.LauncherLifecycleCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.AgentUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RemoteGemFireVM.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FetchHostResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.GemFireVM.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.ManagedEntityConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.DistributedSystemHealthMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.AdminDistributedSystemImpl.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.management.internal.cli.commands.LauncherLifecycleCommandsJUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.BundledJarsJUnitTest.java</file>
      <file type="M">geode-assembly.src.main.dist.bin.gfsh.bat</file>
      <file type="M">geode-assembly.src.main.dist.bin.gfsh</file>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="1128" opendate="2016-3-24 00:00:00" fixdate="2016-9-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add log messages and enhance the output of list-missing-disk-stores to report missing colocated regions</summary>
      <description>Persistent recovery waits until all colocated regions are created. This is necessary in order to maintain colocation. However, it can result in surprising behavior if a user doesn't create a region or, in the case of GEODE-1117, geode doesn't create an internal region.We need a warning level log message indicating that some colocated regions are missing. We do have a log message after 15 seconds if other members have not created persistent regions - see the code in RedundancyLogger.logWaitingForMembers.We should enhance the logger to report any missing colocated regions as well.The list-missing-disk-stores command should also be enhanced to report missing colocated regions</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.partitioned.PersistentPartitionedRegionTestBase.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.partitioned.PersistentColocatedPartitionedRegionDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.PartitionRegionConfig.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.ColocationHelper.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ColocationLogger.java</file>
    </fixedFiles>
  </bug>
  <bug id="1131" opendate="2016-3-25 00:00:00" fixdate="2016-3-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ParallelGatewaySenderOperation_2_OffHeapDUnitTest.testParallelGatewaySenders_MultiplNode_UserPR_localDestroy_Recreate failed with AssertionError</summary>
      <description>Private Build #2015 (Mar 24, 2016 3:09:34 AM)Revision: 068d3bce13868470c093aace1cf101356fcf27decom.gemstone.gemfire.test.dunit.RMIException: While invoking com.gemstone.gemfire.internal.cache.wan.WANTestBase$$Lambda$1753/1471594403.run in VM 7 running on Host cc6-co6.gemstone.com with 8 VMs at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:440) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:382) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:318) at com.gemstone.gemfire.internal.cache.wan.WANTestBase.validateRegionSizes(WANTestBase.java:4776) at com.gemstone.gemfire.internal.cache.wan.concurrent.ConcurrentParallelGatewaySenderOperation_2_DUnitTest.testParallelGatewaySenders_MultiplNode_UserPR_localDestroy_Recreate(ConcurrentParallelGatewaySenderOperation_2_DUnitTest.java:356) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at junit.framework.TestCase.runTest(TestCase.java:176) at junit.framework.TestCase.runBare(TestCase.java:141) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:129) at junit.framework.TestSuite.runTest(TestSuite.java:252) at junit.framework.TestSuite.run(TestSuite.java:247) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:105) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50) at sun.reflect.GeneratedMethodAccessor161.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106) at sun.reflect.GeneratedMethodAccessor160.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: java.lang.AssertionError: Event never occurred after 240000 ms: Expected region entries: 20 but actual entries: 14 present region keyset [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 17, 18, 19] at org.junit.Assert.fail(Assert.java:88) at com.gemstone.gemfire.test.dunit.Wait.waitForCriterion(Wait.java:119) at com.gemstone.gemfire.internal.cache.wan.WANTestBase.validateRegionSize(WANTestBase.java:3627) at com.gemstone.gemfire.internal.cache.wan.WANTestBase.lambda$validateRegionSizes$985416d8$1(WANTestBase.java:4776) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at hydra.MethExecutor.executeObject(MethExecutor.java:268) at com.gemstone.gemfire.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:84) at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$95(TCPTransport.java:683) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ... 3 more</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.parallel.ParallelGatewaySenderQueue.java</file>
    </fixedFiles>
  </bug>
  <bug id="1134" opendate="2016-3-28 00:00:00" fixdate="2016-3-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Stale Cluster Configuration Service</summary>
      <description>There seems to be an issue with the cluster configuration service, for which manual modifications to the "cluster.xml" and/or "cluster.properties" files are only picked up by the servers when the ENTIRE cluster is restarted.The official user guide states the following: "If you make any manual modifications to the cluster.xml or cluster.properties (or group_name.xml or group_name.properties) files, you must stop the locator and then restart the locator using the --load-cluster-configuration-from-dir parameter. Direct file modifications are not picked up by the cluster configuration service without a locator restart.". So basically you should be able to restart the members in a rolling fashion, as long as the locators are restarted at first and they correctly pick up the new cluster configuration files from disk, the servers should have the new cluster configuration once they are restarted afterwards. This doesn't seem to be case according to some tests I've done.Basically, customer's requirement is to be able to manually modify the cluster.xml file without downtime, meaning that are okay with restarting the members one at a time, but not all of them at the same time. They can't use gfsh scripts to make these modifications, they must be able to manually modify the cluster.xml, that's their requirement.For some reason is always required to stop the entire cluster (locators and servers); if you don't, then the servers won't get the new cluster configuration. This can be reproduced in every run (with one, two and three locators, it doesn't matter). The reproducible scenario is attached to the JIRA, the steps are below:1. Download and extract the file "workspace.zip".2. Modify the file "00_setenv.txt", specifically the variables "JAVA_HOME" and "GEMFIRE" to use your local installation directories.3. Execute "01_start_cluster.sh" (start N locators and M servers, being N and M variables defined in "00_setenv.txt").4. Execute "02_configure_cluster.sh" (creates two regions and one index, just for testing purposes).5. Execute "03_change_cluster_config.sh". The main goal of this file is to replace the "cluster.xml" file with another one (located in GemFire/cluster/config/cluster.xml), and restart the members in different orders to verifiy whether the new configuration has been picked up by the servers or not. After each selection you can choose the option "6" to verify the cluster configuration. As you can see, only option 5 (shutdown the entire cluster) works correctly.6. Execute "04_stop_cluster.sh" and "05_clean_cluster.sh" to delete everything.This might be a documentation bug but I don't think so, if the cluster configuration is only stored in locators, why do the options 2 and 4 not work?.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.SharedConfiguration.java</file>
    </fixedFiles>
  </bug>
  <bug id="1160" opendate="2016-4-1 00:00:00" fixdate="2016-4-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>TransactionWriter is unexpectedly triggered if updating data entries with using PDX serializer</summary>
      <description>It has been reported that TransactionWriters are being invoked for operations on the PDX type registry. The writer may see unexpected events containing internal PDX metadata.#Start a transaction#perform a put() on a Region with a PDX serializable objectPDX Serialization will suspend the transaction and distributed metadata concerning the value object in its own transaction. When the PDX transaction commits any TransactionWriters (or TransactionListeners) will be invoked with the PDX TransactionEvents.Once the PDX transaction completes the original transaction is resumed and the put() is allowed to complete.Transaction listeners and writers shouldn't be invoked for the PDX events - just the original put() operation.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.pdx.PdxSerializableDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.TXRmtEvent.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.TXEvent.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.TXCommitMessage.java</file>
    </fixedFiles>
  </bug>
  <bug id="1163" opendate="2016-4-2 00:00:00" fixdate="2016-4-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix branding in Swagger UI (Developer REST)</summary>
      <description>Found residual reference to Gemfire and Pivotal with links in Swagger UI (docs). Should be changed to Apache/ Geode.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.com.gemstone.gemfire.rest.internal.web.swagger.config.SwaggerConfig.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.i18n.LocalizedStrings.java</file>
    </fixedFiles>
  </bug>
  <bug id="1164" opendate="2016-4-4 00:00:00" fixdate="2016-5-4 01:00:00" resolution="Won&amp;#39;t Fix">
    <buginformation>
      <summary>CI failure: CqPerfDUnitTest.testMatchingCqs</summary>
      <description>com.gemstone.gemfire.test.dunit.RMIException: While invoking com.gemstone.gemfire.cache.query.cq.dunit.CqQueryDUnitTest$33.run in VM 1 running on Host venezuela.gemstone.com with 4 VMs at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:439) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:381) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:317) at com.gemstone.gemfire.cache.query.cq.dunit.CqQueryDUnitTest.validateCQ(CqQueryDUnitTest.java:1157) at com.gemstone.gemfire.cache.query.cq.dunit.CqPerfDUnitTest.testMatchingCqs(CqPerfDUnitTest.java:466) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at junit.framework.TestCase.runTest(TestCase.java:176) at junit.framework.TestCase.runBare(TestCase.java:141) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:129) at junit.framework.TestSuite.runTest(TestSuite.java:252) at junit.framework.TestSuite.run(TestSuite.java:247) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:105) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50) at sun.reflect.GeneratedMethodAccessor323.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106) at sun.reflect.GeneratedMethodAccessor322.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: junit.framework.AssertionFailedError: Query Update Event mismatch expected:&lt;2&gt; but was:&lt;1&gt; at junit.framework.Assert.fail(Assert.java:57) at junit.framework.Assert.failNotEquals(Assert.java:329) at junit.framework.Assert.assertEquals(Assert.java:78) at junit.framework.Assert.assertEquals(Assert.java:234) at junit.framework.TestCase.assertEquals(TestCase.java:401) at com.gemstone.gemfire.cache.query.cq.dunit.CqQueryDUnitTest$33.run2(CqQueryDUnitTest.java:1228) at com.gemstone.gemfire.cache30.CacheSerializableRunnable.run(CacheSerializableRunnable.java:66) at sun.reflect.GeneratedMethodAccessor359.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at hydra.MethExecutor.executeObject(MethExecutor.java:268) at com.gemstone.gemfire.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:83) at sun.reflect.GeneratedMethodAccessor54.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$95(TCPTransport.java:683) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ... 3 more</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.dunit.QueryUsingPoolDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1167" opendate="2016-4-4 00:00:00" fixdate="2016-4-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Changing the off-heap attribute of a persistent region does not work correctly</summary>
      <description>If you persist a region with off-heap=false and then shutdown; change your region config to off-heap=true; and then recover the persistent region it should end up stored off-heap.Or if you start off-heap=true and then switch to off-heap=false you then the region should end up using heap memory.But what is happening is that the old configuration is used for the storage and the data does not get converted to the new type of storage.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.offheap.OffHeapRegionBase.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DiskRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="1169" opendate="2016-4-4 00:00:00" fixdate="2016-4-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Offheap refcount was not properly decremented when recovering from disk and compressor is changed</summary>
      <description>Geode recovers data from disk using original configuration even before region is created. If the region config is changed (e.g compressor changes), it will copy from the recovered data. In this situation, recovered offheap retained is not properly released after the copy.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.offheap.OffHeapRegionBase.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug id="1174" opendate="2016-4-5 00:00:00" fixdate="2016-4-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: UniversalMembershipListenerAdapterDUnitTest.testSystemClientEventsInServer</summary>
      <description>Geode_develop_DistributedTests/2151/Revision: 49e3f523d16389f5e84847c6dcfd6ab45427f8c2junit.framework.AssertionFailedError at junit.framework.Assert.fail(Assert.java:55) at junit.framework.Assert.assertTrue(Assert.java:22) at junit.framework.Assert.assertTrue(Assert.java:31) at junit.framework.TestCase.assertTrue(TestCase.java:201) at com.gemstone.gemfire.management.UniversalMembershipListenerAdapterDUnitTest.doTestSystemClientEventsInServer(UniversalMembershipListenerAdapterDUnitTest.java:990) at com.gemstone.gemfire.management.UniversalMembershipListenerAdapterDUnitTest.testSystemClientEventsInServer(UniversalMembershipListenerAdapterDUnitTest.java:704) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at junit.framework.TestCase.runTest(TestCase.java:176) at junit.framework.TestCase.runBare(TestCase.java:141) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:129) at junit.framework.TestSuite.runTest(TestSuite.java:252) at junit.framework.TestSuite.run(TestSuite.java:247) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:105) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50) at sun.reflect.GeneratedMethodAccessor348.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106) at sun.reflect.GeneratedMethodAccessor347.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.main.java.com.gemstone.gemfire.cache.client.internal.GatewaySenderBatchOp.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.CloseConnection.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.CloseConnectionOp.java</file>
    </fixedFiles>
  </bug>
  <bug id="1177" opendate="2016-4-5 00:00:00" fixdate="2016-1-5 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Session replication local cache is reporting bad object sizes</summary>
      <description>The session replication module has a local cache that uses heap LRU - See PeerToPeerSessionCache.createOrRetrieveLocalRegion.When using LRU, the region uses an object sizer to determine the size of the objects. The default object sizer finds all reachable objects using reflection for the first value in the region, and then reuses that size for all subsequent values of the same class. See EvictionAction.createLRUHeapAttributes().In the case of session replication, it looks like we put a GemfireHttpSession in the region. Unfortunately, that has references back to the session manager, which has references to an InternalDistributedSystem, which in turn pulls in a whole lot of junk.So the size of the objects reported by the sizer for this local cache are probably completely wrong, which might affect the behavior of the heap LRU.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.size.ReflectionObjectSizer.java</file>
    </fixedFiles>
  </bug>
  <bug id="1186" opendate="2016-4-6 00:00:00" fixdate="2016-4-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode website: reinstate Google Analytics</summary>
      <description>Reinstate Google Analytics on the Geode website</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.layouts.header.html</file>
      <file type="M">geode-site.website.layouts.footer.html</file>
    </fixedFiles>
  </bug>
  <bug id="119" opendate="2015-7-15 00:00:00" fixdate="2015-3-15 01:00:00" resolution="Won&amp;#39;t Fix">
    <buginformation>
      <summary>Re-introduce the HDFS unit tests that were disabled before code-drop (GEODE-8) due to failures</summary>
      <description>The dunits that need to be re-introduced:1. com.gemstone.gemfire.cache.hdfs.internal.RegionWithHDFSBasicDUnitTest2. com.gemstone.gemfire.cache.hdfs.internal.RegionWithHDFSOffHeapBasicDUnitTest3. com.gemstone.gemfire.cache.hdfs.internal.RegionWithHDFSPersistenceBasicDUnitTest</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.RegionWithHDFSTestBase.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.ColocatedRegionWithHDFSDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1195" opendate="2016-4-7 00:00:00" fixdate="2016-3-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve "Synchronizing Your Offline Disk Store with Your Cache" docs</summary>
      <description>The docs in question are: http://geode.docs.pivotal.io/docs/managing/disk_storage/keeping_offline_disk_store_in_sync.html#syncing_offline_disk_storeChange "modify-disk-store" to "alter disk-store". Modify is the older command and alter is the current gfsh command.I think you should introduce this section with:If you change or remove persistent regions by modifying your cache.xml or you code that configures the regions then you should alter this disk-store to be the same. If you don't then the next time this disk-store is recovered it will recover all that regions data into a temporary region with the old configuration. The old configuration will still consume the old configured resources (heap memory, off-heap memory). If those resources are no longer available (for example the old configuration of the region was off-heap but you decide to no longer configure off-heap memory on the JVM) the disk-store recovery will fail. So it is recommended that you change the stored configuration to match the runtime configuration.In the subsection on "Change Region Configuration" this list of things that can be changed are out of date:The disk store retains region capacity and load settings, including entry map settings (initial capacity, concurrency level, load factor), LRU eviction settings, and the statistics enabled boolean.Instead of listing them all here and trying to keep that list up to date perhaps it would be better to say:The disk store retains a subset of the region configuration attributes (for a list of the retained attributes see alter disk-store at http://geode.docs.pivotal.io/docs/tools_modules/gfsh/command-pages/alter.html)</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.disk.storage.keeping.offline.disk.store.in.sync.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="1196" opendate="2016-4-7 00:00:00" fixdate="2016-4-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>TcpServerBackwardCompatDUnitTest leaves a DistributedSystem connected in one of its members causing DistTXDebugDUnitTest to fail</summary>
      <description>The failing test cases are: com.gemstone.gemfire.disttx.DistTXDebugDUnitTest.testTXPRRR2_putall com.gemstone.gemfire.disttx.DistTXDebugDUnitTest.testTXPR2 com.gemstone.gemfire.disttx.DistTXDebugDUnitTest.testTXRR2 com.gemstone.gemfire.disttx.DistTXDebugDUnitTest.testTXPR com.gemstone.gemfire.disttx.DistTXDebugDUnitTest.testTXDestroy_invalidate com.gemstone.gemfire.disttx.DistTXDebugDUnitTest.testTXPR_removeAll com.gemstone.gemfire.disttx.DistTXDebugDUnitTest.testTXPR_putall com.gemstone.gemfire.disttx.DistTXDebugDUnitTest.testTXPR_RR com.gemstone.gemfire.disttx.DistTXDebugDUnitTest.testTXPRRR2_createAlthough there are a few other ones, the main exception is this PartitionedRegionStorageException:com.gemstone.gemfire.test.dunit.RMIException: While invoking com.gemstone.gemfire.disttx.DistTXDebugDUnitTest$7.call in VM 3 running on Host ip-10-32-39-161.ore1.vpc.pivotal.io with 4 VMs at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:439) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:381) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:346) at com.gemstone.gemfire.disttx.DistTXDebugDUnitTest.testTXPR2(DistTXDebugDUnitTest.java:501) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:105) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50) at sun.reflect.GeneratedMethodAccessor6.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106) at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: com.gemstone.gemfire.cache.PartitionedRegionStorageException: Unable to find any members to host a bucket in the partitioned region. Advise you to start enough data store nodes.Partitioned Region name = /pregion1 Redundancy level set to 1. Number of available data stores: 0 . Number successfully allocated = 0. Data stores: []. Data stores successfully allocated: []. Equivalent members: [ip-10-32-39-161(16350)&lt;ec&gt;&lt;v1&gt;:1026] at com.gemstone.gemfire.internal.cache.PRHARedundancyProvider.insufficientStores(PRHARedundancyProvider.java:310) at com.gemstone.gemfire.internal.cache.PRHARedundancyProvider.createBucketOnDataStore(PRHARedundancyProvider.java:483) at com.gemstone.gemfire.internal.cache.PartitionedRegion.createBucket(PartitionedRegion.java:3520) at com.gemstone.gemfire.internal.cache.PartitionedRegion.getOwnerForKey(PartitionedRegion.java:10490) at com.gemstone.gemfire.internal.cache.DistTXStateProxyImplOnCoordinator.getOwnerForKey(DistTXStateProxyImplOnCoordinator.java:1061) at com.gemstone.gemfire.internal.cache.DistTXStateProxyImplOnCoordinator.getRealDeal(DistTXStateProxyImplOnCoordinator.java:342) at com.gemstone.gemfire.internal.cache.TXStateProxyImpl.putEntry(TXStateProxyImpl.java:696) at com.gemstone.gemfire.internal.cache.LocalRegion.basicPut(LocalRegion.java:5482) at com.gemstone.gemfire.internal.cache.LocalRegion.validatedPut(LocalRegion.java:1757) at com.gemstone.gemfire.internal.cache.LocalRegion.put(LocalRegion.java:1737) at com.gemstone.gemfire.internal.cache.AbstractRegion.put(AbstractRegion.java:342) at com.gemstone.gemfire.disttx.DistTXDebugDUnitTest$7.call(DistTXDebugDUnitTest.java:486) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at hydra.MethExecutor.executeObject(MethExecutor.java:268) at com.gemstone.gemfire.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:83) at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$241(TCPTransport.java:683) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1/251752108.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ... 3 more</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.dunit.internal.JUnit4DistributedTestCase.java</file>
    </fixedFiles>
  </bug>
  <bug id="1199" opendate="2016-4-7 00:00:00" fixdate="2016-4-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>offheap memory leak if a remote CacheWriter is invoked on an off-heap region</summary>
      <description>If you have a distributed off-heap region and the CacheWriter is in a remote member then when you do a put on the off-heap region it will need to invoke the CacheWriter on the remote member. When this "net write" is done it causes the off-heap memory value for that operations to never be freed.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.SearchLoadAndWriteProcessor.java</file>
    </fixedFiles>
  </bug>
  <bug id="120" opendate="2015-7-15 00:00:00" fixdate="2015-7-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>RDD.saveToGemfire() can not handle big dataset (1M entries per partition)</summary>
      <description>the connector use single region.putAll() call to save each RDD partition. But putAll() doesn't handle big dataset well (such as 1M record). Need to split the dataset into smaller chunks, and invoke putAll() for each chunk.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.test.scala.unittest.io.pivotal.gemfire.spark.connector.GemFireRDDFunctionsTest.scala</file>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.main.scala.io.pivotal.gemfire.spark.connector.streaming.GemFireDStreamFunctions.scala</file>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.main.scala.io.pivotal.gemfire.spark.connector.package.scala</file>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.main.scala.io.pivotal.gemfire.spark.connector.javaapi.JavaAPIHelper.scala</file>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.main.scala.io.pivotal.gemfire.spark.connector.internal.rdd.GemFireRDDWriter.scala</file>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.main.scala.io.pivotal.gemfire.spark.connector.internal.rdd.GemFireRDDPartitionerImpl.scala</file>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.main.scala.io.pivotal.gemfire.spark.connector.GemFireRDDFunctions.scala</file>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.main.scala.io.pivotal.gemfire.spark.connector.GemFirePairRDDFunctions.scala</file>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.main.java.io.pivotal.gemfire.spark.connector.javaapi.GemFireJavaUtil.java</file>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.main.java.io.pivotal.gemfire.spark.connector.javaapi.GemFireJavaRDDFunctions.java</file>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.main.java.io.pivotal.gemfire.spark.connector.javaapi.GemFireJavaPairRDDFunctions.java</file>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.main.java.io.pivotal.gemfire.spark.connector.javaapi.GemFireJavaPairDStreamFunctions.java</file>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.main.java.io.pivotal.gemfire.spark.connector.javaapi.GemFireJavaDStreamFunctions.java</file>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.it.java.ittest.io.pivotal.gemfire.spark.connector.JavaApiIntegrationTest.java</file>
      <file type="M">gemfire-spark-connector.doc.6.save.rdd.md</file>
    </fixedFiles>
  </bug>
  <bug id="1201" opendate="2016-4-8 00:00:00" fixdate="2016-4-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>When http-service-bind-address not specified it does not have default and fails</summary>
      <description>When the http-service-bind-address property is not specified, the REST server (jetty) fails to start up.The new functionality will be to check if the server-bind-address is specified to used that, otherwise fail over to the bind-address. If all else fails, then use the interface associated with the hostname.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.com.gemstone.gemfire.rest.internal.web.swagger.config.RestApiPathProvider.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.RestAgent.java</file>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="124" opendate="2015-7-15 00:00:00" fixdate="2015-8-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability to auto-rebalance data</summary>
      <description>Rebalancing relocates data from heavily loaded members to lightly loaded members. Currently Geode only supports manual rebalancing by issuing a gfsh command or a java function call. In most cases, the decision to rebalance is based on the size of the member. As Geode monitors the data size, it can also automatically trigger rebalancing. Auto-Rebalancing is expected to prevent failures seen in an unbalanced cluster more than with a manual rebalance.Latest spec: https://cwiki.apache.org/confluence/display/GEODE/Automated+Rebalancing</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-rebalancer.build.gradle</file>
      <file type="M">settings.gradle</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.control.ResourceManagerStats.java</file>
      <file type="M">gemfire-rebalancer.src.test.java.com.gemstone.gemfire.cache.util.AutoBalancerJUnitTest.java</file>
      <file type="M">gemfire-rebalancer.src.main.java.com.gemstone.gemfire.cache.util.AutoBalancer.java</file>
    </fixedFiles>
  </bug>
  <bug id="1252" opendate="2016-4-19 00:00:00" fixdate="2016-5-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: ClientToServerDeltaDUnitTest.testClientsConnectedToEmptyServer</summary>
      <description>Build # 2299Error Messagecom.gemstone.gemfire.test.dunit.RMIException: While invoking com.gemstone.gemfire.internal.cache.tier.sockets.ClientToServerDeltaDUnitTest$$Lambda$462/36078231.call in VM 1 running on Host japan.gemstone.com with 4 VMsStacktracecom.gemstone.gemfire.test.dunit.RMIException: While invoking com.gemstone.gemfire.internal.cache.tier.sockets.ClientToServerDeltaDUnitTest$$Lambda$462/36078231.call in VM 1 running on Host japan.gemstone.com with 4 VMs at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:389) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:355) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:320) at com.gemstone.gemfire.internal.cache.tier.sockets.ClientToServerDeltaDUnitTest.testClientsConnectedToEmptyServer(ClientToServerDeltaDUnitTest.java:747) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at junit.framework.TestCase.runTest(TestCase.java:176) at junit.framework.TestCase.runBare(TestCase.java:141) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:129) at junit.framework.TestSuite.runTest(TestSuite.java:252) at junit.framework.TestSuite.run(TestSuite.java:247) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:105) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: java.lang.AssertionError at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.internal.cache.versions.RegionVersionVector.recordVersion(RegionVersionVector.java:579) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.internal.cache.AbstractUpdateOperation.doPutOrCreate(AbstractUpdateOperation.java:225) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.internal.cache.AbstractUpdateOperation$AbstractUpdateMessage.basicOperateOnRegion(AbstractUpdateOperation.java:286) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.internal.cache.AbstractUpdateOperation$AbstractUpdateMessage.operateOnRegion(AbstractUpdateOperation.java:255) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.internal.cache.DistributedCacheOperation$CacheOperationMessage.basicProcess(DistributedCacheOperation.java:1165) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.internal.cache.DistributedCacheOperation$CacheOperationMessage.process(DistributedCacheOperation.java:1065) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.distributed.internal.DistributionMessage.scheduleAction(DistributionMessage.java:379) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.distributed.internal.DistributionMessage.schedule(DistributionMessage.java:442) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.distributed.internal.DistributionManager.scheduleIncomingMessage(DistributionManager.java:3563) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.distributed.internal.DistributionManager.handleIncomingDMsg(DistributionManager.java:3186) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.distributed.internal.DistributionManager$MyListener.messageReceived(DistributionManager.java:4385) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.distributed.internal.membership.gms.mgr.GMSMembershipManager.dispatchMessage(GMSMembershipManager.java:1135) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.distributed.internal.membership.gms.mgr.GMSMembershipManager.handleOrDeferMessage(GMSMembershipManager.java:1063) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.distributed.internal.membership.gms.mgr.GMSMembershipManager$MyDCReceiver.messageReceived(GMSMembershipManager.java:417) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.distributed.internal.direct.DirectChannel.receive(DirectChannel.java:751) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.internal.tcp.TCPConduit.messageReceived(TCPConduit.java:833) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.internal.tcp.Connection.dispatchMessage(Connection.java:3993) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.internal.tcp.Connection.processNIOBuffer(Connection.java:3577) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.internal.tcp.Connection.runNioReader(Connection.java:1869) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in com.gemstone.gemfire.internal.tcp.Connection.run(Connection.java:1738) at Remote Member 'japan(29633)&lt;ec&gt;&lt;v367&gt;:1025' in java.lang.Thread.run(Thread.java:745) at com.gemstone.gemfire.distributed.internal.ReplyException.handleAsUnexpected(ReplyException.java:87) at com.gemstone.gemfire.internal.cache.DistributedCacheOperation.waitForAckIfNeeded(DistributedCacheOperation.java:719) at com.gemstone.gemfire.internal.cache.DistributedCacheOperation.distribute(DistributedCacheOperation.java:640) at com.gemstone.gemfire.internal.cache.AbstractUpdateOperation.distribute(AbstractUpdateOperation.java:71) at com.gemstone.gemfire.internal.cache.DistributedRegion.distributeUpdate(DistributedRegion.java:529) at com.gemstone.gemfire.internal.cache.DistributedRegion.basicPutPart3(DistributedRegion.java:510) at com.gemstone.gemfire.internal.cache.AbstractRegionMap.basicPut(AbstractRegionMap.java:3055) at com.gemstone.gemfire.internal.cache.LocalRegion.virtualPut(LocalRegion.java:6105) at com.gemstone.gemfire.internal.cache.DistributedRegion.virtualPut(DistributedRegion.java:398) at com.gemstone.gemfire.internal.cache.LocalRegionDataView.putEntry(LocalRegionDataView.java:126) at com.gemstone.gemfire.internal.cache.LocalRegion.basicPut(LocalRegion.java:5482) at com.gemstone.gemfire.internal.cache.LocalRegion.validatedPut(LocalRegion.java:1757) at com.gemstone.gemfire.internal.cache.LocalRegion.put(LocalRegion.java:1737) at com.gemstone.gemfire.internal.cache.AbstractRegion.put(AbstractRegion.java:342) at com.gemstone.gemfire.internal.cache.tier.sockets.ClientToServerDeltaDUnitTest.putsWhichReturnsDeltaSent(ClientToServerDeltaDUnitTest.java:923) at com.gemstone.gemfire.internal.cache.tier.sockets.ClientToServerDeltaDUnitTest.lambda$testClientsConnectedToEmptyServer$497ef863$1(ClientToServerDeltaDUnitTest.java:747) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at hydra.MethExecutor.executeObject(MethExecutor.java:268) at com.gemstone.gemfire.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:82) at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$95(TCPTransport.java:683) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ... 3 moreStandard OutputPreviously run tests: [PRDeltaPropagationDUnitTest, RemoteCQTransactionDUnitTest, PutAllCSDUnitTest, HADispatcherDUnitTest, CQListGIIDUnitTest, DurableClientSimpleDUnitTest, DeltaToRegionRelationCQRegistrationDUnitTest, DeltaPropagationWithCQDUnitTest, DurableClientNetDownDUnitTest, ClientToServerDeltaDUnitTest]</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.versions.VersionTag.java</file>
    </fixedFiles>
  </bug>
  <bug id="1255" opendate="2016-4-19 00:00:00" fixdate="2016-5-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add test coverage for using a custom log4j2.xml with Geode</summary>
      <description>Add test coverage (probably to LogServiceIntegrationJUnitTest) for using a custom log4j2.xml with Geode.The user should be able to specify -Dlog4j.configurationFile=log4j2.xml and point to a custom log4j2.xml when starting server, locator or using APIs as a library. New integration test is required to verify this behavior works.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.SharedConfigurationCommandsDUnitTest.java</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-wan.src.test.java.com.gemstone.gemfire.management.internal.configuration.ClusterConfigurationDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.com.gemstone.gemfire.internal.cache.wan.wancommand.WANCommandTestBase.java</file>
      <file type="M">geode-pulse.src.main.java.com.vmware.gemfire.tools.pulse.internal.data.JMXDataUpdater.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.security.GfshShellConnectionRule.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.configuration.SharedConfigurationUsingDirDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.configuration.SharedConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.HeadlessGfshJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.HeadlessGfsh.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.UserCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.ShellCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.ListIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.ListAndDescribeDiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.GetCommandOnRegionWithCacheLoaderDuringCacheMissDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.DeployCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.CliCommandTestBase.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.process.FileProcessControllerIntegrationJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.ClassBuilder.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.ServerLauncherWithProviderJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.ServerLauncherRemoteJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.ServerLauncherRemoteFileJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.ServerLauncherLocalJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.ServerLauncherLocalFileJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.ServerLauncherJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.ServerLauncherIntegrationJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.MockServerLauncherCacheProvider.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LocatorStateJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LocatorLauncherRemoteJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LocatorLauncherRemoteFileJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LocatorLauncherLocalJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LocatorLauncherLocalFileJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LocatorLauncherJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LocatorLauncherIntegrationJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LocatorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LauncherTestSuite.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LauncherMemberMXBeanJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.HostedLocatorsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.DistributedTestSuite.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.AbstractServerLauncherJUnitTestCase.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.AbstractLocatorLauncherJUnitTestCase.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.AbstractLauncherServiceStatusJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.AbstractLauncherJUnitTestCase.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.AbstractLauncherJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.AbstractLauncherIntegrationJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.SharedConfiguration.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.operations.OperationContext.java</file>
      <file type="M">geode-assembly.src.test.java.com.gemstone.gemfire.management.internal.configuration.SharedConfigurationEndToEndDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.com.gemstone.gemfire.distributed.LocatorLauncherAssemblyJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1258" opendate="2016-4-19 00:00:00" fixdate="2016-4-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create new authentication tests for WAN with valid and invalid credentials.</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.com.gemstone.gemfire.internal.cache.wan.WANTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug id="1262" opendate="2016-4-20 00:00:00" fixdate="2016-3-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove VM4-VM7 in all tests using AsyncEventQueueTest</summary>
      <description>Use VM0-VM3 as creating more number of VMs increase the runtime of the test cases.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.misc.CommonParallelAsyncEventQueueDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.concurrent.ConcurrentAsyncEventQueueDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.asyncqueue.AsyncEventQueueStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.asyncqueue.AsyncEventListenerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.AsyncEventQueueTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug id="1274" opendate="2016-4-22 00:00:00" fixdate="2016-4-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse logging does not appear in Geode log file.</summary>
      <description>While trying to enable debug logging for Pulse, I found that no Pulse logging appears in the Geode log. The Admin REST logging does appear though.I had tried to enable debug logging by starting a locator with the followiing log4j config:&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;Configuration status="FATAL" shutdownHook="disable" packages="com.gemstone.gemfire.internal.logging.log4j"&gt; &lt;Properties&gt; &lt;Property name="gemfire-pattern"&gt;[%level{lowerCase=true} %date{yyyy/MM/dd HH:mm:ss.SSS z} &amp;lt;%thread&amp;gt; tid=%tid] %message%n%throwable%n&lt;/Property&gt; &lt;/Properties&gt; &lt;Appenders&gt; &lt;Console name="STDOUT" target="SYSTEM_OUT"&gt; &lt;PatternLayout pattern="${gemfire-pattern}"/&gt; &lt;/Console&gt; &lt;/Appenders&gt; &lt;Loggers&gt; &lt;Logger name="com.gemstone" level="INFO" additivity="true"&gt; &lt;filters&gt; &lt;MarkerFilter marker="GEMFIRE_VERBOSE" onMatch="DENY" onMismatch="NEUTRAL"/&gt; &lt;/filters&gt; &lt;/Logger&gt; &lt;Logger name="org.springframework" level="DEBUG" additivity="true"/&gt; &lt;Root level="ERROR"&gt; &lt;AppenderRef ref="STDOUT"/&gt; &lt;/Root&gt; &lt;/Loggers&gt;&lt;/Configuration&gt;However, only the Admin REST app produced debug log output.</description>
      <version>1.0.0-incubating,1.1.0</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.testbed.PropMockDataUpdater.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterSelectedRegionsMemberService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterSelectedRegionService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.security.LogoutHandler.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.security.GemFireAuthenticationProvider.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.security.GemFireAuthentication.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.PulseAppListener.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.log.PulseLogWriter.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.log.PulseLogger.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.log.MessageFormatter.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.log.LogWriter.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.Repository.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.PulseConstants.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.PulseConfig.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.JmxManagerFinder.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.JMXDataUpdater.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.DataBrowser.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.Cluster.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.controllers.PulseController.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.controllers.ExceptionHandlingAdvice.java</file>
      <file type="M">geode-pulse.build.gradle</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.PulseVerificationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1326" opendate="2016-4-29 00:00:00" fixdate="2016-6-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add test for gfsh function execution with ResultCollector</summary>
      <description>Related to a conversation on Slack, we should add a test for ResultCollectors.https://pivotal.slack.com/archives/gemfire/p1461791550000034</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.FunctionCommandsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1330" opendate="2016-4-29 00:00:00" fixdate="2016-5-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>XML is generated for internal lucene _data.files and _data.chunks regions</summary>
      <description>If a Cache is created from this xml:&lt;region name="data" refid="PARTITION_REDUNDANT"&gt; &lt;lucene:index name="trade_index"&gt; &lt;lucene:field name="id"/&gt; &lt;lucene:field name="email" analyzer="org.apache.lucene.analysis.core.KeywordAnalyzer"/&gt; &lt;lucene:field name="cusip"/&gt; &lt;/lucene:index&gt;&lt;/region&gt;Xml generated from that Cache includes the internal _data.files and _data.chunks Regions:&lt;region name="data"&gt; &lt;lucene:index xmlns:lucene="http://geode.apache.org/schema/lucene" name="trade_index"&gt; &lt;lucene:field name="id"/&gt; &lt;lucene:field name="email" analyzer="org.apache.lucene.analysis.core.KeywordAnalyzer"/&gt; &lt;lucene:field name="cusip"/&gt; &lt;/lucene:index&gt;&lt;/region&gt;&lt;region name="trade_index#_data.files"&gt; ...&lt;/region&gt;&lt;region name="trade_index#_data.chunks"&gt; ...&lt;/region&gt;</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexForPartitionedRegionTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexImpl.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexForReplicatedRegion.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexForPartitionedRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="1339" opendate="2016-5-3 00:00:00" fixdate="2016-6-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add test cases to list indexes from the peers if present, otherwise return an empty list.</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneIndexCreationDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1351" opendate="2016-5-5 00:00:00" fixdate="2016-5-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>need a function to wait for lucene index&amp;#39;s AEQ to flush</summary>
      <description>In demo, we realized such a waitForFlush() function is very useful. It can ensure the current entries are indexed. Then start to query.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneIndexCreationIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexRecoveryHAIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesBase.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneIndex.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexCreation.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexImpl.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneEventListener.java</file>
    </fixedFiles>
  </bug>
  <bug id="1352" opendate="2016-5-5 00:00:00" fixdate="2016-5-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: LuceneQueryImplJUnitTest.test</summary>
      <description>https://brazil.gemstone.com:8080//job/Geode_develop_IntegrationTests/2618/testReport/com.gemstone.gemfire.cache.lucene.internal/LuceneQueryImplJUnitTest/testError Messagecom.gemstone.gemfire.cache.RegionExistsException: /regionStacktracecom.gemstone.gemfire.cache.RegionExistsException: /region at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.createVMRegion(GemFireCacheImpl.java:3105) at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.basicCreateRegion(GemFireCacheImpl.java:3057) at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.createRegion(GemFireCacheImpl.java:3046) at com.gemstone.gemfire.cache.RegionFactory.create(RegionFactory.java:823) at com.gemstone.gemfire.cache.lucene.internal.LuceneQueryImplJUnitTest.createCache(LuceneQueryImplJUnitTest.java:57) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:112) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) at sun.reflect.GeneratedMethodAccessor49.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryImplIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1356" opendate="2016-5-5 00:00:00" fixdate="2016-5-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>DataAsAddress should not be used in comments and strings</summary>
      <description>The offheap implementation used to have a class named DataAsAddress.It no longer does. But we still have some places in the code that use this name.For example:UnsupportedOperationException("Did not expect DataAsAddress to be compressed");should be changed to:UnsupportedOperationException("Did not expect encoded address to be compressed");Another: // else it is DataAsAddress. This code just returns it as prepared.should be: // else it is has no refCount so just return it as prepared.Also the method: getSerializedLengthFromDataAsAddress should be renamed (or removed since it is deadcode).</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.offheap.OffHeapRegionEntryHelperJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.offheap.OffHeapRegionEntryHelper.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.AbstractRegionEntry.java</file>
    </fixedFiles>
  </bug>
  <bug id="1359" opendate="2016-5-7 00:00:00" fixdate="2016-8-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cleanup CliCommandTestBase tests</summary>
      <description>Cleanup CliCommandTestBase tests Fix up potential time sensitivity issues. Ensure output goes to TemporaryFolder.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.CommandOverHttpDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1364" opendate="2016-5-9 00:00:00" fixdate="2016-10-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: SerialWANPropogationDUnitTest.testReplicatedSerialPropagationToTwoWanSites</summary>
      <description>java.lang.AssertionError: An exception occurred during asynchronous invocation. at com.gemstone.gemfire.test.dunit.AsyncInvocation.checkException(AsyncInvocation.java:155) at com.gemstone.gemfire.internal.cache.wan.WANTestBase.preTearDown(WANTestBase.java:3697) at com.gemstone.gemfire.test.dunit.internal.JUnit4DistributedTestCase.preTearDown(JUnit4DistributedTestCase.java:503) at com.gemstone.gemfire.test.dunit.internal.JUnit4DistributedTestCase.tearDown(JUnit4DistributedTestCase.java:477) at com.gemstone.gemfire.test.dunit.internal.JUnit3DistributedTestCase.tearDown(JUnit3DistributedTestCase.java:206) at junit.framework.TestCase.runBare(TestCase.java:146) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:129) at junit.framework.TestSuite.runTest(TestSuite.java:252) at junit.framework.TestSuite.run(TestSuite.java:247) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:112) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: java.lang.NullPointerException at com.gemstone.gemfire.internal.cache.wan.GatewaySenderEventRemoteDispatcher$AckReaderThread.shutdown(GatewaySenderEventRemoteDispatcher.java:726) at com.gemstone.gemfire.internal.cache.wan.GatewaySenderEventRemoteDispatcher.stopAckReaderThread(GatewaySenderEventRemoteDispatcher.java:750) at com.gemstone.gemfire.internal.cache.wan.GatewaySenderEventRemoteDispatcher.stop(GatewaySenderEventRemoteDispatcher.java:765) at com.gemstone.gemfire.internal.cache.wan.AbstractGatewaySenderEventProcessor.stopProcessing(AbstractGatewaySenderEventProcessor.java:1173) at com.gemstone.gemfire.internal.cache.wan.serial.SerialGatewaySenderImpl.stop(SerialGatewaySenderImpl.java:134) at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.close(GemFireCacheImpl.java:2066) at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.close(GemFireCacheImpl.java:1855) at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.close(GemFireCacheImpl.java:1851) at com.gemstone.gemfire.internal.cache.wan.WANTestBase.closeCache(WANTestBase.java:3711) at com.gemstone.gemfire.internal.cache.wan.WANTestBase.cleanupVM(WANTestBase.java:3705) at com.gemstone.gemfire.internal.cache.wan.WANTestBase.lambda$preTearDown$84651174$1(WANTestBase.java:3693) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at hydra.MethExecutor.executeObject(MethExecutor.java:268) at com.gemstone.gemfire.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:82) at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$95(TCPTransport.java:683) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ... 3 morehttps://brazil.gemstone.com:8080/job/Geode_develop_DistributedTests/2496/testReport/com.gemstone.gemfire.internal.cache.wan.serial/SerialWANPropogationDUnitTest/testReplicatedSerialPropagationToTwoWanSites/</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialWANPropagationDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1373" opendate="2016-5-10 00:00:00" fixdate="2016-5-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI Failure: GfshCommandsSecurityTest.testClusterManager failed with AssertionError</summary>
      <description>Geode_develop_IntegrationTestsPrivate Build #2689 (May 9, 2016 11:09:00 AM)Revision: f24b9fb07e0f79b8c11e9cbe94c0885ff20fb909Error Messagejava.lang.AssertionErrorStacktracejava.lang.AssertionError at org.junit.Assert.fail(Assert.java:86) at org.junit.Assert.assertTrue(Assert.java:41) at org.junit.Assert.assertTrue(Assert.java:52) at com.gemstone.gemfire.management.internal.security.GfshCommandsSecurityTest.runCommandsWithAndWithout(GfshCommandsSecurityTest.java:147) at com.gemstone.gemfire.management.internal.security.GfshCommandsSecurityTest.testClusterManager(GfshCommandsSecurityTest.java:91) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at com.gemstone.gemfire.test.junit.rules.DescribedExternalResource$1.evaluate(DescribedExternalResource.java:39) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:112) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.security.shiro.JMXShiroAuthenticator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.security.GeodeSecurityUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="1375" opendate="2016-5-10 00:00:00" fixdate="2016-5-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>When using multicast a new member needs to receive the multicast message digest</summary>
      <description>Sending of JoinResponseMessages was removed a couple of months ago but this was the carrier of the multicast message digest (when multicast is enabled). Something needs to be done to transmit this digest to new members.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">geode-core.src.main.resources.com.gemstone.gemfire.distributed.internal.membership.gms.messenger.jgroups-mcast.xml</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.messenger.JGroupsMessenger.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
    </fixedFiles>
  </bug>
  <bug id="1379" opendate="2016-5-10 00:00:00" fixdate="2016-5-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Documentation should make clear that offheap regions will always clone when deltas are applied</summary>
      <description>Regions have a cloning-enabled attribute that when false usually means that a clone of the object will not be created when a Delta is applied.But when the region is also offheap the cloning-enabled attribute will be ignored and the region will behave as if it was set to true.This is because offheap regions store the value in serialized form. To apply a Delta to the value requires that the value be deserialized. Doing a deserialization is the same as making a clone.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.RegionFactory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.ClientRegionFactory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.AttributesMutator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.AttributesFactory.java</file>
    </fixedFiles>
  </bug>
  <bug id="1387" opendate="2016-5-12 00:00:00" fixdate="2016-5-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI Failure: LocatorLauncherRemoteFileIntegrationTest.testStatusUsingWorkingDirectory</summary>
      <description>Geode_develop_IntegrationTestsPrivate Build #2701 (May 10, 2016 11:09:00 AM)Revision: f93c87f13b4bf1bda67d994587d1299163694772Error Messagejava.lang.IllegalStateException: Failed to read status fileStacktracejava.lang.IllegalStateException: Failed to read status file at com.gemstone.gemfire.internal.process.FileProcessController.status(FileProcessController.java:157) at com.gemstone.gemfire.internal.process.FileProcessController.status(FileProcessController.java:87) at com.gemstone.gemfire.distributed.LocatorLauncher.statusWithWorkingDirectory(LocatorLauncher.java:906) at com.gemstone.gemfire.distributed.LocatorLauncher.status(LocatorLauncher.java:829) at com.gemstone.gemfire.distributed.LocatorLauncherRemoteIntegrationTest.testStatusUsingWorkingDirectory(LocatorLauncherRemoteIntegrationTest.java:717) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.rules.Verifier$1.evaluate(Verifier.java:35) at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:112) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.process.ControllableProcess.java</file>
    </fixedFiles>
  </bug>
  <bug id="1390" opendate="2016-5-13 00:00:00" fixdate="2016-5-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Move gfsh help test from closed to open</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.HelpCommandsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.CliCommandTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug id="1391" opendate="2016-5-13 00:00:00" fixdate="2016-5-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JsonFormatter javadocs need to be cleaned up</summary>
      <description>JsonFormatter javadocs have many grammatical and spelling errors. Most of the mistakes are just missing articles - "convert JSON document into PdxInstance" instead of "convert a JSON document into a PdxInstance" for example.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.pdx.TestObjectForPdxFormatter.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.pdx.PdxFormatterPutGetJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.pdx.JSONPdxClientServerDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.pdx.JSONFormatter.java</file>
    </fixedFiles>
  </bug>
  <bug id="1400" opendate="2016-5-16 00:00:00" fixdate="2016-5-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>An inflight transaction op could arrive later than a client failover operation and work on a TXState which has been removed from hostedTXStates map</summary>
      <description>A server connection thread could put a TXStateProxy into the hostedTXStates map, before the TxFailover op command removed it from the map. A race could occur there, when an inflight P2P tx msg is received to perform a tx operation gets the TXStateProxy to be removed. The operations done on this TXStateProxy could cause offheap memory leak.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.TXManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.RemoteOperationMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.PartitionMessage.java</file>
    </fixedFiles>
  </bug>
  <bug id="1402" opendate="2016-5-17 00:00:00" fixdate="2016-5-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>checkOrphans should not be called in tearDown</summary>
      <description>Some unit tests currently call checkOrphans in tearDown. The problem with doing this is if checkOrphans detects an orphan it will throw an exception. This will cause other tearDown tasks to not be done which can cause later unit tests to fail because the previous test did not get to clean everything up.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.offheap.OutOfOffHeapMemoryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.compression.CompressionRegionOperationsOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.compression.CompressionCacheListenerOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.tier.sockets.ForceInvalidateOffHeapEvictionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.PartitionedRegionOffHeapEvictionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.PartitionedRegionLocalMaxMemoryOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.OffHeapEvictionStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.OffHeapEvictionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.DistrbutedRegionProfileOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.PartitionedRegionOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.OffHeapLRUEvictionControllerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.GlobalRegionOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.GlobalRegionCCEOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.DistributedNoAckRegionOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.DistributedNoAckRegionCCEOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.DistributedAckRegionOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.DistributedAckRegionCCEOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.DistributedAckPersistentRegionCCEOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.DistributedAckOverflowRegionCCEOffHeapDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1410" opendate="2016-5-18 00:00:00" fixdate="2016-5-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix artifacts published for modules</summary>
      <description>Currently, the :extensions/geode-modules-session subproject produces 2 jars, one of which is classified as 'internal'. This is because maven poms can only have a single artifact (implicitly) classified as 'jar'. We should try and produce a separate pom for the 'internal' jar - preferrably without having to break up the submodule into 2 submodules.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.jmx.SessionStatisticsMXBean.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.jmx.SessionStatistics.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.util.TypeAwareMap.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.util.ThreadLocalSession.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.util.NamedThreadFactory.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.SessionManager.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.ListenerEventType.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.GemfireSessionManager.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.GemfireSessionException.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.GemfireHttpSession.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.DummySessionManager.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.Constants.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.attributes.SessionAttributes.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.attributes.QueuedSessionAttributes.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.attributes.ImmediateSessionAttributes.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.attributes.DeltaSessionAttributes.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.attributes.DeltaQueuedSessionAttributes.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.attributes.DeltaEvent.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.attributes.AbstractSessionAttributes.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.filter.attributes.AbstractDeltaSessionAttributes.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.common.SessionExpirationCacheListener.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.common.SessionCache.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.common.PeerToPeerSessionCache.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.common.ClientServerSessionCache.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.common.CacheProperty.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.com.gemstone.gemfire.modules.session.internal.common.AbstractSessionCache.java</file>
      <file type="M">extensions.geode-modules-session.build.gradle</file>
      <file type="M">extensions.geode-modules-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="1412" opendate="2016-5-19 00:00:00" fixdate="2016-5-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI Failure: QueueCommandsDUnitTest</summary>
      <description>Error Messagecom.gemstone.gemfire.test.dunit.RMIException: While invoking com.gemstone.gemfire.management.internal.cli.commands.QueueCommandsDUnitTest$3.run in VM 1 running on Host cc8-rh64.gemstone.com with 4 VMsStacktracecom.gemstone.gemfire.test.dunit.RMIException: While invoking com.gemstone.gemfire.management.internal.cli.commands.QueueCommandsDUnitTest$3.run in VM 1 running on Host cc8-rh64.gemstone.com with 4 VMs at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:389) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:355) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:293) at com.gemstone.gemfire.management.internal.cli.commands.QueueCommandsDUnitTest.testAsyncEventQueue(QueueCommandsDUnitTest.java:191) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:112) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: java.lang.AssertionError: expected:&lt;true&gt; but was:&lt;false&gt; at org.junit.Assert.fail(Assert.java:88) at org.junit.Assert.failNotEquals(Assert.java:834) at org.junit.Assert.assertEquals(Assert.java:118) at org.junit.Assert.assertEquals(Assert.java:144) at com.gemstone.gemfire.management.internal.cli.commands.QueueCommandsDUnitTest$3.run(QueueCommandsDUnitTest.java:210) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at hydra.MethExecutor.executeObject(MethExecutor.java:268) at com.gemstone.gemfire.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:82) at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$95(TCPTransport.java:683) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ... 3 more</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.web.controllers.QueueCommandsController.java</file>
    </fixedFiles>
  </bug>
  <bug id="1415" opendate="2016-5-19 00:00:00" fixdate="2016-5-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Disable logging of banners in distributedTests</summary>
      <description>Geode's distributedTests frequently create and destroy caches, causing banners to be logged that contain the same information. This increases the size of test output quite a bit and is unnecessary. Except for the dunit locator all banners should be disabled in these tests.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.dunit.standalone.ProcessManager.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.dunit.standalone.DUnitLauncher.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.logging.DistributedSystemLogFileJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.ServerLauncherRemoteWithCustomLoggingIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.logging.LogWriterFactory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.Banner.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.internal.AdminDistributedSystemImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="1416" opendate="2016-5-19 00:00:00" fixdate="2016-1-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Prepare geode-native for a source release</summary>
      <description>The next-gen-native-client-software-grant branch &amp;#91;1&amp;#93; contains the GemFire native client. In order to merge this code into the develop branch, we need to: 1) Review the code and determine what 3rd party libraries are bundled with the source and binary distributions. These will need to be properly attributed in the respective LICENSE and NOTICE files. 2) Update the source headers to remove old copyrights and replace with the Apache source header. 3) Improve the build process to make it simpler for contributors and users. This includes writing up build instructions. 4) Incorporate other suggestions from the community. &amp;#91;1&amp;#93; https://git-wip-us.apache.org/repos/asf?p=geode.git;a=shortlog;h=refs/heads/next-gen-native-client-software-grant</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">etc.intellijIdeaCodeStyle.xml</file>
      <file type="M">etc.eclipseFormatterProfile.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1509" opendate="2016-6-6 00:00:00" fixdate="2016-12-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Reduce the memory usage of GatewayEventCallbackArgument</summary>
      <description>GatewayEventCallbackArgument has a HashSet&lt;Integer&gt; of recipient gateways. Because we create a ton of these things, these sets end up consuming a lot of memory.It should probably use IntOpenHashSet initialized with a small size, eg new IntOpenHashSet(2).</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventCallbackArgument.java</file>
    </fixedFiles>
  </bug>
  <bug id="1513" opendate="2016-6-8 00:00:00" fixdate="2016-9-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>geode-web-api war contains duplicate jars</summary>
      <description>The war file produced by geode-web-api appears to have all of the 3rd party jars duplicated.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.build.gradle</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-pulse.build.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="1516" opendate="2016-6-9 00:00:00" fixdate="2016-6-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>IntelliJ and Eclipse formatter in geode /etc organize imports differently</summary>
      <description>The IntelliJ and Eclipse formatters in geode /etc should organize imports identically.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">etc.intellijIdeaCodeStyle.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1521" opendate="2016-6-10 00:00:00" fixdate="2016-6-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>APP_FETCH_SIZE in GFSH should not be applied to COUNT queries</summary>
      <description>There are more varieties of count than simply * within the count(). Specifically, one can do: count(distinct(field)) or count(field)This makes checking for only count( * ) incorrect. Instead, the search to apply the limt should look for " count("</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.functions.DataCommandFunction.java</file>
    </fixedFiles>
  </bug>
  <bug id="1524" opendate="2016-6-10 00:00:00" fixdate="2016-9-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Swagger UI does not show query errors</summary>
      <description>I'm playing with UDA and running adhoc queries through the Swagger UI. However, if I have a catastrophic error in my query the Swagger UI doesn't display it and I'm left with a 'progress spinner' bar. However, the same query from the command line does produce an appropriate error. For example, here I'm trying to use my sumuda function in a query:(2.7)jdeppe@deppe-mbp bughunt-2016 $ curl -v -H "Accept: application/json" 'http://127.0.0.1:8080/gemfire-api/v1/queries/adhoc?q=select%20sumuda(index)%20from%20%2Ffoo'* Trying 127.0.0.1...* Connected to 127.0.0.1 (127.0.0.1) port 8080 (#0)&gt; GET /gemfire-api/v1/queries/adhoc?q=select%20sumuda(index)%20from%20%2Ffoo HTTP/1.1&gt; Host: 127.0.0.1:8080&gt; User-Agent: curl/7.43.0&gt; Accept: application/json&gt;&lt; HTTP/1.1 500 Server Error&lt; Date: Fri, 10 Jun 2016 19:52:26 GMT&lt; Content-Type: application/json&lt; Accept-Charset: big5, big5-hkscs, cesu-8, euc-jp, euc-kr, gb18030, gb2312, gbk, ibm-thai, ibm00858, ibm01140, ibm01141, ibm01142, ibm01143, ibm01144, ibm01145, ibm01146, ibm01147, ibm01148, ibm01149, ibm037, ibm1026, ibm1047, ibm273, ibm277, ibm278, ibm280, ibm284, ibm285, ibm290, ibm297, ibm420, ibm424, ibm437, ibm500, ibm775, ibm850, ibm852, ibm855, ibm857, ibm860, ibm861, ibm862, ibm863, ibm864, ibm865, ibm866, ibm868, ibm869, ibm870, ibm871, ibm918, iso-2022-cn, iso-2022-jp, iso-2022-jp-2, iso-2022-kr, iso-8859-1, iso-8859-13, iso-8859-15, iso-8859-2, iso-8859-3, iso-8859-4, iso-8859-5, iso-8859-6, iso-8859-7, iso-8859-8, iso-8859-9, jis_x0201, jis_x0212-1990, koi8-r, koi8-u, shift_jis, tis-620, us-ascii, utf-16, utf-16be, utf-16le, utf-32, utf-32be, utf-32le, utf-8, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257, windows-1258, windows-31j, x-big5-hkscs-2001, x-big5-solaris, x-compound_text, x-euc-jp-linux, x-euc-tw, x-eucjp-open, x-ibm1006, x-ibm1025, x-ibm1046, x-ibm1097, x-ibm1098, x-ibm1112, x-ibm1122, x-ibm1123, x-ibm1124, x-ibm1166, x-ibm1364, x-ibm1381, x-ibm1383, x-ibm300, x-ibm33722, x-ibm737, x-ibm833, x-ibm834, x-ibm856, x-ibm874, x-ibm875, x-ibm921, x-ibm922, x-ibm930, x-ibm933, x-ibm935, x-ibm937, x-ibm939, x-ibm942, x-ibm942c, x-ibm943, x-ibm943c, x-ibm948, x-ibm949, x-ibm949c, x-ibm950, x-ibm964, x-ibm970, x-iscii91, x-iso-2022-cn-cns, x-iso-2022-cn-gb, x-iso-8859-11, x-jis0208, x-jisautodetect, x-johab, x-macarabic, x-maccentraleurope, x-maccroatian, x-maccyrillic, x-macdingbat, x-macgreek, x-machebrew, x-maciceland, x-macroman, x-macromania, x-macsymbol, x-macthai, x-macturkish, x-macukraine, x-ms932_0213, x-ms950-hkscs, x-ms950-hkscs-xp, x-mswin-936, x-pck, x-sjis_0213, x-utf-16le-bom, x-utf-32be-bom, x-utf-32le-bom, x-windows-50220, x-windows-50221, x-windows-874, x-windows-949, x-windows-950, x-windows-iso2022jp&lt; Content-Length: 5211&lt; Server: Jetty(9.3.6.v20151106)&lt;{"message" : "Server has encountered while executing Adhoc query!", "stackTrace" : "com.gemstone.gemfire.rest.internal.web.exception.GemfireRestException: Server has encountered while executing Adhoc query! at com.gemstone.gemfire.rest.internal.web.controllers.QueryAccessController.runAdhocQuery(QueryAccessController.java:208) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222) at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137) at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737) at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959) at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893) at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:969) at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:860) at javax.servlet.http.HttpServlet.service(HttpServlet.java:687) at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:845) at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:821) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1685) at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668) at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581) at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548) at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226) at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158) at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511) at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090) at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109) at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119) at org.eclipse.jetty.server.Server.handle(Server.java:517) at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:308) at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242) at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261) at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95) at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75) at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213) at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147) at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654) at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572) at java.lang.Thread.run(Thread.java:745)Caused by: java.lang.NullPointerException at scratch.MySumUda.accumulate(MySumUda.java:28) at com.gemstone.gemfire.cache.query.internal.CompiledGroupBySelect.accumulate(CompiledGroupBySelect.java:427) at com.gemstone.gemfire.cache.query.internal.CompiledGroupBySelect.applyAggregateAndGroupBy(CompiledGroupBySelect.java:201) at com.gemstone.gemfire.cache.query.internal.CompiledGroupBySelect.evaluate(CompiledGroupBySelect.java:173) at com.gemstone.gemfire.cache.query.internal.CompiledGroupBySelect.evaluate(CompiledGroupBySelect.java:49) at com.gemstone.gemfire.cache.query.internal.DefaultQuery.executeUsingContext(DefaultQuery.java:576) at com.gemstone.gemfire.cache.query.internal.DefaultQuery.execute(DefaultQuery.java:387) at com.gemstone.gemfire.cache.query.internal.DefaultQuery.execute(DefaultQuery.java:322) at com.gemstone.gemfire.rest.internal.web.controllers.QueryAccessController.runAdhocQuery(QueryAccessController.java:188) ... 44 more* Connection #0 to host 127.0.0.1 left intact"}</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.AbstractBaseController.java</file>
    </fixedFiles>
  </bug>
  <bug id="1532" opendate="2016-6-11 00:00:00" fixdate="2016-10-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse is vulnerable to clickjacking</summary>
      <description>The Pulse application is vulnerable to clickjacking. An attacker could frame in the web application and highjack a click, tricking a client into making an unintentional transaction. Attackers exploit this vulnerability by loading target pages in IFRAMEs but keeping them hidden, and then orienting the frame so that a user click on the embedding page is routed to a UI control on the embedded page. The attack will be hidden from the user and perpetrated without the user’s knowledge.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.testbed.driver.PulseUITest.java</file>
      <file type="M">geode-pulse.src.main.webapp.WEB-INF.spring-security.xml</file>
      <file type="M">geode-pulse.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="1542" opendate="2016-6-13 00:00:00" fixdate="2016-6-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>shared/unordered tcp/ip connection times out, initiating suspicion</summary>
      <description>I recently diagnosed a membership failure that was initiated when one member (N) timed out its shared/unordered tcp/ip connection to another member (M). Member M initiated suspect processing that lead to kicking member N out of the system. We need to either stop timing out shared/unordered connections or have an orderly shutdown mechanism so that we don't initiate suspect processing.The final-check that M performed showed something odd. Member N never logged that it processed a final check from M. Member M logged that it had connected to N and read a status byte from it. The byte had the value 21, which is not a valid response to a final check (it should be 0 or 0x7B).Received [21, ent(clientgemfire3_ent_19225:19225)&lt;ec&gt;&lt;v1&gt;:1028]I verified that M used the correct tcp/ip port for N, so this is very odd and needs to be investigated.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.tcp.Connection.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.SocketCreator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.messages.HeartbeatRequestMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.fd.GMSHealthMonitor.java</file>
    </fixedFiles>
  </bug>
  <bug id="1544" opendate="2016-6-13 00:00:00" fixdate="2016-6-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fail to initiate final check when network partition occurs</summary>
      <description>When network partition occurs, something keeps the losing side of a network partition from initiating any final checks on members no longer reachable.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.NetViewJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.NetView.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.fd.GMSHealthMonitor.java</file>
    </fixedFiles>
  </bug>
  <bug id="1545" opendate="2016-6-14 00:00:00" fixdate="2016-6-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add a test case for query JSON object in geode-lucene</summary>
      <description>We did support query on JSON object, but we don't have a test yet.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.test.TestObject.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.test.LuceneTestUtilities.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1551" opendate="2016-6-15 00:00:00" fixdate="2016-6-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI Failure: CommandOverHttpDUnitTest suspect string EofException</summary>
      <description>Various tests within the test suite are failing with the following error:Found suspect string in log4j at line 582&amp;#91;fatal 2016/06/14 21:03:21.748 PDT &lt;qtp829939131-141&gt; tid=0x8d&amp;#93; org.eclipse.jetty.io.EofException at org.eclipse.jetty.server.HttpConnection$SendCallback.reset(HttpConnection.java:663) at org.eclipse.jetty.server.HttpConnection$SendCallback.access$300(HttpConnection.java:627) at org.eclipse.jetty.server.HttpConnection.send(HttpConnection.java:508) at org.eclipse.jetty.server.HttpChannel.sendResponse(HttpChannel.java:668) at org.eclipse.jetty.server.HttpChannel.write(HttpChannel.java:722) at org.eclipse.jetty.server.HttpOutput.write(HttpOutput.java:177) at org.eclipse.jetty.server.HttpOutput.write(HttpOutput.java:163) at org.eclipse.jetty.server.HttpOutput.flush(HttpOutput.java:297)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3,1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.GemfireDataCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.CliCommandTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug id="1556" opendate="2016-6-16 00:00:00" fixdate="2016-6-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create unit test for GFSH hostname</summary>
      <description>Fix for GEODE-68 introduced new hostname support to GFSH. Need to create a unit test for this.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.shell.Gfsh.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.lang.SystemUtils.java</file>
    </fixedFiles>
  </bug>
  <bug id="1569" opendate="2016-6-20 00:00:00" fixdate="2016-9-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add post authorization processing in JMX and CLI commands</summary>
      <description>For the new authorization interface that uses Resource:Operation permissions, need to provide post-authorization processing for get and query operations, so that geode can filter the results before sending them back to the client.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.PDXGfshPostProcessorOnRemoteServerTest.java</file>
      <file type="M">geode-json.src.main.java.org.json.JSONObject.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.security.IntegratedClientQueryAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedSecurityPostProcessorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.AbstractIntegratedClientAuthDistributedTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.json.GfJsonObject.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.GetAll70.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.GetAll651.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.GetAll.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Get70.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.CacheClientProxy.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.BaseCommandQuery.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.PDXPostProcessor.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.NoShowValue1PostProcessor.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.AbstractSecureServerDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.templates.SamplePostProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.PostProcessor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.functions.DataCommandFunction.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.domain.DataCommandRequest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.DataCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.security.SecurityService.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.security.IntegratedSecurityService.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.security.GeodeSecurityUtil.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.SpySecurityManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.templates.SampleSecurityManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.SecurityManager.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.security.shiro.CustomAuthRealm.java</file>
    </fixedFiles>
  </bug>
  <bug id="157" opendate="2015-7-24 00:00:00" fixdate="2015-10-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Check for colocation not failing if non colocated comparison is first comparison made</summary>
      <description>There is a bug when checking for co located regions, if the first region being checked happens to be not co located, the logic ignores this and continues onward. This then causes the query to throw an unrelated exception.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.DefaultQuery.java</file>
    </fixedFiles>
  </bug>
  <bug id="1570" opendate="2016-6-20 00:00:00" fixdate="2016-10-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>developer REST API should be secured</summary>
      <description>The developer REST API should require authentication when security is enabled. For authorization, the implementation should use the new Resource:Operation permissions API that is used by JMX.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientGetEntryAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.SecurityClusterConfigDUnitTest.java</file>
      <file type="M">geode-web-api.src.main.java.com.gemstone.gemfire.rest.internal.web.util.JsonWriter.java</file>
      <file type="M">geode-web-api.src.main.java.com.gemstone.gemfire.rest.internal.web.util.JSONUtils.java</file>
      <file type="M">geode-pulse.src.test.java.com.vmware.gemfire.tools.pulse.tests.PulseAutomatedTest.java</file>
      <file type="M">geode-pulse.src.test.java.com.vmware.gemfire.tools.pulse.tests.PulseAuthTest.java</file>
      <file type="M">geode-pulse.src.main.java.com.vmware.gemfire.tools.pulse.internal.service.MemberGatewayHubService.java</file>
      <file type="M">geode-pulse.src.main.java.com.vmware.gemfire.tools.pulse.internal.security.GemFireAuthenticationProvider.java</file>
      <file type="M">geode-pulse.src.main.java.com.vmware.gemfire.tools.pulse.internal.security.GemFireAuthentication.java</file>
      <file type="M">geode-pulse.build.gradle</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.shell.GfshInitFileJUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.com.gemstone.gemfire.rest.internal.web.RestSecurityDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.com.gemstone.gemfire.rest.internal.web.RestInterfaceJUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.security.PDXPostProcessorDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.security.CQPostProcessorDunitTest.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.security.ClientQueryAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedSecurityPostProcessorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedSecurityNoShowValue1PostProcessorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientUnregisterInterestAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientSizeAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientRemoveAllAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientRegisterInterestAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientRegionClearAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientGetPutAuthDistributedTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityEndpointsDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.IntegratedSecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.SecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.ResourcePermission.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.AbstractBaseController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.BaseControllerAdvice.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.CommonCrudController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.FunctionAccessController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.PdxBasedCrudController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.QueryAccessController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.GeodeAuthentication.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.GeodeAuthenticationProvider.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.GeodeAuthority.java</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-pulse.src.main.webapp.WEB-INF.spring-security.xml</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-web-api.src.main.webapp.WEB-INF.geode-servlet.xml</file>
      <file type="M">geode-web-api.src.main.webapp.WEB-INF.web.xml</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.GeodeRestClient.java</file>
      <file type="M">geode-assembly.src.main.dist.NOTICE</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestInterfaceJUnitTest.java</file>
      <file type="M">geode-assembly.src.test.resources.expected.jars.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.shell.GfshInitFileJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.AbstractSecureServerDUnitTest.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.security.GemFireAuthentication.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.security.GemFireAuthenticationProvider.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.MemberGatewayHubService.java</file>
      <file type="M">geode-pulse.src.main.webapp.Login.html</file>
      <file type="M">geode-pulse.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-pulse.src.main.webapp.WEB-INF.mvc-dispatcher-servlet.xml</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.PulseAuthTest.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.PulseAutomatedTest.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.util.JSONUtils.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.util.JsonWriter.java</file>
      <file type="M">geode-web-api.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-web.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-web.src.main.webapp.WEB-INF.geode-mgmt-servlet.xml</file>
      <file type="M">gradle.dependency-resolution.gradle</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.AbstractIntegratedClientAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientAuthDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientContainsKeyAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientDestroyInvalidateAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientDestroyRegionAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientExecuteFunctionAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientExecuteRegionFunctionAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientGetAllAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientGetClientPartitionAttrCmdAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientGetClientPRMetaDataAuthDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1572" opendate="2016-6-20 00:00:00" fixdate="2016-6-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>create a test case to run lucene query from a client</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesBase.java</file>
    </fixedFiles>
  </bug>
  <bug id="1573" opendate="2016-6-20 00:00:00" fixdate="2016-7-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use snappy java implementation</summary>
      <description>Geode currently bundles xerial/snappy as a default implementation. And this is a "JNI wrapper" on google snappy implementation."xerial/snappy" jar bundles several pre-compiled static libraries to support various OS (linux, windows, SunOS) and architectures (x86, Sparc etc). The current dependency (1.1.1.6) does not support SunOS (Sparc), so the plan is to upgrade to a more recent version.While upgrading to a more recent version, I found a pure java port of original C++ implementation and wanted to swap with use pure java implementation to avoid any platform specific dependency on Geode.From the creator - "the pure Java port is 20-30% faster for block compress, 0-10% slower for block uncompress, and 0-5% slower for round-trip block compression.".Though native version is better on uncompress (more number of gets, puts depending on use cases), I would still vote for distributing with a pure java version as a "default" implementation as Geode already exposes an interface to allow any one to provide any custom implementation.In case if there are any differences between these two implementations, swapping with a pure java version should not break compatibility, as Geode does not save compressed data to disk or send on the wire.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.compression.SnappyCompressorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.compression.CompressionRegionOperationsOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.compression.CompressionRegionOperationsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.compression.CompressionRegionFactoryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.compression.CompressionRegionConfigDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.compression.CompressionCacheListenerOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.compression.CompressionCacheListenerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.compression.CompressionCacheConfigDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.compression.SnappyCompressor.java</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-assembly.src.test.resources.expected.jars.txt</file>
      <file type="M">geode-assembly.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.LauncherLifecycleCommandsIntegrationTest.java</file>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="1576" opendate="2016-6-21 00:00:00" fixdate="2016-7-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Website needs to be upgraded to include WAN and CQ</summary>
      <description>Since WAN and CQ are new features included in M2 release, we should update the website to highlight their availability.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.README.md</file>
      <file type="M">geode-site.website.nanoc.yaml</file>
      <file type="M">geode-site.website.lib.default.rb</file>
      <file type="M">geode-site.website.layouts.header.html</file>
      <file type="M">geode-site.website.content.css.geode-site.css</file>
      <file type="M">geode-site.website.content.index.html</file>
      <file type="M">geode-site.website.content.font.FontAwesome.otf</file>
      <file type="M">geode-site.website.content.font.fontawesome-webfont-woff.woff</file>
      <file type="M">geode-site.website.content.font.fontawesome-webfont-ttf.ttf</file>
      <file type="M">geode-site.website.content.font.fontawesome-webfont-svg.svg</file>
      <file type="M">geode-site.website.content.font.fontawesome-webfont-eot.eot</file>
      <file type="M">geode-site.website.content.css.font-awesome.min.css</file>
    </fixedFiles>
  </bug>
  <bug id="1583" opendate="2016-6-22 00:00:00" fixdate="2016-8-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: DurableClientSimpleDUnitTest.testSimpleDurableClient2</summary>
      <description>https://brazil.gemstone.com:8080/job/Geode_develop_DistributedTests/2986/testReport/com.gemstone.gemfire.internal.cache.tier.sockets/DurableClientSimpleDUnitTest/testSimpleDurableClient2/com.gemstone.gemfire.test.dunit.RMIException: While invoking com.gemstone.gemfire.internal.cache.tier.sockets.DurableClientTestCase$6.run in VM 0 running on Host timor.gemstone.com with 4 VMsStacktracecom.gemstone.gemfire.test.dunit.RMIException: While invoking com.gemstone.gemfire.internal.cache.tier.sockets.DurableClientTestCase$6.run in VM 0 running on Host timor.gemstone.com with 4 VMs at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:389) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:355) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:293) at com.gemstone.gemfire.internal.cache.tier.sockets.DurableClientTestCase.verifySimpleDurableClient(DurableClientTestCase.java:294) at com.gemstone.gemfire.internal.cache.tier.sockets.DurableClientTestCase.testSimpleDurableClient2(DurableClientTestCase.java:224) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:112) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: java.lang.AssertionError: Event never occurred after 50000 ms: [CacheClientProxy[identity(timor(15095:loner):33719:1b2e0973,connection=1,durableAttributes=DurableClientAttributes&amp;#91;id=testSimpleDurableClient2_client_gem_CacheServerTestUtil; timeout=300&amp;#93;); port=33721; primary=true; version=GFE 9.0; paused=true; alive=true; connected=false; isMarkedForRemoval=false]Stack trace for 'CacheClientProxy[identity(timor(15095:loner):33719:1b2e0973,connection=1,durableAttributes=DurableClientAttributes&amp;#91;id=testSimpleDurableClient2_client_gem_CacheServerTestUtil; timeout=300&amp;#93;); port=33721; primary=true; version=GFE 9.0]' at java.lang.Object.wait(Native Method) at java.lang.Object.wait(Object.java:502) at com.gemstone.gemfire.internal.cache.tier.sockets.CacheClientProxy$MessageDispatcher.waitForResumption(CacheClientProxy.java:2957) at com.gemstone.gemfire.internal.cache.tier.sockets.CacheClientProxy$MessageDispatcher.run(CacheClientProxy.java:2563) ] CHM state: size = 0 at org.junit.Assert.fail(Assert.java:88) at com.gemstone.gemfire.test.dunit.Wait.waitForCriterion(Wait.java:185) at com.gemstone.gemfire.internal.cache.tier.sockets.DurableClientTestCase.checkNumberOfClientProxies(DurableClientTestCase.java:1659) at com.gemstone.gemfire.internal.cache.tier.sockets.DurableClientTestCase$6.run2(DurableClientTestCase.java:297) at com.gemstone.gemfire.cache30.CacheSerializableRunnable.run(CacheSerializableRunnable.java:60) at sun.reflect.GeneratedMethodAccessor365.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at hydra.MethExecutor.executeObject(MethExecutor.java:268) at com.gemstone.gemfire.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:82) at sun.reflect.GeneratedMethodAccessor337.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$95(TCPTransport.java:683) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ... 3 more</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.client.internal.QueueManagerJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.client.internal.AutoConnectionSourceImplJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.QueueManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.PoolImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.InternalPool.java</file>
    </fixedFiles>
  </bug>
  <bug id="1666" opendate="2016-7-15 00:00:00" fixdate="2016-6-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Parallelize Gradle test execution</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.wrapper.gradle-wrapper.properties</file>
      <file type="M">gradle.properties</file>
    </fixedFiles>
  </bug>
  <bug id="1672" opendate="2016-7-18 00:00:00" fixdate="2016-2-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>When amount of overflowed persisted data exceeds heap size startup may run out of memory</summary>
      <description>Basically, when the amount of data overflowed approaches the heap size, ,such that the total amount of data is very close to or actually surpasses your total tenured heap, it is possible that you will not be able to restart.The algorithm during recovery of oplogs/buckets is such that we don't "evict" in the normal sense as data fills the heap during early stages of recovery prior to creating the regions. When the data is first created in the heap, it's not yet official in the region.At any rate, if during this early phase of recovery, or during subsequent phase where eviction is working as usual, it is possible that the total data or an early imbalance of buckets prior to the opportunity to rebalance causes us to surpass the critical threshold which will kill us before successful startup.To reproduce, you could have 1 region with tons of data that evicts and overflows with persistence. Call it R1. Then another region with persistence that does not evict. Call it R2.List R1 fist in the cache.xml file. Start running the system and add data over time until you have overflowed tons of data approaching the heap size in the evicted region, and also have enough data in the R2 region.Once you fill these regions with enough data and have overflowed enough to disk and persisted the other region, then shutdown, and then attempt to restart. If you put enough data in, you will hit the critical threshold before being able to complete startup.You can work around this issue by configuring geode to not recovery values by setting this system property: -Dgemfire.disk.recoverValues=falseValues will not be faulted into memory until a read operation is done on that value's key.If you have regions that do not use overflow and some that do then another work around is the create the regions that do not use overflow first.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegRecoveryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegionProperties.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegionHelperFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Oplog.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PersistentPartitionedRegionJUnitTest.java</file>
      <file type="M">geode-docs.managing.troubleshooting.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.eviction.how.eviction.works.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.persist.html.md.erb</file>
      <file type="M">geode-docs.basic.config.the.cache.setting.cache.properties.html.md.erb</file>
      <file type="M">geode-docs.basic.config.gemfire.properties.setting.distributed.properties.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.system.failure.and.recovery.html.md.erb</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskLruRegRecoveryJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1675" opendate="2016-7-19 00:00:00" fixdate="2016-10-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Session Management modules need to be updated to work with Tomcat 8.5</summary>
      <description>Update support for Tomcat 8.5. There are various api changes that need to be used and others that have been removed.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">extensions.geode-modules-tomcat8.src.test.java.com.gemstone.gemfire.modules.session.EmbeddedTomcat8.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.MapRangeIndexMaintenanceJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.CompactRangeIndex.java</file>
      <file type="M">settings.gradle</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.util.ContextMapper.java</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.session.catalina.Tomcat6DeltaSessionManager.java</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.session.catalina.internal.DeltaSessionUpdateAttributeEvent.java</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.session.catalina.internal.DeltaSessionDestroyAttributeEvent.java</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.session.catalina.internal.DeltaSessionAttributeEventBatch.java</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.session.catalina.internal.DeltaSessionAttributeEvent.java</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.session.catalina.DeltaSessionManager.java</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.session.catalina.DeltaSessionFacade.java</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.session.catalina.CommitSessionValve.java</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.gatewaydelta.GatewayDeltaDestroyEvent.java</file>
      <file type="M">extensions.geode-modules-tomcat7.src.main.java.com.gemstone.gemfire.modules.session.catalina.Tomcat7DeltaSessionManager.java</file>
      <file type="M">extensions.geode-modules-assembly.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat8.src.test.java.com.gemstone.gemfire.modules.session.Tomcat8SessionsDUnitTest.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.test.java.com.gemstone.gemfire.modules.session.Tomcat8SessionsClientServerDUnitTest.java</file>
      <file type="M">extensions.geode-modules-assembly.release.tcserver.geode-p2p-tomcat-8.context-fragment.xml</file>
      <file type="M">extensions.geode-modules-assembly.release.tcserver.geode-cs-tomcat-8.context-fragment.xml</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.session.catalina.DeltaSessionInterface.java</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.session.catalina.DeltaSession.java</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.session.catalina.callback.SessionExpirationCacheListener.java</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.session.bootstrap.PeerToPeerCache.java</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.session.bootstrap.ClientServerCache.java</file>
      <file type="M">extensions.geode-modules.src.main.java.com.gemstone.gemfire.modules.session.bootstrap.AbstractCache.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.test.java.com.gemstone.gemfire.modules.session.Tomcat8SessionsJUnitTest.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.test.java.com.gemstone.gemfire.modules.session.TestSessionsTomcat8Base.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.main.java.com.gemstone.gemfire.modules.session.catalina.DeltaSession8.java</file>
    </fixedFiles>
  </bug>
  <bug id="1740" opendate="2016-8-5 00:00:00" fixdate="2016-1-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Potential region inconsistency with concurrent region operation during transaction commit processing</summary>
      <description>There is a possible region inconsistency if region operations such as CLEAR are performed during transaction commit processing</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ClearTXLockingDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1743" opendate="2016-8-10 00:00:00" fixdate="2016-9-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add committer Mike Stolz to Geode website</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.community.index.html</file>
    </fixedFiles>
  </bug>
  <bug id="1744" opendate="2016-8-10 00:00:00" fixdate="2016-3-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Probable Bugs from == use</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.templates.XmlAuthorization.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.security.GeodeSecurityUtilTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.TestNonSizerObject.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.partitioned.fixed.FixedPartitioningTestBase.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.functional.IumMultConditionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.functional.IUM6Bug32345ReJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.functional.IndexWithSngleFrmAndMultCondQryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.data.PortfolioPdx.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.data.PortfolioNoDS.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.data.PortfolioData.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.data.Portfolio.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.result.CommandResult.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.help.utils.HelpUtils.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.domain.RegionAttributesInfo.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.domain.PartitionAttributesInfo.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.domain.FixedPartitionAttributesInfo.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.AbstractCliAroundInterceptor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheXmlGenerator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.locks.TXLockToken.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DistTXStateProxyImplOnCoordinator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DiskInitFile.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.CacheServerLauncher.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.admin.statalerts.StatisticInfoImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.admin.remote.DistributionLocatorId.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.StartupMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.InternalRole.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.jmx.internal.RefreshNotificationType.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.jmx.internal.ManagedResourceType.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.AlertLevel.java</file>
    </fixedFiles>
  </bug>
  <bug id="1751" opendate="2016-8-10 00:00:00" fixdate="2016-1-10 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Exception handling logic error in MsgStreamerList</summary>
      <description>MsgStreamerList has some very questionable code in writeMessage(). Darrel added this comment: for (MsgStreamer streamer : this.streamers) { if (ex != null) { streamer.release(); // TODO: shouldn't we call continue here? // It seems wrong to call writeMessage on a streamer we have just released. // But why do we call release on a streamer when we had an exception on one // of the previous streamer? // release clears the direct bb and returns it to the pool but leaves // it has the "buffer". THen we call writeMessage and it will use "buffer" // that has also been returned to the pool. // I think we only have a MsgStreamerList when a DS has a mix of versions // which usually is just during a rolling upgrade so that might be why we // haven't noticed this causing a bug. } try { result += streamer.writeMessage();...</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientGetPutAuthDistributedTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.security.GeodePermission.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.security.GeodeSecurityUtil.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.UnregisterInterestList.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.UnregisterInterest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.RemoveAll.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.RegisterInterest61.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.RegisterInterest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.PutAll80.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.PutAll70.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.PutAll.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Put65.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Put61.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.KeySet.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Invalidate.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.GetFunctionAttribute.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.GetAllWithCallback.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.GetAll70.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.GetAll651.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.GetAll.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunctionSingleHop.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunction65.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunction.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteFunction66.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteFunction65.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteFunction.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Destroy65.java</file>
    </fixedFiles>
  </bug>
  <bug id="1756" opendate="2016-8-11 00:00:00" fixdate="2016-8-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>REST API inconsistency in parameterized query region</summary>
      <description>The configuration of the region used to store parameterized queries for the REST API is using distributed-no-ack scope. This makes it possible for a client to register a query using one server and then connect to another server to use the query but not find it.The code to configure this region was copied from the management component's method that creates the monitoringRegion. It was just an oversight that the distributed-no-ack setting was also copied. I intend to change it to use distributed-ack. That way query registration won't return until replication has completed.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.RestAgent.java</file>
    </fixedFiles>
  </bug>
  <bug id="176" opendate="2015-7-29 00:00:00" fixdate="2015-8-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Validating offheap orphan on bucket region in unit test may hit RegionDestroyedException</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.offheap.SimpleMemoryAllocatorImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="1760" opendate="2016-8-12 00:00:00" fixdate="2016-8-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Custom ResultCollector on client does not receive partial results, but peer does</summary>
      <description>If a non HA function is executed from a client and one or more servers throw an exception, a custom ResultCollector on the client does not receive any data for the members that did succeed. For some use cases we it would be helpful if the client received results from the members that were successful.The currently client behavior is also inconsistent with the way that functions work between peers, because a ResultCollector in a peer will receive all of the results from the members that did succeed, even if some members fail.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.functions.TestFunction.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteFunction70.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.PRFunctionStreamingResultCollector.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.ServerToClientFunctionResultSender65.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.ServerToClientFunctionResultSender.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.PartitionedRegionFunctionResultSender.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.LocalResultCollectorImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.FunctionStreamingResultCollector.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.AbstractExecution.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.SingleHopClientExecutor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.ExecuteRegionFunctionSingleHopOp.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.ExecuteRegionFunctionOp.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.execute.FunctionServicePeerAccessorPRDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.execute.FunctionServiceBase.java</file>
    </fixedFiles>
  </bug>
  <bug id="1761" opendate="2016-8-12 00:00:00" fixdate="2016-8-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Clients don&amp;#39;t fail back to servers containing non-redundant partitioned regions when they are bounced and rebalanced</summary>
      <description>Clients don't fail back to servers containing non-redundant partitioned regions when they are bounced and rebalanced.When one of the servers is stopped, the client switches to the server(s) containing the new primary. When the server is restarted and rebalanced (which recovers primaryness), the clients do not switch back even though the server continually sends the metadata refresh byte on each operation.If the partitioned region has a redundant copy, clients do switch back.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.SingleHopStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.PartitionedRegionSingleHopDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.Message.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Request.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.RemoveAll.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.PutAll80.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.PutAll70.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.PutAll.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Put70.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Put65.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Put61.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Invalidate70.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Invalidate.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Get70.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Destroy70.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Destroy65.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Destroy.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.BaseCommand.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.CachePerfStats.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.SingleHopOperationCallable.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.RemoveAllOp.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.PutOp.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.PutAllOp.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.GetOp.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.GetClientPRMetaDataOp.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.DestroyOp.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.ClientMetadataService.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.AbstractOp.java</file>
    </fixedFiles>
  </bug>
  <bug id="1777" opendate="2016-8-12 00:00:00" fixdate="2016-9-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: RestAPIsOnMembersFunctionExecutionDUnitTest.testFunctionExecutionEOnSelectedMembers[1]</summary>
      <description>java.lang.AssertionError: expected:&lt;2&gt; but was:&lt;3&gt;Stacktracejava.lang.AssertionError: expected:&lt;2&gt; but was:&lt;3&gt; at org.junit.Assert.fail(Assert.java:88) at org.junit.Assert.failNotEquals(Assert.java:834) at org.junit.Assert.assertEquals(Assert.java:645) at org.junit.Assert.assertEquals(Assert.java:631) at com.gemstone.gemfire.rest.internal.web.controllers.RestAPITestBase.assertHttpResponse(RestAPITestBase.java:204) at com.gemstone.gemfire.rest.internal.web.controllers.RestAPIsOnMembersFunctionExecutionDUnitTest.testFunctionExecutionEOnSelectedMembers(RestAPIsOnMembersFunctionExecutionDUnitTest.java:115) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:377) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.dunit.standalone.ProcessManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="1785" opendate="2016-8-15 00:00:00" fixdate="2016-11-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>generated AbstractRegionEntry subclasses can no longer be generated</summary>
      <description>A large number of the subclasses of AbstractRegionEntry are generated.They have comments instructing developers to not modify them. For example:/** Do not modify this class. It was generated. Instead modify LeafRegionEntry.cpp and then run bin/generateRegionEntryClasses.sh from the directory that contains your build.xml. */But Geode does not include LeafRegionEntry.cpp nor bin/generateRegionEntryClasses.sh. It also no longer has a build.xml.This is not a show stopper since the classes can be modified in place just like any other java file.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapLongKey.java</file>
    </fixedFiles>
  </bug>
  <bug id="1792" opendate="2016-8-16 00:00:00" fixdate="2016-9-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Configuration consistency in SSL configuration</summary>
      <description>The current ssl configuration is inconsistent in its approach. In some cases multiple values for a property are specified as comma delimited (ssl-enabled-components) and in other cases they are space delimited (ssl-cipher and ssl-protocol).We need to pick a more consistent approach and apply to all</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.ConnectToLocatorSSLDUnitTest.java</file>
      <file type="M">geode-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.tcpserver.TcpServer.java</file>
      <file type="M">gradle.java.gradle</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.internal.DistributionConfigJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.SSLUtil.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.JettyHelper.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.ShellCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.admin.SSLConfig.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.jmx.internal.AgentImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.jmx.internal.AgentConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.jmx.internal.AdminDistributedSystemJmxImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.internal.ManagedEntityConfigXmlParser.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.internal.ManagedEntityConfigXmlGenerator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.internal.EnabledManagedEntityController.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.internal.DistributedSystemConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.DistributedSystemConfig.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.JMXMBeanDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.net.SSLConfigurationFactoryTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.net.SocketCreatorFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LocatorDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.beans.BeanUtilFuncs.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.GemFireProperties.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.net.SSLConfigurationFactory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.net.SocketCreator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.ConfigurationProperties.java</file>
    </fixedFiles>
  </bug>
  <bug id="1801" opendate="2016-8-18 00:00:00" fixdate="2016-10-18 01:00:00" resolution="Won&amp;#39;t Fix">
    <buginformation>
      <summary>nonSingleHopsCount cache-perf statistic is inaccurate</summary>
      <description>While working on GEODE-1761 I noticed that this statistic is only updated if the metadata for server partitioned-region bucket location is going to be refreshed. The statistic should actually be incremented any time the servers send a metadata refresh hint in their response. PutOp, DestroyOp, GetOp, etc need to do this in their processResponse() methods and the current increments of the stat in ClientMetadataService should be removed.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.ClientTypeRegistration.java</file>
    </fixedFiles>
  </bug>
  <bug id="1803" opendate="2016-8-19 00:00:00" fixdate="2016-8-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Inefficient code in ClientMetadataService.getServerToFilterMap()</summary>
      <description>This method is using Collections.shuffle(List).get(0) to select a random server when it would be a lot cheaper to pick a random element from the unshuffled list of server locations.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.ClientPartitionAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug id="1838" opendate="2016-9-2 00:00:00" fixdate="2016-9-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Delete unused classes in geode-core/src/test/java/cacheRunner</summary>
      <description>GEODE-1832 removed the only dependency we had on the two classes in geode-core/src/test/java/cacheRunner. This unused package should now be deleted in preparation for repackaging to org.apache.geode.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.cacheRunner.Position.java</file>
      <file type="M">geode-core.src.test.java.cacheRunner.Portfolio.java</file>
    </fixedFiles>
  </bug>
  <bug id="1894" opendate="2016-9-14 00:00:00" fixdate="2016-9-14 01:00:00" resolution="Cannot Reproduce">
    <buginformation>
      <summary>SerialGatewaySenderOperationsDUnitTest test hangs</summary>
      <description>test tries to stop Serial Gateway Sender and that thread just hangs. Event processors are waiting to become primary. One AckReader thread waiting for ack. Seems like need to interrupt these threads. Attached thread dump</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventRemoteDispatcher.java</file>
    </fixedFiles>
  </bug>
  <bug id="1897" opendate="2016-9-15 00:00:00" fixdate="2016-11-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Users should be able to configure eviction through gfsh</summary>
      <description>While creating a region in gfsh, users should be able to configure eviction for that region.All three modes of eviction should be supported:1. Eviction driven by the resource manager:gfsh&gt;create region --name=myRegion --type=REPLICATE --eviction-enabled2. eviction driven by entry count in the region:gfsh&gt;create region --name=myRegion --type=REPLICATE --eviction-entry-count=10003. eviction driven by bytes used:gfsh&gt;create region --name=myRegion --type=REPLICATE --eviction-max-memory=100(value in megabytes)And also specify the eviction action as--eviction-action=overflow-to-disk or--eviction-action=local-destroyand an object sizer, so that users can plug-in custom object sizes as--eviction-object-sizer=my.company.geode.MySizerthe sizer should only apply to heap and memory based eviction.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.GfshShellConnectionRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.remote.CommandExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.FetchRegionAttributesFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.GfshCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.ExpirationAttributes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.AttributesFactory.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserAutoCompletionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.RegionFunctionArgsTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionFunctionArgs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-docs.developing.eviction.configuring.data.eviction.html.md.erb</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.OptionAliasesParsingTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserParsingTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserConverterTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.LogLevelInterceptorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsInterceptorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.CommandRequestTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.GfshParseResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ShowMetricsCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportLogsInterceptor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportImportClusterConfigurationCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportConfigCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyFunctionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ChangeLogLevelCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.AlterRuntimeConfigCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CommandRequest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1903" opendate="2016-9-16 00:00:00" fixdate="2016-12-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Website Community &gt; Events</summary>
      <description>Remove outdated entries; add:Geode Clubhouse: DDD, Reactor Programming and Apache Geode Panel wth VaughnVernonVirtual | Calendar entry&lt;https://www.google.com/calendar/event?eid=ZnFpcTNrdTNkYWl2ZmE2MDcwdTNrdDc5a28gcGl2b3RhbC5pb191OGtndnVhaGprYm9oMWduZmh2NXRzMnY5Y0Bn&amp;ctz=America/Los_Angeles&gt;9/21 - 9AM PacificGeode Clubhouse: Update on Geode's New Security Infrastructure with JinmeiLiaoVirtual | Calendar entry&lt;https://www.google.com/calendar/event?eid=bnM3ODdjYms2bm05aDJwYnJrYnBrb2Q2YnMgcGl2b3RhbC5pb191OGtndnVhaGprYm9oMWduZmh2NXRzMnY5Y0Bn&amp;ctz=America/Los_Angeles&gt;10/19 - 9AM Pacific</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.community.index.html</file>
    </fixedFiles>
  </bug>
  <bug id="1909" opendate="2016-9-19 00:00:00" fixdate="2016-12-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>A user with no privilege can start a server</summary>
      <description>1) Start the locator with a security-manager:start locator --name=loc1 --security-properties-file=security.properties --classpath=/Users/jiliao/my_gemfire/security2) connect to the locator using: guest/guest3), try start a server as guest:start server --name=server1 --security-properties-file=serverSecurity.properties --locators=localhost&amp;#91;10334&amp;#93;The server will be started.We should allow only user with CLUSTER:MANAGE permission to start a server.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.security.peerAuth.json</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.management.internal.security.cacheServer.json</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.P2PAuthenticationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.IntegratedSecurityPeerAuthDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.auth.GMSAuthenticatorWithSecurityManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.auth.GMSAuthenticatorWithAuthenticatorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.GMSMemberFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.auth.GMSAuthenticator.java</file>
    </fixedFiles>
  </bug>
  <bug id="191" opendate="2015-8-6 00:00:00" fixdate="2015-8-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>region.size() operation sometimes returns incorrect results</summary>
      <description>In case where a transaction is hosted on a remote member, doing a region.size() operation on a partitioned region returns an incorrect size. The operation returns 0 for size of all the buckets hosted locally.This seems to have been introduced in the merge from sga2 branch.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.RemoteTransactionDUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.ClientServerTransactionDUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.LocalRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="1912" opendate="2016-9-20 00:00:00" fixdate="2016-4-20 01:00:00" resolution="Duplicate">
    <buginformation>
      <summary>gfsh does not validate start server command</summary>
      <description>When I tried to start a server from gfsh I accidently used --locator (singular) rather than --locators. gfsh did not throw an error and started the server without connecting to the locator.We should throw an error for unrecognized command options in gfsh.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.security.GfshCommandsOverHttpSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.ServerStarter.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorStarter.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorServerStartupRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.StartServerAuthorizationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.SecurityWithoutClusterConfigDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.SecurityClusterConfigDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.PeerSecurityWithEmbeddedLocatorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.PeerAuthenticatorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClusterConfigWithoutSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.AbstractSecureServerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.JavaRmiServerNameTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshShellConnectionRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshCommandsSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshCommandsPostProcessorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.CacheServerStartupRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.CacheServerMBeanShiroJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.GfshParser.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.SwaggerVerificationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestServersJUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1914" opendate="2016-9-20 00:00:00" fixdate="2016-10-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode source code contains old version of gemfire dtds</summary>
      <description>Geode source contains old version of gemfire dtds that can be drop. That are referred by tests as well . And we may need to remove or upgrade those tests.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.client.ClientCacheFactoryJUnitTest.single.pool.xml</file>
      <file type="M">geode-spark-connector.geode-spark-connector.src.it.resources.test-retrieve-regions.xml</file>
      <file type="M">geode-spark-connector.geode-spark-connector.src.it.resources.test-regions.xml</file>
      <file type="M">geode-cq.src.test.resources.org.apache.geode.internal.cache.tier.sockets.durablecq-server-cache.xml</file>
      <file type="M">geode-cq.src.test.resources.org.apache.geode.internal.cache.tier.sockets.durablecq-client-cache.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.jta.cachejta.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.xmlcache.CacheXmlParserJUnitTest.testDTDFallbackWithNonEnglishLocal.cache.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.PartitionRegionCacheExample2.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.PartitionRegionCacheExample1.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.mixed.diskstore.diskwriteattrs.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.mixed.diskstore.diskdir.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.incorrect.time.interval.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.incorrect.sync.value.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.incorrect.roll.oplogs.value.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.incorrect.max.oplog.size.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.incorrect.dir.size.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.incorrect.dir.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.incorrect.bytes.threshold.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.DiskRegCacheXmlJUnitTest.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.BackupJUnitTest.cache.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.query.partitioned.PRIndexCreation.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.query.internal.index.cachequeryindexwitherror.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.query.internal.index.cachequeryindex.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.query.functional.index-recovery-overflow.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.query.functional.index-creation-without-eviction.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.query.functional.index-creation-with-eviction.xml</file>
      <file type="M">geode-core.src.main.resources.javadoc-images.example-client-cache.xml</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.admin.doc-files.ds4.0.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.admin.doc-files.ds5.0.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache3.0.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache4.0.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache4.1.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache5.0.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache5.1.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache5.5.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache5.7.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache5.8.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache6.0.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache6.1.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache6.5.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache6.6.dtd</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml30DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml40DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml41DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml45DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml51DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml55DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml57DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml58DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml60DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml61DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml65DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml66DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.RegionFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.JarClassLoaderJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.PdxSerializableJUnitTest.java</file>
      <file type="M">geode-core.src.test.resources.jta.cachejta.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.attributesUnordered.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.badFloat.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.badInt.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.badKeyConstraintClass.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.badScope.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.callbackNotDeclarable.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.callbackWithException.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.coLocation.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.ewtest.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.examples.3.0.example-cache.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.examples.4.0.example-cache.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.loaderNotLoader.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.malformed.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.namedAttributes.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.partitionedRegion.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.partitionedRegion51.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.sameRootRegion.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.sameSubregion.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.unknownNamedAttributes.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1921" opendate="2016-9-21 00:00:00" fixdate="2016-9-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis adaptor Strings region has incorrect attributes</summary>
      <description>This came in from a stackoverflow thread: http://stackoverflow.com/questions/39609960/geode-redis-adaptor. The __StRiNgS region created by the adaptor has scope "local". Since the strings regions is meant to store all possible strings that are thrown at the server, this region should be PARTITION by default.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.GeodeRedisServer.java</file>
    </fixedFiles>
  </bug>
  <bug id="1926" opendate="2016-9-22 00:00:00" fixdate="2016-5-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The function peekAhead function puts the queue key into peekedIDs even though it was not in the batch to be dispatched</summary>
      <description>The function peekAhead peeks the serial sender queue and if its able to get an object in the queue, returns the object to the peek function to be dispatched and adds the key to the peekedIds list.The peek function tries to make a heap copy of the object returned , but conflation may have kicked in the object may have been removed - hence the object will not be placed in the dispatch batch.However now the size of the peeked Ids and dispatched batch do not match, hence when the remove thread starts removing the elements from the key using the keys in peekedIds and using the size of the dispatched batch, there will be lingering objects in the queue because the size of dispatched batch is less than Ids that were peeked.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialWANConflationDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderQueue.java</file>
    </fixedFiles>
  </bug>
  <bug id="1927" opendate="2016-9-22 00:00:00" fixdate="2016-9-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add support for old GemFire remote sites (WAN)</summary>
      <description>We need to protect the Geode cache from receiving serialized objects from a remote site that have com.gemstone.gemfire package names. These primarily include enumeration-type objects like cache.Operation.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.deadlock.DeadlockDetector.java</file>
      <file type="M">settings.gradle</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.UnregisterInterestTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.RequestTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.PutTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.Put65Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.Put61Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.InvalidateTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.Get70Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.DestroyTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.DestroyRegionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.Destroy65Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.CreateRegionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ContainsKey66Test.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.PdxType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalDataSerializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.BatchException70.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.GemFireException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.DataSerializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.CancelException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.RegionExistsException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.OperationAbortedException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.CacheRuntimeException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.CacheException.java</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.LocatorUDPSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.LocatorDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.BaseCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="1937" opendate="2016-9-26 00:00:00" fixdate="2016-9-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>geode-example tests should run as part of precheckin</summary>
      <description>We discovered GEODE-1934 which was a ClassNotFoundException for projects that depend on geode core due to the spark connector tests. However, the geode-examples tests were also failing due to the same exception.Unfortunately, it looks like we're not running the example tests in any CI system. We should make the example tests run as part of precheckin to make sure the examples still work.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">geode-examples.replicated.scripts.stopAll.sh</file>
      <file type="M">geode-examples.replicated.scripts.startAll.sh</file>
      <file type="M">geode-examples.replicated.scripts.setEnv.sh</file>
      <file type="M">geode-examples.replicated.scripts.pidkiller.sh</file>
      <file type="M">geode-examples.build.gradle</file>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="1938" opendate="2016-9-26 00:00:00" fixdate="2016-10-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Big Snapshot File Read Exception via SnapshotReader API</summary>
      <description>A utility was created to read data from snapshot(*.gfd) via SnapshotReader API to convert into csv format. They met a strange issue that this utility will crash with snapshotreader exception when snapshot file is 20GB+.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.snapshot.GFSnapshotDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.ClientTypeRegistration.java</file>
    </fixedFiles>
  </bug>
  <bug id="1940" opendate="2016-9-27 00:00:00" fixdate="2016-9-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>IntelliJ formatter is wrapping lines shorter than the Eclipse formatter</summary>
      <description>IntelliJ formatter is wrapping lines shorter than the Eclipse formatter</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">etc.intellijIdeaCodeStyle.xml</file>
      <file type="M">etc.eclipseFormatterProfile.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1944" opendate="2016-9-27 00:00:00" fixdate="2016-10-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Index with method invocation in regionPath can throw exception when tombstones clean up during gii</summary>
      <description>When a system is recovering from disk and indexes are created from cache.xml with certain region paths (say /region.entrySet()) and while recovering with gii, tombstones are cleaned up, it is possible that an exception is thrown from the index that prevents the system from recovering. This occurs when gii forces old tombstones to be removed and invokes index maintenance. Index maintenance, when trying to invoke the method on the region, will force the code down a path that requires a .get(key) on the region. The value was never present in the region and this causes an EntryDestroyedException to be thrown.A work around is to drop the indexes and recreate them after recovery.The idea to try to prevent index maintenance if old value is not present does not work because overflowed regions can have old value not present in memory.The solution will be to put a try catch around the evaluate method in the IMQEvaluator of the Compact and Hash indexes. Then force them to remove the region entry by crawling the entire index. It will not be present in the index for this specific case, but to be on the safe side, if the entry does not exist in the region during maintenance, it probably should not exist in the index any longer...</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.HashIndexJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.CompactRangeIndexQueryDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.IndexStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.IndexManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.HashIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.CompactRangeIndex.java</file>
    </fixedFiles>
  </bug>
  <bug id="1947" opendate="2016-9-28 00:00:00" fixdate="2016-9-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Rename SSL_HTTP_REQUIRE_AUTHENTICATION to SSL_WEB_REQUIRE_AUTHENTICATION</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SSLConfigurationFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.BeanUtilFuncs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.GemFireProperties.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLConfigurationFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPIsWithSSLDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1949" opendate="2016-9-29 00:00:00" fixdate="2016-9-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>geode-rebalancer is not part of the binary distribution</summary>
      <description>The geode-rebalancer jar is not part of the binary distribution. That means that users that want to use the rebalancer must download it and it's dependencies from maven and add them to the server's classpath.I think the main reason not to include the rebalancer in the server's classpath is the dependency on quartz. But looking at the code, it looks like the only usage of quartz is a one line validation that doesn't need to be there. We should remove the dependency on quartz and include the rebalancer in the geode server's classpath by default.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-rebalancer.src.main.java.org.apache.geode.cache.util.AutoBalancer.java</file>
      <file type="M">geode-rebalancer.build.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="1955" opendate="2016-9-30 00:00:00" fixdate="2016-12-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JMX suspect string causes tests to fail</summary>
      <description>This suspect string is causing periodic failures in a number of unit tests:Error Messagejava.lang.AssertionError: Suspicious strings were written to the log during this run.Fix the strings or use IgnoredException.addIgnoredException to ignore.-----------------------------------------------------------------------Found suspect string in log4j at line 283&amp;#91;fatal 2016/09/29 12:12:03.891 PDT &lt;JMX client heartbeat 3&gt; tid=0x18d&amp;#93; (tid=397 msgId=39) No longer connected to cc6-co6.gemstone.com&amp;#91;27162&amp;#93;.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.JmxManagerAdvisee.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.JmxOperationInvoker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLConfigurationFactory.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.security.GfshCommandsOverHttpSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorServerStartupRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.GfshShellConnectionRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshCommandsSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshCommandsPostProcessorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.ConnectToLocatorSSLDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="1956" opendate="2016-9-30 00:00:00" fixdate="2016-10-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: LuceneQueriesPeerPRRedundancyDUnitTest.returnCorrectResultsWhenCloseCacheHappensOnIndexUpdate</summary>
      <description>org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.cache.lucene.LuceneQueriesPeerPRRedundancyDUnitTest$$Lambda$50/1718051859.run in VM 0 running on Host cc2-rh6.gemstone.com with 4 VMs at org.apache.geode.test.dunit.VM.invoke(VM.java:389) at org.apache.geode.test.dunit.VM.invoke(VM.java:355) at org.apache.geode.test.dunit.VM.invoke(VM.java:293) at org.apache.geode.cache.lucene.LuceneQueriesPeerPRRedundancyDUnitTest.returnCorrectResultsWhenCloseCacheHappensOnIndexUpdate(LuceneQueriesPeerPRRedundancyDUnitTest.java:80) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:377) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: com.jayway.awaitility.core.ConditionTimeoutException: Condition with lambda expression in org.apache.geode.cache.lucene.LuceneQueriesPeerPRRedundancyDUnitTest that uses org.apache.geode.cache.Cache was not fulfilled within 60 seconds. at com.jayway.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:122) at com.jayway.awaitility.core.CallableCondition.await(CallableCondition.java:79) at com.jayway.awaitility.core.CallableCondition.await(CallableCondition.java:27) at com.jayway.awaitility.core.ConditionFactory.until(ConditionFactory.java:764) at com.jayway.awaitility.core.ConditionFactory.until(ConditionFactory.java:741) at org.apache.geode.cache.lucene.LuceneQueriesPeerPRRedundancyDUnitTest.lambda$returnCorrectResultsWhenCloseCacheHappensOnIndexUpdate$bb17a952$2(LuceneQueriesPeerPRRedundancyDUnitTest.java:80) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at hydra.MethExecutor.executeObject(MethExecutor.java:268) at org.apache.geode.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:82) at sun.reflect.GeneratedMethodAccessor14.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$95(TCPTransport.java:683) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ... 3 more</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesPRBase.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesPRBase.java</file>
    </fixedFiles>
  </bug>
  <bug id="2004" opendate="2016-10-17 00:00:00" fixdate="2016-10-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create/update/delete query through rest api should require DATA:READ instead of DATA:WRITE</summary>
      <description></description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.QueryAccessController.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityIntegrationTest.java</file>
      <file type="M">geode-docs.managing.security.implementing.authorization.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.update.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.post.execute.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.post.create.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.queries.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.execute.adhoc.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.delete.named.query.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2012" opendate="2016-10-18 00:00:00" fixdate="2016-11-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Rolled statistics archive file is corrupted by missing resource type</summary>
      <description>If a given ResourceType has no Resource instances at the same time that a statistics archive file is created by rolling, then the ResourceType is never written to the archive file. If a later Resource instance for that type is created, the Resource will be written to the archive file without a ResourceType, effectively corrupting that file so that it cannot be read.Steps required to test this bug:1) create resource instance of new type2) sample so that resource instance and type are written to gfs3) close resource instance so no instances exist of that type4) sample5) roll gfs archive6) sample7) create new resource instance of same type8) sample9) verify that resource instance and type were both written to gfs</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatTypesAreRolledOverRegressionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.FileSizeLimitIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.DiskSpaceLimitIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.ValueMonitorIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatMonitorHandlerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatisticsMonitorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.SampleCollectorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.concurrent.StoppableCountDownLatch.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatMonitorHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatArchiveWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatArchiveHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.SimpleStatSampler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.SampleCollector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.HostStatSampler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.NanoTimer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.ManagerLogWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
    </fixedFiles>
  </bug>
  <bug id="2015" opendate="2016-10-19 00:00:00" fixdate="2016-11-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Host Geode docs on Geode website</summary>
      <description>Now that the Geode docs have been donated to the project, let's host them on the Geode website.Also document process for posting new docs builds to the website.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">README.md</file>
      <file type="M">geode-site.website.README.md</file>
      <file type="M">geode-site.website.content.docs.index.html</file>
      <file type="M">geode-docs.about.geode.html.md.erb</file>
      <file type="M">geode-book.redirects.rb</file>
      <file type="M">geode-book.README.md</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-book.master.middleman.source.stylesheets.book-styles.css.scss</file>
      <file type="M">geode-book.master.middleman.source.index.html.erb</file>
      <file type="M">geode-book.Gemfile.lock</file>
      <file type="M">geode-book.config.yml</file>
    </fixedFiles>
  </bug>
  <bug id="2017" opendate="2016-10-19 00:00:00" fixdate="2016-11-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Removal of nonSingleHopsCount stat in client</summary>
      <description>Currently, the nonSingleHopsCount stat in the client is defined as "Total number of times client request observed more than one hop during operation." From this definition, this stat should track every time a client operation requires more than one hop. Currently, this stat is only incremented when "singleHop" is enabled on the pool. If this is correct then metaDataRefreshCount will track the same metric, as the client will automatically refresh when more than one hop is required for a prSingleHop enabled pool.If the nonSingleHopsCount metric where to track every non-one hop operation, regardless of the "singleHop" flag on the pool, then the implementation of this stat would need to change.Otherwise we remove this stat and only track all nonSingleHop operation with the metaDataRefresh count.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelQueueRemovalMessageJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BucketRegionQueueHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ParallelQueueRemovalMessage.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.SingleHopStatsDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CachePerfStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ClientMetadataService.java</file>
    </fixedFiles>
  </bug>
  <bug id="2019" opendate="2016-10-19 00:00:00" fixdate="2016-10-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add automated rebalance documentation</summary>
      <description>Add documentation for the automated rebalance feature. The feature invokes a rebalance on a time schedule.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.partitioned.regions.chapter.overview.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.automated.rebalance.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2020" opendate="2016-10-20 00:00:00" fixdate="2016-2-20 01:00:00" resolution="Invalid">
    <buginformation>
      <summary>Add more tests to replace the legacy tests</summary>
      <description>Whenever a legacy test failed, we should write an integration test or Dunit test to reproduce it and then fix it.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.QueryAccessController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.PdxBasedCrudController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.FunctionAccessController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.CommonCrudController.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2021" opendate="2016-10-20 00:00:00" fixdate="2016-10-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Goede transaction failed to throw TransactionDataNotColocatedException when a get operation gets on a non colocated key.</summary>
      <description>If a transaction first get operation touches a remote node entry, a TXStateStub is created on the remote node. The subsequent get on another remote node will correctly cause the transaction to fail with TransactionDataNotColocatedException.However, if a transaction first get is touches a key on a local node, a TXState is created to track the transaction. Currently a subsequent get on non colocated data does not cause the transaction to fail with TransactionDataNotColocatedException.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.PRTransactionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.PRColocationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.disttx.PRDistTXWithVersionsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.disttx.PRDistTXDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="2023" opendate="2016-10-21 00:00:00" fixdate="2016-10-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add docs for Lucene integration</summary>
      <description>Add docs for the Lucene integration</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.book.intro.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2025" opendate="2016-10-21 00:00:00" fixdate="2016-10-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>When starting a geode server from gfsh, the default http-service-port it&amp;#39;s using is 8080</summary>
      <description>This is different from the default-http-service-port defined in DistributionConfig. As a result, if we stat a locator, the default http-service-port is 7070, but if we start a server, it's using 8080. This will be confusing to users.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.management.internal.cli.commands.golden-help-offline.properties</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.RestAgent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.LauncherLifecycleCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.util.FindRestEnabledServersFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.server.CacheServer.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.SwaggerVerificationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityIntegrationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.GeodeRestClient.java</file>
    </fixedFiles>
  </bug>
  <bug id="2034" opendate="2016-10-25 00:00:00" fixdate="2016-10-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove old releases</summary>
      <description>https://dist.apache.org/repos/dist/release/incubator/geode/There's old releases here, ideally should only have the latest.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.releases.index.html</file>
    </fixedFiles>
  </bug>
  <bug id="2035" opendate="2016-10-25 00:00:00" fixdate="2016-10-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>document how to use G1GC with geode</summary>
      <description>The geode docs should describe how to configure G1GC for geode.One issue is that if you use "gfsh start server --max-heap=SIZE" then it will automatically configure CMS which does not work with G1GC.So instead of using the "-max-heap" option we should tell them to use "-J-XmxSIZE".To configure G1GC use "--J-XX:+UseG1GC".If you find the geode resource manager does not detect crossing the eviction or critical threshold quickly enough then try using this option to make it more responsive: "--J-XX:MaxGCPauseMillis=VALUE" where VALUE should be a number less than 200 (which is the current G1GC default). We have done some limited testing with this value set to 1 and it does make the resource manager more responsive when combined with G1GC but it also increases the amount of time spent in gc.We also noticed that if the primary heap objects you allocate are large then G1GC can cause the JVM to report out of heap memory when it has only used 50 percent of the heap. We saw this with tests in which all the geode region values were larger than 50 percent of the G1 region size. Oracle calls these "humongous" objects. The default G1 region size is 1m. You can increase it up to 32m (it is always a power of 2) by using this: "--J-XX:G1HeapRegionSize=32m". If you are using large values and want to use G1GC without increasing its RegionSize (or if you large values are bigger than 16m) then you could make your geode regions that will contain the large values off-heap. But even if you do that the large off-heap values will allocate temporary large heap values that G1GC will treat as humongous allocations even though they will be short lived. So consider using CMS if most of you values will result in humongous allocations.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
      <file type="M">geode-docs.managing.heap.use.heap.management.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2036" opendate="2016-10-26 00:00:00" fixdate="2016-10-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix documentation typos</summary>
      <description>This ticket will be used for all documentation commits that fix small errors, omissions and oversights. Changes committed against this ticket will be of a small enough scope that there is no need for community input, discussion, or review. This ticket should remain open only until the release of Geode 1.1.0.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.getting.started.querying.quick.reference.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2040" opendate="2016-10-26 00:00:00" fixdate="2016-10-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Tomcat 8.0 and 8.5 for HTTP Sess Mgmt module</summary>
      <description>Documentation needs to include Tomcat 8.0 and 8.5 as available. Alter set up instructions to also include them.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tomcat.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.quick.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2043" opendate="2016-10-27 00:00:00" fixdate="2016-10-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>severe Internal product error log message possible when async disk configured on persistent region</summary>
      <description>It is possible to see a log message like this:&amp;#91;severe 2016/10/22 07:18:14.665 UTC gemfire3_client-10_8522 &lt;P2P message reader for client-10(gemfire1_client-10_8469:8469)&lt;ec&gt;&lt;v2&gt;:1028 shared ordered uid=10 port=50942&gt; tid=0x66&amp;#93; Internal product error: attempt to directly remove a versioned tombstone from region entry mapjava.lang.Exception: stack traceat org.apache.geode.internal.cache.AbstractRegionMap.removeEntry(AbstractRegionMap.java:261)This log message can be safely ignored. It happens if async disk is configured on a persistent geode region. If an entry on that region is being destroyed and the region is being closed or destroyed at the same time, then this message may be logged.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionEntry.java</file>
    </fixedFiles>
  </bug>
  <bug id="2044" opendate="2016-10-27 00:00:00" fixdate="2016-10-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add tc Server 3.2 for HTTP Sess Mgmt module</summary>
      <description>Documentation needs to include tc Server 3.2 as available. No changes to installation or use instructions needed.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.quick.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2045" opendate="2016-10-28 00:00:00" fixdate="2016-11-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve documentation of region shortcuts</summary>
      <description>The description of a bunch of region shortcuts for partitioned regions says that they have local scope, and they don't. While fixing this, also fix the links to those descriptions (since they do not error out, but they also do not work correctly), and remove many of the links that clutter each description.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.region.shortcuts.table.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.region.shortcuts.reference.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2046" opendate="2016-10-31 00:00:00" fixdate="2016-10-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Tests should not use org.mockito.internal.stubbing.answers.CallsRealMethods</summary>
      <description>CallsRealMethods is an internal class that should never be used in test code. Tests should instead use org.mockito.Mockito.CALLS_REAL_METHODS:import static org.mockito.Mockito.*;...Foo foo = mock(Foo.class, CALLS_REAL_METHODS);when(foo.bar()).thenAnswer("bar");</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.RemoteOperationMessageTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PartitionMessageTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2047" opendate="2016-10-31 00:00:00" fixdate="2016-11-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document change to enable-network-partition-detection</summary>
      <description>This subtask is to change the documentation to reflect the code change that went into GEODE-762.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.system.failure.and.recovery.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.recovering.from.network.outages.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.recovering.conflicting.data.exceptions.html.md.erb</file>
      <file type="M">geode-docs.managing.network.partitioning.how.network.partitioning.management.works.html.md.erb</file>
      <file type="M">geode-docs.managing.network.partitioning.handling.network.partitioning.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2050" opendate="2016-11-1 00:00:00" fixdate="2016-11-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update documentation of statistics</summary>
      <description>With JGroups 3.6.10, a set of statistics have been removed. They need to be removed from the documentation: "batchCopyTime", "Total amount of time, in nanoseconds, spent copying messages for batched transmission", "nanoseconds"), "batchFlushTime", "Total amount of time, in nanoseconds, spent flushing batched messages to the network", "nanoseconds"), "ucastFlushes", "Total number of flushes of the unicast datagram protocol, prior to sending a multicast message", "flushes"), "ucastFlushTime", "Total amount of time, in nanoseconds, spent waiting for acknowledgements for outstanding unicast datagram messages", "nanoseconds"), "flowControlRequests", "Total number of flow control credit requests sent to other processes", "messages"), "flowControlResponses", "Total number of flow control credit responses sent to a requestor", "messages"),"flowControlWaitsInProgress", "Number of threads blocked waiting for flow-control recharges from other processes", "threads"), "flowControlWaitTime", "Total amount of time, in nanoseconds, spent waiting for other processes to recharge the flow of control meter", "nanoseconds"), "flowControlThrottleWaitsInProgress", "Number of threads blocked waiting due to flow-control throttle requests from other members", "threads"), "jgNAKACKreceivedMessages", "Number of received messages awaiting stability in NAKACK", "messages"), "jgNAKACKsentMessages", "Number of sent messages awaiting stability in NAKACK", "messages"), "jgQueuedMessages", "Number of messages queued by transport and awaiting processing", "messages"), is not in the documentation "jgUNICASTreceivedMessages", "Number of received messages awaiting receipt of prior messages", "messages"), "jgUNICASTsentMessages", "Number of un-acked normal priority messages", "messages"), "jgUNICASTsentHighPriorityMessages", "Number of un-acked high priority messages", "messages"), "jgUNICASTdataReceivedTime", "Amount of time spent in JGroups UNICAST send", "nanoseconds"), "jgSTABLEsuspendTime", "Amount of time JGroups STABLE is suspended", "nanoseconds"), "jgSTABLEmessages", "Number of STABLE messages received by JGroups", "messages"), "jgSTABLEmessagesSent", "Number of STABLE messages sent by JGroups", "messages"), "jgSTABILITYmessages", "Number of STABILITY messages received by JGroups", "messages"), "jgDownTime", "Down Time spent in JGroups stacks", "nanoseconds"), "jgUpTime", "Up Time spent in JGroups stacks", "nanoseconds"), "jChannelUpTime", "Up Time spent in JChannel including jgroup stack", "nanoseconds"), "jgFCsendBlocks", "Number of times JGroups FC halted sends due to backpressure", "events"), "jgFCautoRequests", "Number of times JGroups FC automatically sent replenishment requests", "events"), "jgFCreplenish", "Number of times JGroups FC received replenishments from receivers", "messages"), "jgFCresumes", "Number of times JGroups FC resumed sends due to backpressure", "events"), "jgFCsentCredits", "Number of times JGroups FC sent credits to a sender", "events"), "jgFCsentThrottleRequests","Number of times JGroups FC sent throttle requests to a sender", "events"), "jgNAKACKwaits", "Number of delays created by NAKACK sent_msgs overflow", "events"), is not in the documentationWith the new membership service, these statistics have been added. Each has a name, a description, and a unit of measure: "heartbeatRequestsSent", "Heartbeat request messages that this member has sent.", "messages"), "heartbeatRequestsReceived", "Heartbeat request messages that this member has received.", "messages"), "heartbeatsSent", "Heartbeat messages that this member has sent.", "messages"), "heartbeatsReceived", "Heartbeat messages that this member has received.", "messages"), "suspectsSent", "Suspect member messages that this member has sent.", "messages"), "suspectsReceived", "Suspect member messages that this member has received.", "messages"), "finalCheckRequestsSent", "Heartbeat request messages that this member has sent.", "messages"), "finalCheckRequestsReceived", "Final check requests that this member has received.","messages"), "finalCheckResponsesSent", "Final check responses that this member has sent.", "messages"), "finalCheckResponsesReceived", "Final check responses that this member has received.","messages"),The above four stats are broken down into two other sets for TCP/IP vs UDP checks: "tcpFinalCheckRequestsSent", "TCP final check requests that this member has sent.", "messages", false), "tcpFinalCheckRequestsReceived", "TCP final check requests that this member has received.","messages", false), "tcpFinalCheckResponsesSent", "TCP final check responses that this member has sent.","messages", false), "tcpFinalCheckResponsesReceived", "TCP final check responses that this member has sent.","messages", false), "udpFinalCheckRequestsSent", "UDP final check requests that this member has sent.", "messages"), "udpFinalCheckRequestsReceived", "UDP final check requests that this member has received.","messages"), "udpFinalCheckResponsesSent", "UDP final check responses that this member has sent.", "messages"), "udpFinalCheckResponsesReceived", "UDP final check responses that this member has received.","messages"),}); "udpMsgEncryptionTime", "Total amount of time, in nanoseconds, spent encrypting udp messages.", "nanoseconds"), "udpMsgDecryptionTime","Total amount of time, in nanoseconds, spent decrypting udp messages.", "nanoseconds"),</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.statistics.statistics.list.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2052" opendate="2016-11-2 00:00:00" fixdate="2016-2-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs to segregate types of properties</summary>
      <description>Geode has a lot of properties. But they are not mentioned in context but rather listed as geode properties which can go in geode.properties and gfsecurity.properties.It would nice to have a segregation by Locator and Server under geode.properties. The reason for this ask is that some properties do not apply to both locator and server. Currently the only way to know this is by experience or trial and error.~~We also found out that some of the gemfire.properties do not get applied when supplied in geode.properties but rather have to be passed as command line properties. e.g. enabling rest api.It would be nice to call that out clearly in docs.~~~~There are example of properties which have to be applied together in order to enable a functionality e.g. rest api needs bind address property and http-service-port. Its not called out clearly in the docs that they are mandatory. ~~&amp;#91;link to docs section&amp;#93;(http://geode.incubator.apache.org/docs/guide/rest_apps/setup_config.html)~~quote ~~~To enable the developer REST API service in Apache Geode, set the start-dev-rest-api Geode property to true when starting a data node using either gfsh or the ServerLauncher API. Setting this property to true on a data node will start up an embedded Jetty server and deploy the REST developer API WAR file.~~It should highlight that its necessary to have 2 more properties bind-address and http-service-port defined to make it work.~We would be happy to provide further details on this matter if needed.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2059" opendate="2016-11-2 00:00:00" fixdate="2016-11-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>client SSL handshake attempts do not time out</summary>
      <description>If a client is connecting to a server using SSL it is possible that the secure socket handshake will block indefinitely. This can happen, for instance, if a client is configured to use SSL but the server is not using SSL.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.net.SSLSocketIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SSLSocketIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.server.internal.LoadMonitor.java</file>
    </fixedFiles>
  </bug>
  <bug id="2060" opendate="2016-11-2 00:00:00" fixdate="2016-11-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update docs for security-related properties</summary>
      <description>Place security-manager and security-post-processor properties into the list of properties within the reference section of the documentation.Also review other security-related properties listed and identify those that are deprecated.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2062" opendate="2016-11-2 00:00:00" fixdate="2016-11-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Adding new PDX , order by and Index Query tests to the open side</summary>
      <description>Add new tests for PDX queries, order by queries and queries using indexes. PDXInstance and PDXFactoryImpl to be used to validate multiple class version test rather than writing dummy PDX classes JUnit4CacheTestCase to be used instead of Junit3 elements.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.HashIndexDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2065" opendate="2016-11-2 00:00:00" fixdate="2016-11-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document defragmentationsInProgress statistic</summary>
      <description>This is a sub-task of GEODE-1590.Add the offheap memory statistic defragmentationsInProgress to the documentation. It is the integer number of defragmentations currently in progress.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.statistics.statistics.list.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2068" opendate="2016-11-3 00:00:00" fixdate="2016-11-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve documentation on serial/parallel gateway senders</summary>
      <description>The documentation on Serial Gateway Senders implies that the events queued are generated from a single server. Not true. The events generated from a cluster are funneled through a single server.For the material on Parallel Gateway Senders, the terminology "simultaneous" implies timing, and we don't coordinate the timing of when events are sent. What we're doing is to identify that an event is sent from the server that hosts the primary bucket.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.topologies.and.comm.topology.concepts.multisite.overview.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2070" opendate="2016-11-4 00:00:00" fixdate="2016-11-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve documentation of region management</summary>
      <description>The outline and navigation of the material on regions isBasic Configuration and Programming Data Regions Data Region Management Creating a Region with gfsh Creating a Region Through the cache.xml File Creating a Region Through the API ...The information in the 3 'Creating' sections is partially covered in the Data Region Management section. Reorganize and collapse into a single section on management that covers region management the 3 ways:1. APIs 2. cache.xml declaration3. gfsh</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gfe.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.client-cache.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.chapter.overview.regionshortcuts.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.basic.config.data.regions.managing.data.regions.html.md.erb</file>
      <file type="M">geode-docs.basic.config.data.regions.create.a.region.with.cacheXML.html.md.erb</file>
      <file type="M">geode-docs.basic.config.data.regions.create.a.region.with.API.html.md.erb</file>
      <file type="M">geode-docs.basic.config.data.regions.chapter.overview.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2080" opendate="2016-11-7 00:00:00" fixdate="2016-11-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Rest POST put call not working with region valueConstraint</summary>
      <description>Gemfire REST POST call does not work on a region with value constraint eg If I have a region definition like&lt;region name="regionOne" refid="REPLICATE_PERSISTENT"&gt; &lt;region-attributes&gt; &lt;value-constraint&gt; com.support.pivotal.domain.Company &lt;/value-constraint&gt; &lt;/region-attributes&gt; &lt;/region&gt;and try to do a POST call likeResponseEntity&lt; String&gt; result = RestClientUtils.getRestTemplate().exchange( "http://localhost:8080/gemfire-api/v1/regionOne?key=CITI-123" , HttpMethod.POST, entity, String.class);It fails, whereas If I remove the value constraint in the region definition it works fine. It is eaily reproducible.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.PdxClientServerDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="2084" opendate="2016-11-7 00:00:00" fixdate="2016-11-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>When executing a rest api in a browser, the login page presented in the browser is not setting the username/password correctly</summary>
      <description>Steps to reproduce:1. start up a server with security2. in a browser address bar, type in: http://&lt;ip address&gt;:7070/geode/v1/servers, after putting in username/password, I should see the result json, but instead, I keep getting the login page.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.RestSecurityConfiguration.java</file>
    </fixedFiles>
  </bug>
  <bug id="2089" opendate="2016-11-9 00:00:00" fixdate="2016-11-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>entry-idle-time setting on the client side cache is not working as expected</summary>
      <description>I wrote a unit test that sets an entry-idle-time timeout on a client cache with action local-destroy. When the client cache pulls an old entry from the server the cache appears to ignore the entry-idle-time and expires the entry immediately after it is put in the cache.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.ClientServerCCEDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LeafRegionEntry.cpp</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.NonLocalRegionEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Oplog.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ProxyRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ValidatingDiskRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapStringKey2.java</file>
    </fixedFiles>
  </bug>
  <bug id="2098" opendate="2016-11-11 00:00:00" fixdate="2016-12-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh history should be stored in ~/.geode</summary>
      <description>Currently gfsh stores history in the ~/.gemfire directory. We should change that to be ~/.geode.private static String getHomeGemFireDirectory() { String userHome = System.getProperty("user.home"); String homeDirPath = userHome + "/.gemfire"; File alternateDir = new File(homeDirPath); if (!alternateDir.exists()) { if (!alternateDir.mkdirs()) { homeDirPath = "."; } } return homeDirPath; }</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.shell.GfshConfigInitFileJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.GfshConfig.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.history.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2100" opendate="2016-11-11 00:00:00" fixdate="2016-11-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add new version of query client server messages</summary>
      <description>Create new message types that properly handle legacy clients compared to newer clients</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.internal.JUnit4DistributedTestCase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Query651.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Query.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.BaseCommandQuery.java</file>
    </fixedFiles>
  </bug>
  <bug id="2101" opendate="2016-11-12 00:00:00" fixdate="2016-11-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve WAN topology terminology in docs</summary>
      <description>In our documentation description of WAN topologies, the term "parallel multi-site topology" is a fully connected mesh. The "serial multi-site topology" is a ring. It will improve the docs to change our descriptions to use the common and accepted terms.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.topologies.and.comm.multi.site.configuration.multisite.topologies.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2103" opendate="2016-11-14 00:00:00" fixdate="2016-4-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>start locator command should include --http-service-port and --http-service-bind-address</summary>
      <description>To facilitate starting the Admin REST API on a Locator, start locator command should include --http-service-port and --http-service-bind-address.Workaround is to specify these configuration properties with --J:--J=-Dgemfire.http-service-port=--J=-Dgemfire.http-service-bind-address=</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.management.internal.cli.commands.golden-help-offline.properties</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.LauncherLifecycleCommands.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.management.internal.cli.commands.LauncherLifecycleCommandsJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2104" opendate="2016-11-14 00:00:00" fixdate="2016-11-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>GFSH parsing of options following --J options are interpreted as part of the --J value</summary>
      <description>GFSH parsing of options following --J options are interpreted as part of the --J value.$ start server --name=me3 --J=-Dgemfire.jmx-manager=true --J=-Dgemfire.jmx-manager-start=true --http-service-port=8080` In the above GFSH does not interpret the `http-service-port` option correctly. If you look in the log, the value for `gemfire.jmx-manager-start` is `true --http-service-port=8080`</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.util.HyphenFormatterTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.HyphenFormatter.java</file>
    </fixedFiles>
  </bug>
  <bug id="2110" opendate="2016-11-15 00:00:00" fixdate="2016-11-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add user and password to gfsh start server docs</summary>
      <description>Options to the gfsh start server command specify the user and password to use as credentials in authentication. These options are nicely printed in the gfsh help option, but they did not make it into the command reference page for the gfsh start server command. Thus, they need to be added.From the help output:user User name to securely connect to the cluster. If the --password parameter is not specified then it will be prompted for. Required: falsepassword Password to securely connect to the cluster. Required: false</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2113" opendate="2016-11-15 00:00:00" fixdate="2016-2-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement SSL over NIO</summary>
      <description>Java now has a nifty javax.net.ssl.SSLSocketFactory that can produce an SSLSocket from an existing Socket. This will let us create an SSLSocket that has an NIO SocketChannel and get rid of all of the "Old IO" code.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.ClusterCommunicationsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.NioPlainEngineTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.NioPlainEngine.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache.client.internal.CacheServerSSLConnectionDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache.client.internal.ClientServerHostNameVerificationDistributedTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.ClusterSSLDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.internal.ValueToDataThrowsRuntimeExceptionRegressionTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.ConcurrentMapOpsDUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.net.SSLSocketIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.direct.DirectChannel.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.mgr.GMSMembershipManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EntryEventImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PRQueryProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.monitoring.executor.AbstractExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.Buffers.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.NioEngine.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.NioFilter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.NioSslEngine.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.platform.LinuxProcFsStatistics.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.VMStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.stats50.VMStats50.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.Connection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.ConnectionTable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.MsgDestreamer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.MsgOutputStream.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.MsgReader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.MsgStreamer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.PeerConnectionFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.TCPConduit.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.DscodeHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.FederatingManager.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.BuffersTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.NioSslEngineTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.tcp.ConnectionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.tcp.ConnectionTest.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.util.PluckStacksJstackGeneratedDump.txt</file>
      <file type="M">geode-dunit.src.main.resources.org.apache.geode.server.keystore</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpClient.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.properties.html</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.monitoring.ThreadsMonitoringProcess.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.Buffers.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.NIOMsgReader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.OioMsgReader.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.internal.ProcessManager.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderDistributedDeadlockDUnitTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.system.member.performance.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.system.member.performance.connection.thread.settings.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2114" opendate="2016-11-16 00:00:00" fixdate="2016-11-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add user and password to gfsh connect docs</summary>
      <description>The gfsh connect command has --user and --password options that are not completely documented. The task here is to complete that documentation.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.connect.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2119" opendate="2016-11-16 00:00:00" fixdate="2016-12-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh user and password visible in clear text</summary>
      <description>Both gfsh connect and gfsh start server allow the specification on the command line of a user name and a password for use as credentials in authentication. Clear text versions of the user name and password are then visible1. if the user runs gfsh history2. in historyfile, if the user runs gfsh history --file=historyfile3. in the output of psIt would be worth a check to see if clear text versions of the user or password end up in any locator or server logs. I don't believe it does for gfsh connect, but it might for the start server case.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.Gfsh.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.Banner.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.AbstractLauncher.java</file>
    </fixedFiles>
  </bug>
  <bug id="212" opendate="2015-8-12 00:00:00" fixdate="2015-8-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ResourceManager implementation impacts off-heap performance</summary>
      <description>When the resource manager is configured with either a eviction or critical threshold then it registers a listener with the off-heap SimpleMemoryAllocator that causes every off-heap allocate and free to call this listener.The current listener does a synchronize on a singleton and notifies it. This will impact the rate at which multiple threads can allocate and free off-heap objects.I simple test using 8 threads showed that without the resource manager they could do 16 million allocate/frees in 3 seconds. With the resource manager it took 12 seconds.The notify is done to a singleton thread that simple checks to see if the new off-heap memory size would result in a change to the resource manager state. This can be done without synchronizing. Only if a change is possible do we need to do the sync and notify.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.control.OffHeapMemoryMonitor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.control.MemoryEvent.java</file>
    </fixedFiles>
  </bug>
  <bug id="2125" opendate="2016-11-17 00:00:00" fixdate="2016-1-17 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>GFSH cannot communicate with Locators that go into reconnect mode</summary>
      <description>If the Locator is started from GFSH and the cluster's only server is killed, network partition detection will initiate forceDisconnect in the Locator and leave it in reconnect mode. To the User it will appear that the Locator crashed and GFSH lost connection:gfsh&gt;No longer connected to 192.168.1.72[1099].During the time in which the Locator is in reconnect mode, the User cannot connect via GFSH, nor can they issue status or stop commands against it:$ cd locator1$ cat vf.gf.locator.pid 33959$ ps 33959 PID TT STAT TIME COMMAND33959 s001 S 0:19.97 /Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/CoIn GFSH:gfsh&gt;connect --locator=localhost[10334]Connecting to Locator at [host=localhost, port=10334] ..Connection refusedgfsh&gt;status locator --pid=33959nullgfsh&gt;status locator --dir=locator1nullgfsh&gt;stop locator --dir=locator1Locator in /Users/klund/dev/geode/locator1 on null is currently not responding.gfsh&gt;stop locator --pid=33959Locator in /Users/klund/dev/geode on null is currently not responding.If a Locator has GFSH connected then it should notify GFSH that it is going to forceDisconnect and go into reconnect mode. Then GFSH can notify the User so the User is not suprised.In addition, GFSH status and stop commands should be modified to be able to talk to a Locator in reconnect mode. GFSH start could also be modified to report that the Locator is running in reconnect mode instead of reporting a hung process in the Locator's directory.Attachments: The Locator log file is attached as locator_failure-logs.txt The Locator thread dump (via jstack) AFTER it has shut down due to forceDisconnect is attached as thread_dump.txt</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.configuring.running.starting.up.shutting.down.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2129" opendate="2016-11-18 00:00:00" fixdate="2016-11-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Need to generate pdx type id random(or avoid sequential)</summary>
      <description>Right now pdxtype id has 4 bytes. Out of those 4 bytes, one byte reserved for distributed-system-id, this make sure type id generated from different cluster has different id. For rest of the three bytes we just increment counter to create new pdxtype id. In the field, we have observed that sometimes this pdxType Id collides. One reason could be they end up having same distributed-system-id for the different cluster. Thus to avoid a collision, we will be using hashcode of pdxType for three bytes of pdxType id. That will reduce the possibility of collision.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.deploy.config.files.intro.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.config.troubleshooting.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.export-import.html.md.erb</file>
      <file type="M">geode-docs.configuring.chapter.overview.html.md.erb</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.misc.PDXNewWanDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.PdxSerializableJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.PdxAttributesJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.PeerTypeRegistration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.PdxType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.EnumId.java</file>
    </fixedFiles>
  </bug>
  <bug id="2158" opendate="2016-11-30 00:00:00" fixdate="2016-12-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incorrect NOTICE file</summary>
      <description>The following subprojects have specific NOTICE files that should be included in the jar artifact: geode-pulse geode-web geode-web-apiStarting in 1.0.0-incubating.M3, only the standard source NOTICE was used. We should fix the build to make sure the correct file is used.</description>
      <version>1.0.0-incubating.M3,1.0.0-incubating</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.java.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="2159" opendate="2016-11-30 00:00:00" fixdate="2016-12-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add serialVersionUIDs to exception classes not having them</summary>
      <description>I made a pass through exceptions that are checked for by client caches but recently we found that I missed one. We need to make a pass through all of the exception classes and ensure that they have serialVersionUIDs so that we don't inadvertently make a change that breaks backward compatibility.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.shell.RestApiCallForCommandNotFoundException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.shell.MBeanAccessException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.VisualVmNotFoundException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.MemberNotFoundException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.JConsoleNotFoundException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.DiskStoreNotFoundException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.exceptions.CliException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.exceptions.CliCommandOptionValueMissingException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.exceptions.CliCommandOptionValueException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.exceptions.CliCommandOptionValueConversionException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.exceptions.CliCommandOptionNotApplicableException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.exceptions.CliCommandOptionMissingException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.exceptions.CliCommandOptionInvalidException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.exceptions.CliCommandOptionException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.exceptions.CliCommandNotAvailableException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.exceptions.CliCommandMultiModeOptionException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.exceptions.CliCommandInvalidException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.exceptions.CliCommandException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.lang.AttachAPINotFoundException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.InvalidDeltaException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.SunAPINotFoundException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.ReenteredConnectException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.BucketRegionQueueUnavailableException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.versions.RVVException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.versions.ConcurrentCacheModificationException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PutAllPartialResultException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RedundancyAlreadyMetException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.InternalFunctionInvocationTargetException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.InternalFunctionException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DataLocationException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketNotFoundException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.GemFireCheckedException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.DeltaSerializationException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.VersionException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.UnsupportedOperationInTransactionException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.ResourceException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.RegionRoleException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.QueryExecutionTimeoutException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.QueryExecutionLowMemoryException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.QueryExecutionCanceledException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.GatewayConfigurationException.java</file>
    </fixedFiles>
  </bug>
  <bug id="2163" opendate="2016-12-1 00:00:00" fixdate="2016-12-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CqService.serverCqNameCache does not get cleaned up, possible memory leak</summary>
      <description>The static variable serverCqNameCache gets added to for every new cq name to server combination created. When cqs are stopped, the map does not get removed from. If this occurs often, it may be a problem. Most users probably do not do this enough to cause a problem but this should be fixed.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqServiceImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="2164" opendate="2016-12-1 00:00:00" fixdate="2016-1-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CqNameToOpSingleEntry NAMES_ARRAY field may be refactored out</summary>
      <description>The static NAMES_ARRAY field could possibly refactored out and combined with the name field.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientUpdateMessageImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="2167" opendate="2016-12-1 00:00:00" fixdate="2016-12-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>BundledJarsJUnitTest.verifyBundledJarsHaveNotChanged fails with java.nio.file.InvalidPathException on Windows</summary>
      <description>verifyBundledJarsHaveNotChanged:java.nio.file.InvalidPathException: Illegal char &lt;:&gt; at index 2: /C:/dev/gemfire/open/geode-assembly/build/resources/test/expected_jars.txt at sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182) at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153) at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77) at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94) at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255) at java.nio.file.Paths.get(Paths.java:84) at org.apache.geode.BundledJarsJUnitTest.loadExpectedJars(BundledJarsJUnitTest.java:52) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:377) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.util.test.TestUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="2172" opendate="2016-12-2 00:00:00" fixdate="2016-2-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CustomConfigWithCacheIntegrationTest fails with AssertionError on Windows</summary>
      <description>cacheLogWriterMessageShouldMatchCustomConfig fails with AssertionError:java.lang.AssertionError: Expecting: "CUSTOM: level=INFO time=2016/11/30 13:49:13.780 PST message=&lt;snip&gt;throwable=CUSTOM: level=INFO time=2016/11/30 13:49:14.497 PST message=Running in local mode since no locators were specified.throwable=CUSTOM: level=INFO time=2016/11/30 13:49:15.496 PST message=Initializing region _monitoringRegion_192.168.1.41&lt;v-1&gt;0throwable=CUSTOM: level=INFO time=2016/11/30 13:49:15.542 PST message=Initialization of region _monitoringRegion_192.168.1.41&lt;v-1&gt;0 completedthrowable=CUSTOM: level=INFO time=2016/11/30 13:49:17.492 PST message=this is a log statement from cacheLogWriterMessageShouldMatchCustomConfigthrowable="to contain pattern: "CUSTOM: level=INFO time=.* message=this is a log statement from cacheLogWriterMessageShouldMatchCustomConfigthrowable=" at org.apache.geode.internal.logging.log4j.custom.CustomConfigWithCacheIntegrationTest.cacheLogWriterMessageShouldMatchCustomConfig(CustomConfigWithCacheIntegrationTest.java:149) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.contrib.java.lang.system.internal.LogPrintStream$1$1.evaluate(LogPrintStream.java:30) at org.junit.contrib.java.lang.system.internal.PrintStreamHandler$3.evaluate(PrintStreamHandler.java:48) at org.junit.contrib.java.lang.system.internal.LogPrintStream$1.evaluate(LogPrintStream.java:26) at org.junit.contrib.java.lang.system.internal.LogPrintStream$1$1.evaluate(LogPrintStream.java:30) at org.junit.contrib.java.lang.system.internal.PrintStreamHandler$3.evaluate(PrintStreamHandler.java:48) at org.junit.contrib.java.lang.system.internal.LogPrintStream$1.evaluate(LogPrintStream.java:26) at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:377) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.log4j.custom.CustomConfiguration.java</file>
    </fixedFiles>
  </bug>
  <bug id="2178" opendate="2016-12-2 00:00:00" fixdate="2016-12-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: Update HTTP session management version numbers</summary>
      <description>User Manual section Tools andModules -&gt; HTTP Session Management contains outdated information regarding supported application servers and their version numbers. Bring these up to date.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.weblogic.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tomcat.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tc.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tc.installing.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tc.additional.info.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.quick.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2180" opendate="2016-12-3 00:00:00" fixdate="2016-12-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Autoreconnect does not work well with configuration via API calls</summary>
      <description>If autoreconnect is enabled, default reconfiguration upon reconnection uses the XML configuration that would be generated by the cluster configuration service (also used by default). This set of default settings doesn't work when a cache's configuration is accomplished through API calls. So, our documentation should explain this, such that admins know when not to enable autoreconnect.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.autoreconnect.member-reconnect.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2182" opendate="2016-12-5 00:00:00" fixdate="2016-1-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Possible race condition when estimating index size and an entry is destroyed</summary>
      <description>There is a possible race condition when estimating size of an index and an entry is destroyed. This doesnt get caught and instead percolates to the top as an EntryDestroyedException.A quick work around would be to catch the exception and return 0, this may lead to an inefficient lookup but the results would be correct.The better alternative would be to continue iterating if possible.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.functional.IndexOnEntrySetJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.MemoryIndexStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.CompactRangeIndex.java</file>
    </fixedFiles>
  </bug>
  <bug id="2184" opendate="2016-12-5 00:00:00" fixdate="2016-12-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: Variable-ize Java version numbers</summary>
      <description>Examples containing specific version strings, e.g. "Geode 1.0.0-incubating" and "javac 1.8.0_92" must be updated with every doc release or they go out of date. In most cases, the specific numbers are not meaningful to the example. Updating with every related revision requires considerable, usually unnecessary, effort. Replace such version strings with generic placeholders.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.weblogic.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tc.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tc.additional.info.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.tour.of.gfsh.html.md.erb</file>
      <file type="M">geode-docs.managing.management.jmx.manager.operations.html.md.erb</file>
      <file type="M">geode-docs.getting.started.system.requirements.host.machine.html.md.erb</file>
      <file type="M">geode-docs.getting.started.installation.install.standalone.html.md.erb</file>
      <file type="M">geode-docs.getting.started.15.minute.quickstart.gfsh.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.running.the.locator.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.running.the.cacheserver.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.persisting.configurations.html.md.erb</file>
      <file type="M">geode-book.config.yml</file>
    </fixedFiles>
  </bug>
  <bug id="2185" opendate="2016-12-6 00:00:00" fixdate="2016-12-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Index not used with parameterized query</summary>
      <description>When a query has parameterized values, indexes that should be used are currently not used.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.MapRangeIndexMaintenanceJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.IndexTrackingQueryObserver.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledBindArgument.java</file>
    </fixedFiles>
  </bug>
  <bug id="2186" opendate="2016-12-7 00:00:00" fixdate="2016-12-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse WAN information may indicate that senders are unhealthy even if they are not</summary>
      <description>The WAN information tile on the pulse homepage displays either a green or or orange triangle indicating the status of the connection to the remote side.That tile is populated from DistributedSystemMXBean.viewRemoteClusterStatus.Unfortunately, that method iterators over the gateway senders of all members and adds them to a the status map by remote DS id. That means that it will only keep the connected status last sender that was added. If that last sender was a secondary, it's entirely normal that it might not be connected public Map&lt;String, Boolean&gt; viewRemoteClusterStatus() { if (mapOfGatewaySenders.values().size() &gt; 0) { Map&lt;String, Boolean&gt; senderMap = new HashMap&lt;String, Boolean&gt;(); Iterator&lt;GatewaySenderMXBean&gt; it = mapOfGatewaySenders.values().iterator(); while (it.hasNext()) { GatewaySenderMXBean bean = it.next(); Integer dsId = bean.getRemoteDSId(); if (dsId != null) { senderMap.put(dsId.toString(), bean.isConnected()); }...This method should probably only look at the primary gateway sender's status.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.management.WANManagementDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.DistributedSystemBridge.java</file>
    </fixedFiles>
  </bug>
  <bug id="2187" opendate="2016-12-7 00:00:00" fixdate="2016-12-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: bad subnav link in REST Apps &gt; Troubleshooting</summary>
      <description>The subnav link for Developing REST apps &gt; Troubleshooting &gt; Key Types and JSON Support does not connect. Needs to be repaired or removed.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.rest.apps.troubleshooting.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2189" opendate="2016-12-7 00:00:00" fixdate="2016-7-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: Update Swagger UI links</summary>
      <description>In the User Manual, at the bottom of the section Developing REST Applications -&gt; Using the Swagger UI, there are two links, one to "more info" and one to the "Swagger specification". The first one no longer connects to anything, the second connects to a target that may be incorrect.Need to review and update these links with their correct values.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.rest.apps.using.swagger.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="219" opendate="2015-8-14 00:00:00" fixdate="2015-3-14 01:00:00" resolution="Won&amp;#39;t Fix">
    <buginformation>
      <summary>RegionWithHDFSPersistenceBasicDUnitTest.testGlobalDestroyFromAccessor fails intermittently</summary>
      <description>This test failed in our of our recent jenkins runshttps://builds.apache.org/job/Geode-nightly/181/testReport/junit/com.gemstone.gemfire.cache.hdfs.internal/RegionWithHDFSOffHeapBasicDUnitTest/testGlobalDestroyFromAccessor/java.lang.AssertionError: Suspicious strings were written to the log during this run.Fix the strings or use DistributedTestCase.addExpectedException to ignore.-----------------------------------------------------------------------Found suspect string in log4j at line 1563java.lang.IllegalArgumentException: n must be positiveIt looks like this test case was added in b3e216740d75223252c95c0a016828d63cc13398, assigning to Amogh.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.RegionWithHDFSTestBase.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.RegionWithHDFSBasicDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="220" opendate="2015-8-14 00:00:00" fixdate="2015-8-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>DistributedNoAckRegionOffHeapDUnitTest.testRemoteCacheWriter fails intermittently</summary>
      <description>DistributedNoAckRegionOffHeapDUnitTest.testRemoteCacheWriter fails intermittently.The intermittent failure is caused by an off-heap region being destroyed and the test expecting the off-heap stats to be synchronously updated during the destroy.off-heap regions release their off-heap references async in a background thread to prevent dead lock.The following assertEquals(0, ...) needs be in a wait criteria: region.destroyRegion(arg); if (region.getAttributes().getOffHeap() &amp;&amp; !(region instanceof PartitionedRegion)) { GemFireCacheImpl gfc = (GemFireCacheImpl) getCache(); SimpleMemoryAllocatorImpl ma = (SimpleMemoryAllocatorImpl) gfc.getOffHeapStore(); assertEquals(0, ma.getStats().getObjects()); }</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache30.MultiVMRegionTestCase.java</file>
    </fixedFiles>
  </bug>
  <bug id="2201" opendate="2016-12-9 00:00:00" fixdate="2016-6-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make UITests more resilient</summary>
      <description>The UITests are continually failing in CI. We need to make them great again.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.rules.WebDriverRule.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.rules.ScreenshotOnFailureRule.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.ui.PulseTestUtils.java</file>
    </fixedFiles>
  </bug>
  <bug id="2208" opendate="2016-12-13 00:00:00" fixdate="2016-12-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document limitation of transactions on mixed region types</summary>
      <description>For transactions that run on a mix of replicated and partitioned regions, the first operation needs to be to a partitioned region. This sets/fixes the host where subsequent operations will run, and it will be where data is colocated if there are multiple partitioned regions involved. If the first operation is to the replicated region, then the host set may be one that is not where the colocated data is, leading to data not colocated exceptions.This limitation needs to be documented.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.data.location.cache.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.by.region.type.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2212" opendate="2016-12-14 00:00:00" fixdate="2016-12-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh http authentication fails when routed through a proxy</summary>
      <description>We encountered a bug with Geode that only reveals itself when routing requests through the a proxy that modifies HTTP headers to standardize them in title case format.gfsh uses the security-username and security-password headers to pass authentication credentials to the locator, but what we saw is that when these go through our proxy and are turned into Security-Username / Security-Password, we can no longer authenticate.This request emulates what gfsh executes when you run "list members" with an HTTP connection:curl http://$LOCATOR_IP/gemfire/v1/members -H "security-username: admin" -H "security-password: admin"This request emulates what gets sent when going through our proxy. This should be the same but will fail:curl http://$LOCATOR_IP/gemfire/v1/members -H "Security-Username: admin" -H "Security-Password: admin"We narrowed the bug down to these lines. The HTTP spec specifies that headers should treated as case-insensitive but it looks like Geode is only capable of working with lower-case versions of these headers.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptorRequestHeaderJUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptorJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptor.java</file>
    </fixedFiles>
  </bug>
  <bug id="222" opendate="2015-8-16 00:00:00" fixdate="2015-8-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>RedisDistDUnitTest testConcOps failed due to JedisDataException</summary>
      <description>RedisDistDUnitTest testConcOps failed in nightly build due to "JedisDataException: ERR The server had an internal error please try again"https://builds.apache.org/view/All/job/Geode-nightly/186/testReport/junit/com.gemstone.gemfire.redis/RedisDistDUnitTest/testConcOps/java.lang.Exception: An exception occured during async invocation at dunit.AsyncInvocation.getResult(AsyncInvocation.java:175) at com.gemstone.gemfire.redis.RedisDistDUnitTest.testConcOps(RedisDistDUnitTest.java:224) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at junit.framework.TestCase.runTest(TestCase.java:176) at junit.framework.TestCase.runBare(TestCase.java:141) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:129) at junit.framework.TestSuite.runTest(TestSuite.java:252) at junit.framework.TestSuite.run(TestSuite.java:247) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50) at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106) at sun.reflect.GeneratedMethodAccessor212.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) at java.lang.Thread.run(Thread.java:745)Caused by: dunit.RMIException: While invoking com.gemstone.gemfire.redis.RedisDistDUnitTest$1ConcOps.call in VM 2 running on Host asf911.gq1.ygridcore.net with 4 VMs at dunit.VM.invoke(VM.java:359) at dunit.VM$2.run(VM.java:211) at java.lang.Thread.run(Thread.java:745) at dunit.AsyncInvocation.run(AsyncInvocation.java:200)Caused by: redis.clients.jedis.exceptions.JedisDataException: ERR The server had an internal error please try again at redis.clients.jedis.Protocol.processError(Protocol.java:117) at redis.clients.jedis.Protocol.process(Protocol.java:142) at redis.clients.jedis.Protocol.read(Protocol.java:196) at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:288) at redis.clients.jedis.Connection.getBinaryMultiBulkReply(Connection.java:224) at redis.clients.jedis.Connection.getMultiBulkReply(Connection.java:217) at redis.clients.jedis.Jedis.getTupledSet(Jedis.java:2072) at redis.clients.jedis.Jedis.zrangeByScoreWithScores(Jedis.java:2058) at com.gemstone.gemfire.redis.RedisDistDUnitTest$1ConcOps.call(RedisDistDUnitTest.java:208) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at hydra.MethExecutor.executeObject(MethExecutor.java:258) at dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:67) at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:322) at sun.rmi.transport.Transport$1.run(Transport.java:177) at sun.rmi.transport.Transport$1.run(Transport.java:174) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:173) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:556) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:811) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:670) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) at java.lang.Thread.run(Thread.java:745)</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.Coder.java</file>
    </fixedFiles>
  </bug>
  <bug id="2234" opendate="2016-12-20 00:00:00" fixdate="2016-12-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene query hit stats shows number higher than number of calls</summary>
      <description>Scenario:System with 0 entriesAdd 2 entriesQuery 1 time.Add the same 2 entries (update)Query 1 time.Result:gfsh&gt;list lucene indexes --with-statsIndex Name | Region Path | Indexed Fields | Field Analyzer | Query Executions | Updates | Commits | Documents---------- | ----------- | -------------- | -------------- | ---------------- | ------- | ------- | ---------customerF1 | /Customer | [f1] | {} | 0 | 0 | 0 | 0customerF1 | /Customer | [f1] | {} | 0 | 0 | 0 | 0gfsh&gt;list lucene indexes --with-statsIndex Name | Region Path | Indexed Fields | Field Analyzer | Query Executions | Updates | Commits | Documents---------- | ----------- | -------------- | -------------- | ---------------- | ------- | ------- | ---------customerF1 | /Customer | [f1] | {} | 112 | 2 | 2 | 1customerF1 | /Customer | [f1] | {} | 114 | 2 | 2 | 1gfsh&gt;list lucene indexes --with-statsIndex Name | Region Path | Indexed Fields | Field Analyzer | Query Executions | Updates | Commits | Documents---------- | ----------- | -------------- | -------------- | ---------------- | ------- | ------- | ---------customerF1 | /Customer | [f1] | {} | 224 | 3 | 3 | 1customerF1 | /Customer | [f1] | {} | 228 | 3 | 3 | 1</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.management.LuceneManagementDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexStatsJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.distributed.LuceneFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsDUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexStats.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.distributed.LuceneFunction.java</file>
    </fixedFiles>
  </bug>
  <bug id="2238" opendate="2016-12-20 00:00:00" fixdate="2016-1-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Member may fail to receive cluster configuration from locator</summary>
      <description>LuceneClusterConfigurationDUnitTest.indexWithAnalyzerGetsCreatedUsingClusterConfiguration is failing frequently in precheckin. I'm going to mark it as FlakyTest. Below is the stack trace::geode-lucene:distributedTestorg.apache.geode.cache.lucene.internal.configuration.LuceneClusterConfigurationDUnitTest &gt; indexWithAnalyzerGetsCreatedUsingClusterConfiguration FAILED org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.cache.lucene.internal.configuration.LuceneClusterConfigurationDUnitTest$$Lambda$29/613305101.run in VM 2 running on Host 3fb23bc375ef with 4 VMs at org.apache.geode.test.dunit.VM.invoke(VM.java:344) at org.apache.geode.test.dunit.VM.invoke(VM.java:314) at org.apache.geode.test.dunit.VM.invoke(VM.java:259) at org.apache.geode.test.dunit.rules.Member.invoke(Member.java:60) at org.apache.geode.cache.lucene.internal.configuration.LuceneClusterConfigurationDUnitTest.indexWithAnalyzerGetsCreatedUsingClusterConfiguration(LuceneClusterConfigurationDUnitTest.java:102) Caused by: java.lang.AssertionError at org.junit.Assert.fail(Assert.java:86) at org.junit.Assert.assertTrue(Assert.java:41) at org.junit.Assert.assertNotNull(Assert.java:712) at org.junit.Assert.assertNotNull(Assert.java:722) at org.apache.geode.cache.lucene.internal.configuration.LuceneClusterConfigurationDUnitTest.lambda$indexWithAnalyzerGetsCreatedUsingClusterConfiguration$bb17a952$1(LuceneClusterConfigurationDUnitTest.java:105)94 tests completed, 1 failed</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.StartupResponseWithVersionMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.StartupMessageReplyProcessor.java</file>
    </fixedFiles>
  </bug>
  <bug id="224" opendate="2015-8-17 00:00:00" fixdate="2015-1-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode Spark connector parser is not processing type casting properly</summary>
      <description>Using GFSH a user can execute queries casting the data types but that's not working using the geode-spark-connector. scala&gt; sqlContext.gemfireOQL("SELECT (Double)t.ema, (Double)t.future_ema, (Double)t.close, t.entryTimestamp FROM /TechIndicators t ");java.lang.RuntimeException: No result when parsing failedat scala.sys.package$.error(package.scala:27)at scala.util.parsing.combinator.Parsers$NoSuccess.get(Parsers.scala:181)at scala.util.parsing.combinator.Parsers$NoSuccess.get(Parsers.scala:167)at io.pivotal.gemfire.spark.connector.internal.oql.QueryRDD.getRegionPathFromQuery(QueryRDD.scala:56)at io.pivotal.gemfire.spark.connector.internal.oql.QueryRDD.getPartitions(QueryRDD.scala:24)at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:219)at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:217)at scala.Option.getOrElse(Option.scala:120)at org.apache.spark.rdd.RDD.partitions(RDD.scala:217)at org.apache.spark.rdd.RDD.take(RDD.scala:1156)at org.apache.spark.rdd.RDD.first(RDD.scala:1189)at io.pivotal.gemfire.spark.connector.internal.oql.SchemaBuilder.toSparkSchema(SchemaBuilder.scala:30)at io.pivotal.gemfire.spark.connector.internal.oql.OQLRelation.schema(RDDConverter.scala:13)at org.apache.spark.sql.sources.LogicalRelation.&lt;init&gt;(LogicalRelation.scala:30)</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-spark-connector.geode-spark-connector.src.test.scala.org.apache.geode.spark.connector.internal.oql.QueryParserTest.scala</file>
      <file type="M">geode-spark-connector.geode-spark-connector.src.main.scala.org.apache.geode.spark.connector.internal.oql.QueryParser.scala</file>
    </fixedFiles>
  </bug>
  <bug id="2241" opendate="2016-12-21 00:00:00" fixdate="2016-1-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh lucene will generate duplicate results</summary>
      <description>When started 2 servers, run gfsh will always display duplicated results.The root cause is: we submit a function call to execute query on each member.gfsh&gt;list lucene indexes Index Name | Region Path | Indexed Fields | Field Analyzer | Status------------- | ----------- | -------------------------- | -------------------- | -----------analyzerIndex | /Person | &amp;#91;address, name, email&amp;#93; | {address=MyCharact.. | InitializedanalyzerIndex | /Person | &amp;#91;address, name, email&amp;#93; | {address=MyCharact.. | InitializedcustomerIndex | /Customer | [symbol, revenue, SSN, n.. | {} | InitializedcustomerIndex | /Customer | [symbol, revenue, SSN, n.. | {} | InitializedpageIndex | /Page | [symbol, name, email, ad.. | {} | InitializedpageIndex | /Page | [symbol, name, email, ad.. | {} | InitializedpersonIndex | /Person | [name, email, address, s.. | {} | InitializedpersonIndex | /Person | [name, email, address, s.. | {} | Initializedgfsh&gt;search lucene --name=personIndex --region=/Person --defaultField=name --queryStrings="Tom*JSON" key | value | score-------- | --------------------------------------------------------------------------- | -----jsondoc1 | PDX&amp;#91;3,__GEMFIRE_JSON&amp;#93;{address=PDX&amp;#91;1,__GEMFIRE_JSON&amp;#93;{city=New York, postal.. | 1jsondoc2 | PDX&amp;#91;3,__GEMFIRE_JSON&amp;#93;{address=PDX&amp;#91;1,__GEMFIRE_JSON&amp;#93;{city=New York, postal.. | 1jsondoc1 | PDX&amp;#91;3,__GEMFIRE_JSON&amp;#93;{address=PDX&amp;#91;1,__GEMFIRE_JSON&amp;#93;{city=New York, postal.. | 1jsondoc2 | PDX&amp;#91;3,__GEMFIRE_JSON&amp;#93;{address=PDX&amp;#91;1,__GEMFIRE_JSON&amp;#93;{city=New York, postal.. | 1</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommands.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GemfireDataCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DataCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CliUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="2242" opendate="2016-12-21 00:00:00" fixdate="2016-12-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Destroy operations on PRELOADED regions are not applied in the receiving WAN site</summary>
      <description>In the receiving site, all the processing in AbstractRegionEntry.processGatewayTag fails for the destroy event, a ConcurrentCacheModificationException is thrown, and the destroy event is not applied.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialWANPropagationDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderQueueDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.UpdateVersionDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="2243" opendate="2016-12-21 00:00:00" fixdate="2016-6-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modify path to spotless formatter</summary>
      <description>Modify path to spotless formatter xml slightly so that it can be used from closed side.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="2247" opendate="2016-12-27 00:00:00" fixdate="2016-2-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>GFSH connect over HTTP without credentials should fail earlier</summary>
      <description>With a SecurityManager configured and using GFSH over http, issuing a connect command without -user or -password will appear to succeed, responding with Successfully connected to: GemFire Manager HTTP service. However if you then try to do anything in this session you will get an error Could not process command due to GemFire error. Error while processing command &lt;list members&gt; Reason : Error: Anonymous User.It seems like it should fail on the connect.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.GeodeAuthenticationProvider.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.IntegratedSecurityServiceWithIniFileJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.auth.AbstractGMSAuthenticatorTestCase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.SecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.IntegratedSecurityService.java</file>
    </fixedFiles>
  </bug>
  <bug id="2252" opendate="2016-12-27 00:00:00" fixdate="2016-12-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove doc reference to too-old vmware guide</summary>
      <description>The docs section on Performance Tuning discusses running on vSphere. That documentation may still be relevant, but the end of the section has a link to very old and no-longer-relevant documentation. So, remove the link.At the same time, update the Geode book subnav to not reference subsections (within this performance tuning subsection) distinguished by anchors, as this causes the subnav to misbehave.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.monitor.tune.gemfire.performance.on.vsphere.guidelines.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.gemfire.performance.on.vsphere.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.chapter.overview.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2253" opendate="2016-12-27 00:00:00" fixdate="2016-1-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Locator may fail to respond to a valid request</summary>
      <description>When a locator is spinning up it may get a request from a peer process or a client process that it isn't ready to handle. In some cases it will log a warning that it received a request of class C but is only configured to handle requests of classes X, Y or Z. It ought to wait and retry for a little while for the service associated with class C to finish initializing.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.LocatorJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="2257" opendate="2016-12-29 00:00:00" fixdate="2016-12-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Client configured to use locator with addPoolServer fails to connect</summary>
      <description>If a client cache is incorrectly configured to use a locator address with ClientConnectionFactory.addPoolServer() instead of addPoolLocator() it is very difficult to figure out why it's unable to connect. The locator rejects all attempts to contact it because the client tries to perform a server-handshake with it and the locator just closes the connection without a response. The client ends up having an empty connection pool and is unable to find any of the available servers.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.HandShake.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientUpdater.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.Acceptor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.QueueManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ConnectionImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ConnectionFactoryImpl.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ClientServerMiscDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpServer.java</file>
    </fixedFiles>
  </bug>
  <bug id="2258" opendate="2016-12-29 00:00:00" fixdate="2016-12-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>fix doc typos for setting properties</summary>
      <description>In file basic_config/gemfire_properties/setting_distributed_properties.html, this text is wrong:System.setProperty("DgemfirePropertyFile", "gfTest");System.setProperty("Dgemfire.mcast-port", "10999");The capital D at the beginning of each property name should be deleted.In the same file, the reference to DistributedSystem javadocs should be changed to refer to this class:org.apache.geode.distributed.ConfigurationPropertiesConfigurationProperties also defines constants for each property name so that applications can use them instead of embedding string constants in their code. This has the benefit of avoiding typing mistakes.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.basic.config.gemfire.properties.setting.distributed.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2259" opendate="2016-12-29 00:00:00" fixdate="2016-12-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: Update &amp; correct tc Server instructions</summary>
      <description>Installation instructions for tc Server are out-of-date. Update and correct.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tc.installing.the.module.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2267" opendate="2017-1-4 00:00:00" fixdate="2017-1-4 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Add gfsh command to export stat files</summary>
      <description>We would like a single gfsh command to collect and export all logfiles and stat files into a single package that will be returned to the gfsh client machine. This package (zipfile) can then be saved and attached to emails and Jira tickets to help evaluate the Geode cluster status.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.CommandRequestTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.MultiUserDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.util.LogLevelExtractorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.util.LogFilterTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.HeadlessGfsh.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CliCommandTestBase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.AbstractCliAroundInterceptorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.SimpleStatSamplerIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.LogLevelExtractor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.LogFilter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.LogExporter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.remote.RemoteExecutionStrategy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.LogFileFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.FunctionCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportImportClusterConfigurationCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DeployCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ConfigCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatArchiveHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.LogService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.InternalLogWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.GemFireLevel.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.QueryNamesOverHttpDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.PeerAuthenticatorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.JavaRmiServerNameTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.DeployCommandsSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.CacheServerMBeanShiroJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DeployCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.DistributedSystem.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.SwaggerVerificationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestServersJUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.management.internal.AgentUtilJUnitTest.java</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.PeerSecurityWithEmbeddedLocatorDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.shell.SimpleHttpOperationInvokerJUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.shell.RestHttpOperationInvokerJUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.CommandOverHttpDUnitTest.java</file>
      <file type="M">geode-web.build.gradle</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.management.internal.cli.commands.golden-help-offline.properties</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorServerConfigurationRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.util.MergeLogsTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.util.LogExporterTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ExportLogsFunctionIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsDUnit.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportLogCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.GfshExecutionStrategy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.ExportLogController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.shell.AbstractHttpOperationInvoker.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.GfshShellConnectionRule.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsOverHttpDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityIntegrationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityPostProcessorTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.PulseDataExportTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.ConnectToLocatorSSLDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsOnServerManagerDUnit.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.NetstatDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.util.MergeLogsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfig.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigDeployJarDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigDistributionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigImportDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigStartMemberDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigWithSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.CacheServerStartupRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshCommandsPostProcessorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshCommandsSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.AbstractSecureServerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClusterConfigWithoutSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.SecurityClusterConfigDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.SecurityWithoutClusterConfigDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.StartServerAuthorizationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.Locator.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorServerStartupRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.Member.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.Server.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.ServerStarterRule.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.configuration.LuceneClusterConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.CliMetaData.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.AbstractCliAroundInterceptor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CliAroundInterceptor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CliUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CommandRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.MiscellaneousCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ExportLogsFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.ExportLogsCacheWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.ExportLogsRepository.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.MergeLogs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.MiscellaneousCommandsController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.shell.RestHttpOperationInvoker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.shell.SimpleHttpOperationInvoker.java</file>
    </fixedFiles>
  </bug>
  <bug id="2269" opendate="2017-1-5 00:00:00" fixdate="2017-2-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>It seems the gfsh "remove" command cannot remove r...</summary>
      <description>It seems the gfsh "remove" command cannot remove region entries with a 0 length string key.gfsh&gt;query --query="select toString().length() from /Recipient.keySet()"Result : truestartCount : 0endCount : 20Rows : 3Result------025gfsh&gt;remove --region=/Recipient --key=""Message : Key is either empty or NullResult : falsegfsh&gt;remove --region=/Recipient --key="''"Message : Key is either empty or NullResult : false</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GemfireDataCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DataCommandFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DataCommands.java</file>
    </fixedFiles>
  </bug>
  <bug id="2272" opendate="2017-1-5 00:00:00" fixdate="2017-1-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse Data Browser export hangs</summary>
      <description>The Export feature of Pulse Data Browser is prone to hang with large amounts of data as it requires loading all the query results into the browser before they can be exported. Instead, we should allow a user to Export query results directly to a file without first loading the results into their browser.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.ui.PulseBase.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.rules.WebDriverRule.java</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.pages.DataBrowserQuery.js</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.Repository.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.Cluster.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.controllers.PulseController.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorServerStartupRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="2273" opendate="2017-1-5 00:00:00" fixdate="2017-1-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Display the server name while listing the Lucene index stats</summary>
      <description>Display the server's name hosting the Lucene indexes while listing the Lucene index stats in gfsh.Currently we can't distinguish between the listed pairs.--------------------gfsh&gt;list lucene indexes --with-stats Index Name | Region Path | Indexed Fields | Field Analyzer | Status | Query Executions | Updates | Commits | Documents----------------- | ----------- | -------------------------------- | -------------- | ----------- | ---------------- | ------- | ------- | ---------customerRegionAll | /customer | [lastUpdateDateTime, displayNa.. | {} | Initialized | 0 | 0 | 0 | 0customerRegionAll | /customer | [lastUpdateDateTime, displayNa.. | {} | Initialized | 0 | 0 | 0 | 0</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneListIndexFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneDescribeIndexFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexDetails.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommands.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneListIndexFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneDescribeIndexFunction.java</file>
    </fixedFiles>
  </bug>
  <bug id="2274" opendate="2017-1-6 00:00:00" fixdate="2017-1-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Need to add additional unit test coverage on non colocated transaction</summary>
      <description>Need to add additional entry operations on non colocated transaction and get expected transaction exception.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.PRTransactionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.disttx.PRDistTXWithVersionsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.disttx.PRDistTXDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2282" opendate="2017-1-9 00:00:00" fixdate="2017-1-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Provide ability to sort field while creating pdxType for jSON document(Need to document system property)</summary>
      <description>There is the possibility that same JSON document can create multiple pdxType ids, if different JSON docs contain same fields in different order. Thus sort those field while creating the pdxType id. Introduce system property to enable this feature.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.json.JSONToPdxMapper.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.JSONPdxClientServerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.JSONFormatterJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.JSONFormatter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.json.PdxListHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.json.PdxInstanceHelper.java</file>
      <file type="M">geode-docs.developing.data.serialization.jsonformatter.pdxinstances.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2294" opendate="2017-1-11 00:00:00" fixdate="2017-1-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>When attempting to execute a function via Dev Rest API, error messages are being lost</summary>
      <description>In FunctionAccessController:While debugging the execution of a function via the REST API, a null-pointer exception was thrown and should have returned the error:Specified key is null and this region does not permit null keys!instead, an error code of 0 is returned with the message:{ "error": "no response from server"}</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-web-api.src.test.java.org.apache.geode.rest.internal.web.controllers.AbstractBaseControllerJUnitTest.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.AbstractBaseController.java</file>
    </fixedFiles>
  </bug>
  <bug id="232" opendate="2015-8-19 00:00:00" fixdate="2015-8-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh prints ERROR StatusLogger log4j2-cli.xml not found in file system or classpath</summary>
      <description>./open/gemfire-assembly/build/install/apache-geode/bin/gfshERROR StatusLogger File not found in file system or classpath: /com/gemstone/gemfire/internal/logging/log4j/log4j2-cli.xmlERROR StatusLogger No log4j2 configuration file found. Using default configuration: logging only errors to the console. _________________________ __ / ____/ ______/ ______/ /___/ / / / _/ /__ /_____ / _____ / / /__/ / ____/ _____/ / / / / /_____// /_____// /_/ v1.0.0-incubating-SNAPSHOTMonitor and Manage GemFiregfsh&gt;</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.logging.LogServiceJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.logging.LoggingUnitTestSuite.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.logging.LoggingIntegrationTestSuite.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.logging.LogService.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.logging.log4j.Configurator.java</file>
    </fixedFiles>
  </bug>
  <bug id="2321" opendate="2017-1-18 00:00:00" fixdate="2017-3-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse application works incorrectly in some locales</summary>
      <description>I noticed that Pulse application is not able to show cluster view in my locale. Doing some investigations I revealed the warning messages like: serviceException [for service ClusterDetails] = For input string: "2,71"serviceException [for service ClusterMembersRGraph] = For input string: "58,27"I guess the reason is in parsing numeric values - it looks like coma "," is hard coded in Pulse as a decimal separator; so if your region settings have separate value (like mine - ".") you'll get such a problem. The workaround could be to force usage of US region starting locator: --J=-Duser.region=US.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.ui.PulseBase.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.MemberRegionsService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.MemberDetailsService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterSelectedRegionService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterRegionsService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterRegionService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterMembersRGraphService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterDetailsService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.PulseConstants.java</file>
    </fixedFiles>
  </bug>
  <bug id="2352" opendate="2017-1-24 00:00:00" fixdate="2017-5-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document that REST API requires two properties</summary>
      <description>Pulkit Chandra wrote in GEODE-2052:The REST api needs bind address property and http-service-port. Its not called out clearly in the docs that they are mandatory. &amp;#91;link to docs section&amp;#93;(http://geode.incubator.apache.org/docs/guide/rest_apps/setup_config.html)quote ```To enable the developer REST API service in Apache Geode, set the start-dev-rest-api Geode property to true when starting a data node using either gfsh or the ServerLauncher API. Setting this property to true on a data node will start up an embedded Jetty server and deploy the REST developer API WAR file.```We also found out that some of the gemfire.properties do not get applied when supplied in geode.properties but rather have to be passed as command line properties. e.g. enabling rest api.It would be nice to call that out clearly in docs.It should highlight that its necessary to have 2 more properties bind-address and http-service-port defined to make it work.We would be happy to provide further details on this matter if needed.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.rest.apps.setup.config.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.prereqs.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.chapter.overview.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2353" opendate="2017-1-24 00:00:00" fixdate="2017-1-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Verify no clear-text passwords in documentation</summary>
      <description>Find locations in the manual where notes were made that the password is recorded or available in clear text, and remove them. GEODE-2119 ticket fixed all of them. Passwords are no longer seen in clear text.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.connect.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2367" opendate="2017-1-25 00:00:00" fixdate="2017-1-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene Index does not handle ha scenarios</summary>
      <description>In ha scenarios or during rebalance, the lucene index listeners allow multiple nodes to write to the file/chunk regions. The Index repositories are also not being cleaned up when a bucket goes from primary to secondary.This work will need to refactor the creation of the Lucene index to not create one on the "fly" when a get/or query function is executed. Otherwise a function execution on a node that has just been turned secondary, may cause it to create an index repo that it should not create.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.RawLuceneRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.PartitionedRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.distributed.LuceneFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.distributed.DistributedScoringJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.RawLuceneRepositoryManager.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.RawIndexRepositoryFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneQueryImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LucenePrimaryBucketListener.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexForPartitionedRegion.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneEventListener.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.IndexRepositoryFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.distributed.LuceneFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.AbstractPartitionedRepositoryManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.partition.PartitionListener.java</file>
    </fixedFiles>
  </bug>
  <bug id="2379" opendate="2017-1-27 00:00:00" fixdate="2017-3-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document new behavior of export logs</summary>
      <description>the new command help: NAME export logsIS AVAILABLE falseSYNOPSIS Export the log files for a member or members.SYNTAX export logs &amp;#91;--dir=value&amp;#93; &amp;#91;--group=value(,value)*&amp;#93; &amp;#91;--member=value(,value)*&amp;#93; &amp;#91;--log-level=value&amp;#93; &amp;#91;--only-log-level=value&amp;#93; &amp;#91;--merge-log=value&amp;#93; &amp;#91;--start-time=value&amp;#93; &amp;#91;--end-time=value&amp;#93; &amp;#91;--logs-only(=value)?&amp;#93; &amp;#91;--stats-only(=value)?&amp;#93;PARAMETERS dir Local directory to which log files will be written. This is only used when you are exporting logs using http connection. If not specified, user.dir will be used. Required: false group Group of members whose log files will be exported. Required: false member Name/Id of the member whose log files will be exported. Required: false log-level Minimum level of log entries to export. Valid values are: fatal, error, warn, info, debug, trace and all. The default is "INFO". Required: false Default (if the parameter is not specified): INFO only-log-level Whether to only include those entries that exactly match the --log-level specified. Required: false Default (if the parameter is not specified): false merge-log Whether to merge logs after exporting to the target directory. &amp;#8211; deprecated Required: false Default (if the parameter is not specified): false start-time Log entries that occurred after this time will be exported. The default is no limit. Format: yyyy/MM/dd/HH/mm/ss/SSS/z OR yyyy/MM/dd Required: false end-time Log entries that occurred before this time will be exported. The default is no limit. Format: yyyy/MM/dd/HH/mm/ss/SSS/z OR yyyy/MM/dd Required: false logs-only Whether to only export logs Required: false Default (if the parameter is specified without value): true Default (if the parameter is not specified): false stats-only Whether to only export statistics Required: false Default (if the parameter is specified without value): true Default (if the parameter is not specified): falsechanges are: --dir is not required anymore. added logs-only and stats-only options. --merge-log is deprecated, group and member can be comma separated strings.Also note down in the docs: when this command is executed over jmx, the exported logs will be saved as exportedlogs_xxx.zip in the connected locator's working directory. If executed over http, the zip will be saved in specified dir in the user's client machine.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.export.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2384" opendate="2017-1-28 00:00:00" fixdate="2017-2-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene index cannot be created on accessor if there&amp;#39;s persistent region</summary>
      <description>Modify LuceneQueriesPeerPRDUnitTest.java to change to RegionShortcut.PARTITION_PERSISTENT, the test will fail with java.lang.IllegalStateException: Cannot create Gateway Sender "AsyncEventQueue_index#_region" with isPersistentEnabled "false" because another cache has the same Gateway Sender defined with isPersistentEnabled</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.test.LuceneTestUtilities.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesPRBase.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesPeerPROverflowDUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="2386" opendate="2017-1-30 00:00:00" fixdate="2017-2-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unable to launch dunit VMs in nightly builds</summary>
      <description>The recent apache nightly builds for the release branch and develop are seeing lucene tests fail with "java.lang.RuntimeException: Unable to launch dunit VMs". In the logs we see this error message:"&amp;#91;locator&amp;#93; Error: Could not find or load main class org.apache.geode.test.dunit.standalone.ChildVM"We need to figure out what's going on.https://builds.apache.org/job/Geode-release/40/#showFailuresLinkhttps://builds.apache.org/job/Geode-nightly/731/Stacktracejava.lang.RuntimeException: Unable to launch dunit VMs at org.apache.geode.test.dunit.standalone.DUnitLauncher.launchIfNeeded(DUnitLauncher.java:144) at org.apache.geode.test.dunit.internal.JUnit4DistributedTestCase.initializeDistributedTestCase(JUnit4DistributedTestCase.java:131) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) at sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) at sun.reflect.GeneratedMethodAccessor14.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:377) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: java.lang.RuntimeException: VMs did not start up within 120 seconds at org.apache.geode.test.dunit.standalone.DUnitLauncher.launch(DUnitLauncher.java:220) at org.apache.geode.test.dunit.standalone.DUnitLauncher.launchIfNeeded(DUnitLauncher.java:142) ... 34 moreStandard OutputExecuting [/usr/local/asfpackages/java/jdk1.8.0_102/jre/bin/java, -classpath, /home/jenkins/jenkins-slave/workspace/Geode-release/caches/2.14.1/workerMain/gradle-worker.jar, -Dgemfire.DUnitLauncher.RMI_PORT=22832, -Dgemfire.DUnitLauncher.VM_NUM=-2, -Dgemfire.DUnitLauncher.VM_VERSION=000, -DWORKSPACE_DIR=/home/jenkins/jenkins-slave/workspace/Geode-release/geode-lucene/build/distributedTest/., -Dgemfire.enable-network-partition-detection=false, -Dlog-level=info, -Djava.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, -Xrunjdwp:transport=dt_socket,server=y,suspend=n, -XX:+HeapDumpOnOutOfMemoryError, -Xmx512m, -Dgemfire.DEFAULT_MAX_OPLOG_SIZE=10, -Dgemfire.disallowMcastDefaults=true, -Dgemfire.use-ephemeral-ports=true, -ea, -XX:MetaspaceSize=512m, -XX:+PrintGC, -XX:+PrintGCDetails, -XX:+PrintGCTimeStamps, -DdummyArg=true, org.apache.geode.test.dunit.standalone.ChildVM][locator] Listening for transport dt_socket at address: 43952[locator] Heap[locator] PSYoungGen total 153088K, used 7895K [0x00000000f5580000, 0x0000000100000000, 0x0000000100000000)[locator] eden space 131584K, 6% used [0x00000000f5580000,0x00000000f5d35c68,0x00000000fd600000)[locator] from space 21504K, 0% used [0x00000000feb00000,0x00000000feb00000,0x0000000100000000)[locator] to space 21504K, 0% used [0x00000000fd600000,0x00000000fd600000,0x00000000feb00000)[locator] ParOldGen total 349696K, used 0K [0x00000000e0000000, 0x00000000f5580000, 0x00000000f5580000)[locator] object space 349696K, 0% used [0x00000000e0000000,0x00000000e0000000,0x00000000f5580000)[locator] Metaspace used 2703K, capacity 4480K, committed 4480K, reserved 1056768K[locator] class space used 300K, capacity 384K, committed 384K, reserved 1048576KStandard Error[locator] Error: Could not find or load main class org.apache.geode.test.dunit.standalone.ChildVM</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.DistributedRestoreSystemProperties.java</file>
    </fixedFiles>
  </bug>
  <bug id="2393" opendate="2017-1-30 00:00:00" fixdate="2017-1-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add afterSecondary test</summary>
      <description>Add a dunit test for the afterSecondary call</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionListenerDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2403" opendate="2017-1-31 00:00:00" fixdate="2017-2-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI Failure: LuceneIndexCommandsDUnitTest.listIndexWithStatsShouldReturnCorrectStats</summary>
      <description>Failed with b529568dcd15b664a108d2cee5c783cb6b6ef79forg.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsDUnitTest &gt; listIndexWithStatsShouldReturnCorrectStats FAILED java.lang.AssertionError: expected:&lt;[1]&gt; but was:&lt;[2]&gt; at org.junit.Assert.fail(Assert.java:88) at org.junit.Assert.failNotEquals(Assert.java:834) at org.junit.Assert.assertEquals(Assert.java:118) at org.junit.Assert.assertEquals(Assert.java:144) at org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsDUnitTest.listIndexWithStatsShouldReturnCorrectStats(LuceneIndexCommandsDUnitTest.java:151)</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexStatsJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexStats.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.distributed.LuceneFunction.java</file>
    </fixedFiles>
  </bug>
  <bug id="2405" opendate="2017-1-31 00:00:00" fixdate="2017-10-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update docs with changes to export cluster-configuration</summary>
      <description>The gfsh command export cluster-configuration used to have separate parameters --dir=value and --zip-file-name=value. The --dir option has been eliminated, and --zip-file-name can now take either just a file name (e.g. myClusterConfiguration.zip) or a relative or absolute path (e.g. export/myCC.zip or /export/myCC.zip).</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.export.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.persisting.configurations.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.export-import.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2409" opendate="2017-2-1 00:00:00" fixdate="2017-2-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Beautify readme file</summary>
      <description>The github readme is the first introduction many people have to Apache Geode. I think it could be made a bit prettier (e.g. by adding an Apache Geode banner to the top of the readme and adding an Apache License button.) There is a great curated list of examples from which to draw inspiration available at https://github.com/matiassingers/awesome-readme.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">README.md</file>
    </fixedFiles>
  </bug>
  <bug id="2410" opendate="2017-2-1 00:00:00" fixdate="2017-2-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>afterPrimary and afterSecondary event listeners pass through the same critical section</summary>
      <description>afterPrimary and afterSecondary listeners will call the same critical section. They will acquire a Dlock on the bucket and create the index if primary. If they are secondary it will close the writer and release the Dlock. The primary will reattempt to acquire the lock after 5seconds and continue to loop as long as it is still primary.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.test.IndexRepositorySpy.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.RawLuceneRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.PartitionedRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.directory.RegionDirectoryJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.RawLuceneRepositoryManager.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.RawIndexRepositoryFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.PartitionedRepositoryManager.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneQueryImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneBucketListener.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.IndexRepositoryFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.distributed.LuceneFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.directory.RegionDirectory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.AbstractPartitionedRepositoryManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="2414" opendate="2017-2-2 00:00:00" fixdate="2017-3-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Determine a mechanism to stream a zip file from server to locator</summary>
      <description>Our export command will execute a function on servers (one at a time) to build up a zip file of the artifacts for that server. Then, the zip file needs to be sent back to the locator, so that the locator can aggregate together the files from all servers. However, we need to make sure to chunk/stream the data that we send from server to locator so that neither member will run out of memory if the file is very large.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.LocatorDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2416" opendate="2017-2-2 00:00:00" fixdate="2017-3-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Collect together artifacts from individual servers into a single zip file</summary>
      <description>We need a locator to unzip the individual zip files produced by GEODE-2415 and re-zip them together into a single zip file (with a directory for each member, containing the artifacts from that member).</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.CommandOverHttpDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.Member.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.GfshShellConnectionRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ZipUtilsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.MiscellaneousCommandsExportLogsPart4DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.MiscellaneousCommandsExportLogsPart3DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.MiscellaneousCommandsExportLogsPart2DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.MiscellaneousCommandsExportLogsPart1DUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.utils.ZipUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.MergeLogs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.MiscellaneousCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CliUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="2420" opendate="2017-2-2 00:00:00" fixdate="2017-6-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Warn a user if they try to export too much data</summary>
      <description>We should warn a user and prompt for confirmation before trying to perform an `export logs` operation that would result in a file over some threshold. (Logs and stats have the potential to be very large.)</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.util.LogSizerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.util.LogExporterTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.SizeExportLogsTestSuite.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ExportedLogsSizeInfoTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.LogExporter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ExportedLogsSizeInfo.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.SizeExportLogsFunctionCacheTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.LogSizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.InternalDistributedMember.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.export.html.md.erb</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.SizeExportLogsFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsTestSuite.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsFileSizeLimitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.ExportLogController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.SizeExportLogsFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportLogsCommand.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.GfshShellConnectionRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.LogLevelInterceptorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsInterceptorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ExportLogsFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportLogCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="2429" opendate="2017-2-6 00:00:00" fixdate="2017-2-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>NPE in JtaAfterCompletionMessage.operateOnTx()</summary>
      <description>There is a race could cause a NullPointerException:Exception in notify after completion due to java.lang.NullPointerExceptionorg.apache.geode.cache.TransactionException: java.lang.NullPointerException, caused by java.lang.NullPointerException at org.apache.geode.internal.cache.PeerTXStateStub.afterCompletion(PeerTXStateStub.java:206) at org.apache.geode.internal.cache.TXStateProxyImpl.afterCompletion(TXStateProxyImpl.java:615) at org.apache.geode.internal.cache.tier.sockets.command.TXSynchronizationCommand$2.run(TXSynchronizationCommand.java:160) at org.apache.geode.internal.cache.tier.sockets.command.TXSynchronizationCommand.cmdExecute(TXSynchronizationCommand.java:211) at org.apache.geode.internal.cache.tier.sockets.BaseCommand.execute(BaseCommand.java:141) at org.apache.geode.internal.cache.tier.sockets.ServerConnection.doNormalMsg(ServerConnection.java:783) at org.apache.geode.internal.cache.tier.sockets.ServerConnection.doOneMessage(ServerConnection.java:914) at org.apache.geode.internal.cache.tier.sockets.ServerConnection.run(ServerConnection.java:1171) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at org.apache.geode.internal.cache.tier.sockets.AcceptorImpl$1$1.run(AcceptorImpl.java:519) at java.lang.Thread.run(Thread.java:745)Caused by: java.lang.NullPointerException at Remote Member 'rs-TheLynns-client-1(bridgegemfire1_rs-TheLynns-client-1_13760:13760)&lt;ec&gt;&lt;v1&gt;:1025' in org.apache.geode.internal.cache.JtaAfterCompletionMessage.operateOnTx(JtaAfterCompletionMessage.java:94) at Remote Member 'rs-TheLynns-client-1(bridgegemfire1_rs-TheLynns-client-1_13760:13760)&lt;ec&gt;&lt;v1&gt;:1025' in org.apache.geode.internal.cache.TXMessage.process(TXMessage.java:88) at Remote Member 'rs-TheLynns-client-1(bridgegemfire1_rs-TheLynns-client-1_13760:13760)&lt;ec&gt;&lt;v1&gt;:1025' in org.apache.geode.distributed.internal.DistributionMessage.scheduleAction(DistributionMessage.java:376) at Remote Member 'rs-TheLynns-client-1(bridgegemfire1_rs-TheLynns-client-1_13760:13760)&lt;ec&gt;&lt;v1&gt;:1025' in org.apache.geode.distributed.internal.DistributionMessage$1.run(DistributionMessage.java:442) at Remote Member 'rs-TheLynns-client-1(bridgegemfire1_rs-TheLynns-client-1_13760:13760)&lt;ec&gt;&lt;v1&gt;:1025' in java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at Remote Member 'rs-TheLynns-client-1(bridgegemfire1_rs-TheLynns-client-1_13760:13760)&lt;ec&gt;&lt;v1&gt;:1025' in java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at Remote Member 'rs-TheLynns-client-1(bridgegemfire1_rs-TheLynns-client-1_13760:13760)&lt;ec&gt;&lt;v1&gt;:1025' in org.apache.geode.distributed.internal.DistributionManager.runUntilShutdown(DistributionManager.java:621) at Remote Member 'rs-TheLynns-client-1(bridgegemfire1_rs-TheLynns-client-1_13760:13760)&lt;ec&gt;&lt;v1&gt;:1025' in org.apache.geode.distributed.internal.DistributionManager$5$1.run(DistributionManager.java:917) at Remote Member 'rs-TheLynns-client-1(bridgegemfire1_rs-TheLynns-client-1_13760:13760)&lt;ec&gt;&lt;v1&gt;:1025' in java.lang.Thread.run(Thread.java:745) at org.apache.geode.distributed.internal.ReplyException.handleAsUnexpected(ReplyException.java:85) at org.apache.geode.internal.cache.RemoteOperationMessage$RemoteOperationResponse.waitForCacheException(RemoteOperationMessage.java:652) at org.apache.geode.internal.cache.TXRemoteCommitMessage$RemoteCommitResponse.waitForResponse(TXRemoteCommitMessage.java:273) at org.apache.geode.internal.cache.PeerTXStateStub.afterCompletion(PeerTXStateStub.java:200) ... 11 more</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ClientServerTransactionDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.jta.TransactionImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tx.ClientTXStateStub.java</file>
    </fixedFiles>
  </bug>
  <bug id="2431" opendate="2017-2-6 00:00:00" fixdate="2017-2-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade use of Awaitility from 1.7.0 to 2.0.0</summary>
      <description>Upgrade use of Awaitility from 1.7.0 to 2.0.0See: https://github.com/awaitility/awaitility</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.MultiUserDUnitTest.java</file>
      <file type="M">gradle.test.gradle</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.management.WANManagementDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.Simple2CacheServerDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialWANStatsDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialWANConflationDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderQueueDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderEventListenerDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelWANStatsDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderQueueOverflowDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.misc.NewWanAuthenticationDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.concurrent.ConcurrentParallelGatewaySenderOperation.2.DUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.concurrent.ConcurrentParallelGatewaySenderDUnitTest.java</file>
      <file type="M">geode-rebalancer.src.test.java.org.apache.geode.cache.util.AutoBalancerIntegrationJUnitTest.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.rules.ServerRule.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesPeerPRRedundancyDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexMaintenanceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationPersistenceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.management.LuceneManagementDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.security.CQPDXPostProcessorDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.management.internal.cli.commands.ClientCommandsDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.tier.sockets.DurableClientSimpleDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.WaitCriterion.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.Wait.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.VM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.StoppableWaitCriterion.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorServerConfigurationRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.GfshShellConnectionRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.RepeatableRunnable.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.Invoke.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.SystemFailureJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.PDXPostProcessorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.PDXGfshPostProcessorOnRemoteServerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.UniversalMembershipListenerAdapterDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.tools.pulse.PulseDataExportTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.Bug44418JUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.ClientMembershipDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.ClientServerCCEDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.ReconnectDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.asyncqueue.AsyncEventQueueEvictionAndExpirationJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.AutoConnectionSourceImplJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.LocatorLoadBalancingDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.SingleHopClientExecutorSubmitTaskWithExceptionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.cq.dunit.CqQueryTestListener.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.QueryUsingPoolDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.deadlock.GemFireDeadlockDetectorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionManagerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.fd.GMSHealthMonitorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.LocatorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.LocatorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ClientServerTransactionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegRecoveryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.EntryEventImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.FireAndForgetFunctionOnAllServersDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.FixedPRSinglehopDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.GemFireCacheImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.BlockingHARegionQueueJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.HARegionQueueJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.locks.TXLockServiceDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.MultipleOplogsRollingFeatureJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.OplogJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionSingleHopDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistentColocatedPartitionedRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistentPartitionedRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.ShutdownAllDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.SingleHopStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ClientInterestNotifyDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ClientServerForceInvalidateDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.DurableClientQueueSizeDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.HABug36738DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.HAStartupAndFailoverDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.UpdatePropagationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXManagerImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.asyncqueue.AsyncEventQueueValidationsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SSLSocketIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.OutOfOffHeapMemoryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.process.FileProcessControllerIntegrationJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.ScheduledThreadPoolExecutorWithKeepAliveJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatisticsDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatSamplerIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.CacheManagementDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAlterDestroyRegionCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigurationServiceUsingDirDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2432" opendate="2017-2-6 00:00:00" fixdate="2017-2-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Don&amp;#39;t create and upload empty maven artifacts for geode-benchmarks, geode-old-versions</summary>
      <description>The 1.1.0.RC1 maven site shows that we're creating and uploading empty maven artifacts for these sub projects.geode-benchmarks - this project contains only jmh testsgeode-old-versions - this project seems to be completely empty?We should probably disable uploading maven archives for these projects.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-benchmarks.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="2475" opendate="2017-2-13 00:00:00" fixdate="2017-2-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade lucene version to 6.4.1</summary>
      <description>We should probably keep geode up to date with the latest Lucene jars</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.directory.RegionDirectory.java</file>
    </fixedFiles>
  </bug>
  <bug id="2479" opendate="2017-2-13 00:00:00" fixdate="2017-2-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>correct doc reference to a com.gemstone package</summary>
      <description>File geode-docs/developing/data_serialization/auto_serialization.html still has a spurious reference to a com.gemstone package. It should be corrected to identify org.apache.geode instead.At the same time, remove links to the 2 subsections with headers Customizing Serialization with Class Pattern Strings Extending the ReflectionBasedAutoSerializerThese are in the navigation bar, so the links server no purpose.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.data.serialization.auto.serialization.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2489" opendate="2017-2-15 00:00:00" fixdate="2017-3-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Tombstone message with keys are sent to peer partitioned region nodes even though no clinets are registered</summary>
      <description>Tombstone:As part of consistency checking, when an entry is destroyed, the member temporarily retains the entry to detect possible conflicts with operations that have occurred. The retained entry is referred to as a tombstone. When tombstones are removed, tombstone messages are sent to region replicas; and in case of Partitioned Region (PR) messages are also sent to peer region nodes for client events.Currently tombstone messages meant for clients that have all the keys removed are getting sent to peer PR nodes even though no clients are registered on those peers.Based on the number tombstone keys processed (by default 100000) this could be large message sent to peer node which could impact the performance of the system/cluster.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TombstoneService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PRTombstoneMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionAdvisor.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.ClientServerCCEDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RegionAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug id="2490" opendate="2017-2-15 00:00:00" fixdate="2017-3-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Tombstone messages are getting processed inline</summary>
      <description>Tombstone:As part of consistency checking, when an entry is destroyed, the member temporarily retains the entry to detect possible conflicts with operations that have occurred. The retained entry is referred to as a tombstone.When tombstones are removed, tombstone messages are sent to region replicas; and in case of Partitioned Region (PR) messages are also sent to peer region nodes for client events.Currently the tombstone message sent for replicas are getting processed in-line. Based on the number of nodes in the cluster, this may take long time to process, impacting other cache operation that required to be processed in-line.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.ClientServerCCEDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedTombstoneOperation.java</file>
    </fixedFiles>
  </bug>
  <bug id="2497" opendate="2017-2-16 00:00:00" fixdate="2017-2-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>surprise members are never timed out during startup</summary>
      <description>A system was observed to hang during startup when a "surprise member" was added but then never timed out. The system hung waiting for a response to a startup message sent to the surprise member.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionManagerDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.mgr.GMSMembershipManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="2520" opendate="2017-2-22 00:00:00" fixdate="2017-2-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a lucene query test where a bucket is moved while a query is executing</summary>
      <description>The query should handle this scenario and return the correct results.As currently implemented, it should end up retrying the query on the new primary.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesPRBase.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.distributed.WaitUntilFlushedFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.distributed.LuceneFunction.java</file>
    </fixedFiles>
  </bug>
  <bug id="2522" opendate="2017-2-22 00:00:00" fixdate="2017-2-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor Lucene D Unit tests</summary>
      <description>Currently our dunit tests for lucene are organized as a tree heirarchy based on region types. This makes it difficult to add a tests for a specific type of region type as other test files can possibly extend the file we add the test to.Instead we can use parameterized tests and flatten the heirarchy.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.test.LuceneTestUtilities.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesPRBase.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesPeerPRRedundancyDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesPeerPRPersistentDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesPeerPROverflowDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesPeerPRDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesPeerFixedPRDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesClientDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesBase.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationOnFixedPRDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesAccessorBase.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.RebalanceWithRedundancyDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2523" opendate="2017-2-22 00:00:00" fixdate="2017-5-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Collapse RegionTestableTypes combinations into a single enum types</summary>
      <description>Currently, we have pairs of RegionTestableTypes that are used in the LuceneDUnit tests. These pairs are used to determine the datastore and accessor region types. However the pairings are generally 1 to 1. So we should be able to collapse the types into a single enum and remove the parameterized methods. Instead we should then be able to add the enum name into the parameters themselves.So instead of having the following for a test case @Parameters(method = "getListOfClientServerTypes")We could then have @Parameters({"PARTITION", "ETC..."})we can probably use PARTITION and know that the corresponding client type is PARTITION_PROXY. That or we can change the enum to be explicit about the pairing, such as PARTITION_WITH_PARTITION_PROXY.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.RebalanceWithRedundancyDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.RebalanceDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesClientDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationOnFixedPRDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2526" opendate="2017-2-22 00:00:00" fixdate="2017-2-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enhance log statement in StatsArchiveReader</summary>
      <description>Rarely stats files are corrupted due to missing ResourceType info in the gfs file. In those cases the gfs files cannot be opened in VSD tool as the tool throws an error while loading.The log statement in the method StatsArchiveReader.java(readResourceInstanceCreateToken()) prints out only the missing ResourceTypeId which appears to be dynamically created. If the log message can be enhanced to include the resourceName as well, it will be valuable to know the name of ResourceType that is actually missing in the stats file. There is a stats-cleaner utility which takes in a corrupted stats files, name and id of the missing ResourceType in the corrupted file and outputs a new .gfs file by filling in the missing resource info. The new file can then be loaded and analyzed in VSD.For the stats-cleaner utility to be usable one needs to know the actual name of missing resourceType, hence this New feature request.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatArchiveWithMissingResourceTypeRegressionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatArchiveReader.java</file>
    </fixedFiles>
  </bug>
  <bug id="2530" opendate="2017-2-23 00:00:00" fixdate="2017-2-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create DunitTests to tests the effect of dataStores going down while paginating</summary>
      <description>Analyze the effect of dataStores going offline while the pages are being extracted / Lucene results are being extracted.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2538" opendate="2017-2-24 00:00:00" fixdate="2017-3-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene query with values should not invoke cache loader</summary>
      <description>Lucene queries use getAll to fetch pages when returning values.If an entry is destroyed after the query has found the list of keys, but before the query finds the values, the getAll with trigger a cache loader and reload the value. This may be unexpected behavior.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.results.LuceneGetPageFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.results.MapResultCollector.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.results.LuceneGetPageFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.PaginationDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.PageableLuceneQueryResultsImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneQueryImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.PageableLuceneQueryResultsImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneServiceImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneQueryImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="2541" opendate="2017-2-24 00:00:00" fixdate="2017-3-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>NetstatDUnitTest fails with ClassCastException</summary>
      <description>This might be a bug in the error handling code for gfsh or the functions used by MiscellaneousCommands.org.apache.geode.management.internal.cli.NetstatDUnitTest &gt; testConnectToJmxManagerOne FAILED org.junit.ComparisonFailure: [{"errorCode":505,"message":["Could not process command due to GemFire error. Error occurred while executing netstat on [server-1]"]}] expected:&lt;[OK]&gt; but was:&lt;[ERROR]&gt; at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at org.apache.geode.test.dunit.rules.GfshShellConnectionRule.executeAndVerifyCommand(GfshShellConnectionRule.java:168) at org.apache.geode.management.internal.cli.NetstatDUnitTest.testConnectToJmxManagerOne(NetstatDUnitTest.java:82)org.apache.geode.management.internal.cli.NetstatDUnitTest &gt; testConnectToJmxManagerTwo FAILED java.lang.ClassCastException: java.lang.String cannot be cast to org.apache.geode.management.internal.cli.result.CommandResult at org.apache.geode.test.dunit.rules.GfshShellConnectionRule.executeCommand(GfshShellConnectionRule.java:159) at org.apache.geode.test.dunit.rules.GfshShellConnectionRule.executeAndVerifyCommand(GfshShellConnectionRule.java:166) at org.apache.geode.management.internal.cli.NetstatDUnitTest.testConnectToJmxManagerTwo(NetstatDUnitTest.java:88)org.apache.geode.management.internal.cli.NetstatDUnitTest &gt; testConnectToLocator FAILED org.junit.ComparisonFailure: [{"errorCode":520,"message":["Could not find member(s) with Id(s) or name(s): server-1."]}] expected:&lt;[OK]&gt; but was:&lt;[ERROR]&gt; at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at org.apache.geode.test.dunit.rules.GfshShellConnectionRule.executeAndVerifyCommand(GfshShellConnectionRule.java:168) at org.apache.geode.management.internal.cli.NetstatDUnitTest.testConnectToLocator(NetstatDUnitTest.java:76)</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.HeadlessGfshIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.HeadlessGfsh.java</file>
    </fixedFiles>
  </bug>
  <bug id="2547" opendate="2017-2-24 00:00:00" fixdate="2017-3-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Interest registration can cause a CacheLoader to be invoked</summary>
      <description>A simple scenario to reproduce this issue is: configure a Region with a CacheLoader destroy a key (it doesn't matter if the entry exists) register interest in that keyThe CacheLoader will be invoked</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.InterestListDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.BaseCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.OpType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.Operation.java</file>
    </fixedFiles>
  </bug>
  <bug id="2553" opendate="2017-2-27 00:00:00" fixdate="2017-5-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>After deleting and recreating my Lucene index and region, my Lucene query hung.</summary>
      <description>While manually testing in gfsh the process of deleting Lucene indexes, deleting the region, creating new indexes and a new empty region, I was able to hang gfsh while doing a Lucene search on the new region with no data.Here are the steps I used: _________________________ __ / ____/ ______/ ______/ /___/ / / / _/ /__ /_____ / _____ / / /__/ / ____/ _____/ / / / / /_____// /_____// /_/ 1.2.0-SNAPSHOTMonitor and Manage Apache Geodegfsh&gt;start locator --name=locator1 --port=12345gfsh&gt;start server --name=server50505 --server-port=50505 --locators=localhost&amp;#91;12345&amp;#93; --start-rest-api --http-service-port=8080 --http-service-bind-address=localhostgfsh&gt;create lucene index --name=testIndex --region=testRegion --field=__REGION_VALUE_FIELDgfsh&gt;create lucene index --name=testIndex2 --region=testRegion gfsh&gt;list lucene indexes --with-statsgfsh&gt;create region --name=testRegion --type=PARTITION_PERSISTENTgfsh&gt;put --key=1 --value=value1 --region=testRegiongfsh&gt;put --key=2 --value=value2 --region=testRegiongfsh&gt;put --key=3 --value=value3 --region=testRegiongfsh&gt;search lucene --name=testIndex --region=/testRegion --queryStrings=value* --defaultField=__REGION_VALUE_FIELDgfsh&gt;search lucene --name=testIndex2 --region=/testRegion --queryStrings=value* --defaultField=__REGION_VALUE_FIELDgfsh&gt;destroy lucene index --region=/testRegion --name=testIndexgfsh&gt;list lucene indexes --with-statsgfsh&gt;search lucene --name=testIndex2 --region=/testRegion --queryStrings=value* --defaultField=__REGION_VALUE_FIELDgfsh&gt;search lucene --name=testIndex --region=/testRegion --queryStrings=value* --defaultField=__REGION_VALUE_FIELD&lt;NOTE: The above command fails as expected&gt;gfsh&gt;destroy lucene index --region=/testRegiongfsh&gt;list lucene indexes --with-statsgfsh&gt;destroy region --name=/testRegiongfsh&gt;create lucene index --name=testIndex --region=testRegion gfsh&gt;create lucene index --name=testIndex2 --region=testRegion --field=__REGION_VALUE_FIELDgfsh&gt;list lucene indexes --with-statsgfsh&gt;create region --name=testRegion --type=PARTITION_PERSISTENTgfsh&gt;search lucene --name=testIndex --region=/testRegion --queryStrings=value* --defaultField=__REGION_VALUE_FIELDThe gfsh process hangs at this point.I'll attach the stacktrace for the server.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexDestroyDUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.repository.RepositoryManager.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.RawLuceneRepositoryManager.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexForPartitionedRegion.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneBucketListener.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.AbstractPartitionedRepositoryManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="2643" opendate="2017-3-9 00:00:00" fixdate="2017-3-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Combine chunk and file region into a single region</summary>
      <description>When recovering the chunk and file region from a back up, it is possible that we end up recovering buckets from different sources. This possibly leads to missing chunks or extra files, which causes a Corrupt Index Exception to be thrown.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.test.LuceneTestUtilities.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesPersistenceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexMaintenanceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexDestroyDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImplPerformanceTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.PartitionedRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexRecoveryHAIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexForPartitionedRegionTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.filesystem.FileSystemJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.distributed.DistributedScoringJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.directory.RegionDirectoryJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexForPartitionedRegion.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.IndexRepositoryFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.filesystem.FileSystemStats.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.filesystem.FileSystem.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.directory.RegionDirectory.java</file>
    </fixedFiles>
  </bug>
  <bug id="2649" opendate="2017-3-13 00:00:00" fixdate="2017-3-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ExportLogsDUnitTest.testExportWithStartAndEndDateTimeFiltering fails with AssertionError</summary>
      <description>org.apache.geode.management.internal.cli.commands.ExportLogsDUnitTest &gt; testExportWithStartAndEndDateTimeFiltering FAILED java.lang.AssertionError: Expected size:&lt;3&gt; but was:&lt;2&gt; in: &lt;[/tmp/junit8723178147444223944/unzippedLogs/server-1, /tmp/junit8723178147444223944/unzippedLogs/server-2]&gt; at org.apache.geode.management.internal.cli.commands.ExportLogsDUnitTest.verifyZipFileContents(ExportLogsDUnitTest.java:225) at org.apache.geode.management.internal.cli.commands.ExportLogsDUnitTest.testExportWithStartAndEndDateTimeFiltering(ExportLogsDUnitTest.java:155)303 tests completed, 1 failed, 8 skipped</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.util.LogFilterTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.LogFilter.java</file>
    </fixedFiles>
  </bug>
  <bug id="2655" opendate="2017-3-14 00:00:00" fixdate="2017-3-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>DUnit to test Lucene Indexing on mixed objects in a region</summary>
      <description>Testing Lucene indexes when 1. Objects in regions are different but they have same field name.2. Objects are present but they may not have same field names.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.test.LuceneTestUtilities.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2661" opendate="2017-3-15 00:00:00" fixdate="2017-6-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CacheListener gets invoked when an non-existent entry is removed using removeAll</summary>
      <description>PROBLEM: CacheListener.afterDestroy is invoked for an entry which does not exist.FIX: Make entry is not a re-destroyed entry.When a non-existing entry is removed using removeAll from PartitionedRegion (need to verify this on replicated), the CacheListener's aftrerDestroy callback method gets invoked. The afterDestroy should not be invoked for entry which is not present.How to reproduce.region.put (k1, v1)region.put (k2, v2)// Remove all from clientList keys= Arrays.asList("k1", "k2", "k8");region.removeAll(l); The afterDestroy call back will be invoked for k8. On server.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.EventIdOptimizationDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedRemoveAllOperation.java</file>
    </fixedFiles>
  </bug>
  <bug id="2662" opendate="2017-3-15 00:00:00" fixdate="2017-11-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gfsh displays field value on wrong line!</summary>
      <description>scenario:start a locator, a serverwrite a client that stores several records of a given type, using pdx serializationmodify the type in question by adding a fieldwrite one more record to gemfire, populating all fields, including the new fieldinvoke a gfsh query command "select * from /&lt;Region&gt;"the new field value will display always on the first line of the result set, not on the line associated with the object it actually belongs to.example:Customer firstName, lastNamewrite a customer object: John Doenow modify Customer, add telephoneNumber write another customer object:Sam Smith, 512.333.4444now run:query --query="select c from /Customer c"will print:firstName | lastName | telephoneNumber--------- | -------- | ---------------John | Doe | 512.333.4444Sam | Smith | nulleven though the query "select c from /Customer c where c.firstName = 'Sam'" clearly shows the phone number is associated with sam.this bug has existed in gemfire at least since v8 and verified to still exist in latest version 9.0.1</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.ServerStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GemfireDataCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.QueryDataInconsistencyDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.TabularResultData.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DataCommandFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.domain.DataCommandResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DataCommands.java</file>
      <file type="M">geode-core.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="2665" opendate="2017-3-15 00:00:00" fixdate="2017-12-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add gfsh command to destroy async-event-queue</summary>
      <description>Currently, there is only an create async-event-queue command in gfsh, we need the corresponding destroy async-event-queue</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.destroy.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2668" opendate="2017-3-15 00:00:00" fixdate="2017-5-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add gfsh command to destroy gateway receiver</summary>
      <description>Currently, there is a create gateway-receiver command, but no corresponding destroy command.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.DestroyGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.CreateGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.CreateGatewayReceiverCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.CreateAndDestroyGatewaySenderCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.MultiUserDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.CliFunctionResultTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyGatewaySenderCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.ResultBuilder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewaySenderCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateIndexFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateAsyncEventQueueFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CliFunctionResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.GfshCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyGatewaySenderCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateGatewaySenderCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateGatewayReceiverCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommand.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.WANCommandUtils.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CommandAvailabilityIndicator.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.DestroyGatewayReceiverCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyGatewayReceiverCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="2670" opendate="2017-3-15 00:00:00" fixdate="2017-3-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update pulse endpoint interceptors</summary>
      <description>Steps to reproduce:1) in gfsh, start up a locator with a security manager2) in the browser, try to connect to pulse: http://localhost:7070/pulse3) when presented a login page, try a invalid username/password.4) when getting "incorrect password" hint, use the same username, try using the correct password for that user. It would still say "incorrect password".Also, repeat above step 1 and 2, 3), use a correct username and password that only have cluster:read previlage.4) try to access the dataBrowser.html, expect to get denied access, but is still able to access.</description>
      <version>None</version>
      <fixedVersion>1.1.1,1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.ui.PulseAnonymousUserTest.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.rules.WebDriverRule.java</file>
      <file type="M">geode-pulse.src.main.webapp.WEB-INF.spring-security.xml</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.regionView.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.PulseCallbacks.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.pages.DataBrowserQueryHistory.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.pages.DataBrowserQuery.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.pages.DataBrowser.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.MemberDetails.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.common.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.clusterRGraphMembers.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.clusterDetail.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.lib.common.js</file>
      <file type="M">geode-pulse.src.main.webapp.QueryStatistics.html</file>
      <file type="M">geode-pulse.src.main.webapp.MemberDetails.html</file>
      <file type="M">geode-pulse.src.main.webapp.Login.html</file>
      <file type="M">geode-pulse.src.main.webapp.index.html</file>
      <file type="M">geode-pulse.src.main.webapp.DataBrowser.html</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.Repository.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.JMXDataUpdater.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.Cluster.java</file>
    </fixedFiles>
  </bug>
  <bug id="2674" opendate="2017-3-16 00:00:00" fixdate="2017-3-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene index is out of sync with data region due to retried event</summary>
      <description>We're seeing issues where the data in the lucene index does not match the data in a region. Here's what I see happening An accessor starts doing a put The put goes to the current primary Primary distributes the put to the secondary Primary closes it's cache New primary does a destroy on the same entry The accessor retries the put because the old primary closed the cache The retried put is added to the queue, after the destroy. But it is not added to the region, because the region detects that it is a retry. The lucene index applies the put. Now there is an extra entry in the index that is not in the region.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneEventSubstitutionFilter.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneEventListenerJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneEventListener.java</file>
    </fixedFiles>
  </bug>
  <bug id="2679" opendate="2017-3-16 00:00:00" fixdate="2017-3-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene asynchronous disk writes for aeq can lead to data mismatch after compacting</summary>
      <description>Due to the way krf and drf oplogs are created/updated, if the aeq has disk synchronous as false, there is a window of time where a krf is rolled/created with the current region entries, but events that had been removed have not yet been written to the drf.We should probably change the aeq to be disk sync = true. This will alleviate some of the data mismatch where we have potential extra keys after compacting the oplogs.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationPersistenceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="2683" opendate="2017-3-17 00:00:00" fixdate="2017-3-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene query did not match region values</summary>
      <description>There're several root causes. This one is due to the fix in #45782 changed the order to notify primary bucket's gateway before distribute to secondary. The log is at /export/buglogs_bvt/xzhou/lucene/concParRegHA-0209-235804CLIENT vm_1_thr_17_dataStore1_ip-10-32-108-36_11189TASK&amp;#91;1&amp;#93; parReg.ParRegTest.HydraTask_HADoEntryOpsERROR util.TestException: util.TestException: Lucene query did not match region values. missingKeys=[], extraKeys=&amp;#91;Object_13, Object_17, Object_952, Object_550, Object_1876, Object_2732, Object_270, Object_4722, Object_4726, Object_2537&amp;#93;at lucene.LuceneHelper.verifyLuceneIndex(LuceneHelper.java:88)at lucene.LuceneTest.verifyLuceneIndex(LuceneTest.java:128)at lucene.LuceneTest.verifyFromSnapshotOnly(LuceneTest.java:79)at parReg.ParRegTest.verifyFromSnapshot(ParRegTest.java:5638)at parReg.ParRegTest.concVerify(ParRegTest.java:6035)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:497)at util.MethodCoordinator.executeOnce(MethodCoordinator.java:68)at parReg.ParRegTest.HADoEntryOps(ParRegTest.java:2273)at parReg.ParRegTest.HydraTask_HADoEntryOps(ParRegTest.java:1032)at sun.reflect.GeneratedMethodAccessor24.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:497)The root cause is:T1: A putAll (or removeAll. operation arrived at primary bucket at memberAT2: BR.virtualPut() called handleWANEvent() and create shadow keyT3: PutAll will invoke callback (i.e. write into AEQ) before distribution. (Put/Destroy will not have this problem because they distribute before callback)T4: handleSuccessfulBatchDispatch will send ParallelQueueRemovalMessage to the secondary bucket at memberBT5: memberB has dataRegion's secondary bucket, but brq is not created yet (due to rebalance). So in ParallelQueueRemovalMessage.process(), it will only try to remove the event from tempQueue (which does not contain the event, so it will do nothing)T6: Now, finally the BR.virtualPut()'s distribution arrived at user region's secondary bucket at memberB. It will be added into the AEQ (or tempQueue, depends). T7: memberB becomes new primary (due to rebalance) and re-dispatch the shadow key (which has been processed much earlier in memberA). Data mismatch is because the replayed event overrides a newer event.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="2694" opendate="2017-3-20 00:00:00" fixdate="2017-4-20 01:00:00" resolution="Not A Bug">
    <buginformation>
      <summary>RECOVERED_FROM_DISK bit is cleared during gii, but should be restored if the recovered entry and gii entry has the same version tag</summary>
      <description>Currently for all gii entries, product clears the RECOVERED_FROM_DISK bit for DiskEntry. However, if entry comes from gii has the same version as recovered entry, the RECOVERED_FROM_DISK bit should be restored but does not. synchronized (re) { // fixes bug 41409 if (dr.testIsRecoveredAndClear(re)) { wasRecovered = true; if (tmpValue == null) { tmpValue = entry.isLocalInvalid() ? Token.LOCAL_INVALID : Token.INVALID; } // Compare the version stamps, and if they are equal // we can skip adding the entry we receive as part of GII. VersionStamp stamp = re.getVersionStamp(); boolean entriesEqual = stamp != null &amp;&amp; stamp.asVersionTag().equals(tag); // If the received entry and what we have in the cache // actually are equal, keep don't put the received // entry into the cache (this avoids writing a record to disk) if (entriesEqual) { continue; }</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.GIIDeltaDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="27" opendate="2015-5-20 00:00:00" fixdate="2015-3-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Apache Geode POM file(s) are incorrect!</summary>
      <description>This JIRA is a followup to GEODE-23 to note the additional issues that are considered "out-of-scope" for GEODE-23, yet need to be fixed, none-the-less.Specifically, the changes include...1. The &lt;repositories&gt; declarations need to be cleaned up (reduced). Technically, Apache Geode should only require... &lt;repositories&gt; &lt;repository&gt; &lt;id&gt;gemstone-release&lt;/id&gt; &lt;name&gt;GemStone Maven RELEASE Repository&lt;/name&gt; &lt;url&gt;http://dist.gemstone.com/maven/release&lt;/url&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;/snapshots&gt; &lt;/repository&gt; &lt;repository&gt; &lt;id&gt;libs-release&lt;/id&gt; &lt;name&gt;Spring Maven libs-release Repository&lt;/name&gt; &lt;url&gt;http://repo.spring.io/libs-release&lt;/url&gt; &lt;/repository&gt; &lt;/repositories&gt;For instance, the "obscure" jline-1.0.S2-B.jar dependency is "resolvable" from, for instance...http://repo.spring.io/libs-release/net/sourceforge/jline/jline/1.0.S2-B/jline-1.0.S2-B.jarNOTE: by default, and unlike Gradle, Maven searches "Maven Central".2. Add proper "scopes", "optional" settings and "exclusions" to thedependencies declared in the POM.3. Many of the "explicitly" declared dependencies (e.g. spring-beans) needto be removed; Maven will resolve dependencies transitively.As an example, Apache Geode's Maven POM file should be very similar to the Pivotal GemFire Maven POM file, as recently updated and validated for GemFire 8.2 (see attached gemfire-8.2.0.pom file for further details and reference). This is particularly important where Apache Geode and Pivotal GemFire intersect.There maybe other issues with the POM file that need to be included within the "scope" of this bug as well and should be included as such, otherwise this JIRA should not be marked "complete".</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.query.internal.CumulativeNonDistinctResults.java</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-rebalancer.build.gradle</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-junit.build.gradle</file>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat7.build.gradle</file>
      <file type="M">extensions.geode-modules-hibernate.build.gradle</file>
      <file type="M">gradle.dependency-resolution.gradle</file>
      <file type="M">geode-pulse.build.gradle</file>
      <file type="M">geode-web.build.gradle</file>
      <file type="M">build.gradle</file>
      <file type="M">gradle.java.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">gradle.publish.gradle</file>
      <file type="M">geode-core.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="2811" opendate="2017-4-21 00:00:00" fixdate="2017-4-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Thread leak when offheap memory is configured</summary>
      <description>If you are using offheap memory and keep creating and close the cache over and over then you may run out of threads.Each time the cache is initialized it creates a thread pool to handle offheap LRU eviction. The thread pool should be closed when the cache is closed but is not.The can lead to an exception like this:java.lang.OutOfMemoryError: unable to create new native threadThe threads will be cleaned up if the garbage collector has a major enough collection to force java object finalization but that may never happen since offheap is being used.</description>
      <version>1.0.0-incubating,1.1.0,1.1.1</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.GemFireCacheImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.EvictionTestBase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionEvictorTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.lru.HeapEvictor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="2864" opendate="2017-5-2 00:00:00" fixdate="2017-5-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In same cases committing a geode transaction logs a meaningless warning</summary>
      <description>Sometimes a transaction commit will log a warning message that looks like this:[warning 2017/04/27 17:11:15.034 CST GemfireAPIServer2 &lt;ServerConnection on port 40405 Thread 0&gt; tid=0x59] New members for Region: com.gemstone.gemfire.internal.cache.DistributedRegion[path='/exampleRegionRep1';scope=DISTRIBUTED_ACK';dataPolicy=REPLICATE; concurrencyChecksEnabled] orig list: [pivhdsne(GemfireAPIServer1:79899)&lt;v1&gt;:1265] new list: [pivhdsne(GemfireAPIServer4:80172)&lt;v4&gt;:56801, pivhdsne(GemfireAPIServer1:79899)&lt;v1&gt;:1265, pivhdsne(GemfireAPIServer3:80078)&lt;v3&gt;:14603]This warning can be safely ignored.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXCommitMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistTXStateProxyImplOnCoordinator.java</file>
    </fixedFiles>
  </bug>
  <bug id="2865" opendate="2017-5-2 00:00:00" fixdate="2017-5-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>data loss in initial-image replication with multicast</summary>
      <description>During initial image replication ("get initial image") a state-flush operation is performed to ensure that all in-flight operations are applied to the region being replicated prior to replication starting. If multicast is enabled for a region it is currently possible for the state-flush to miss one or more in-flight operations, so that the new repilcate is missing changes that are reflected in the region being replicated.For example, process A sends a multicast put() replication message to process B. Simultaneously process C is replicating the affected region and performs a state-flush. Process A sends a state-stabilization message to process B noting its multicast channel state (NAKACK2 outgoing message counter). Process B receives this and waits for the multicast channel state to show that it has received all of the messages. Process B then sends a state-stabilized message to process C (the new replicate).The state-stabilization algorithm in this case is faulty because it is performed in the waiting-thread pool. The algorithm assumes that it is executing in the serial-executor thread pool so that any messages that happened before it have been applied to the region. This can allow messages to have been received and scheduled for the serial-executor but not be applied to the region before replication begins.The membership manager should be modified to ensure that the serial-executor queue has been flushed before giving the state-flush operation the go-ahead to begin replication.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.FixedPRSinglehopDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessengerJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.DistributedSystemDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.StateFlushOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.mgr.GMSMembershipManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.java</file>
    </fixedFiles>
  </bug>
  <bug id="2880" opendate="2017-5-5 00:00:00" fixdate="2017-5-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>value auto complete for member and file names does not work</summary>
      <description>those command should be auto-completed with the correct values:connect --locator=yystop server --member=xxstart server --property-file=filename</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommands.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.help.HelperUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.help.Helper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.GfshParser.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.converters.RegionPathConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.converters.FilePathStringConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.converters.FilePathConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.converters.DiskStoreNameConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.converters.DirPathConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ShellCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.RegionCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.MiscellaneousCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.LauncherLifecycleCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.IndexCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.GfshHelpCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.FunctionCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DataCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateAlterDestroyRegionCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CommandManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.ConverterHint.java</file>
    </fixedFiles>
  </bug>
  <bug id="2881" opendate="2017-5-5 00:00:00" fixdate="2017-5-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>waitForFlushBeforeExecuteTextSearch instance hits cache closed exception because test is completed</summary>
      <description>Issue:The returnCorrectResultsWhenIndexUpdateHappensIntheMiddleofGII tests creates a test hook which calls waitForFlushBeforeExecuteTextSearch when GII is requested and also the test calls waitForFlushBeforeExecuteTextSearch before executing a Lucene Query. Both calls occur in different threads and if the wait for flush called by the test hook is still executing while the test is completed, the caches are shut down and it gets a CacheClosedExceptionSolution:Make sure the test hook's wait for flush is completed before the test is terminated / before executing a query</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.RebalanceWithRedundancyDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2888" opendate="2017-5-5 00:00:00" fixdate="2017-10-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>user guide: REST API Region Endpoints use &amp;#39;gemfire-api&amp;#39; in their names</summary>
      <description>The name 'gemfire-api' should be replaced by 'geode' in the Region Endpoints section of the manual. See http://geode.apache.org/docs/guide/11/rest_apps/rest_regions.html and its subsections.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.rest.apps.troubleshooting.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.regions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.queries.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.prereqs.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.functions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.examples.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.admin.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.update.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.update.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.update.cas.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.replace.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.multiple.values.for.keys.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.post.if.absent.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.post.execute.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.post.execute.functions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.post.create.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.ping.service.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.head.region.size.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.servers.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.region.key.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.region.keys.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.region.data.for.multiple.keys.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.region.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.regions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.queries.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.functions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.execute.adhoc.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.develop.rest.apps.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.delete.named.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.delete.data.for.multiple.keys.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.delete.data.for.key.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.delete.all.data.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2889" opendate="2017-5-5 00:00:00" fixdate="2017-5-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Generic session module should touch sessions rather than recreate the native session</summary>
      <description>The session module for generic application servers is doing some magic to try to recreate native sessions if they have been idle for too long. This can cause failures if the container expires a session concurrently, because the expiration can happen after we have checked if the session is valid, but before we can read the session creation time./* * This is a massively gross hack. Currently, there is no way to actually update the last * accessed time for a session, so what we do here is once we're into X% of the session's * TTL we grab a new session from the container. * * (inactive * 1000) * (pct / 100) ==&gt; (inactive * 10 * pct) */ if (session.getLastAccessedTime() - session.getCreationTime() &gt; (session.getMaxInactiveInterval() * 10 * percentInactiveTimeTriggerRebuild)) { HttpSession nativeSession = super.getSession(); session.failoverSession(nativeSession); }Instead of this, we should just call getSession on the container and have it update the last accessed time of the native session.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">extensions.geode-modules-session.src.main.java.org.apache.geode.modules.session.filter.SessionCachingFilter.java</file>
    </fixedFiles>
  </bug>
  <bug id="2898" opendate="2017-5-9 00:00:00" fixdate="2017-5-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>A non-responsive SSL client can block a server&amp;#39;s "acceptor" thread</summary>
      <description>During the handoff to the handshake thread pool the accept thread can be blocked in the SSL handshake. The SSL handshake should be moved to the handshake thread pool. The goal is allow the server to reject clients that haven't finished the handshake in the allotted time.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.CacheServerSSLConnectionDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.AcceptorImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="2907" opendate="2017-5-9 00:00:00" fixdate="2017-5-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove @Experimental tag from the Lucene module</summary>
      <description>Issue:Remove the @Experimental tag from the files in the Lucene module to prepare Apache Geode for the next release.Also improve on the javadocs for the interfaces present in the Lucene module.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.PageableLuceneQueryResults.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneServiceProvider.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneService.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneResultStruct.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneQueryProvider.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneQueryFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneQuery.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneIndexFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneIndex.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.repository.IndexResultCollector.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.distributed.CollectorManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="2908" opendate="2017-5-10 00:00:00" fixdate="2017-6-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Swagger UI Tags seems broken in Latest</summary>
      <description>Swagger UI Tags seems broken in Latest</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.QueryAccessController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.PdxBasedCrudController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.FunctionAccessController.java</file>
    </fixedFiles>
  </bug>
  <bug id="2909" opendate="2017-5-11 00:00:00" fixdate="2017-5-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix 2 typos in Lucene integration docs</summary>
      <description>The 2 typos to be fixed: In the Java API Example subsection, RegionShortcut is misspelled as RegionShutcut. For consistency, add a period to the end of the description of gfsh search lucene in the Gfsh API subsection.These typos are minor. Fix them under a CTR (commit then review) process.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.lucene.integration.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2920" opendate="2017-5-15 00:00:00" fixdate="2017-7-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>secure disk-store as a resource</summary>
      <description>Treat DISK as a CLUSTER resource so that administrators can control the ability to manage diskstores/create regions that will write to disk stores.Only a user with CLUSTER:MANAGE:DISK should be able to run the following gfsh commands:create disk-storealter disk-storecompact disk-storedestroy disk-storerevoke missing-disk-storeAnd the following JMX bean methods:DiskStoreMXBean.forceCompactionDiskStoreMXBean.flushDiskStoreMXBean.forceRollDiskStoreMXBean.setDiskUsageCriticalPercentageDiskStoreMXBean.setDiskUsageWarningPercentageDistributedSystemMXBean.revokeMissingDiskStores</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.security.templates.security.json</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ExampleSecurityManagerTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.examples.security.ExampleSecurityManager.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshCommandsSecurityTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2924" opendate="2017-5-15 00:00:00" fixdate="2017-7-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>move resources from DATA to CLUSTER</summary>
      <description>As discussed in this proposal https://cwiki.apache.org/confluence/display/GEODE/Finer+grained+security, the only resource on DATA should be region, we should move:1. pdx to CLUSTER:MANAGE2. import cluster-configuration to CLUSTER:MANAGE3. LockServiceMXBean.becomeLockGrantor to CLUSTER:MANAGE4. list regions to CLUSTER:READ</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneCommandsSecurityDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneCommandsSecurityTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneClientSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.PasswordUtil.java</file>
      <file type="M">geode-docs.managing.security.implementing.authorization.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="2925" opendate="2017-5-15 00:00:00" fixdate="2017-7-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>secure ability to write to disk</summary>
      <description>Only a user with CLUSTER:WRITE:DISK should be able to perform the following actions:1. create persistent regions2. create persustent lucene index3. backup disk-store4. create persistent async-event-queue 5. call DistributedSystemMXBean.backupAllMembers</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.RestSecurityService.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.TestSecurityManager.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.SimpleSecurityManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.TestCommand.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.ResourcePermissionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.ResourcePermission.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.security.ResourceOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.security.MBeanServerWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.security.AccessControlMBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.remote.CommandProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.SecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.LegacySecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.EnabledSecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.DisabledSecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.CustomSecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.examples.security.ExampleSecurityManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="2929" opendate="2017-5-15 00:00:00" fixdate="2017-5-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove superfluous uses of final from classes and methods</summary>
      <description>Use of final keyword on classes and methods should be reserved for unique situations in the User API where we really need final to prevent a User from overriding something in the API.Superfluous usage of final on classes and methods hinders good unit testing by preventing mocking of those classes and methods.Any unnecessary usage of final should be removed to facilitate mocking.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.FetchEntryMessage.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.shell.SimpleHttpOperationInvokerJUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.shell.RestHttpOperationInvokerJUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptorJUnitTest.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.http.converter.CustomMappingJackson2HttpMessageConverter.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.cache.client.internal.locator.wan.LocatorDiscovery.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.ui.PulseTestUtils.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.filesystem.FileSystemJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.xml.LuceneServiceXmlGenerator.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.filesystem.FileOutputStream.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.filesystem.FileInputStream.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.directory.FileIndexInput.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqServiceImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqConflatable.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.cache.internal.JUnit4CacheTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.SecurityTestUtils.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.UniversalMembershipListenerAdapterDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.domain.Stock.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GetCommandOnRegionWithCacheLoaderDuringCacheMissDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.util.IOUtilsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.util.concurrent.cm.LoopHelpers.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.process.signal.AbstractSignalNotificationHandlerJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.LifecycleListenerJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.lang.ThreadUtilsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.lang.ObjectUtilsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.compression.CompressionStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.xmlcache.AbstractXmlParserJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.parallel.ParallelQueueRemovalMessageJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.asyncqueue.AsyncEventListenerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TestDelta.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.StreamingPartitionOperationOneDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.StreamingPartitionOperationManyDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistentPartitionedRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.Bug39356DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.extension.mock.MockRegionExtensionXmlGenerator.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.extension.mock.MockRegionExtension.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.extension.mock.MockCacheExtensionXmlGenerator.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.extension.mock.MockCacheExtension.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.BackwardCompatibilitySerializationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.disttx.DistributedTransactionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.streaming.StreamingOperationOneDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.streaming.StreamingOperationManyDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.auth.AbstractGMSAuthenticatorTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.Bug40751DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.codeAnalysis.decode.cp.CpUtf8.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.SnapshotDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.partitioned.PRQueryDUnitHelper.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.partitioned.PRColocatedEquiJoinDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.ConcurrentIndexInitOnOverflowRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.management.MemoryThresholdsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.ClientServerRegisterInterestsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.ClientMembershipDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.GemFireSecurityException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.string.StringExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.sortedset.ZRangeByLexExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.list.ListExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.hll.Varint.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.hll.HllExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.Coder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.GeodeRedisServer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.ReflectionBasedAutoSerializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.AutoSerializableManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.shell.support.HttpInvocationHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.shell.AbstractHttpOperationInvoker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.io.MultipartFileResourceAdapter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.TableConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.SystemManagementService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.OpenMethod.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.EnumConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.utils.XmlUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.utils.XmlConstants.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.domain.XmlEntity.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.domain.CacheElement.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.CompositeConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.CollectionConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.RegionAttributesDefault.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.Launcher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ExportedLogsSizeInfo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.StatusCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.LauncherLifecycleCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DeployCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.stats.VMStatsMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ArrayConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.AlertDetails.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.CommandService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.VersionedObjectOutput.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.VersionedObjectInput.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.VersionedDataOutputStream.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.VersionedDataInputStream.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.Version.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.TransformUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.concurrent.CustomEntryConcurrentHashMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.CollectionUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.VersionedMsgStreamer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.MsgStreamerList.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.MsgStreamer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.MsgOutputStream.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.MsgDestreamer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.ByteBufferInputStream.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.SystemAdmin.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.stats50.Atomic50StatisticsImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatisticsTypeImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatisticsTypeFactoryImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatisticsImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatisticDescriptorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatArchiveReader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.SimpleStatisticId.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.SampleCollector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.platform.ProcessStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.LocalStatisticsImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.HostStatSampler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.GemFireStatSampler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.GaugeMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.DummyStatisticsImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.CounterMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.AbstractStatisticsFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.shared.OSType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.shared.NativeErrorException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.shared.NativeCallsJNAImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.shared.NativeCalls.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.SetUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.PureJavaMode.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.UnableToControlProcessException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.ProcessUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.ProcessTerminatedAbnormallyException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.ProcessLauncherContext.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.ProcessControllerFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.PidUnavailableException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.NonBlockingProcessStreamReader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.NativeProcessUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.MBeanProcessController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.MBeanInvocationFailedException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.LocalProcessLauncher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.LocalProcessController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.FileAlreadyExistsException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.ControllableProcess.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.ControlFileWatchdog.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.ConnectionFailedException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.ClusterConfigurationNotAvailableException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.BlockingProcessStreamReader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.AttachProcessUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.FreeListManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.DataType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.NullDataOutputStream.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.SecurityManagerLogWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.SecurityLogWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.PureLogWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.log4j.ThreadIdPatternConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.log4j.message.GemFireParameterizedMessageFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.log4j.LogWriterLogger.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.log4j.LogWriterAppender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.log4j.LocalizedMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.log4j.AlertAppender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.GemFireHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.DateFormatter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalInstantiator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalDataSerializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.GfeConsoleReaderFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.ExternalizableDSFID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.concurrent.CompactConcurrentHashSet2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.concurrent.AtomicLong5.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.XmlGeneratorUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.PivotalEntityResolver.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.GeodeEntityResolver.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheXml.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ParallelQueueBatchRemovalMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventCallbackArgument.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.vmotion.VMotionObserverHolder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMLRURegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMCachedDeserializable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.UpdateOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.UpdateAttributesProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.UnsharedImageState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXReservationMgr.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXRemoteCommitMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXFarSideCMTracker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXEntryState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Token.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.UnregisterAllInterest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.Message.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.InterestResultPolicyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.HandShake.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientPingMessageImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientMarkerMessageImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientInstantiatorMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientProxyStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifierStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.BaseCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.InternalClientMembership.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.snapshot.RegionSnapshotServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.SearchLoadAndWriteProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RoleEventImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RemoteRegionOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RemotePutMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RemoteInvalidateMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RemoteGetMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RemoteFetchVersionMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RemoteDestroyMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RemoteContainsKeyValueMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionTTLExpiryTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionIdleExpiryTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionExpiryTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PRQueryProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ProxyRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PreferBytesCachedDeserializable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PoolStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PersistentOplogSet.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.MembershipViewRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.BytesAndBits.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionRegionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RemoveIndexesMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RemoteSizeMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RegionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.QueryMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PutMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PRUpdateEntryVersionMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PRTombstoneMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PRSanityCheckMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PRLoad.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PrimaryRequestMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PartitionedRegionObserverHolder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PartitionedRegionFunctionStreamingMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.ManageBucketMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.ManageBackupBucketMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.InvalidateMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.InterestEventMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.IndexCreationMsg.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.IdentityUpdateMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.IdentityRequestMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.GetMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.FlushMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.FetchKeysMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.FetchEntriesMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.FetchBulkEntriesMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.EndBucketCreationMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.DumpBucketsMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.DumpB2NRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.DumpAllPRConfigMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.DestroyRegionOnDataStoreMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.DestroyMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.CreateMissingBucketsTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.CreateBucketMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.ContainsKeyValueMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.BucketSizeMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.BucketProfileUpdateMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.BecomePrimaryBucketMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.AllBucketProfilesUpdateMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.OverflowOplogSet.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.OpType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Node.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.lru.NewLRUClockHand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.lru.MemLRUCapacityController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.lru.LRUCapacityController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.lru.HeapLRUStatistics.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.locks.TXOriginatorRecoveryProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.locks.TXLockUpdateParticipantsMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.locks.TXLockBatch.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LeafRegionEntry.cpp</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.KeyInfo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InvalidateRegionOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InvalidateOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalRegionArguments.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InlineKeyHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ha.QueueRemovalMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.HARegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.FunctionStreamingOrderedReplyMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.PartitionedRegionFunctionResultSender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.NoResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.MemberFunctionResultSender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.FunctionContextImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.AbstractExecution.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EvictionAttributesImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EntryExpiryTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EntryEventImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EntriesSet.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistTXStateOnCoordinator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistTXRollbackMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistTXPrecommitMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistTXCommitMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedClearOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskWriteAttributesImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DestroyRegionOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DestroyPartitionedRegionMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CreateRegionProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.MemoryThresholds.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.HeapMemoryMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CloseCacheMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ClientServerObserverHolder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ClientRegionEventImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheServerLauncher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheObserverHolder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BytesAndBitsForCompactor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractUpdateOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.ByteBufferOutputStream.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.ByteArrayDataInput.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.statalerts.SingleAttrDefinitionImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.statalerts.NumberThresholdDecoratorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.statalerts.MultiAttrDefinitionImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.statalerts.GaugeThresholdDecoratorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.statalerts.FunctionHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.statalerts.FunctionDecoratorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.statalerts.BaseDecoratorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.VersionInfoResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.VersionInfoRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.TailLogResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.TailLogRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.SubRegionResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.SubRegionRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.StoreSysCfgResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.StoreSysCfgRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.StatListenerMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.SnapshotResultMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RootRegionResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RootRegionRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.ResetHealthStatusResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.ResetHealthStatusRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RemoveHealthListenerResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RemoveHealthListenerRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RemoteRegionAttributes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RemoteGfManagerAgent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RemoteApplicationVM.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RegionStatisticsResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RegionStatisticsRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RegionSizeResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RegionSizeRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RegionResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RegionRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RegionAttributesResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RegionAttributesRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.ObjectNamesResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.ObjectNamesRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.ObjectDetailsResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.ObjectDetailsRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.LicenseInfoResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.LicenseInfoRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.HealthListenerMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FlushAppCacheSnapshotMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FetchSysCfgResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FetchSysCfgRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FetchStatsResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FetchStatsRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FetchResourceAttributesResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FetchResourceAttributesRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FetchHostResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FetchHostRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FetchHealthDiagnosisResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FetchHealthDiagnosisRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FetchDistLockInfoResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FetchDistLockInfoRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.DestroyRegionMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.DestroyEntryMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.CancelStatListenerResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.CancelStatListenerRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.CancellationMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.CacheInfoResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.CacheInfoRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.CacheDisplay.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.CacheConfigResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.CacheConfigRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.BridgeServerResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.BridgeServerRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.AppCacheSnapshotMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.AlertListenerMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.AlertLevelChangeMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.AdminFailureResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.AdminConsoleMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.AdminConsoleDisconnectMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.AddStatListenerResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.AddStatListenerRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.AddHealthListenerResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.AddHealthListenerRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.streaming.StreamingOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.StartupMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ShutdownMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ServerLocation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.SerialQueuedExecutorWithDMStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.SerialAckedMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.RuntimeDistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ReplyMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ReliableReplyProcessor21.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ProductUseLog.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.PooledExecutorWithDMStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.PooledDistributionMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.InternalDistributedMember.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.mgr.LocalViewMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGAddress.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.NonGrantorDestroyedProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.GrantorRequestProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.GrantorInfo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.ElderState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.ElderInitProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockReleaseProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockRecoverGrantorProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockQueryProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DistributedMemberLock.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DeposeGrantorProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.LocatorStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.LocatorLoadSnapshot.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalDistributedSystem.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.HighPriorityAckedMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.FunctionExecutionPooledExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionMessageObserver.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigSnapshot.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.direct.DirectChannel.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.wan.EventSequenceID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.Undefined.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.types.StructTypeImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.types.MapTypeImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.StructSet.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.StructBag.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.SortedStructSet.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.SortedResultSet.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.ResultsSet.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.ResultsCollectionWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.QueryObserverHolder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.HashIndexSet.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.operations.internal.UpdateOnlyMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.DiskWriteAttributesFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.QueueStateImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PutOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PoolImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ConnectionStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ClientMetadataService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.SystemMemberImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.SystemMemberCacheEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.DistributedSystemConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.AdminDistributedSystemImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.AbstractHealthEvaluator.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.support.RegionData.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-old-client-support.src.main.java.com.gemstone.gemfire.cache.execute.FunctionException.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexDestroyDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationPersistenceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexCreationProfileJUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.ha.CQListGIIDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.golden.PassWithExpectedProblemTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.golden.PassJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.golden.FailOutputTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.Wait.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.OverridingGetPropertiesDisconnectsAllDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.DUnitEnv.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.DistributedTestUtils.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.generator.CredentialGenerator.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.generator.AuthzCredentialGenerator.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.DeltaClientPostAuthorizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.DeltaClientAuthorizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClientAuthorizationTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.PdxSerializableDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.web.controllers.WanCommandsControllerJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ShowMissingDiskStoresFunctionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ExportedLogsSizeInfoTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ConfigCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CliCommandTestBase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.LogServiceJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.log4j.LogWriterAppenderJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.log4j.AlertAppenderJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.jta.functional.TestXACacheLoader.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.jta.functional.CacheJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.DataSerializableJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.asyncqueue.AsyncEventQueueValidationsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.AsyncEventQueueTestBase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.versions.TombstoneDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.versions.RegionVersionHolderJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.UnzipUtil.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PartitionMessageTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.ColocatedRegionDetailsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionBucketCreationDistributionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.ConflatableObject.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.GemFireCacheImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegionTestingBase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegionClearJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegCacheXmlJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.Bug39079DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.Bug37377DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.ServerLauncherTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.LocatorLauncherTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.AbstractServerLauncherRemoteIntegrationTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.AbstractLocatorLauncherRemoteIntegrationTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.AbstractLauncherTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.ConcurrentIndexUpdateWithInplaceObjectModFalseDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.functional.PdxOrderByJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.ConnectionPoolFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.TXDistributedDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.TestTransactionListener.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.TestCacheWriter.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.TestCacheLoader.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.TestCacheListener.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.TestCacheCallback.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.RegionTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheSerializableRunnable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.AbstractScanExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.http.ClientHttpRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.domain.Link.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.OpenTypeConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.IdentityConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.json.TypedJson.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.Connection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.SystemTimer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatArchiveWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.SharedLibrary.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.ObjIdConcurrentMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.HeapDataOutputStream.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.DefaultEntityResolver2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheXmlVersion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheTransactionManagerCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.BatchDestroyOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateStub.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXId.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.Part.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientUpdater.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.StateFlushOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RemoteRemoveAllMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RemotePutAllMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RemoteFetchEntryMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ProxyBucketRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PlaceHolderDiskRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.SizeMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RemoveBucketMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RemoveAllPRMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PartitionMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.MoveBucketMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.FetchPartitionDetailsMessage.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestInterfaceJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.RegionSubRegionSnapshot.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.AbstractOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.DiskAccessException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.DynamicRegionFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.EvictionAction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.EvictionAlgorithm.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.EvictionAttributes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.execute.FunctionException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.FixedPartitionAttributes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.MembershipAttributes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.ObjectIntHashMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.CancelCriterion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.CanonicalInstantiator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.compression.SnappyCompressor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.DataSerializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.AbstractLauncher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ReplyProcessor21.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.LocatorLauncher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ServerLauncher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.Instantiator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.AbstractConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractDiskRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractLRURegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractOplogDiskRegionEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.ResourceAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DestroyOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistPeerTXStateStub.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedCacheOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedPutAllOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedRegionFunctionStreamingMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedRemoveAllOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ExpiryTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GridAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InitialImageOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.locks.TXLockIdImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.lru.LRUAlgorithm.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.MemberFunctionStreamingMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.NonLocalRegionEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.BucketBackupMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.DeposePrimaryBucketMessage.java</file>
    </fixedFiles>
  </bug>
  <bug id="2933" opendate="2017-5-17 00:00:00" fixdate="2017-6-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>jmx-manager-hostname-for-clients should be a gfsh option</summary>
      <description>When jmx manager is started in the cloud, the command to start the locator so that one can connect gfsh from outside the cloud is:start locator --name=test --J=-Dgemfire.jmx-manager-hostname-for-clients=&lt;public IP&gt;We should make jmx-manager-hostname-for-clients a top level option to the start server and start locator commands.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserParsingTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserAutoCompletionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.LauncherLifecycleCommandsTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.LauncherLifecycleCommands.java</file>
    </fixedFiles>
  </bug>
  <bug id="2937" opendate="2017-5-18 00:00:00" fixdate="2017-5-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Restore behavior of REMOVE_FROM_QUEUE_ON_EXCEPTION system property</summary>
      <description>In a refactoring effort last year, the system property REMOVE_FROM_QUEUE_ON_EXCEPTION was removed as it was unknown that it was actually being used. There are no tests that actually fail when the code is removed but it is a behavior that is definitely wanted by certain users and may be defaulted to in the future.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventRemoteDispatcher.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.cache.client.internal.SenderProxy.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.cache.client.internal.GatewaySenderBatchOp.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.AsyncEventQueueTestBase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventDispatcher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventCallbackDispatcher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySender.java</file>
    </fixedFiles>
  </bug>
  <bug id="2939" opendate="2017-5-18 00:00:00" fixdate="2017-5-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Initiate bucket event tracker and get GII from different source could lead to bucket copies inconsistence</summary>
      <description>Problem: Inconsistent bucket copy when a bucket region is created due to primary bucket event event tracker out of sequence.Fix: Ensure event tracker is initialized after create region.When a bucket region is created, it send CreateRegionMessage to all nodes hosting the bucket data. It initiates its event tracker from the first one replied. In one case, it copies event tracker states from the node with primary bucket, which is processing putAll operation and already applied a few entry operations (so the newer seqNo is recorded for the thread performing the putAll). However, it gets initial image from another node &amp;#8211; which does not have the entry operations yet (as putAll op is not yet being distributed to secondary yet.)The newly created region would receive all the putAll operations from the primary when the primary distributes the putAll operations to secondary copies. In the node with newly created region, some of the events would not be applied due to hasSeenEvent method call (up to initiated last seqNo for the said thread). This leads to bucket inconsistence among the redundant copies.Please note this issue would not occur if there is only one redundant copy.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.EventTrackerDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InitialImageOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EventTracker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CreateRegionProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheDistributionAdvisee.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="2941" opendate="2017-5-18 00:00:00" fixdate="2017-5-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse documentation is outdated</summary>
      <description>the pulse documentation:http://geode.apache.org/docs/guide/11/tools_modules/pulse/quickstart.html#topic_523F6DE33FE54307BBE8F83BB7D9355Dis no longer accurate anymore.1. jmxUsername and jmxpassword no long applies2. the logging configurations has changed too.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.redis.adapter.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.pulse.system.requirements.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.pulse.quickstart.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.pulse.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.lucene.integration.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.book.intro.html.md.erb</file>
      <file type="M">geode-docs.managing.management.mm.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.management.management.system.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.management.jmx.manager.node.html.md.erb</file>
      <file type="M">geode-docs.getting.started.15.minute.quickstart.gfsh.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.persist.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.tools.modules.pulse.pulse-hosted.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.pulse.pulse-auth.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="3000" opendate="2017-5-26 00:00:00" fixdate="2017-6-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor Admin rest request to send credentials in Authentication header and use spring security to authenticate it.</summary>
      <description>Currently, admin rest put security-password in the header and Jetty would log it in debug level, we should send the authentication information in the authentication header so that Jetty won't log them, and have the server side be able to authenticate that way.Currently the way these rest requests are sent are different for different request. We need to uniform that first before we can do this refactoring.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.resources.log4j2.xml</file>
    </fixedFiles>
  </bug>
  <bug id="3002" opendate="2017-5-26 00:00:00" fixdate="2017-5-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve doc of (Lucene) __REGION_VALUE_FIELD</summary>
      <description>The original description of __REGION_VALUE_FIELD is not quite right. In addition, there is an example gfsh command using this value that is wrong. It is in the gfsh create lucene index command reference page.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.lucene.integration.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.search.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="3011" opendate="2017-5-30 00:00:00" fixdate="2017-5-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh example to do a Lucene query is incorrect</summary>
      <description>In the Lucene integration section of the docs is the following incorrect gfsh command example:gfsh&gt; lucene search --regionName=/orders -queryStrings="John*" --defaultField=field1Instead it should be:gfsh&gt; search lucene --name=indexName --region=/orders --queryStrings="John*" --defaultField=customer --limit=100</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.lucene.integration.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="3041" opendate="2017-6-6 00:00:00" fixdate="2017-6-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: DistributedMemberDUnitTest.testGroupsInAllVMs fails intermittently</summary>
      <description>This test is failing due to a ForcedDisconnection caused by a flaw in handling of duplicate member names. The test testTwoMembersSameName creates a member in vm2 that has a member name that conflicts with the one in vm0. Vm2 causes the membership manager to perform an unclean shutdown, which makes it appear to crash. The crash isn't resolved until testGroupsInAllVMs, or perhaps even a different test, tries to join using the DUnit locator and it causes the new member to fail.Name clashes shouldn't cause an unclean shutdown in the membership manager. They should cause a normal shutdown.[fatal 2017/06/06 09:38:51.139 PDT &lt;unicast receiver,Bruces-MacBook-Pro-8712&gt; tid=156] Membership service failure: Exiting due to possible network partition event due to loss of 1 cache processes: [192.168.1.49(name0:13710)&lt;v13&gt;:32772]org.apache.geode.ForcedDisconnectException: Exiting due to possible network partition event due to loss of 1 cache processes: [192.168.1.49(name0:13710)&lt;v13&gt;:32772] at org.apache.geode.distributed.internal.membership.gms.mgr.GMSMembershipManager.forceDisconnect(GMSMembershipManager.java:2539) at org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeave.forceDisconnect(GMSJoinLeave.java:1002) at org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeave.installView(GMSJoinLeave.java:1369) at org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeave.processViewMessage(GMSJoinLeave.java:991) at org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeave.processMessage(GMSJoinLeave.java:1693) at org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger$JGroupsReceiver.receive(JGroupsMessenger.java:1304) at org.jgroups.JChannel.invokeCallback(JChannel.java:816) at org.jgroups.JChannel.up(JChannel.java:741) at org.jgroups.stack.ProtocolStack.up(ProtocolStack.java:1030) at org.jgroups.protocols.FRAG2.up(FRAG2.java:165) at org.jgroups.protocols.FlowControl.up(FlowControl.java:390) at org.jgroups.protocols.UNICAST3.deliverMessage(UNICAST3.java:1070) at org.jgroups.protocols.UNICAST3.handleDataReceived(UNICAST3.java:785) at org.jgroups.protocols.UNICAST3.up(UNICAST3.java:426) at org.apache.geode.distributed.internal.membership.gms.messenger.StatRecorder.up(StatRecorder.java:74) at org.apache.geode.distributed.internal.membership.gms.messenger.AddressManager.up(AddressManager.java:72) at org.jgroups.protocols.TP.passMessageUp(TP.java:1601) at org.jgroups.protocols.TP$SingleMessageHandler.run(TP.java:1817) at org.jgroups.util.DirectExecutor.execute(DirectExecutor.java:10) at org.jgroups.protocols.TP.handleSingleMessage(TP.java:1729) at org.jgroups.protocols.TP.receive(TP.java:1654) at org.apache.geode.distributed.internal.membership.gms.messenger.Transport.receive(Transport.java:160) at org.jgroups.protocols.UDP$PacketReceiver.run(UDP.java:701) at java.lang.Thread.run(Thread.java:748)</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionChannel.java</file>
    </fixedFiles>
  </bug>
  <bug id="3042" opendate="2017-6-6 00:00:00" fixdate="2017-6-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document GEODE-3027: co-locate two keys on a put</summary>
      <description>Document that there now is a way to put co-locate two keys represented in a delimited string.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.using.custom.partition.resolvers.html.md.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.custom.partitioning.and.data.colocation.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="3044" opendate="2017-6-6 00:00:00" fixdate="2017-6-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Manual: Update Swagger example and screen shots</summary>
      <description>Screen captures in the section "Using the Swagger UI to Browse REST APIs" show an old GemFire implementation - need updating to match current appearance.Command lines that generate the screen shots are also out-of-date; they work, but they generate warnings. These should be cleaned up, as well.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.images.swagger.v1.response.png</file>
      <file type="M">geode-docs.images.swagger.v1.png</file>
      <file type="M">geode-docs.images.swagger.post.region.response.png</file>
      <file type="M">geode-docs.images.swagger.post.region.png</file>
      <file type="M">geode-docs.rest.apps.using.swagger.html.md.erb</file>
      <file type="M">geode-docs.images.swagger.region.endpoints.png</file>
      <file type="M">geode-docs.images.swagger.home.png</file>
    </fixedFiles>
  </bug>
  <bug id="3080" opendate="2017-6-14 00:00:00" fixdate="2017-9-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protocol connection runs in selector thread</summary>
      <description>As a user of the new protocol, I need it to function whether or not I explicitly set max connections.Ensure Path #2 is functional &amp;#8211; isSelector is true.Make NewClientServerConnection able to run when its acceptor isSelector(). This means checking isSelector() in the run() method and handling a single message and returning, rather than running a long-running thread loop.(Path 1 &amp;#8211; isSelector() is false &amp;#8211; is covered in GEODE-3078.)</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.acceptance.CacheMaxConnectionJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="3083" opendate="2017-6-14 00:00:00" fixdate="2017-9-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>New protocol should record server statistics</summary>
      <description>As a user of the new protocol, I need to be able to review accurate stats related to new protocol clients as well as any existing stats impacted by new clients (e.g., total client counts).Implement statistics for the new protocol, creating a new tree for new-protocol-specific stats, but also updating relevant existing stats: client connections/threads time to serve client requests other stats impacted by new protocol clients that would be less helpful to end users/admins if new protocol neglected to increment/decrementSpecifically, have a look at ServerConnection and see where it calls into its stats object. If these calls are applicable to us (at least some of them are), make the same calls.At a minimum, implement for new protocol clients: Connection counts Connection Starts/Stops Bytes received/sent Failed auth requestsDocument the statistics being captured for inclusion in the wiki.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.RoundTripLocatorConnectionDUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.RoundTripCacheConnectionJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.ProtobufStreamProcessorTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.RemoveRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.PutRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.PutAllRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.GetRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.GetRegionRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.GetRegionNamesRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.GetAllRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.ProtobufStreamProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.ProtobufOpsProcessor.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ServerConnectionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ServerConnectionFactoryTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.GenericProtocolServerConnectionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.MessageExecutionContext.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.GenericProtocolServerConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientProtocolMessageHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheServerStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.AcceptorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.Acceptor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpServer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalLocator.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.acceptance.LocatorConnectionDUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.acceptance.CacheConnectionJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.statistics.ProtobufClientStatisticsImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerConnectionFactory.java</file>
    </fixedFiles>
  </bug>
  <bug id="3090" opendate="2017-6-15 00:00:00" fixdate="2017-7-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh help typo</summary>
      <description>gfsh&gt; help connect...use-ssl Whether to use SSL for communication with Locator and/or JMX Manager. If set to "true", will also read "gfsecurity.properties". SSL Options take precedence over proeprties file."proeprties" should be "properties"</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.test.java.org.apache.geode.management.internal.cli.commands.ClientCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionAlterFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewaySenderCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DataCommandFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateAsyncEventQueueFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateAlterDestroyRegionCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ClientCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CliUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="3121" opendate="2017-6-23 00:00:00" fixdate="2017-7-23 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Enable SSL on new protocol</summary>
      <description>In order to secure data in transit for the new protocol, we need to implement SSL. Enable SSL on new protocol using existing SSL implementation and verify it functions as expected.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.RoundTripCacheConnectionJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="3126" opendate="2017-6-26 00:00:00" fixdate="2017-2-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add ad hoc query execution to new protocol</summary>
      <description>As a Geode developer using the new client/server protocol, I need to be able to send queries and receive expected results.Add ad hoc query execution to new protocol.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-experimental-driver.src.test.java.org.apache.geode.experimental.driver.RegionIntegrationTest.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufDriver.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufChannel.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.Driver.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.serialization.exception.EncodingException.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.serialization.exception.DecodingException.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.registry.ProtobufOperationContextRegistry.java</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.region.API.proto</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.clientProtocol.proto</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.basicTypes.proto</file>
    </fixedFiles>
  </bug>
  <bug id="3127" opendate="2017-6-26 00:00:00" fixdate="2017-2-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add function execution to new protocol</summary>
      <description>As a Geode developer using the new client/server protocol, I need the ability to execute server-side functions, a key feature of Geode.Add parameter-less function execution to the new protocol, verifying users can execute functions and receive expected results. (Functions with parameters are covered in GEODE-3138)</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.TestExecutionContext.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.OperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetServerOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionNamesRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ServerMessageExecutionContext.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.registry.ProtobufOperationContextRegistry.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufSerializationService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufProtocolService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.MessageExecutionContext.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.LocatorMessageExecutionContext.java</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.clientProtocol.proto</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.client.protocol.ClientProtocolService.java</file>
    </fixedFiles>
  </bug>
  <bug id="3128" opendate="2017-6-26 00:00:00" fixdate="2017-7-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Tuning batch size for less index overhead</summary>
      <description>Tuning the batch size set when creating the AEQFactory from 100 to 1000. This significantly decreases the per entry overhead of indexes.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.MixedObjectIndexDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImplPerformanceTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.filesystem.FileSystem.java</file>
    </fixedFiles>
  </bug>
  <bug id="3129" opendate="2017-6-26 00:00:00" fixdate="2017-7-26 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Add error messages for new protocol clients</summary>
      <description>Users of new protocol need helpful messages when the protocol encounters an error. Using feedback from initial testers of the protocol, add helpful error messages to existing operations, setting precedent for operations still to come.The user should be able to distinguish between: Programming mistakes on part of client Retry-able errors Server-side errors (e.g., misconfiguration, OOM, cluster issues, etc)Error messages should not include sensitive data (e.g., keys or values).</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.serialization.codec.BinaryFormatJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.serializer.ProtobufProtocolSerializerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.RoundTripCacheConnectionJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.ProtobufOpsProcessorJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.PutRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.GetRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.GetRegionRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.EncodingTypeToSerializationTypeTranslatorJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.operations.registry.OperationsHandlerRegistryJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.MessageUtil.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.IntegrationJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.proto.region.API.proto</file>
      <file type="M">geode-protobuf.src.main.proto.clientProtocol.proto</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.codec.IntCodec.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.serializer.ProtobufProtocolSerializer.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.ProtobufUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.ProtobufStreamProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.ProtobufSerializationService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.ProtobufOpsProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetRegionsRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.EncodingTypeTranslator.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.operations.registry.OperationsHandlerRegistry.java</file>
    </fixedFiles>
  </bug>
  <bug id="313" opendate="2015-9-8 00:00:00" fixdate="2015-2-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis adapter needs better exception handling for region initialization</summary>
      <description>When initializing sorted sets, some exception handling is done wrong and some is missing. Also, unnecessary logging that might make tests fail needs to be removed</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.RegionProvider.java</file>
    </fixedFiles>
  </bug>
  <bug id="3152" opendate="2017-6-29 00:00:00" fixdate="2017-6-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>A client connecting to a server with one version creates an HARegion name different from the one created in another version</summary>
      <description>What is happening is:904 client -&gt; 91 server results in an HARegion name containing the version like:Initializing region _gfe_non_durable_client_with_id_192.168.2.4(client:98892:loner):57839:927197eb:client(version:GFE 9.0)_2_queue904 client -&gt; 904 server or 91 client -&gt; 91 server results in an HARegion name without the version like:Initializing region _gfe_non_durable_client_with_id_192.168.2.4(client:98892:loner):57839:927197eb:client_2_queueThis causes secondary queue removal and GII to fail.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.rollingupgrade.RollingUpgrade2DUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientProxyMembershipID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.InternalDistributedMember.java</file>
    </fixedFiles>
  </bug>
  <bug id="3153" opendate="2017-6-29 00:00:00" fixdate="2017-7-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Client receives duplicate events during rolling upgrade</summary>
      <description>During a rolling upgrade from 1.1 to 1.2, we see 1.1 client receive duplicate events.This is the scenario1) 1.1 peer is doing puts2) 1.1 client has registered interest, and is connected to a 1.1 server3) 1.1 server is upgraded to a 1.2 server4) The client may receive some of the events that are being put twice.Looking further, it appears that when a put goes through a 1.1 server to a 1.1 client, the member id includes a 17 byte unique id as the last part of the serialized data. When the put goes through a 1.2 server, those 17 bytes become zeros.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EventID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.InternalDistributedMember.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ha.EventIdOptimizationJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="3157" opendate="2017-6-30 00:00:00" fixdate="2017-5-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Application servers need shiro and commons lang when running geode session modules</summary>
      <description>Our testing of the session modules with GEODE-2901 discovered that the session modules now require the user to add shiro and commons-lang to the classpath of their application server in order for the session module to work.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">extensions.geode-modules-assembly.release.session.bin.modify.war</file>
      <file type="M">extensions.geode-modules-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="3166" opendate="2017-7-5 00:00:00" fixdate="2017-2-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AuthInitize interface non-deprecated api is never called</summary>
      <description>this interface default Properties getCredentials(Properties securityProps) is never used by the product.The older interface is used because we still need to support the old authenticator, therefore we can't update the product to use the new interface just yet. Need to remove the deprecated annotation and this interface method.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.AuthInitialize.java</file>
    </fixedFiles>
  </bug>
  <bug id="3169" opendate="2017-7-6 00:00:00" fixdate="2017-8-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Decouple implementation of backups from DiskStore</summary>
      <description>As a first step towards enabling expanded backup options (such pushing backups to cloud storage), the logic for doing so needs to be decoupled from DiskStore. This will allow for the eventual modular design of the backup system and make future improvement easier to implement and test.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.beans.DistributedSystemBridgeJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.persistence.BackupPrepareAndFinishMsgDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.IncrementalBackupDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BackupJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BackupDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.MemberMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.BackupManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Oplog.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreFactoryImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreBackup.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.PrepareBackupRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.FinishBackupRequest.java</file>
    </fixedFiles>
  </bug>
  <bug id="3179" opendate="2017-7-10 00:00:00" fixdate="2017-7-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>The verifyBundledJarsHaveNotChanged test is failing due to slf4j-jdk</summary>
      <description>Test is failing with:Errorjava.lang.AssertionError: The bundled jars have changed. Please make sureyou update the licence and noticeas described inhttps://cwiki.apache.org/confluence/display/GEODE/License+Guide+for+ContributorsWhen fixed, copy geode-assembly/build/test/bundled_jars.txtto src/test/resources/expected_jars.txtRemoved Jars--------------Added Jars--------------slf4j-jdkStacktracejava.lang.AssertionError: The bundled jars have changed. Please make sureyou update the licence and noticeas described inhttps://cwiki.apache.org/confluence/display/GEODE/License+Guide+for+ContributorsWhen fixed, copy geode-assembly/build/test/bundled_jars.txtto src/test/resources/expected_jars.txtRemoved Jars--------------Added Jars--------------slf4j-jdkat org.junit.Assert.fail(Assert.java:88)at org.junit.Assert.assertTrue(Assert.java:41)atorg.apache.geode.BundledJarsJUnitTest.verifyBundledJarsHaveNotChanged(BundledJarsJUnitTest.java:81)Likely due to Cargo session testing added in GEODE-2901.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.session.tests.ContainerInstall.java</file>
    </fixedFiles>
  </bug>
  <bug id="3181" opendate="2017-7-11 00:00:00" fixdate="2017-7-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add WAN backward compatibility unit tests</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.cache.wan.WANRollingUpgradeDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.cache.internal.JUnit4CacheTestCase.java</file>
    </fixedFiles>
  </bug>
  <bug id="3194" opendate="2017-7-12 00:00:00" fixdate="2017-7-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cleanup disk store on failed recovery</summary>
      <description>When recovering from persistent disk stores, it is possible to have the process fail exceptionally (for example, a failure deserializing the data from the disk store). Currently, however, this is not handled in a way that cleans up the partially setup disk store, but should be modified to do so.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskStoreFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreFactoryImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="3198" opendate="2017-7-12 00:00:00" fixdate="2017-7-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Do not prevent bucket creation if local-max-memory is exceeded</summary>
      <description>In creating a new bucket, if local-max-memory is exceeded on all members, the bucket cannot be created until a member goes below that memory threshold (which may be never, in which case the attempt to create the bucket loops forever). Currently, if all members have indicated they should not make the bucket, the request is again made, but with a "force" flag set to true. This allows overriding the fact that the member believes it already hosts as many buckets as it should for balance, but does not override the local-max-memory check. We should therefore have the force flag also override the memory threshold check, thus allowing bucket creation to proceed, but still attempting to honor not adding it to a member already at or above its target memory limit.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionLocalMaxMemoryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionDataStoreJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
    </fixedFiles>
  </bug>
  <bug id="3214" opendate="2017-7-17 00:00:00" fixdate="2017-7-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove support for multistep Gfsh commands</summary>
      <description>The implementation of Multistep commands is needlessly complex and buggy. After GEODE-3217, we should be able to remove the notion of multistep commands entirely.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.http.ClientHttpRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.GfshExecutionStrategy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.remote.RemoteExecutionStrategy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.multistep.MultiStepCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.multistep.CLIStepExecption.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.multistep.CLIStep.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.multistep.CLIRemoteStep.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.multistep.CLIMultiStepHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
    </fixedFiles>
  </bug>
  <bug id="3272" opendate="2017-7-19 00:00:00" fixdate="2017-7-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Correct docs: location of .gfsh.history file</summary>
      <description>The .gfsh.history file goes into a directory named .geode. There is an instance in the manual (file tools_modules/gfsh/configuring_gfsh.html) that still says the directory is named .gemfire.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.configuring.gfsh.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="3273" opendate="2017-7-19 00:00:00" fixdate="2017-9-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Handle exceptions from a user&amp;#39;s LuceneSerializer</summary>
      <description>If the user's LuceneSerializer throws an Exception, then we will log an error and move on to the next entry to the next entry in the queue. We will increment a stat to keep track of the items that have failed to be indexed.Acceptance:An exception from a LuceneSerializer does not prevent later updates from being added to the lucene index. Log message and stat are present after the exception.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexMaintenanceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexStatsJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexStats.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="328" opendate="2015-9-11 00:00:00" fixdate="2015-11-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Define Experimental annotation in gemfire-common</summary>
      <description>We need to add an @Experimental annotation for annotating APIs that are not ready to be locked in for production usage or future backwards compatibility. These APIs might be removed or changed in future releases.See org.apache.spark.annotation.Experimental for an example outside of Geode.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
      <file type="M">gemfire-web.build.gradle</file>
      <file type="M">gemfire-rebalancer.build.gradle</file>
      <file type="M">gemfire-core.build.gradle</file>
      <file type="M">gemfire-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="3283" opendate="2017-7-21 00:00:00" fixdate="2017-9-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add gfsh option on export/import to parallelize a snapshot for PRs</summary>
      <description>This is related to another ticket to improve snapshot export time</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.SnapshotByteArrayDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.ParallelSnapshotDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ImportDataFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ExportDataFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ImportDataCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportDataCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.snapshot.RegionSnapshotServiceImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="3284" opendate="2017-7-21 00:00:00" fixdate="2017-8-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>New flow: getAvailableServers</summary>
      <description>As a Geode client user, I'd like to be able to know all available servers in a grid in order to support operations targeting any available server.Create op handler for getAvailableServers message, following proto message definition.Client should be able to complete getAvailableServers, receiving all servers available in grid.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.main.proto.server.API.proto</file>
      <file type="M">geode-protobuf.src.main.proto.region.API.proto</file>
      <file type="M">geode-protobuf.src.main.proto.clientProtocol.proto</file>
      <file type="M">geode-protobuf.src.main.proto.basicTypes.proto</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.utilities.ProtobufUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.utilities.ProtobufRequestUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.registry.OperationContextRegistry.java</file>
    </fixedFiles>
  </bug>
  <bug id="3291" opendate="2017-7-24 00:00:00" fixdate="2017-7-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add soundex analyzer to lucene search</summary>
      <description>Need to pack the soundex analyzer's jar file into geode and write a unit test.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesIntegrationTest.java</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-assembly.src.test.resources.expected.jars.txt</file>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="3299" opendate="2017-7-25 00:00:00" fixdate="2017-11-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gfsh functions should acquire Cache from FunctionContext</summary>
      <description>Gfsh functions in geode-core org.apache.geode.management.internal.cli.functions currently acquire a reference to the Cache in several ways including from a singleton in CacheFactory which is prone to deadlocking. They should be modified to uniformly acquire the Cache from FunctionContext instead.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ListIndexFunctionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ListDiskStoresFunctionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.Geode3544JUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.DataCommandFunctionWithPDXJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.DataCommandFunctionJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListIndexFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListDiskStoresFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.FetchRegionAttributesFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DataCommandFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.RemoveCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.PutCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.GetCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.result.CommandResultTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ShowMissingDiskStoresFunctionJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ShowMissingDiskStoresFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GetRegionDescriptionFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.FunctionContextImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="3300" opendate="2017-7-25 00:00:00" fixdate="2017-8-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Complete and expose parallel snapshots feature</summary>
      <description>The parallel snapshots feature was never fully completed and exposed in the API for snapshots. This is the first step in allowing users to make use of this feature</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.test.java.org.apache.geode.cache.snapshot.ClientSnapshotDUnitTest.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.snapshot.GFSnapshotDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.WanSnapshotJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.SnapshotPerformanceDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.SnapshotDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.SnapshotByteArrayDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.RegionSnapshotJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.ParallelSnapshotDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.CacheSnapshotJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.snapshot.SnapshotOptionsImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.snapshot.RegionSnapshotServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.snapshot.CacheSnapshotServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.snapshot.SnapshotOptions.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.snapshot.RegionSnapshotService.java</file>
    </fixedFiles>
  </bug>
  <bug id="3402" opendate="2017-8-4 00:00:00" fixdate="2017-8-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Mark protocol as experimental</summary>
      <description>Mark new protocol as experimental.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.main.proto.server.API.proto</file>
      <file type="M">geode-protobuf.src.main.proto.region.API.proto</file>
      <file type="M">geode-protobuf.src.main.proto.clientProtocol.proto</file>
      <file type="M">geode-protobuf.src.main.proto.basicTypes.proto</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.TypeCodec.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.SerializationType.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.SerializationService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.registry.SerializationCodecRegistry.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.registry.exception.CodecNotRegisteredForTypeException.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.registry.exception.CodecAlreadyRegisteredForTypeException.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.exception.UnsupportedEncodingTypeException.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.codec.StringCodec.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.codec.ShortCodec.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.codec.LongCodec.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.codec.JSONCodec.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.codec.IntCodec.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.codec.FloatCodec.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.codec.DoubleCodec.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.codec.ByteCodec.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.codec.BooleanCodec.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.serialization.codec.BinaryCodec.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.serializer.ProtocolSerializer.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.utilities.ProtobufUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.utilities.ProtobufResponseUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.utilities.ProtobufRequestUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.utilities.ProtobufPrimitiveTypes.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.utilities.exception.UnknownProtobufPrimitiveType.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.Success.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.serializer.ProtobufProtocolSerializer.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.Result.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.registry.OperationContextRegistry.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.ProtobufStreamProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.ProtobufSerializationService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.ProtobufOpsProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetRegionRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetRegionNamesRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetAvailableServersOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.OperationContext.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.Failure.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.EncodingTypeTranslator.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.operations.OperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.exception.InvalidProtocolMessageException.java</file>
    </fixedFiles>
  </bug>
  <bug id="3403" opendate="2017-8-4 00:00:00" fixdate="2017-8-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modify rolling upgrade test configuration for 1.2.x release</summary>
      <description>Modify rolling upgrade test configuration for 1.2.x release.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.Version.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializer.java</file>
    </fixedFiles>
  </bug>
  <bug id="3406" opendate="2017-8-7 00:00:00" fixdate="2017-8-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enable new flow for protocol on locators</summary>
      <description>Enable magic byte and new flow for new protocol on locators.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.GetAvailableServersDUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.ProtocolErrorCode.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ServerLocator.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.RoundTripLocatorConnectionJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.ProtobufStreamProcessorTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.RemoveRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.PutRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.PutAllRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.GetRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.GetRegionRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.GetRegionNamesRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.GetAvailableServersOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.protobuf.operations.GetAllRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.ProtobufStreamProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.ProtobufOpsProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetRegionRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetRegionNamesRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetAvailableServersOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.operations.GetAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.operations.OperationHandler.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.DUnitLauncher.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.tcpserver.TCPServerSSLJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.tcpserver.TcpServerJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.AutoConnectionSourceImplJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerConnectionFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.GenericProtocolServerConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ExecutionContext.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientProtocolMessageHandlerLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientProtocolMessageHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalLocator.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.TcpServerFactoryTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.TcpServerFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.MessageHandlerFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientProtoclMessageHandlerLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpServer.java</file>
    </fixedFiles>
  </bug>
  <bug id="3408" opendate="2017-8-8 00:00:00" fixdate="2017-8-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Flood of EOF warnings</summary>
      <description>Experimenting with the protobuf changes in the develop branch around commit cea8312, after running a client scenario for a while I'm seeing a flood of messages like the following. There appears to be one for each new message sent from the client.[warning 2017/08/07 11:15:16.628 PDT gbp-server &lt;ServerConnection on port 40404 Thread 9&gt; tid=0x61] java.io.EOFException: Tried to deserialize protobuf message at EOFThe log spam doesn't happen on initial connection and interaction, but for example a loop like the following begins triggering it within 100 iterations (possibly less):for (var i = 0;; i++){ var region = ...; // connect to localhost, single-node server, get region region.Put(i, i);}</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.GenericProtocolServerConnection.java</file>
    </fixedFiles>
  </bug>
  <bug id="3409" opendate="2017-8-8 00:00:00" fixdate="2017-8-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protobuf Client Can&amp;#39;t Connect Once Connection Limit Has Been Reached, Even After Connections Closed</summary>
      <description>We have a C# sample application (see attached) that connects to geode used the new binary protocol. It floods the server continually with socket connections and quickly reaches the default maximum connections of 800. When the client app closes, all 800 connections appear to be closed by the server (indeed 800 "Closed connection" messages appear in the server log). Running the application again, the server immediately rejects even the first connection request.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.protocol.RoundTripCacheConnectionJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientHealthMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.java</file>
    </fixedFiles>
  </bug>
  <bug id="3410" opendate="2017-8-8 00:00:00" fixdate="2017-8-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document new Query command</summary>
      <description>The GFSH query command was recently changed and the docs need to be updated to reflect the new parameters.</description>
      <version>None</version>
      <fixedVersion>1.2.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.useful.gfsh.shell.variables.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.configuring.gfsh.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.query.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="3412" opendate="2017-8-9 00:00:00" fixdate="2017-8-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement a basic authentication mechanism for the new protocol</summary>
      <description>Implement a simple username/password authentication for the new protocol.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.ProtobufSimpleAuthenticator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.StreamAuthenticator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.NoOpStreamAuthenticator.java</file>
      <file type="M">geode-protobuf.src.main.proto.clientProtocol.proto</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ServerConnectionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ServerConnectionFactoryTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.GenericProtocolServerConnectionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.AcceptorImplJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerConnectionFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.GenericProtocolServerConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.AcceptorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheServerImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="3567" opendate="2017-9-6 00:00:00" fixdate="2017-10-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Exporting configuration from GFSH causes multiple cacheservers to be listed</summary>
      <description>When running the following steps, ends up causing the `export config` command to list multiple `&lt;cacheserver..../&gt;` entries to be created in the exported `cache.xml`start locator --name=locator --enable-cluster-configuration=true --J=-Dgemfire.hostname-for-clients=bobstart server --name=server --use-cluster-configuration=true --server-port=0 --hostname-for-clients=bob3start server --name=server2 --use-cluster-configuration=true --server-port=0 --group=serverGROUP2 --hostname-for-clients=bob2export cluster-configuration --zip-file-name=./backup1.zipexport config --dir=./serversBack1stop server --name=server2start server --name=server2 --use-cluster-configuration=true --server-port=0 --group=serverGROUP2 --hostname-for-clients=bob2export config --dir=./serversBack2create disk-store --name=diskstore1 --dir=./ds1create region --name=TestRegion2 --type=REPLICATE_PERSISTENT_OVERFLOW --disk-store=diskstore1create region --name=TestRegion --type=REPLICATE_PERSISTENT_OVERFLOW --disk-store=diskstore1create region --name=TestRegion10 --type=REPLICATE --group=serverGROUP2export cluster-configuration --zip-file-name=./backup2.zipexport config --dir=./serversBack3stop server --name=server2start server --name=server2 --use-cluster-configuration=true --server-port=0 --group=serverGROUP2 --hostname-for-clients=bob2export config --dir=./serversBack4Extract from serversBack4 exported cache.xml&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;cache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://geode.apache.org/schema/cache" xsi:schemaLocation="http://geode.apache.org/schema/cache http://geode.apache.org/schema/cache/cache-1.0.xsd" version="1.0" is-server="true"&gt; &lt;cache-server port="39737"/&gt; &lt;cache-server port="35305"/&gt;</description>
      <version>1.0.0-incubating,1.1.0,1.2.0</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.ServerLauncherBuilderTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ServerLauncher.java</file>
    </fixedFiles>
  </bug>
  <bug id="3569" opendate="2017-9-7 00:00:00" fixdate="2017-9-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Validate that lucene serializer is the same on all members</summary>
      <description>Validate that users configure the same lucene serializer class name on all members.Acceptance:If two members configure different lucene serializer classes, then the second member to start will throw an exception when creating the region.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.test.LuceneTestUtilities.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexCreationProfileJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneServiceImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneRegionListener.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexCreationProfile.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
    </fixedFiles>
  </bug>
  <bug id="370" opendate="2015-9-24 00:00:00" fixdate="2015-10-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>DataSerializerPropogationDUnitTest testDataSerializersWithServerKill intermittently fails in verifyDataSerializers</summary>
      <description>Seen on a private build of git rev: 71e8dc85fd40c91ef53c2f1ee7dca5cfb082b070at com.gemstone.gemfire.internal.cache.tier.sockets.DataSerializerPropogationDUnitTest.testDataSerializersWithServerKill(DataSerializerPropogationDUnitTest.java:570)[snip]Caused by: junit.framework.AssertionFailedError: Event never occurred after 60000 ms: expected 3 but got this 2 serializers=[com.gemstone.gemfire.internal.cache.tier.sockets.DSObject4@4, com.gemstone.gemfire.internal.cache.tier.sockets.DSObject6@6] at junit.framework.Assert.fail(Assert.java:57) at junit.framework.TestCase.fail(TestCase.java:227) at dunit.DistributedTestCase.waitForCriterion(DistributedTestCase.java:1162) at com.gemstone.gemfire.internal.cache.tier.sockets.DataSerializerPropogationDUnitTest.verifyDataSerializers(DataSerializerPropogationDUnitTest.java:201) at com.gemstone.gemfire.internal.cache.tier.sockets.DataSerializerPropogationDUnitTest.verifyDataSerializers(DataSerializerPropogationDUnitTest.java:174)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.InternalDataSerializer.java</file>
    </fixedFiles>
  </bug>
  <bug id="3730" opendate="2017-10-2 00:00:00" fixdate="2017-10-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>With gemfire.GatewaySender.REMOVE_FROM_QUEUE_ON_EXCEPTION=false, gateway events can still be removed from the queue when an exception occurs</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.misc.KeepEventsOnGatewaySenderQueueDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewayReceiverStats.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventRemoteDispatcher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GatewayReceiverCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="381" opendate="2015-10-2 00:00:00" fixdate="2015-10-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gfsh using https connections does not work in environments with SSL termination</summary>
      <description>In Cloud Foundry we have SSL termination, i.e. our transport path looks something like this: gfsh &lt;---- https ----&gt; ELB &lt;---- http ----&gt; ClusterWhere ELB is an Elastic Load Balancer or HAProxy.When attempting to connect using a https URL, the following occurs:gfsh&gt;connect --use-http --url=https://gf-plan-1-dashboard-253bff71-a09b-4f1a-49fb-ef6b13c39c34.gf1.pcf-gemfire.com/gemfire/v1Successfully connected to: GemFire Manager HTTP service @ https://gf-plan-1-dashboard-253bff71-a09b-4f1a-49fb-ef6b13c39c34.gf1.pcf-gemfire.com/gemfire/v1gfsh&gt;No longer connected to GemFire Manager HTTP service @ https://gf-plan-1-dashboard-253bff71-a09b-4f1a-49fb-ef6b13c39c34.gf1.pcf-gemfire.com/gemfire/v1.gfsh&gt;Exiting...The problem is that gfsh retrieves meta-information consisting of an index of commands mapped to URL endpoints. Even though an initial https connection is made, the URLs returned in the index are http URLs.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-web.src.test.java.com.gemstone.gemfire.management.internal.web.controllers.ShellCommandsControllerJUnitTest.java</file>
      <file type="M">gemfire-web.build.gradle</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.web.controllers.ShellCommandsController.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.web.controllers.AbstractCommandsController.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.ShellCommands.java</file>
    </fixedFiles>
  </bug>
  <bug id="401" opendate="2015-10-13 00:00:00" fixdate="2015-1-13 01:00:00" resolution="Not A Problem">
    <buginformation>
      <summary>gfsh backup disk-store does not print offline members</summary>
      <description>Test environment has 3 servers running with 1 REPLICATE_PERSISTENT region. Make a backup with all 3 servers online:gfsh&gt;backup disk-store --dir=/Users/kmiller/tryit/trybackup/mybackupdirThe following disk stores were backed up successfully Member | UUID | Directory | Host-------- | ------------------------------------ | ------------------------------------------------------------------- | ---------------------------------server2 | 49ec8158-fa55-4340-a20c-bc20d9d90bbb | /Users/kmiller/tryit/trybackup/try2/server2/. | pdx2-office-dhcp10.eng.vmware.comserver1 | 4b6ef006-c585-48de-83a2-74f79199e2fa | /Users/kmiller/tryit/trybackup/try1/server1/. | pdx2-office-dhcp10.eng.vmware.comserver3 | b9e6771e-ab84-4808-a081-6c0134144fd9 | /Users/kmiller/tryit/trybackup/try3/server3/. | pdx2-office-dhcp10.eng.vmware.comlocator1 | 5bce95be-5bb6-4be6-adc2-aa18dde1c2b6 | /Users/kmiller/tryit/trybackup/try1/locator1/ConfigDiskDir_locator1 | pdx2-office-dhcp10.eng.vmware.comHere's the output once server 3 is stopped. Notice that there is no indication that a backup was not taken for server 3's disk store, since server 3 is offline.gfsh&gt;stop server --name=server3gfsh&gt;backup disk-store --dir=/Users/kmiller/tryit/trybackup/mybackupdirThe following disk stores were backed up successfully Member | UUID | Directory | Host-------- | ------------------------------------ | ------------------------------------------------------------------- | ---------------------------------server2 | 49ec8158-fa55-4340-a20c-bc20d9d90bbb | /Users/kmiller/tryit/trybackup/try2/server2/. | pdx2-office-dhcp10.eng.vmware.comserver1 | 4b6ef006-c585-48de-83a2-74f79199e2fa | /Users/kmiller/tryit/trybackup/try1/server1/. | pdx2-office-dhcp10.eng.vmware.comlocator1 | 5bce95be-5bb6-4be6-adc2-aa18dde1c2b6 | /Users/kmiller/tryit/trybackup/try1/locator1/ConfigDiskDir_locator1 | pdx2-office-dhcp10.eng.vmware.comThere ought to be an additional line in this output that states that no backup was made for server 3.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">gemfire-core.src.test.java.dunit.standalone.DUnitLauncher.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.logging.log4j.LogWriterLoggerPerformanceTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.logging.log4j.Log4J2PerformanceTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.compression.CompressionCacheConfigDUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.org.apache.logging.log4j.core.config.xml.GemFireXmlConfigurationFactory.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.org.apache.logging.log4j.core.config.xml.GemFireXmlConfiguration.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.org.apache.logging.log4j.core.config.GemFireFileConfigurationMonitor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.logging.LogService.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.logging.log4j.LogWriterLogger.java</file>
    </fixedFiles>
  </bug>
  <bug id="4306" opendate="2018-1-17 00:00:00" fixdate="2018-1-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>TTL (time to live) expiration not working properly in client side</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.EntryEventImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EntryEventImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="4402" opendate="2018-1-26 00:00:00" fixdate="2018-2-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log exceptions to server log</summary>
      <description>When the new protocol handles an exception, it should write the exception to the server log (even if it only sends back an error to the client) &amp;#8211; this will help in debugging efforts.All exceptions handled by the new protocol should be logged to the server log.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.LocatorConnectionDUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ServerMessageExecutionContext.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufStreamProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufSerializationService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufOpsProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.security.AuthenticationRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ProtocolVersionHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.AbstractFunctionRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.LocatorMessageExecutionContext.java</file>
    </fixedFiles>
  </bug>
  <bug id="4403" opendate="2018-1-27 00:00:00" fixdate="2018-2-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove ProtocolErrorCode</summary>
      <description>We currently have a class called ProtocolErrorCode, which lists the errors that can happen in the Protobuf protocol, but these error codes are also listed in an enum in the .proto files and corresponding generated code. Remove ProtocolErrorCode to DRY it up.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.ErrorCodesJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufResponseUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionTerminatingStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionHandshakeStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionAuthorizingStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionAuthenticatingStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.NoSecurityProtobufConnectionStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.LegacySecurityProtobufConnectionStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.exception.OperationNotAuthorizedException.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.exception.ConnectionStateException.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufOpsProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufErrorCode.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetServerOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="4404" opendate="2018-1-27 00:00:00" fixdate="2018-2-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Gfsh command to pass BackupDestination object</summary>
      <description>Gfsh backup command passes File destination as the target location. To support any destination other than the file system for the target location to save the backup, we need to be able to pass alternate information in the backup messages. Having the backup command provide an implementation of BackupDestination (in this case, FileSystemBackupDestination) will allow for the future creation of gfsh commands that utilize a different destination.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.beans.DistributedSystemBridgeJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistentPartitionedRegionTestBase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.PrepareBackupRequestTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.PrepareBackupOperationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.PrepareBackupFactoryTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.IncrementalBackupDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupPrepareAndFinishMsgDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupDistributedTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.BackupDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.MemberMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.DistributedSystemBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.BackupStatus.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.SystemAdmin.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.PrepareBackupRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.PrepareBackupOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.PrepareBackupFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.PrepareBackup.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupDataStoreHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.AdminDistributedSystemImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.BackupStatus.java</file>
    </fixedFiles>
  </bug>
  <bug id="4405" opendate="2018-1-27 00:00:00" fixdate="2018-2-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pass information for BackupDestination in the prepare message of backup command</summary>
      <description>Gfsh executes backup in 2 phases/messages. 1. prepare 2. doBackup The target location is passed in the doBackup phase. If instead, all information about the backup task was provided in the first (prepare) message, more aspects of the task could be set in its constructor and thus be final.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.beans.DistributedSystemBridgeJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.PrepareBackupRequestTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.PrepareBackupOperationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.PrepareBackupFactoryTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.FinishBackupRequestTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.FinishBackupOperationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.FinishBackupFactoryTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupPrepareAndFinishMsgDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.MemberMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.PrepareBackupRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.PrepareBackupOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.PrepareBackupFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.PrepareBackup.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.FinishBackupRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.FinishBackupOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.FinishBackupFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.FinishBackup.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupDataStoreHelper.java</file>
    </fixedFiles>
  </bug>
  <bug id="4406" opendate="2018-1-27 00:00:00" fixdate="2018-2-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve granularity of permissions for new client protocol</summary>
      <description>Currently, the new client protocol requires all DATA:READ permissions to do a region.get() . If a user only has DATA:READ:regionName , they won't be permitted to execute commands on the region, even though they have permissions. We should fix this for all the other operations too.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.AuthorizationIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionTerminatingStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionHandshakeStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionAuthorizingStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionAuthenticatingStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.NoSecurityProtobufConnectionStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.LegacySecurityProtobufConnectionStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.registry.ProtobufOperationContextRegistry.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufOpsProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufOperationContext.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.AbstractFunctionRequestOperationHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="4407" opendate="2018-1-27 00:00:00" fixdate="2018-1-27 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Separate incremental backup logic from backup task and oplog</summary>
      <description>Incremental backup examines the oplog from current destination to the previously backed up destination to generate oplogs to be backed up. This logic is present in both backup task and oplog. We need to separate this out so the logic can be used for different backup destinations. </description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.IncrementalBackupDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.FileSystemBackupDestinationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupFileCopierIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupDefinitionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Oplog.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreBackup.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.RestoreScript.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.FileSystemBackupDestination.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupFileCopier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupDestination.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupDefinition.java</file>
    </fixedFiles>
  </bug>
  <bug id="4414" opendate="2018-1-29 00:00:00" fixdate="2018-2-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support nulls in new client protocol</summary>
      <description>The new client protocol currently sort of supports nulls, by sending an EncodedValue that is not set, but there's no mention of this (as far as I can tell) and it's not explicit.An example where we might need nulls is when a function returns a list of null sentinel values that are meaningful. To support this use case, we should add a null case to EncodedValue.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufUtilitiesJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufSerializationService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnRegionRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnMemberRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnGroupRequestOperationHandler.java</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.basicTypes.proto</file>
    </fixedFiles>
  </bug>
  <bug id="4429" opendate="2018-1-29 00:00:00" fixdate="2018-1-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove redundant modifiers from geode-core:cache</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.LoaderHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.wan.GatewayTransportFilter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.wan.GatewaySenderFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.wan.GatewaySender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.wan.GatewayReceiverFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.wan.GatewayReceiver.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.wan.GatewayQueueEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.wan.GatewayEventSubstitutionFilter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.wan.GatewayEventFilter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.util.TimestampedEntryEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.util.ObjectSizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.util.GatewayEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.util.GatewayConflictResolver.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.util.GatewayConflictHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.TransactionWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.TransactionListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.TransactionEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.snapshot.RegionSnapshotService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.server.ClientSubscriptionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.server.CacheServer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.SerializedCacheValue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.RoleEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.RegionService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.RegionRoleListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.RegionMembershipListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.RegionEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.RegionAttributes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.Region.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.types.StructType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.types.ObjectType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.types.MapType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.types.CollectionType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.Struct.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.SelectResults.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.QueryStatistics.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.QueryService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.Query.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.StructFields.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.QueryExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.Negatable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.IndexStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.IndexProtocol.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.IndexManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.IndexedExpressionEvaluator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.HashingStrategy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.Filter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.cq.ServerCQ.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.cq.InternalCqQuery.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.cq.CqService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.cq.ClientCQ.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.IndexStatistics.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.Index.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.CqStatusListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.CqStatistics.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.CqState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.CqServiceStatistics.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.CqQuery.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.CqListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.CqEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.CqAttributesMutator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.CqAttributes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.Aggregator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.persistence.PersistentID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.partition.PartitionRegionInfo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.partition.PartitionRebalanceInfo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.partition.PartitionMemberInfo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.partition.PartitionListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.PartitionResolver.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.PartitionAttributes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.asyncqueue.AsyncEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.asyncqueue.AsyncEventListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.asyncqueue.AsyncEventQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.asyncqueue.AsyncEventQueueFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.AttributesMutator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.CacheCallback.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.CacheEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.CacheListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.CacheLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.CacheStatistics.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.CacheTransactionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.CacheWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.ClientSession.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.ClientCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.ClientRegionFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.AbstractOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ClientUpdater.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.Connection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.EndpointManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ExecutablePool.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.locator.wan.LocatorMembershipListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.ConnectionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.QueueManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.QueueState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ServerBlackList.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ServerRegionDataAccess.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.Pool.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.PoolFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.control.RebalanceFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.control.RebalanceOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.control.RebalanceResults.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.control.ResourceManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.CustomExpiry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.Declarable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.DiskStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.DiskStoreFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.DiskWriteAttributes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.DynamicRegionListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.EntryEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.EntryOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.EvictionAttributesMutator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.execute.Execution.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.execute.FunctionContext.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.execute.RegionFunctionContext.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.execute.ResultCollector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.execute.ResultSender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.FixedPartitionResolver.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.GemFireCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.InterestRegistrationEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.InterestRegistrationListener.java</file>
    </fixedFiles>
  </bug>
  <bug id="4430" opendate="2018-1-29 00:00:00" fixdate="2018-1-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove redundant modifiers from geode-core:internal.cache</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.DiskRecoveryStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.PropertyResolver.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.Declarable2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.InternalGatewaySenderFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventDispatcher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.DistributedSystemListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.vmotion.VMotionObserver.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.versions.VersionHolder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateInterface.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXEntryStateFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TxEntryFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TransactionMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.OldClientSupportService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.MessageStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CommBufferPool.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientUpdateMessageImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientUpdateMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.ConnectionProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.ClientHandShake.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.SerializationHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.RegionEntryFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PRHARedundancyProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.UninterruptibleRandomAccessFile.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.query.ResultSet.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.query.ResultMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.query.ResultList.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.query.ResultBag.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.query.IndexMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentStateListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentMemberView.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistentMemberManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceObserverHolder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.DiskRegionView.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CachedDeserializable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheDistributionAdvisee.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheObserver.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ClientServerObserver.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CompactableOplog.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Conflatable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.InternalResourceManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.MemoryMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.OffHeapMemoryMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.ResourceEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.ResourceListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.ResourceMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistTXCoordinatorInterface.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EntriesMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.entries.DiskEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.entries.OffHeapRegionEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.AbstractExecution.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.InternalExecution.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.InternalRegionFunctionContext.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.InternalResultSender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.execute.MultiRegionFunctionContext.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ExpiryTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ExportDiskRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.extension.Extensible.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.FilterProfile.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ha.HAContainerWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ImageState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InterestFilter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCacheEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalDataView.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LoaderHelperFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.locks.TXLockId.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.locks.TXRegionLockRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Oplog.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.OplogSet.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionQueryEvaluator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.Bucket.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.InternalPartitionDetails.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.InternalPRInfo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.OfflineMemberDetails.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PartitionedRegionObserver.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PREntriesIterator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.rebalance.BucketOperator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.rebalance.PartitionedRegionLoadModel.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.rebalance.RebalanceDirector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RegionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.DiskInitFileInterpreter.java</file>
    </fixedFiles>
  </bug>
  <bug id="4431" opendate="2018-1-29 00:00:00" fixdate="2018-1-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove redundant modifiers from geode-core:internal (excluding cache)</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.MemoryUsageListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.VersionedDataStream.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.Versionable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.Transformer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.ObjectIntProcedure.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.concurrent.CustomEntryConcurrentHashMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.ServerDelegate.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.ByteBufferInputStream.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.BaseMsgStreamer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.VMStatsContract.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatisticsSampler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatisticsNotification.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatisticsManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatisticsListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatisticId.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatArchiveHandlerConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatArchiveFormat.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.SampleHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.platform.OsStatisticsFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.LocalStatListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.size.ObjectGraphSizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.shared.NativeCallsJNAImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.shared.NativeCalls.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.SerializationVersions.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.sequencelog.SequenceLogger.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.sequencelog.model.GraphReaderCallback.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.sequencelog.io.Filter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.OneTaskOnlyExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.StoredObject.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.SlabFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.Slab.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.Releasable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.OutOfOffHeapMemoryListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.OffHeapMemoryStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.AdminBridgeServer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.Alert.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.AlertListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.ApplicationVM.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.CacheInfo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.CacheSnapshot.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.DLockInfo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.EntrySnapshot.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.EntryValueNode.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.GemFireVM.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.GfManagerAgent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.GfObject.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.HealthListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.JoinLeaveListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.RegionSnapshot.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.Cancellable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.SnapshotClient.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.Stat.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.StatAlertDefinition.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.statalerts.StatisticInfo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.StatListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.StatResource.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.ByteBufferWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.concurrent.AL.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.concurrent.MapCallback.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.concurrent.MapResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.ConnectionWatcher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.datasource.ConnectionPoolCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.datasource.ConnectionProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.datasource.DataSourceResources.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DSCODE.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.StringId.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.Filter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.Initable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.MutableIdentifiable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.Orderable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.Ordered.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.InternalLogWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.log4j.GemFireLogger.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.log4j.LogMarker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.MergeLogFiles.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.memcached.CommandProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.NanoTimer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.ObjToByteArraySerializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.FreeListManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.LifecycleListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.MemoryAllocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.MemoryBlock.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.offheap.MemoryInspector.java</file>
    </fixedFiles>
  </bug>
  <bug id="4432" opendate="2018-1-29 00:00:00" fixdate="2018-1-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove redundant modifiers from geode-core (excluding cache and internal)</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.HealthMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.StatisticsTypeFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.StatisticsType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.StatisticsFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.Statistics.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.StatisticDescriptor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.AuthInitialize.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.Extendable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.Executor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.ra.GFConnectionFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.ra.GFConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.WritablePdxInstance.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.PdxWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.PdxSerializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.PdxSerializable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.PdxReader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.PdxInstanceFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.PdxInstance.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.TypeRegistration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.InternalPdxReader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.ConvertableToBytes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.ComparableEnum.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.RegionMXBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.membership.MembershipListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.membership.MembershipEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.membership.ClientMembershipListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.membership.ClientMembershipEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.ManagerMXBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.LocatorMXBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.JMXNotificationUserData.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.JMXNotificationType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.security.AccessControlMXBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ProxyListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ProxyInterface.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.NotificationBroadCasterProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementConstants.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.OperationInvoker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.GfshCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.CacheServiceMBeanBase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.AggregateHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.DistributedRegionMXBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.DistributedLockServiceMXBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.Result.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.CommandStatement.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.CliMetaData.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.AsyncEventQueueMXBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.LogWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.lang.Identifiable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.i18n.LogWriterI18n.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.Role.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.WanLocatorDiscoverer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ThrottledQueueStatHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ThrottledMemQueueStatHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.Sizeable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ReplySender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.QueueStatHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.PoolStatHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.MQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.MessageWithReply.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.QuorumChecker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.NetMember.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.MembershipTestHook.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.MembershipManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.MemberServices.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.NetLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.HasMemberID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.interfaces.MessageHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.interfaces.JoinLeave.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.interfaces.HealthMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.DistributedMembershipListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.MembershipListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockRecoverGrantorProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockLessorDepartureHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockBatchId.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DLockBatch.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DistributedMemberLock.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.locks.DistributedLockStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.AdminDistributedSystem.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.Alert.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.AlertListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.CacheHealthConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.CacheServer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.CacheServerConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.CacheVm.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.CacheVmConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.ConfigurationParameter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.DistributedSystemConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.DistributedSystemHealthConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.DistributionLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.DistributionLocatorConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.GemFireHealth.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.GemFireHealthConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.ConfigurationParameterListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.InternalManagedEntity.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.ManagedEntityController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.Agent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.AgentConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.ManagedResource.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.RMIRegistryServiceMBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.StatAlertsAggregator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.jmx.internal.SystemMemberJmx.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.ManagedEntity.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.ManagedEntityConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.MemberHealthConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.Statistic.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.StatisticResource.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.SystemMember.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.SystemMemberBridgeServer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.SystemMemberCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.SystemMemberCacheEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.SystemMemberCacheListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.SystemMemberCacheServer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.SystemMemberRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.SystemMemberRegionEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.SystemMembershipEvent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.SystemMembershipListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.compression.Compressor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.DataSerializable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ClientSocketFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.DistributedMember.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.CacheTime.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.deadlock.DependencyMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.direct.DirectChannelListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionAdvisee.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DMStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DSClock.java</file>
    </fixedFiles>
  </bug>
  <bug id="4433" opendate="2018-1-29 00:00:00" fixdate="2018-1-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove redundant modifiers from non geode-core</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.http.converter.CustomMappingJackson2HttpMessageConverter.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.PageableLuceneQueryResults.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.management.LuceneServiceMXBean.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneService.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneResultStruct.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneQueryProvider.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneQueryFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneQuery.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneIndexFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneIndex.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.repository.IndexResultCollector.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.repository.IndexRepository.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.InternalLuceneIndex.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.IndexListener.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.runners.SuiteRunner.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.FieldsOfTimeout.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.FieldsOfTestName.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.FieldsOfTemporaryFolder.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.Retry.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.Repeat.java</file>
      <file type="M">geode-json.src.main.java.org.json.JSONString.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.JSONWrapper.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.SessionManager.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.SessionCache.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.internal.DeltaSessionAttributeEvent.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.gatewaydelta.GatewayDeltaEvent.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.gatewaydelta.GatewayDelta.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.jmx.SessionStatisticsMXBean.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.SessionManager.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.attributes.SessionAttributes.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.common.SessionCache.java</file>
    </fixedFiles>
  </bug>
  <bug id="4442" opendate="2018-1-31 00:00:00" fixdate="2018-2-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create message for cancelling an in progress backup</summary>
      <description>Currently, the final message involved in backups contains an abort flag that is the only way to cancel the backup. We should allow a way to try and halt an in progress backup by splitting out the abort logic from the existing message into a new message.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.beans.DistributedSystemBridgeJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.FinishBackupRequestTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.FinishBackupOperationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.FinishBackupFactoryTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupPrepareAndFinishMsgDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.MemberMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DSFIDFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.FinishBackupRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.FinishBackupOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.FinishBackupFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.FinishBackup.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupDataStoreHelper.java</file>
    </fixedFiles>
  </bug>
  <bug id="448" opendate="2015-10-20 00:00:00" fixdate="2015-2-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add new test to run Pulse in Jetty</summary>
      <description>Currently, Pulse tests are launched in a separate web app container (Tomcat) and tests it in standalone mode. This task is to add a new test that runs Pulse in embedded mode.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.java.com.vmware.gemfire.tools.pulse.tests.PulseBaseTest.java</file>
      <file type="M">geode-pulse.src.test.java.com.vmware.gemfire.tools.pulse.tests.PulseAutomatedTest.java</file>
      <file type="M">geode-pulse.src.test.java.com.vmware.gemfire.tools.pulse.tests.TomcatHelper.java</file>
      <file type="M">geode-pulse.src.test.java.com.vmware.gemfire.tools.pulse.tests.PulseTest.java</file>
      <file type="M">geode-pulse.src.test.java.com.vmware.gemfire.tools.pulse.testbed.driver.TomcatHelper.java</file>
      <file type="M">geode-pulse.src.test.java.com.vmware.gemfire.tools.pulse.testbed.driver.PulseUITest.java</file>
      <file type="M">geode-pulse.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="522" opendate="2015-10-30 00:00:00" fixdate="2015-11-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gradle eclipse target creates gemfire-web project with missing dependencies</summary>
      <description>Gradle eclipse target creates gemfire-web project with the following missing dependencies:1) gemfire-core2) javax.servlet-api-3.1.0.jar3) spring-core-3.2.12.RELEASE.jar4) spring-shell-1.0.0.RELEASE.jar5) spring-web-3.2.12.RELEASE.jar6) spring-webmvc-3.2.12.RELEASE.jar7) spring-test (unknown which version)</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-web.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="5222" opendate="2018-5-15 00:00:00" fixdate="2018-6-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JMX metric exposed in an MBean</summary>
      <description>Given I need to scale down or scale up my servers based on usageWhen I setup my monitoring of JMX metrics through an MBeanThen I have the ability to see Disk Free PercentageAND Disk Free in BytesAND Disk Used PercentageAND Disk Used in Bytes </description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.DiskStoreMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.DiskStoreMBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.DiskStoreMXBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskDirectoryStats.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.DiskStoreImplIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5284" opendate="2018-6-4 00:00:00" fixdate="2018-7-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add testing surrounding MBean persistence during member failure and reconnection.</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.VMProvider.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.ServerStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.MemberStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.LocatorStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.tests.MemberStarterRuleTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.MemberVM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.MembershipManagerHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.security.MBeanServerWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.callbacks.ConfigurationChangeListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalLocator.java</file>
    </fixedFiles>
  </bug>
  <bug id="5287" opendate="2018-6-4 00:00:00" fixdate="2018-6-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Simplify documentation of transactions</summary>
      <description>The documentation is overly complicated when describing transactions within Geode. As a first step towards simplification, extract the important semantic info on Geode's capabilities with respect to ACID transactions from its buried location and combine it with the About Transactions overview information. Rename the section too.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.transaction.semantics.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.how.cache.transactions.work.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.about.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5288" opendate="2018-6-4 00:00:00" fixdate="2018-3-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Execute function on region should not iterate through all the servers hosting the region.</summary>
      <description>Currently, if we 3 servers hosting a partitioned region "regionA", and we execute the following command where the genericFunctionId is just printing out the id of the function once:gfsh&gt; execute function --id=genericFunctionId --region=/regionA: Member | Status | Message-------- | ------ | ---------------------------------------------------------server-1 | OK | &amp;#91;genericFunctionId, genericFunctionId, genericFunctionId&amp;#93;server-2 | OK | &amp;#91;genericFunctionId, genericFunctionId, genericFunctionId&amp;#93;server-3 | OK | &amp;#91;genericFunctionId, genericFunctionId, genericFunctionId&amp;#93; we are executing on all 3 servers, and each server would then execute the function 3 times, so we are executing the function for a total of 9 times which is not correct. (we should only be executing it 3 times all together).  // test set up: locator = cluster.startLocatorVM(0); server1 = cluster.startServerVM(1, "group1", locator.getPort()); server2 = cluster.startServerVM(2, "group1", locator.getPort()); server3 = cluster.startServerVM(3, "group2", locator.getPort()); gfsh.connectAndVerify(locator); // register the function on all members MemberVM.invokeInEveryMember(()-&gt;{ FunctionService.registerFunction(new GenericFunctionOp(functionId)); }, server1, server2, server3); // create a partitioned region on only group1 gfsh.executeAndAssertThat("create region --name=regionA --type=PARTITION").statusIsSuccess().tableHasRowCount("Member", 3).tableHasColumnWithExactValuesInAnyOrder("Member", "server-1", "server-2", "server-3"); // function bodypublic static class GenericFunctionOp implements Function { private String functionId; GenericFunctionOp(String functionId) { this.functionId = functionId; } @Override public void execute(FunctionContext context) { String filter = null; if(context instanceof RegionFunctionContext) { RegionFunctionContext rContext = (RegionFunctionContext) context; Set filters = rContext.getFilter(); filter = Strings.join(filters, ','); } String argument = null; Object arguments = (context.getArguments()); if (arguments instanceof String[]) { argument = String.join(",", (String[]) arguments); } if(filter !=null &amp;&amp; argument != null){ context.getResultSender().lastResult(functionId + "-" + filter + "-" +argument); } else if (filter != null) { context.getResultSender().lastResult(functionId + "-" + filter); } else if (argument != null) { context.getResultSender().lastResult(functionId + "-" + argument); } else{ context.getResultSender().lastResult(functionId); } } public String getId() { return functionId; }}</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommandWithSecurityDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.test.LuceneFunctionSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.FunctionCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommandSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.execute.CoreFunctionSecurityTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.UserFunctionExecution.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommand.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JDBCConnectorFunctionsSecurityTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionCommand.java</file>
      <file type="M">extensions.geode-modules.src.test.java.org.apache.geode.modules.util.ModuleFunctionsSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.GfshParserRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.assertions.CommandResultAssert.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.result.model.TabularResultModelTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.result.model.ResultModelTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.model.TabularResultModel.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.model.ResultModel.java</file>
    </fixedFiles>
  </bug>
  <bug id="529" opendate="2015-11-5 00:00:00" fixdate="2015-12-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing gemfire-common.jar on maven</summary>
      <description>gemfire-common project was created and is a dependency for gemfire-core but it's currently not available on Maven.Need to add the list of MavenJars on gemfire-assemblydef MavenJars = [ coreJar, jgroupsJar, jsonJar, joptsimpleJar, commonJar ]</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="5291" opendate="2018-6-5 00:00:00" fixdate="2018-1-5 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>More destroys recorded in CachePerfStats than actual in a transaction with expiration</summary>
      <description>On a single member with a replicated region with expiration (set to 1 sec) and a single thread repeatedly doing a transaction with single create and destroy of random keys could result in CachePerfStats.destroys being incremented more times than actual destroys. If the transaction changed to never have same key being created and destroyed then the stats were correct.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTxApplyDestroyTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ProxyRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug id="5292" opendate="2018-6-5 00:00:00" fixdate="2018-7-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replace with concurrent clear and destroy leaks off heap memory</summary>
      <description>For a region that has been configured with off-heap storage and overflow to disk, memory can be leaked if region clear region destroy  region replaceall happen concurrently. The root cause appears to be region clear modifying entries for values stored on disk without synchronizing the entries. This prevents replace from freeing the off-heap memory for the new value when the replace fails because the region is being destroyed.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskRegion.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.ConcurrentRegionOperationIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5295" opendate="2018-6-6 00:00:00" fixdate="2018-7-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve error reporting in ClusterStartupRule await methods</summary>
      <description>The family of methods that wait until the cluster's gateways / regions / disk stores are ready will occasionally hang, having a number not equal to the expected number of beans. In these cases, it unclear if the number of expected element beans is too few (indicating a delay or failure to start) or too many (indicating a failure to destroy a previous test).Failure reporting should be improved to indicate the nature of failure.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeRegionDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.DestroyGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.MemberStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.MemberVM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.JMXMBeanReconnectDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.JMXMBeanFederationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigImportDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.RemoveCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.LocateEntryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListAsyncEventQueuesCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterCompressorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.CliUtilDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5296" opendate="2018-6-6 00:00:00" fixdate="2018-6-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Revise introductory docs on transactions</summary>
      <description>Do a complete rewrite of the introductory prose on transactions. Help Geode users to know how the ACID semantics are implemented in Geode.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.about.transactions.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5298" opendate="2018-6-6 00:00:00" fixdate="2018-6-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Document Transactions + Functions Limitation</summary>
      <description>By design, you can't execute a function within a transaction through the FunctionService.onServer API.  This is not fully documented within the Transactions and Functions section of the user guide.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5433" opendate="2018-7-13 00:00:00" fixdate="2018-8-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Certain indexes are not properly updated during gii with stale persistent data</summary>
      <description>Depending on what from clause is used in the index, gii'd data can potentially lead to corrupted indexes.  This is because the index updates are being done after the gii process has modified the value, meaning the index cannot calculate the correct old key.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.query.dunit.PersistentPartitionWithIndex.xml</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.RangeIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.MapRangeIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.IndexProtocol.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.HashIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.CompactRangeIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.CompactMapRangeIndex.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache.query.dunit.PartitionedRegionCompactRangeIndexDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5435" opendate="2018-7-16 00:00:00" fixdate="2018-7-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>fix glossary typo in docs</summary>
      <description>The glossary entry under "distributed-no-ack-scope" should not have a hyphen between "ack" and "scope." Scope is a description, not a part of the attribute.This one-character change in the docs will be made as commit-then-review, instead of with a PR.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.glossary.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5436" opendate="2018-7-16 00:00:00" fixdate="2018-7-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update gfsh create gateway-receiver docs</summary>
      <description>GEODE-4959 was completed and resolved without documentation. This ticket is to update the documentation for the added --if-not-exists option to the gfsh create gateway-receiver command. At the same time, properly document how the command works: Add -if-not-exists to gfsh create gateway-receiver command The create is on all members, unless --groups or --members is specified If the create succeeds on at least 1 member, the gfsh command exits with a success code. (And, a table is printed with the status of each member's gateway receiver.) If the create fails on all members, a table is still printed with the status of each member's gateway receiver. If the create is deemed successful, and cluster config is enabled, then the successful gateway receiver is persisted in the cluster configuration. No cluster configuration is persisted if the --members option is specified. It is this way for backward compatibility.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="5437" opendate="2018-7-16 00:00:00" fixdate="2018-7-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Recovery of async persistent regions may result in inconsistency</summary>
      <description>The region initialized flag is written to IF file synchronously, but the data is written to CRF asynchronously, then servers may become inconsistent during recovery.Proposed fix:Async region should perform disk store flush BEFORE writing region initialized flag to the IF file.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.entries.DiskEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskRegion.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.test.dunit.VM.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.test.dunit.standalone.StandAloneDUnitEnv.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.test.dunit.standalone.DUnitLauncher.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.test.dunit.DUnitEnv.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.backup.BackupDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5571" opendate="2018-8-13 00:00:00" fixdate="2018-8-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse Data Browser queries should be saved in history before they are executed in case they don&amp;#39;t return</summary>
      <description>Data Browser queries that throw exceptions or do not return at all are not saved in the PULSE_QueryHistory.json file.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.pages.DataBrowserQuery.js</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.controllers.PulseController.java</file>
      <file type="M">geode-pulse.src.integrationTest.java.org.apache.geode.tools.pulse.controllers.PulseControllerJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5575" opendate="2018-8-13 00:00:00" fixdate="2018-8-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove use of Travis CI for apache/geode repo</summary>
      <description>Don't run Travis CI on PRs now that we have a full Concourse pipeline to run all tests.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">.travis.yml</file>
    </fixedFiles>
  </bug>
  <bug id="5700" opendate="2018-9-6 00:00:00" fixdate="2018-9-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failures from new tests in PartitionedRegionCompactRangeIndexDUnitTest</summary>
      <description>We are seeing a couple of the new tests in PartitionedRegionCompactRangeIndexDUnitTest fail in CIorg.apache.geode.cache.query.dunit.PartitionedRegionCompactRangeIndexDUnitTest: 2 failures (99.265% success rate) | .giiWithPersistenceAndStaleDataDueToDeletesShouldHaveEmptyIndexesWithEntrySet: 1 failures (99.632% success rate) | | Failed build 376 at https://concourse.apachegeode-ci.info/teams/staging/pipelines/concourse-staging/jobs/DistributedTest/builds/376 | .giiWithPersistenceAndStaleDataDueToDeletesShouldHaveEmptyIndexes: 1 failures (99.632% success rate) | | Failed build 499 at https://concourse.apachegeode-ci.info/teams/staging/pipelines/concourse-staging/jobs/DistributedTest/builds/499org.apache.geode.cache.query.dunit.PartitionedRegionCompactRangeIndexDUnitTest &gt; giiWithPersistenceAndStaleDataDueToDeletesShouldHaveEmptyIndexes FAILED java.lang.AssertionError: Suspicious strings were written to the log during this run. Fix the strings or use IgnoredException.addIgnoredException to ignore. ----------------------------------------------------------------------- Found suspect string in log4j at line 7947 [error 2018/08/30 21:32:07.028 UTC &lt;Pooled Waiting Message Processor 1&gt; tid=0x9d6] A bridge server's bind address is only available if it has been started java.lang.IllegalStateException: A bridge server's bind address is only available if it has been started at org.apache.geode.internal.cache.CacheServerImpl.getExternalAddress(CacheServerImpl.java:415) at org.apache.geode.internal.cache.CacheServerImpl.getExternalAddress(CacheServerImpl.java:407) at org.apache.geode.internal.cache.BucketAdvisor.instantiateProfile(BucketAdvisor.java:1690) at org.apache.geode.distributed.internal.DistributionAdvisor.createProfile(DistributionAdvisor.java:1026) at org.apache.geode.internal.cache.BucketAdvisor.sendProfileUpdate(BucketAdvisor.java:1651) at org.apache.geode.internal.cache.BucketAdvisor.acquiredPrimaryLock(BucketAdvisor.java:1196) at org.apache.geode.internal.cache.BucketAdvisor$VolunteeringDelegate.doVolunteerForPrimary(BucketAdvisor.java:2586) at org.apache.geode.internal.cache.BucketAdvisor$VolunteeringDelegate$1.run(BucketAdvisor.java:2484) at org.apache.geode.internal.cache.BucketAdvisor$VolunteeringDelegate$2.run(BucketAdvisor.java:2803) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at org.apache.geode.distributed.internal.ClusterDistributionManager.runUntilShutdown(ClusterDistributionManager.java:1136) at org.apache.geode.distributed.internal.ClusterDistributionManager.access$000(ClusterDistributionManager.java:112) at org.apache.geode.distributed.internal.ClusterDistributionManager$6$1.run(ClusterDistributionManager.java:882) at java.lang.Thread.run(Thread.java:748)</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.junit.rules.ServerStarterRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="5884" opendate="2018-10-16 00:00:00" fixdate="2018-1-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Executing a function with non HA should return any available partial results</summary>
      <description>When a function is executed without single hop, it is sent to a "coordinating" node.  This node then creates tasks that are executed on other remote nodes and itself.  If any of the remote nodes or the local node gets an exception, it will accumulate the exception and any results it has currently received.  It then completes and sends those results back to the client.There is a flag to waitOnException.  We should set this to true if the function is non HA.  This will have the coordinating node wait for all results before sending back to the client.  The work is going to get executed on the remote nodes anyways, so why not wait for the results?This will mirror a single-hop execution where a single node may fail.  If it does, the client still receives results from the other nodes. </description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.functions.DistribuedRegionFunctionFunctionInvocationException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializer.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction66Test.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ExecuteRegionFunctionOp.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.DistributedRegionFunctionExecutionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="5885" opendate="2018-10-16 00:00:00" fixdate="2018-10-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add geode-core exclusion from all geode-junit and geode-dunit dependencies</summary>
      <description>Failing to exclude geode-core causes the Nebula dependency linter to object to what appear to be circular dependencies.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.build.gradle</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-wan.build.gradle</file>
      <file type="M">geode-rebalancer.build.gradle</file>
      <file type="M">geode-pulse.geode-pulse-test.build.gradle</file>
      <file type="M">geode-pulse.build.gradle</file>
      <file type="M">geode-protobuf.build.gradle</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-experimental-driver.build.gradle</file>
      <file type="M">geode-dunit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-dunit.build.gradle</file>
      <file type="M">geode-cq.build.gradle</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-connectors.build.gradle</file>
      <file type="M">geode-common.build.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat7.build.gradle</file>
      <file type="M">extensions.geode-modules-test.build.gradle</file>
      <file type="M">extensions.geode-modules-session.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="5886" opendate="2018-10-16 00:00:00" fixdate="2018-10-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make extension module dependencies explicit.</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">extensions.session-testing-war.build.gradle</file>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat8.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat7.build.gradle</file>
      <file type="M">extensions.geode-modules-test.build.gradle</file>
      <file type="M">extensions.geode-modules-session.build.gradle</file>
      <file type="M">extensions.geode-modules-session-internal.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="6088" opendate="2018-11-22 00:00:00" fixdate="2018-11-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enable command availability for JDBC commands</summary>
      <description>The JDBC commands should support the GFSH command availability indicator.Commands should only be available when connect to a distributed system.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeDataSourceCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateDataSourceCommand.java</file>
    </fixedFiles>
  </bug>
  <bug id="6091" opendate="2018-11-26 00:00:00" fixdate="2018-11-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Concourse develop pipeline does not receive correct image</summary>
      <description>Changes to our naming convention occurred in early October, but that change was not propagated to the main pipeline.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.create.instance.sh</file>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="6093" opendate="2018-11-26 00:00:00" fixdate="2018-11-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update system-rules dependency from 1.18.0 to 1.19.0</summary>
      <description>om.github.stefanbirkner:system-rules releases are now up to 1.19.0. We should update our dependency from 1.18.0 to 1.19.0.System-Rules is a library of JUnit Rules used in UnitTests, IntegrationTests and DistributedTests for controlling System properties, stdout, stderr, etc.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-dunit.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="6097" opendate="2018-11-28 00:00:00" fixdate="2018-8-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Using primitive datatypes instead of boxed when possible</summary>
      <description>LGTM  fix. Improves performance and prevents superfluous allocation of objects.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.MemberRegionsService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.MemberDetailsService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterSelectedRegionService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterRegionsService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterRegionService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterMembersRGraphService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterDetailsService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.JMXDataUpdater.java</file>
      <file type="M">geode-junit.src.main.java.parReg.query.unittest.NewPortfolio.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.string.IncrExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.string.IncrByFloatExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.string.IncrByExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.string.DecrExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.string.DecrByExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.list.LIndexExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.hash.HIncrByFloatExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.DoubleWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.DistributedSystemBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.memcached.commands.IncrementCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.memcached.commands.DecrementCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.versions.RVVExceptionB.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.versions.RegionVersionHolder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientProxyMembershipID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.ConnectionManagerImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="6102" opendate="2018-11-28 00:00:00" fixdate="2018-12-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add gfsh destroy data-source command</summary>
      <description>As a Geode userI want to destroy the data sources created using the create data-source commandso that I can iterate/make changes.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyDataSourceCommandTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyDataSourceCommand.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyDataSourceCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyJndiBindingCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DestroyJndiBindingFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.jndi.JNDIInvoker.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.functions.DestroyJndiBindingFunctionTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DestroyJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.main.resources.META-INF.services.org.springframework.shell.core.CommandMarker</file>
    </fixedFiles>
  </bug>
  <bug id="611" opendate="2015-11-28 00:00:00" fixdate="2015-12-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove Dependency on LGPL Licensed Findbugs Annoations</summary>
      <description>FindBugs Annoations (SuppressWarnings &amp; SuppressFBWarnings) have been used in 27 files in geode-core and the FindBugs LGPL License is not permitted under ASF policy: http://findbugs.sourceforge.net/There is an Apache Licensed "clean room" implementation of the findbugs annotations&amp;#91;1&amp;#93; and I have asked on the legal-discuss list&amp;#91;2&amp;#93; if theres any reason this can't be used&amp;#91;1&amp;#93; https://github.com/stephenc/findbugs-annotations&amp;#91;2&amp;#93; http://markmail.org/message/ieczgjovzhll76yl</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-assembly.build.gradle</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.SystemFailure.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.util.SingletonValue.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.util.DebuggerSupport.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.util.concurrent.CustomEntryConcurrentHashMap.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.statistics.SampleCollector.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.StatArchiveWriter.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.memcached.commands.GetCommand.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.datasource.AbstractPoolCache.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.versions.RegionVersionVector.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.ClientProxyMembershipID.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.BaseCommand.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.AcceptorImpl.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.AbstractUpdateOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.CompiledOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.admin.jmx.internal.GemFireHealthConfigJmxImpl.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.admin.jmx.internal.AgentImpl.java</file>
      <file type="M">gemfire-core.build.gradle</file>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="6112" opendate="2018-11-29 00:00:00" fixdate="2018-12-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gfsh does not respond to Control-C</summary>
      <description>Gfsh currently does not respond to Control-C (SIGINT) signals. Gfsh should respond to control-c by terminating, as that is the default behavior of applications responding to SIGINT.There should be a unit test for Gfsh responding to all signals.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.unsafe.GfshSignalHandler.java</file>
    </fixedFiles>
  </bug>
  <bug id="6113" opendate="2018-11-29 00:00:00" fixdate="2018-1-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unable to run geode-web http-based dunit tests in IntelliJ</summary>
      <description>I'm trying to run QueryCommandOverHttpDUnitTest from IntelliJ and it fails with the following in the logs:[vm0] Nov 29, 2018 3:48:54 PM org.springframework.web.servlet.DispatcherServlet initServletBean[vm0] SEVERE: Context initialization failed[vm0] org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.springframework.core.annotation.AnnotatedElementUtils.hasAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Z[vm0] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1634)[vm0] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)[vm0] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)[vm0] at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)[vm0] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)[vm0] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)[vm0] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)[vm0] at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)[vm0] at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)[vm0] at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)[vm0] at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:668)[vm0] at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:634)[vm0] at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:682)[vm0] at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:553)[vm0] at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:494)[vm0] at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:171)[vm0] at javax.servlet.GenericServlet.init(GenericServlet.java:244)[vm0] at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:670)[vm0] at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:427)[vm0] at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:760)[vm0] at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:374)[vm0] at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)[vm0] at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)[vm0] at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:847)[vm0] at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:287)[vm0] at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)[vm0] at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)[vm0] at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:138)[vm0] at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:117)[vm0] at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)[vm0] at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)[vm0] at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:138)[vm0] at org.eclipse.jetty.server.Server.start(Server.java:416)[vm0] at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:108)[vm0] at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)[vm0] at org.eclipse.jetty.server.Server.doStart(Server.java:383)[vm0] at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)[vm0] at org.apache.geode.management.internal.JettyHelper.startJetty(JettyHelper.java:165)[vm0] at org.apache.geode.management.internal.ManagementAgent.startHttpService(ManagementAgent.java:306)[vm0] at org.apache.geode.management.internal.ManagementAgent.startAgent(ManagementAgent.java:159)[vm0] at org.apache.geode.management.internal.SystemManagementService.startManager(SystemManagementService.java:432)[vm0] at org.apache.geode.management.internal.beans.ManagementAdapter.handleCacheCreation(ManagementAdapter.java:173)[vm0] at org.apache.geode.management.internal.beans.ManagementListener.handleEvent(ManagementListener.java:115)[vm0] at org.apache.geode.distributed.internal.InternalDistributedSystem.notifyResourceEventListeners(InternalDistributedSystem.java:2201)[vm0] at org.apache.geode.distributed.internal.InternalDistributedSystem.handleResourceEvent(InternalDistributedSystem.java:606)[vm0] at org.apache.geode.internal.cache.GemFireCacheImpl.initialize(GemFireCacheImpl.java:1214)[vm0] at org.apache.geode.internal.cache.GemFireCacheImpl.basicCreate(GemFireCacheImpl.java:799)[vm0] at org.apache.geode.internal.cache.GemFireCacheImpl.create(GemFireCacheImpl.java:785)[vm0] at org.apache.geode.cache.CacheFactory.create(CacheFactory.java:176)[vm0] at org.apache.geode.cache.CacheFactory.create(CacheFactory.java:223)[vm0] at org.apache.geode.distributed.internal.InternalLocator.startCache(InternalLocator.java:652)[vm0] at org.apache.geode.distributed.internal.InternalLocator.startDistributedSystem(InternalLocator.java:639)[vm0] at org.apache.geode.distributed.internal.InternalLocator.startLocator(InternalLocator.java:326)[vm0] at org.apache.geode.distributed.Locator.startLocator(Locator.java:252)[vm0] at org.apache.geode.distributed.Locator.startLocatorAndDS(Locator.java:139)[vm0] at org.apache.geode.test.junit.rules.LocatorStarterRule.startLocator(LocatorStarterRule.java:85)[vm0] at org.apache.geode.test.junit.rules.LocatorStarterRule.before(LocatorStarterRule.java:66)[vm0] at org.apache.geode.test.dunit.rules.ClusterStartupRule.lambda$startLocatorVM$22d9b8a8$1(ClusterStartupRule.java:204)[vm0] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[vm0] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)[vm0] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[vm0] at java.lang.reflect.Method.invoke(Method.java:498)[vm0] at hydra.MethExecutor.executeObject(MethExecutor.java:244)[vm0] at org.apache.geode.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:70)[vm0] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[vm0] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)[vm0] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[vm0] at java.lang.reflect.Method.invoke(Method.java:498)[vm0] at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:361)[vm0] at sun.rmi.transport.Transport$1.run(Transport.java:200)[vm0] at sun.rmi.transport.Transport$1.run(Transport.java:197)[vm0] at java.security.AccessController.doPrivileged(Native Method)[vm0] at sun.rmi.transport.Transport.serviceCall(Transport.java:196)[vm0] at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)[vm0] at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)[vm0] at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683)[vm0] at java.security.AccessController.doPrivileged(Native Method)[vm0] at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)[vm0] at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)[vm0] at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)[vm0] at java.lang.Thread.run(Thread.java:748)[vm0] Caused by: java.lang.NoSuchMethodError: org.springframework.core.annotation.AnnotatedElementUtils.hasAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Z[vm0] at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.isHandler(RequestMappingHandlerMapping.java:173)[vm0] at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:213)[vm0] at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:184)[vm0] at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:127)[vm0] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1692)[vm0] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1630)[vm0] ... 80 moreThe problem appears to be that we're pulling in 2 different versions of spring-core - version 4.2.4 and 4.3.20 and the offending method is missing from 4.2.4; a transitive dependency of spring-shell.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.build.gradle</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-connectors.build.gradle</file>
      <file type="M">geode-dunit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-connectors.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="6117" opendate="2018-11-30 00:00:00" fixdate="2018-2-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make geode-core and geode-cq Java Modules</summary>
      <description>Make geode-core and geode-cq Java Modules such that they can be consumed as modules in a Java 9+ JVM. Use automatic module naming vi manifest</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqServiceVsdStats.java</file>
      <file type="M">settings.gradle</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.codeAnalysis.AnalyzeSerializablesJUnitTestBase.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.internal.ProcessManager.java</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.weblogic.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.StopCQTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteCQ61Test.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.CloseCQTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.cache.query.internal.cq.CqServiceUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.cache.query.internal.cq.CqServiceImplJUnitTest.java</file>
      <file type="M">geode-cq.src.main.resources.org.apache.geode.internal.sanctioned-geode-cq-serializables.txt</file>
      <file type="M">geode-cq.src.main.resources.META-INF.services.org.apache.geode.distributed.internal.DistributedSystemService</file>
      <file type="M">geode-cq.src.main.resources.META-INF.services.org.apache.geode.cache.query.internal.cq.spi.CqServiceFactory</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.internal.CQDistributedSystemService.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.StopCQ.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.MonitorCQ.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetDurableCQs.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetCQStats.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteCQ61.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteCQ.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.CloseCQ.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.BaseCQCommand.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.ServerCQImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqStatisticsImpl.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.GeodeDependencyJarIntegrationTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.expected.jars.txt</file>
      <file type="M">geode-connectors.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.QueryOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalDataSerializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.SecurityServiceFactory.java</file>
      <file type="M">geode-core.src.main.resources.META-INF.services.org.apache.geode.security.internal.server.Authenticator</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-cq.build.gradle</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqDataDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqDataOptimizedExecuteDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqDataUsingPoolDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqDataUsingPoolOptimizedExecuteDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqPerfDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqPerfUsingPoolDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqQueryOptimizedExecuteDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqQueryUsingPoolOptimizedExecuteDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqResultSetUsingPoolDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqResultSetUsingPoolOptimizedExecuteDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqStatsDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqStatsOptimizedExecuteDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqStatsUsingPoolDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.CqStatsUsingPoolOptimizedExecuteDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.PartitionedRegionCqQueryOptimizedExecuteDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.cq.dunit.PrCqUsingPoolOptimizedExecuteDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.internal.cache.tier.sockets.DurableClientTestBase.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.security.ClientCQPostAuthorizationDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.security.CQPDXPostProcessorDUnitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.security.CQPostProcessorDunitTest.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.security.MultiUserDurableCQAuthzDUnitTest.java</file>
      <file type="M">geode-cq.src.integrationTest.java.org.apache.geode.codeAnalysis.AnalyzeCQSerializablesJUnitTest.java</file>
      <file type="M">geode-cq.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.client.internal.CloseCQOp.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.client.internal.CreateCQOp.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.client.internal.CreateCQWithIROp.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.client.internal.GetDurableCQsOp.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.client.internal.ServerCQProxyImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.client.internal.StopCQOp.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.ClientCQImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqAttributesMutatorImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqConflatable.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqEventImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqListenerImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqQueryImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqServiceFactoryImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqServiceImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.internal.cq.CqServiceStatisticsImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="6118" opendate="2018-11-30 00:00:00" fixdate="2018-12-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>jdbc-mapping gfsh commands should accept &amp;#39;/&amp;#39; in front of region name</summary>
      <description>The jdbc-mapping gfsh commands should work the same as typing region name without the prefix '/'Current behavior: gfsh&gt;create jdbc-mapping --region=/LargeRegion --data-source=datasource --pdx-name="LargeTableDemo" --table=largetable A region named /LargeRegion must already exist.gfsh&gt;create jdbc-mapping --region=LargeRegion --data-source=datasource --pdx-name="LargeTableDemo" --table=largetable (Experimental)Member | Status | Message ------- | ------ | ------------------------------------------------------ server1 | OK | Created JDBC mapping for region LargeRegion on server1 server2 | OK | Created JDBC mapping for region LargeRegion on server2Changes to configuration for group 'cluster' are persisted.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandDunitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="6119" opendate="2018-11-30 00:00:00" fixdate="2018-12-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document that we support Tomcat 9</summary>
      <description>Geode 1.8 went out without documenting that we added support for Tomcat 9.  Revise the documentation to reflect the change.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tomcat.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tomcat.changing.gf.default.cfg.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.quick.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="6123" opendate="2018-12-3 00:00:00" fixdate="2018-12-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Code cleanup: gradle dependency declarations should be consistent in style</summary>
      <description>Most dependencies are declared as:compile '&lt;group&gt;:&lt;name&gt;:&lt;version&gt;' but some few are declared ascompile group: '&lt;group&gt;', name: '&lt;name&gt;', version: '&lt;version&gt;'We should be consistent in our approach.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.test.gradle</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-lucene.geode-lucene-test.build.gradle</file>
      <file type="M">geode-connectors.build.gradle</file>
      <file type="M">geode-assembly.geode-assembly-test.build.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">extensions.geode-modules-session.build.gradle</file>
      <file type="M">buildSrc.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="6127" opendate="2018-12-3 00:00:00" fixdate="2018-12-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document gfsh create jndi-binding changes</summary>
      <description>Update the documentation with changes in the gfsh create jndi-binding command made in GEODE-5861.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="6129" opendate="2018-12-3 00:00:00" fixdate="2018-12-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make dependencies explicit in geode-wan</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-wan.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="6133" opendate="2018-12-4 00:00:00" fixdate="2018-10-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Dependency on org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR should change to System.lineSeparator()</summary>
      <description>org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR has been deprecated in favor of System.lineSeparator().All Geode classes importing and using org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR, System.getProperty("line.separator") or something similar should be changed to use System.lineSeparator().</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.compiler.UncompiledSourceCodeTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.RequiresGeodeHome.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.compiler.UncompiledSourceCode.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.compiler.JavaCompiler.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.internal.process.AbstractProcessStreamReaderIntegrationTest.java</file>
      <file type="M">geode-junit.src.integrationTest.java.org.apache.geode.test.compiler.JavaCompilerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.SortLogFileTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.LogWriterImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.CommandResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.ProcessStreamReader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.NonBlockingProcessStreamReader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.BlockingProcessStreamReader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.SortLogFile.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.MergeLogFiles.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.LogWriterImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.LogFileParser.java</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.logging.MergeLogFilesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6135" opendate="2018-12-4 00:00:00" fixdate="2018-1-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add benchmarks to geode CI</summary>
      <description>Add a job to run the benchmarks to https://concourse.apachegeode-ci.info. Initially this job doesn't need to be on the main tab, it can just output a comparison of the current develop against a baseline revision of geode.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
      <file type="M">ci.images.alpine-tools.Dockerfile</file>
    </fixedFiles>
  </bug>
  <bug id="6404" opendate="2019-2-13 00:00:00" fixdate="2019-2-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>review use of computeIfAbsent across code base</summary>
      <description>It looks like computeIfAbsent on a ConcurrentHashMap is a blocking method.  This may run against what the developer was expecting when using the method.  This ticket to for someone to go through code base and modify (if necessary) with a get/null check before computing or some other pattern.See https://bugs.openjdk.java.net/browse/JDK-8161372  Related to GEODE-6403 </description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.FlatFormatSerializer.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.CqServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientHealthMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupDefinition.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalDistributedSystem.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.AttributeDescriptor.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="6707" opendate="2019-4-25 00:00:00" fixdate="2019-7-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh export logs does not export rolled over GC logs</summary>
      <description>If GC logs are configured to land in the same directory as Geode server logs then the current GC log is exported when we run gfsh&gt;export logs. However if the rolled over GC logs are not exported.This happens because the rolled over GC logs are of the form server_gc.log.16 and gfsh export command logs for files ending with *.log however GC log rolling causes the files to end with a file number. Note:  If GC logs are written a directory other than where server logs end up, then even the latest GC log doesn't get exported. GEODE-6706 talks about that. </description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.LogExporter.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.util.LogExporterFileIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6821" opendate="2019-5-30 00:00:00" fixdate="2019-6-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Multiple Serial GatewaySenders that are primary in different members can cause a distributed deadlock</summary>
      <description>A test with this scenario causes a distributed deadlock.3 servers each with: a function that performs a random region operation on the input region a replicated region on which the function is executed two regions each with a serial AEQ (the type of region could be either replicate or partitioned)1 multi-threaded client that repeatedly executes the function with random region names and operations.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.LocalRegionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.CacheOperationMessageTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RemoveAllPRMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PutMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PutAllPRMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PartitionMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.DestroyMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedCacheOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DestroyOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractUpdateOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionMessage.java</file>
    </fixedFiles>
  </bug>
  <bug id="6822" opendate="2019-5-31 00:00:00" fixdate="2019-6-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Deploying a jar causes a new class loader to be created, causing possible mismatch</summary>
      <description>When a jar is deployed, a new class loader is created.  Deserialized objects in the system will no longer match because the objects classes are from different loaders.  This is true even if the newly deployed jar is unrelated to the deserialized objects  This can be problematic if we have non primitive region keys.  </description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.JarDeployer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DeployedJar.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.ClassPathLoader.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.ClassPathLoaderDeployTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6831" opendate="2019-6-5 00:00:00" fixdate="2019-7-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Versioning of JAR Files doc is wrong</summary>
      <description>https://geode.apache.org/docs/guide/19/configuring/cluster_config/deploying_application_jars.html This document has such a paragraph:    Versioning of JAR Files When you deploy JAR files to a cluster or member group, the JAR file is modified to indicate version information in its name. Each JAR filename is prefixed with|vf.gf#|and contains a version number at the end of the filename. For example, if you deploy|MyClasses.jar|five times, the filename is displayed as|vf.gf#MyClasses.jar#5|when you list all deployed jars. but,in my environment, it is shown as follows: gfsh&gt;list deployed Member  |      JAR       | JAR Location ------- | -------------- | --------------------------------------------------- server1 | ra.jar         | /media/liyujue/data/geode/server1/ra.v1.jar server1 | mx4j-3.0.2.jar | /media/liyujue/data/geode/server1/mx4j-3.0.2.v1.jar server2 | ra.jar         | /media/liyujue/data/geode/server2/ra.v1.jar server2 | mx4j-3.0.2.jar | /media/liyujue/data/geode/server2/mx4j-3.0.2.v1.jarThe description here is incorrect.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.configuring.cluster.config.deploying.application.jars.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="6862" opendate="2019-6-13 00:00:00" fixdate="2019-6-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fail dunit suspect string check if log output contains {}</summary>
      <description>I propose adding `{}` to the dunit suspect string check. The presence of `{}` probably indicates a malformed Log4J log statement is missing one or more parameters.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.test.java.org.apache.geode.test.greplogs.LogConsumerTest.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.greplogs.Patterns.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.greplogs.LogConsumer.java</file>
    </fixedFiles>
  </bug>
  <bug id="6870" opendate="2019-6-17 00:00:00" fixdate="2019-6-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unsuccessful creation of non-persisted OVERFLOW region with custom disk store</summary>
      <description>When ordering creation of non-persisted OVERFLOW region with custom disk store we get following error message: gfsh&gt;create disk-store --name=teststore --dir=/diskstoreMember | Status | Message------ | ------ | ----------------------------server | OK | Created disk store teststoreCluster configuration for group 'cluster' is updated.gfsh&gt;create region --name=testreg --type=REPLICATE_OVERFLOW --eviction-action=overflow-to-disk --eviction-entry-count=1000 --disk-store=teststoreOnly regions with persistence or overflow to disk can specify DiskStore. template-region region "null" is not persistent.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6871" opendate="2019-6-17 00:00:00" fixdate="2019-10-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Disk free space info exposed via JMX</summary>
      <description>Given I need to scale down or scale up my servers based on usageWhen I setup my monitoring of JMX metrics through an MBeanThen I have the ability to see Disk Free PercentageAND Disk Free in Bytes</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.DiskStoreMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.DiskStoreMBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.DiskStoreMXBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.DiskStoreImplIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6875" opendate="2019-6-17 00:00:00" fixdate="2019-7-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove unused code and deprecated/internal API usages in Tomcat session state module</summary>
      <description>The Tomcat session state module has significant amounts of dead code as well as deprecated/internal API usages.  We should make a pass through and clean this up.  These reports can also be generated via IntelliJ's built-in report tooling if it is more convenient. Go through the following report and delete all fully unused codehttps://drive.google.com/open?id=1W1bbKw2JE7CvcDajE9MyQhpCTSR_IeGw Go through the following report and replace deprecated API usage with correct API:https://drive.google.com/open?id=1b7RvM9Dbf85HsFLqVF7r5xYTEn5PbHOm Identify areas we use internal Geode APIs and remove the usages if possible, or determine why we cannot use themhttps://docs.google.com/document/d/1pvYIj0yvjy6xqRPzLEqE_Mp4t8Lj5yK45DbAoup-QZg/edit?usp=sharing</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.gatewaydelta.GatewayDeltaCreateEvent.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">extensions.session-testing-war.src.main.java.org.apache.geode.modules.session.functions.GetSessionDestroyedCount.java</file>
      <file type="M">extensions.session-testing-war.src.main.java.org.apache.geode.modules.session.functions.GetSessionCreatedCount.java</file>
      <file type="M">extensions.session-testing-war.src.main.java.org.apache.geode.modules.session.CommandServlet.java</file>
      <file type="M">extensions.geode-modules.src.test.java.org.apache.geode.modules.util.CreateRegionFunctionJUnitTest.java</file>
      <file type="M">extensions.geode-modules.src.test.java.org.apache.geode.modules.util.ClassLoaderObjectInputStreamTest.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.util.TouchReplicatedRegionEntriesFunction.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.util.TouchPartitionedRegionEntriesFunction.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.util.SessionCustomExpiry.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.util.RegionSizeFunction.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.util.RegionHelper.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.util.RegionConfigurationCacheListener.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.util.RegionConfiguration.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.util.DebugCacheListener.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.util.CreateRegionFunction.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.Tomcat6DeltaSessionManager.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.SessionCache.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.JvmRouteBinderValve.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.internal.DeltaSessionUpdateAttributeEvent.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.internal.DeltaSessionStatistics.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.internal.DeltaSessionDestroyAttributeEvent.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.internal.DeltaSessionAttributeEventBatch.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.DeltaSessionManager.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.DeltaSessionFacade.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.DeltaSession.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.CommitSessionValve.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.callback.SessionExpirationCacheListener.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.callback.LocalSessionCacheWriter.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.callback.LocalSessionCacheLoader.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.AbstractSessionCache.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.AbstractCacheLifecycleListener.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.bootstrap.PeerToPeerCache.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.bootstrap.LifecycleTypeAdapter.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.bootstrap.ClientServerCache.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.bootstrap.AbstractCache.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.gatewaydelta.GatewayDeltaForwarderCacheListener.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.gatewaydelta.GatewayDeltaEventApplicationCacheListener.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.gatewaydelta.GatewayDeltaDestroyEvent.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.common.AbstractSessionCache.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.common.SessionCache.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.common.SessionExpirationCacheListener.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.attributes.AbstractSessionAttributes.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.attributes.DeltaEvent.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.attributes.DeltaQueuedSessionAttributes.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.attributes.DeltaSessionAttributes.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.DummySessionManager.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.GemfireHttpSession.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.GemfireSessionException.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.GemfireSessionManager.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.ListenerEventType.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.util.NamedThreadFactory.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.util.TypeAwareMap.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.jmx.SessionStatistics.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.jmx.SessionStatisticsMXBean.java</file>
      <file type="M">extensions.geode-modules-session.src.integrationTest.java.org.apache.geode.modules.session.installer.InstallerJUnitTest.java</file>
      <file type="M">extensions.geode-modules-session.src.integrationTest.java.org.apache.geode.modules.session.internal.filter.AbstractListener.java</file>
      <file type="M">extensions.geode-modules-session.src.integrationTest.java.org.apache.geode.modules.session.internal.filter.CommonTests.java</file>
      <file type="M">extensions.geode-modules-session.src.integrationTest.java.org.apache.geode.modules.session.internal.filter.HttpSessionAttributeListenerImpl.java</file>
      <file type="M">extensions.geode-modules-session.src.integrationTest.java.org.apache.geode.modules.session.internal.filter.HttpSessionBindingListenerImpl.java</file>
      <file type="M">extensions.geode-modules-session.src.integrationTest.java.org.apache.geode.modules.session.internal.filter.RendezvousManager.java</file>
      <file type="M">extensions.geode-modules-session.src.integrationTest.java.org.apache.geode.modules.session.internal.filter.ServletRequestAttributeListenerImpl.java</file>
      <file type="M">extensions.geode-modules-session.src.integrationTest.java.org.apache.geode.modules.session.internal.filter.ServletRequestListenerImpl.java</file>
      <file type="M">extensions.geode-modules-session.src.integrationTest.java.org.apache.geode.modules.session.junit.ChildFirstClassLoader.java</file>
      <file type="M">extensions.geode-modules-session.src.integrationTest.java.org.apache.geode.modules.session.junit.NamedRunner.java</file>
      <file type="M">extensions.geode-modules-session.src.integrationTest.java.org.apache.geode.modules.session.junit.PerTestClassLoaderRunner.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.org.apache.geode.modules.session.filter.SessionCachingFilter.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.org.apache.geode.modules.session.filter.SessionListener.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.org.apache.geode.modules.session.installer.args.Argument.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.org.apache.geode.modules.session.installer.args.ArgumentValues.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.org.apache.geode.modules.session.installer.args.UsageException.java</file>
      <file type="M">extensions.geode-modules-session.src.main.java.org.apache.geode.modules.session.installer.Installer.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.Callback.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.EmbeddedTomcat.java</file>
      <file type="M">extensions.geode-modules-test.src.main.java.org.apache.geode.modules.session.TestSessionsBase.java</file>
      <file type="M">extensions.geode-modules-tomcat7.src.main.java.org.apache.geode.modules.session.catalina.DeltaSession7.java</file>
      <file type="M">extensions.geode-modules-tomcat7.src.main.java.org.apache.geode.modules.session.catalina.Tomcat7DeltaSessionManager.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.distributedTest.java.org.apache.geode.modules.session.EmbeddedTomcat8.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.distributedTest.java.org.apache.geode.modules.session.TestSessionsTomcat8Base.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.distributedTest.java.org.apache.geode.modules.session.Tomcat8SessionsClientServerDUnitTest.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.distributedTest.java.org.apache.geode.modules.session.Tomcat8SessionsDUnitTest.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.main.java.org.apache.geode.modules.session.catalina.DeltaSession8.java</file>
      <file type="M">extensions.geode-modules-tomcat8.src.main.java.org.apache.geode.modules.session.catalina.Tomcat8DeltaSessionManager.java</file>
      <file type="M">extensions.geode-modules-tomcat9.src.main.java.org.apache.geode.modules.session.catalina.DeltaSession9.java</file>
      <file type="M">extensions.geode-modules-tomcat9.src.main.java.org.apache.geode.modules.session.catalina.Tomcat9DeltaSessionManager.java</file>
      <file type="M">extensions.geode-modules.src.integrationTest.java.org.apache.geode.modules.session.Tomcat6SessionsJUnitTest.java</file>
      <file type="M">extensions.geode-modules.src.integrationTest.java.org.apache.geode.modules.util.BootstrappingFunctionTest.java</file>
      <file type="M">extensions.geode-modules.src.integrationTest.java.org.apache.geode.modules.util.ModuleFunctionsSecurityTest.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.gatewaydelta.AbstractGatewayDeltaEvent.java</file>
    </fixedFiles>
  </bug>
  <bug id="6883" opendate="2019-6-17 00:00:00" fixdate="2019-1-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Move the membership code into a separate gradle sub-project</summary>
      <description>In order to make membership more testable, we want to move the membership code out of geode-core and into a new geode-membership gradle sub-project.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.JoinRequestMessage.java</file>
      <file type="M">settings.gradle</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-wan.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-wan.build.gradle</file>
      <file type="M">geode-gfsh.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-gfsh.build.gradle</file>
      <file type="M">geode-cq.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-cq.build.gradle</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedCacheOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.TcpHandlerNoOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.Transport.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.StatRecorder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.MembershipInformationImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSPingPonger.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSMemberWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncryptionCipherPool.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.AddressManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.AbstractGMSMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.membership.HostAddress.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.MembershipStatisticsNoOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.MembershipLocatorStatisticsNoOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.MembershipLocatorBuilderImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.MembershipListenerNoOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.MembershipBuilderImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.MemberDataBuilderImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.PrimaryHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.PeerLocatorRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.MembershipLocatorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.GetViewRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.LifecycleListenerNoOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.GMSMembershipView.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.GMSMemberData.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.AuthenticatorNoOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.StopShunningMarker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.QuorumChecker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MessageListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.Message.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MemberStartupException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MemberShunnedException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MembershipStatistics.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MembershipLocatorStatistics.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MembershipLocatorBuilder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MembershipLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MembershipListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MembershipInformation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MembershipConfigurationException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MembershipConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MembershipClosedException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MembershipBuilder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MemberIdentifierFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MemberIdentifier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MemberDisconnectedException.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MemberDataBuilder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MemberData.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.LifecycleListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.Authenticator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.expected.jars.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.geode-assembly-test.src.main.java.org.apache.geode.session.tests.TomcatInstall.java</file>
      <file type="M">geode-assembly.geode-assembly-test.build.gradle</file>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">extensions.geode-modules-assembly.release.session.bin.modify.war</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.MembershipView.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.adapter.GMSMembershipManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.adapter.GMSMemberAdapter.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache30.DistributedMulticastRegionDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.StartupMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.GMSMembership.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.MembershipView.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.api.Membership.java</file>
      <file type="M">geode-wan.src.upgradeTest.java.org.apache.geode.cache.wan.WANRollingUpgradeMultipleReceiversDefinedInClusterConfiguration.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.auth.GMSAuthenticatorWithSecurityManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.auth.GMSAuthenticatorWithAuthenticatorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.auth.AbstractGMSAuthenticatorTestCase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.Handshake.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.interfaces.MessageHandler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.auth.GMSAuthenticator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCacheForClientAccess.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache30.ReconnectedCacheServerDUnitTest.java</file>
      <file type="M">gradle.check-pom.gradle</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.distributed.internal.membership.gms.messenger.jgroups-mcast.xml</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.distributed.internal.membership.gms.messenger.jgroups-config.xml</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.rules.DistributedRule.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeaveTestHelper.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.distributed.internal.membership.gms.MembershipManagerHelper.java</file>
      <file type="M">geode-core.src.upgradeTest.java.org.apache.geode.internal.cache.rollingupgrade.RollingUpgradeDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.NetViewJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.MembershipDependenciesJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.GMSMemberJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.adapter.auth.AbstractGMSAuthenticatorTestCase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.messages.ConfigurationResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.callbacks.ConfigurationChangeListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.ConnectionTable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.InternalDataSerializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DSFIDFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientProxyMembershipID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ReplyProcessor21.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.QuorumChecker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.NetView.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.NetMember.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.MembershipManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.MemberServices.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.MemberFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.InternalDistributedMember.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.SuspectMember.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.Services.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.ServiceConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.NetLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.mgr.LocalViewMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.mgr.GMSMembershipManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.MembershipInformation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGAddress.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSQuorumChecker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncrypt.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.ViewAckMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.SuspectRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.SuspectMembersMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.RemoveMemberMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.NetworkPartitionMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.LeaveRequestMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.JoinResponseMessage.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache30.ReconnectDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.ClusterCommunicationsDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.DistributedMemberDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.DistributedSystemDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.internal.ClusterDistributionManagerDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.internal.tcpserver.TcpServerBackwardCompatDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.LocatorDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.logging.LoggingWithReconnectDistributedTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.metrics.MeterSubregistryReconnectDistributedTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.client.ClientCacheFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.fd.GMSHealthMonitorJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocatorIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocatorRecoveryIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSEncryptJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSQuorumCheckerJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessengerJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.mgr.GMSMembershipManagerJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.MembershipJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ClusterDistributionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalDistributedSystem.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.LonerDistributionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.adapter.auth.GMSAuthenticator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.DistributedMembershipListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.fd.GMSHealthMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.GMSMember.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.GMSMemberFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.GMSUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.interfaces.Authenticator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.interfaces.HealthMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.interfaces.JoinLeave.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.interfaces.Locator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.interfaces.Manager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.interfaces.Messenger.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.interfaces.Service.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.FindCoordinatorRequest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.FindCoordinatorResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.GetViewResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.FinalCheckPassedMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.HasMemberID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.HeartbeatMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.HeartbeatRequestMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messages.InstallViewMessage.java</file>
    </fixedFiles>
  </bug>
  <bug id="6892" opendate="2019-6-19 00:00:00" fixdate="2019-6-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Default entryCount for newly created region to 0</summary>
      <description>Using the v2 API, if a newly created region is immediately listed, it may show the entryCount as -1. This is due MBeans being queried for this data and those beans may not be ready at the time of querying. This will be confusing to users.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.distributedTest.java.org.apache.geode.management.internal.rest.RegionManagementSecurityRestDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigManagerTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigManager.java</file>
    </fixedFiles>
  </bug>
  <bug id="6893" opendate="2019-6-19 00:00:00" fixdate="2019-7-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh version --full claims &amp;#39;HEAD&amp;#39; as branch, when built from Concourse</summary>
      <description>Concourse uses detached-head to lock a job to a given SHA. The way jgit determines branch, for embedding into the version file, needs us to be on-branch, but still at the SHA from the resource.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
      <file type="M">ci.scripts.execute.tests.sh</file>
      <file type="M">ci.scripts.execute.publish.sh</file>
      <file type="M">ci.scripts.execute.build.sh</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="6910" opendate="2019-6-25 00:00:00" fixdate="2019-8-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Aggregate Functions Docs</summary>
      <description>Add individual documentation for each aggregate function to the SELECT Statement page.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.getting.started.querying.quick.reference.html.md.erb</file>
      <file type="M">geode-docs.developing.query.select.the.select.statement.html.md.erb</file>
      <file type="M">geode-docs.developing.query.select.aggregates.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="6911" opendate="2019-6-25 00:00:00" fixdate="2019-7-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix SUM short description</summary>
      <description>Regarding the first paragraph in OQL Aggregate Functions:The aggregate functions MIN, MAX, AVG, AVG over a DISTINCT expression, SUM over a DISTINCT expression, COUNT, and COUNT over a DISTINCT expression are supported.It makes the user think that the SUM function can be only used in conjunction with the DISTINCT expression, which is false. It should be changed to.The aggregate functions MIN, MAX, AVG, AVG over a DISTINCT expression, SUM, SUM over a DISTINCT expression, COUNT, and COUNT over a DISTINCT expression are supported.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.select.aggregates.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="6912" opendate="2019-6-25 00:00:00" fixdate="2019-7-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix GROUP BY short description</summary>
      <description>Regarding the first paragraph in OQL Aggregate Functions:The GROUP BY extension is also supported where appropriate.Is might not be clear to the user when the GROUP BY aggregate function is appropriate or not, we need to describe this with more detail.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.select.aggregates.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="6918" opendate="2019-6-25 00:00:00" fixdate="2019-8-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log an INFO level message when all actions performed for a cache server startup are completed</summary>
      <description>Log an INFO level message when all actions performed for a cache server startup are completed.Below is a complete list of all actions performed for a cache server startup: Start logging to gemfire log file Load and init DistributedSystemServices &amp;#91;Optional&amp;#93; Initialize DataSerializers and optional filter &amp;#91;Optional&amp;#93; Create off heap storage &amp;#91;Optional&amp;#93; Lock memory &amp;#91;Optional&amp;#93; Start embedded locator Create thread pools and join membership Start statistics sampling Start alerting service Wire up metrics publishing &amp;#91;Optional&amp;#93; Request cluster config from locator Start creating cache Create HTTP service &amp;#91;Optional&amp;#93; Deploy JARs from cluster config Create MemberMXBean Initialize cache services &amp;#91;Optional&amp;#93; Create regions from cache xml cluster config &amp;#91;Optional&amp;#93; Create regions from cache xml file and PDX region &amp;#91;Async&amp;#93; &amp;#91;Optional&amp;#93; Begin redundancy recovery &amp;#91;Async&amp;#93; &amp;#91;Optional&amp;#93; Begin recovery of values from disk &amp;#91;Optional&amp;#93; Create OQL indices &amp;#91;Optional&amp;#93; Complete get initial image (GII) &amp;#91;Optional&amp;#93; Create RegionMXBean &amp;#91;Optional&amp;#93; Start client/server acceptor &amp;#91;Optional&amp;#93; Create CacheServerMXBean &amp;#91;Optional&amp;#93; Assign buckets &amp;#91;Async&amp;#93; &amp;#91;Optional&amp;#93; Rebalance buckets</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.main.java.org.apache.geode.internal.AvailablePortHelper.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.control.InternalResourceManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.ServerLauncherTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.ServerLauncherBuilderTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.InternalResourceManager.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.ServerLauncherWithProviderRegressionTest.java</file>
      <file type="M">geode-assembly.src.acceptanceTest.java.org.apache.geode.metrics.GatewayReceiverMetricsTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.remote.CommandExecutorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterAsyncEventQueueCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.LocatorClusterManagementServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.config.JAXBServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.config.JAXBService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.LocatorLauncher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.MemberServices.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.MemberFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.GMSMemberFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceService.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.logging.LoggingWithLocatorIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.MembershipJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocatorRecoveryIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocatorIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistentBucketRecovererTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.control.RebalanceOperationDistributedTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ServerLauncher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.OplogSet.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PRHARedundancyProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RegionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.RecoveryRunnable.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PersistentBucketRecoverer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.CreateMissingBucketsTask.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.CreateBucketMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.MembershipListener.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.xmlcache.CacheCreationJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.ClientCacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PersistentOplogSetTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PersistentOplogSet.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PRHARedundancyProviderTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.control.RebalanceOperationDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
    </fixedFiles>
  </bug>
  <bug id="6938" opendate="2019-7-8 00:00:00" fixdate="2019-7-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Correctly log dunit test history</summary>
      <description>DUnit logs currently show:Previously run tests: [DiskStoreCommandsDUnitTest.testExportOfflineDiskStore][setup] START TEST org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.testExportOfflineDiskStore</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.internal.TestHistoryLogger.java</file>
    </fixedFiles>
  </bug>
  <bug id="6941" opendate="2019-7-8 00:00:00" fixdate="2019-1-8 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>commands/code in goede-core should use the auto-generated configuration objects</summary>
      <description>some gfsh commands have started using these configuration objects for xml persistence, and they are using the modified classes, we should move these modified convenience methods into some utility methods and make sure these classes are using the auto-generated xml domain objects as it is.1. regenerate the jaxb objects into an internal package in geode-core2. modify the gfsh commands in core to use these objects instead of the objects in geode-management3. leave the geode-management objects intact for now.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.config.JAXBServiceTest.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.RegionManagementController.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.ClusterManagementSecurityRestIntegrationTest.java</file>
      <file type="M">geode-web-management.src.distributedTest.java.org.apache.geode.management.client.ClientClusterManagementServiceDUnitTest.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandDUnitTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.RegionTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.cache.configuration.CacheElementTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.cache.configuration.CacheElementJsonMappingTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.ClientClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.Region.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.Pdx.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.MemberConfig.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.Index.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.GatewayReceiver.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ConfigurationResult.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementRealizationResult.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementRealizationException.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementListResult.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.XSDRootElement.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.ServerType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.SerializationRegistrationType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.ResourceManagerType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionConfig.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionAttributesType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionAttributesScope.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionAttributesMirrorType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionAttributesIndexUpdateType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionAttributesDataPolicy.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.PoolType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.PdxType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.ParameterType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.package-info.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.ObjectType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.JndiBindingsType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.GatewayReceiverConfig.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.FunctionServiceType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.EnumReadableWritable.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.EnumActionDestroyOverflow.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.DynamicRegionFactoryType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.DiskStoreType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.DiskDirType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.DiskDirsType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.DeclarableType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.ClassNameType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.CacheTransactionManagerType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.CacheElement.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.CacheConfig.java</file>
      <file type="M">geode-lucene.src.main.resources.org.apache.geode.internal.sanctioned-geode-lucene-serializables.txt</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.assertions.ClusterManagementRealizationResultAssert.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.assertions.ClusterManagementListResultAssert.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.RegionConfigValidatorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.MemberValidatorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.converters.RegionConverterTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.LocatorClusterManagementServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.ClusterManagementResultTest.java</file>
      <file type="M">geode-management.build.gradle</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.RestfulEndpoint.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.AbstractConfiguration.java</file>
      <file type="M">geode-management.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-assembly.geode-assembly-test.src.main.java.org.apache.geode.test.junit.rules.HttpResponseAssert.java</file>
      <file type="M">geode-assembly.src.acceptanceTest.resources.ManagementClientCreateRegion.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.client.CreateRegionWithDiskstoreAndSecurityDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClientClusterManagementServiceDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClientClusterManagementSSLTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClusterManagementLocatorReconnectDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClusterManagementServiceOnServerTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ListIndexManagementDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ListRegionManagementDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ManagementRequestLoggingDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.RebalanceManagementDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.RegionManagementDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ServerRestartTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-common.src.main.java.org.apache.geode.lang.Identifiable.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateDataSourceCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyDataSourceCommand.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.internal.CacheConfigDAODUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.api.RegionAPIDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandPersistsConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigMutatorIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizerIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.AlterAsyncEventQueueCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CacheRealizationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.converters.RegionConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.ConfigurationManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.ConfigurationRealizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.CacheElementValidator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.ConfigurationValidator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.MemberValidator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.RegionConfigValidator.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-management-serializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.CacheConfigTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.DeclarableTypeTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="6945" opendate="2019-7-8 00:00:00" fixdate="2019-8-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>geode-managment should create its own set of configuration objects for IndexConfiguration</summary>
      <description>IndexConfigurationonly add the supported attributesmodify the implementation of ConfigurationManager to do the bridging between the configuration objects and xml domain objects</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.RegionTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ListIndexManagementDUnitTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.AssemblyContentsIntegrationTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-management-serializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.RegionConfigTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.RegionNameValidationTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionConfig.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.cache.configuration.CacheElementJsonMappingTest.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.RegionManagementController.java</file>
      <file type="M">geode-assembly.src.acceptanceTest.resources.ManagementClientCreateRegion.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.client.CreateRegionWithDiskstoreAndSecurityDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClientClusterManagementServiceDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClientClusterManagementSSLTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClusterManagementLocatorReconnectDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClusterManagementServiceOnServerTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ListRegionManagementDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ManagementRequestLoggingDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.RebalanceManagementDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.RegionManagementDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ServerRestartTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.api.RegionAPIDUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigMutatorIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizerIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CacheRealizationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.RegionConfigValidator.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.ClusterManagementResultTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.LocatorClusterManagementServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.CacheElementValidatorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.MemberValidatorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.RegionConfigValidatorTest.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.configuration.RegionConfigTest.xml</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionType.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.cache.configuration.CacheElementTest.java</file>
      <file type="M">geode-web-management.src.distributedTest.java.org.apache.geode.management.client.ClientClusterManagementServiceDUnitTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.JsonSerializationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.converters.RegionConverter.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.converters.RegionConverterTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.Region.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.RegionType.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.management.internal.cli.commands.CreateRegionCommandTest.xml</file>
    </fixedFiles>
  </bug>
  <bug id="6947" opendate="2019-7-8 00:00:00" fixdate="2019-7-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>geode-managment should create its own set of configuration objects for PdxConfiguration</summary>
      <description>PdxConfigurationonly add the supported attributesmodify the implementation of ConfigurationManager to do the bridging between the configuration objects and xml domain objects</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.PdxManagementController.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.PdxManagementTest.java</file>
      <file type="M">geode-web-management.src.distributedTest.java.org.apache.geode.management.client.ConfigurePDXDUnitTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.cache.configuration.PdxTypeTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.cli.domain.ClassName.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.RestfulEndpoint.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionAttributesType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.PdxType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.DeclarableType.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.domain.ClassNameTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.converters.ClassNameConverterTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-management-serializables.txt</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.PdxManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.domain.DeclarableTypeInstantiator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionFunctionArgs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionAttributesWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.converters.ClassNameConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
    </fixedFiles>
  </bug>
  <bug id="6949" opendate="2019-7-9 00:00:00" fixdate="2019-7-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Improve format of &lt;client-cache&gt; reference</summary>
      <description>The &lt;cache&gt; reference section has been prettied-up to remove table numbers and standardize subtopic headings for attributes. The &lt;client-cache&gt; section would benefit from receiving the same treatment.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.client-cache.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="695" opendate="2015-12-17 00:00:00" fixdate="2015-5-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unable to export cluster config on Windows</summary>
      <description>Basic setup: start 1 locator and 4 servers create regions invoke the following:gfsh&gt;export cluster-configuration --zip-file-name=myExport.zipLocator | Error-------- | ------------------------------------------------------------------------------------------------------------------------------------------------locator1 | C:\marktest\locator1\cluster_config\cluster-config-2015-12-17 06:12:38.108.zip (The filename, directory name, or volume label syntax is incorr..</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.configuration.ZipUtilsJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.configuration.utils.ZipUtils.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.functions.ExportSharedConfigurationFunction.java</file>
    </fixedFiles>
  </bug>
  <bug id="6991" opendate="2019-7-19 00:00:00" fixdate="2019-11-19 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Create AlterQueryService GFSH Command</summary>
      <description>As a Geode user I want to configure several aspects of the query service so that I can change the method invocation authorizer.The Method Invocation Authorizer should be configurable / exchangeable in runtime (it doesn’t need to be an instantaneous update, eventual consistency is tolerable) and there can only be one authorizer configured per cluster: alter query-service --method-authorizer=test.Authorizer{'param':'value'}. Add Unit, Integration and Distributed tests for the new command.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CommandAvailabilityIndicator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.QueryConfigurationServiceImpl.java</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
    </fixedFiles>
  </bug>
  <bug id="6992" opendate="2019-7-19 00:00:00" fixdate="2019-10-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Deprecate allowUntrustedMethodInvocation System Property</summary>
      <description>Deprecate the system property gemfire.QueryService.allowUntrustedMethodInvocation.Register a warning message on the logs whenever the member detects that the property is being used so our users are aware of the deprecation.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.DefaultQueryService.java</file>
    </fixedFiles>
  </bug>
  <bug id="6993" opendate="2019-7-19 00:00:00" fixdate="2019-11-19 01:00:00" resolution="Done">
    <buginformation>
      <summary>Documentation for alter query-service command</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.quick.ref.commands.by.area.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.gfsh.quick.reference.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.alter.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.cache.xml.2.gfsh.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.authorization.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.persist.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug id="7002" opendate="2019-7-22 00:00:00" fixdate="2019-7-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove gemfire.enable-experimental-cluster-management-service feature flag</summary>
      <description>Use a geode property: enable-management-rest-serviceand change /v2 to /experimental</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.AbstractManagementController.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.PdxManagementTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.MemberManagementServiceRestIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.JsonSerializationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.GeneralManagementServiceRestIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.ClusterManagementSecurityRestIntegrationTest.java</file>
      <file type="M">geode-web-management.src.distributedTest.java.org.apache.geode.management.client.MemberManagementServiceDUnitTest.java</file>
      <file type="M">geode-web-management.src.distributedTest.java.org.apache.geode.management.client.ConfigurePDXDUnitTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.MemberConfigTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.cache.configuration.PdxTypeTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.cache.configuration.GatewayReceiverConfigTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.ClientClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.RestfulEndpoint.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementOperation.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.gfsh.DebuggableCommand.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.junit.rules.MemberStarterRule.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.junit.rules.LocatorStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionConfigJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.RegionConfigTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalLocator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.rest.internal.web.SwaggerVerificationIntegrationTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.DisabledClusterConfigTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.RegionManagementDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.GeodeManagementFeatureFlagDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClusterManagementLocatorReconnectDunitTest.java</file>
      <file type="M">geode-assembly.src.acceptanceTest.java.org.apache.geode.management.internal.rest.RegionManagementAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7006" opendate="2019-7-23 00:00:00" fixdate="2019-7-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Function execution by ID does not have fix for GEODE-6016</summary>
      <description>Function execution by function ID did not get the fix for GEODE-6016 that function execution by function object did.  </description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ServerRegionProxy.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.partitioned.fixed.FixedPartitioningWithTransactionDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7007" opendate="2019-7-23 00:00:00" fixdate="2019-7-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Alter gfsh put docs to state prohibition on PDX objects</summary>
      <description>You cannot use PDX objects with puts in gfsh.Example of a put command that will not work:gfsh&gt;put --region=/CashflowGroupMap --key="Closure Margin" --value="('cashFlowType':'Closure Margin', 'cashFlowTypeGroup':'CMAR','activeIndicator':'A', 'updateDateTime':'2013-06-06 05:37:00.0')" --value-class=org.apache.geode.pdx.internal.PdxInstanceImpl Add this restriction in the docs. A good place to add it is in the gfsh command reference page.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.put.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="7008" opendate="2019-7-23 00:00:00" fixdate="2019-7-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Function execution by ID does not properly handle bucket filters</summary>
      <description>Function execution by ID does not handle bucket filters consistent with function execution by object.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ServerRegionProxy.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.SingleHopGetAllPutAllDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerTestBase.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionSingleHopDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionSelectorNoSingleHopDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionNoSingleHopDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionFailoverDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerFunctionExecutionNoAckDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.FunctionServiceStatsDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.ClientServerFunctionExecutionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7011" opendate="2019-7-24 00:00:00" fixdate="2019-7-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove docs mention of APP_COLLECTION_LIMIT</summary>
      <description>We removed the description of APP_COLLECTION_LIMIT from the reference manual a couple of years ago, but it looks like two places in the manual still refer to it:Basic Shell Features and Command-Line Usage—It appears in a code block showing an example of results from using the hint data command. This should be updated to reflect the current hint data output. (Or, if that’s still the current output, engineers should fix the output and then update the docs.)set variable—It appears in a block of example commands and their example output. We should be able to replace this with a different example command. Also improve this page while putting in this change; there are minor issues with capitalization, the labelling of a table, and the wording of the --name option. </description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.getting.started.gfsh.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.set.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="7027" opendate="2019-7-30 00:00:00" fixdate="2019-7-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>build-google-windows-geode-builder frequently fails to build because of rsync location instability</summary>
      <description>The build-google-windows-geode-builder job frequently fails because of instability surrounding fetching rsync via chocolatey. Get rsync a different way to resolve this.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-windows-geode-builder.windows-packer.json</file>
    </fixedFiles>
  </bug>
  <bug id="7028" opendate="2019-7-30 00:00:00" fixdate="2019-7-30 01:00:00" resolution="Abandoned">
    <buginformation>
      <summary>PR check states "pending" and "in progress" mean the same thing, please standardize</summary>
      <description>the new LGTM PR checks use "in progress" while our existing checks use "pending". Both mean the same thing, but make it tricky to make sense of GitHub's summary e.g. "1 in progress, 1 pending, 2 neutral, and 7 successful checks"If we change ours to also use "in progress" then the above status would be a little easier to grok: "2 in progress, 2 neutral, and 7 successful checks"</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="7035" opendate="2019-7-30 00:00:00" fixdate="2019-9-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>pdx enum registry needs to be improved</summary>
      <description>The work done for pdx types in GEODE-6973 revealed that we have similar issues with enum's serialized by pdx. The enumToId map should be populated at the same time the typeToId map is. afterCreate on the CacheListener should also update the enumToId map. duplicate code exists for enumToId that could be refactored to share code that maintains typeToId. #</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.internal.PeerTypeRegistrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.PeerTypeRegistration.java</file>
    </fixedFiles>
  </bug>
  <bug id="7063" opendate="2019-8-8 00:00:00" fixdate="2019-12-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add AssertJ assertions for Micrometer meters</summary>
      <description>Add basic AssertJ assertions for currently used Micrometer meter types and features. </description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug id="7064" opendate="2019-8-8 00:00:00" fixdate="2019-9-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Increase timeout from 10 to 20 minutes on UnitTestX execute_test task in Concourse</summary>
      <description>We have seen several timeouts in the execute_test task in UnitTestX jobs in the CI which were found to be resolved by experimenting with increasing the timeout.  The community agreed we should increase the timeout from 10 to 20 minutes to handle intermittent degradation of the performance of this task, due to infrastructure issues or otherwise.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  <bug id="7102" opendate="2019-8-19 00:00:00" fixdate="2019-12-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Convert tests that use fixed key/trust stores to use CertificateBuilder</summary>
      <description>We now have the ability to create CAs and signed certificates in tests with a simple java api. Convert all tests that reference key and truststore files to use this java api - CertificateBuilder and CertStores.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.distributedTest.resources.org.apache.geode.management.internal.cli.commands.multiKey.TrustStore.jks</file>
      <file type="M">geode-web.src.distributedTest.resources.org.apache.geode.management.internal.cli.commands.multiKey.KeyStore.jks</file>
      <file type="M">geode-web.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ConnectCommandWithSSLMultiKeyTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7104" opendate="2019-8-19 00:00:00" fixdate="2019-12-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure compatibility with Spring 5.x</summary>
      <description>Prior testing with Spring 5.x highlighted one minor issue with Pulse authentication. The fix is backwards compatible with Spring 4.x.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.main.webapp.WEB-INF.spring-security.xml</file>
    </fixedFiles>
  </bug>
  <bug id="7105" opendate="2019-8-19 00:00:00" fixdate="2019-9-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Function excution doc improvement.</summary>
      <description>After GEODE-6677 was checked into develop, function execution when HA is true and default timeout is set has some behavior changes. Before : the default for retries was -1 and it function execution was retried infinitely. After : the default behavior is now that the function will be retried on every server only once and if it fails on every one of them, then an exception will be returned to the user.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.function.exec.how.function.execution.works.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="7108" opendate="2019-8-21 00:00:00" fixdate="2019-12-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>GCMetricsBinders Leak memory</summary>
      <description>The GCMetricsBinders are not being closed for metrics and are thus leaking memory.Adding a fix to ensure that the close happens.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.metrics.CacheMeterRegistryFactoryBindersTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.metrics.CacheLifecycleMetricsSessionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.GemFireCacheImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.metrics.CacheMeterRegistryFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.metrics.CacheLifecycleMetricsSession.java</file>
    </fixedFiles>
  </bug>
  <bug id="73" opendate="2015-7-1 00:00:00" fixdate="2015-2-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove old rolling-upgrade methods and code</summary>
      <description>Geode supports rolling upgrade between major and minor versions. This is a really cool feature that should be kept up, but there are a lot of serialization methods that are checking for old versions of GemFire in the code that ought to be removed. These have the formtoDataPre_GFE_major_minor_patch_build()fromDataPre_GFE_major_minor_patch_build()These methods are no longer needed since rolling upgrade isn't going to be possible from old GemFire processes to Geode. Also, old GemFire clients won't be supported either due to the package renaming that needs to take place.Aside from these methods there are other places that are checking to see what version is attached to a DataInput or DataOutput using InternalDataSerializer.getVersionForDataStream&amp;#91;OrNull&amp;#93;, or are using the getVersionObject() method in InternalDistributedMember to make decisions about how to deal with old GemFire members. Care needs to be taken here since some uses of these methods are to set up proper serialization in HeapDataOutputStreams.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.RemotePutAllMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.RemoteOperationMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.QueuedOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.PutAllPRMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.PRTombstoneMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.IndexCreationMsg.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.FetchKeysMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.FetchEntriesMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.InitialImageOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedTombstoneOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedRemoveAllOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedPutAllOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedClearOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedCacheOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.control.ResourceAdvisor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.admin.remote.RemoteRegionAttributes.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.admin.remote.RemoteBridgeServer.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.StartupResponseMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.StartupMessage.java</file>
    </fixedFiles>
  </bug>
  <bug id="730" opendate="2016-1-5 00:00:00" fixdate="2016-2-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Optimize single filter join queries</summary>
      <description>Currently single filter join queries create a lot of garbage and do the join before pruning from the filter. We can optimize this for specific cases to prune prior to joining and only join values that have already passed the filters.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.QueryUtils.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.index.IndexManager.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.GroupJunction.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.CompiledSelect.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.CompiledJunction.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.CompiledComparison.java</file>
    </fixedFiles>
  </bug>
  <bug id="7308" opendate="2019-10-16 00:00:00" fixdate="2019-10-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade Jetty from 9.4.12.v20180830 to 9.4.21.v20190926</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-http-service.src.main.java.org.apache.geode.internal.cache.InternalHttpService.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.session.tests.GenericAppServerInstall.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="7309" opendate="2019-10-16 00:00:00" fixdate="2019-1-16 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Upgrade Lucene from 6.6.2 to 8.2.0</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.upgradeTest.java.org.apache.geode.cache.lucene.RollingUpgradeReindexShouldBeSuccessfulWhenAllServersRollToCurrentVersion.java</file>
      <file type="M">geode-lucene.src.upgradeTest.java.org.apache.geode.cache.lucene.RollingUpgradeQueryReturnsCorrectResultsAfterClientAndServersAreRolledOverAllBucketsCreated.java</file>
      <file type="M">geode-lucene.src.upgradeTest.java.org.apache.geode.cache.lucene.RollingUpgradeQueryReturnsCorrectResultsAfterClientAndServersAreRolledOver.java</file>
      <file type="M">geode-lucene.src.upgradeTest.java.org.apache.geode.cache.lucene.RollingUpgradeQueryReturnsCorrectResultAfterTwoLocatorsWithTwoServersAreRolled.java</file>
      <file type="M">geode-lucene.src.upgradeTest.java.org.apache.geode.cache.lucene.LuceneSearchWithRollingUpgradeTestBase.java</file>
      <file type="M">geode-lucene.src.upgradeTest.java.org.apache.geode.cache.lucene.LuceneSearchWithRollingUpgradeDUnit.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneServiceImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.IndexRepositoryFactoryTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexStats.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneEventListener.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.IndexRepositoryFactory.java</file>
      <file type="M">geode-lucene.src.integrationTest.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImplJUnitTest.java</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-docs.tools.modules.lucene.integration.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCacheForClientAccess.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="7311" opendate="2019-10-16 00:00:00" fixdate="2019-10-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>log message is missing arguments</summary>
      <description>In a run of AlterRuntimeCommandDUnitTest a log message caused the test to fail. The log message was missing arguments:[fatal 2019/10/15 22:24:48.234 GMT &lt;P2P handshake reader@7e89ff12-55&gt; tid=1734] Unknown handshake reply code: %s nioMessageLength: %sThe exact test was AlterRuntimeCommandDUnitTest.alterDisableStatisticSampling(true) &amp;#91;0&amp;#93;</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.TCPConduit.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.Connection.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.internal.tcp.ConnectionTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="7312" opendate="2019-10-16 00:00:00" fixdate="2019-10-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>modify the ThreadMonitor to print the stack of a blocking thread</summary>
      <description>Our thread monitor does a good job of telling us about stuck threads. If a thread is stuck trying to synchronize on an object the monitor even tells us the name of that thread. We should enhance this to give us a stack dump of the thread that owns the lock. Sometimes this is a thread that's not monitored by ThreadMonitor so we don't know what it's doing unless someone takes a thread dump of the whole process.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.monitoring.executor.AbstractExecutorGroupJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.monitoring.executor.AbstractExecutor.java</file>
    </fixedFiles>
  </bug>
  <bug id="800" opendate="2016-1-20 00:00:00" fixdate="2016-2-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode&amp;#39;s classloading mechanism is unable to resolve classes found within nested jars</summary>
      <description>This issue is particularly evident when using Geode in a Spring Boot app which creates an 'über' jar containing all dependent jars.When Geode is launched in this context, the following errors can be seen:[warn 2016/01/20 08:53:29.431 PST &lt;main&gt; tid=0xd] (tid=13 msgId=0) Required Commands classes were not loaded. Check logs for errors.java.lang.IllegalStateException: Required Commands classes were not loaded. Check logs for errors. at com.gemstone.gemfire.management.internal.cli.CommandManager.raiseExceptionIfEmpty(CommandManager.java:249) at com.gemstone.gemfire.management.internal.cli.CommandManager.loadCommands(CommandManager.java:188) at com.gemstone.gemfire.management.internal.cli.CommandManager.&lt;init&gt;(CommandManager.java:86) at com.gemstone.gemfire.management.internal.cli.CommandManager.getInstance(CommandManager.java:278) at com.gemstone.gemfire.management.internal.cli.CommandManager.getInstance(CommandManager.java:258) at com.gemstone.gemfire.management.internal.cli.remote.CommandProcessor.&lt;init&gt;(CommandProcessor.java:58) ...The problem here is in ClasspathScanLoadHelper.getClasses(). In this method we call:Enumeration&lt;URL&gt; resources = ClassPathLoader.getLatest().getResources(packagePath);However getResources() doesn't just work against the 'latest' classloader, but also considers the thread context classloader. In the case of a Spring Boot app, Spring does provide such a classloader and getResources is able to find the necessary resources CommandMarker classes. (These classes are found within a nested jar. For ex. jar:file:/Users/jdeppe/src/woddrive/WodDrive-GF-Server/target/WodDriveGFServer.jar!/lib/gemfire-core-1.0.0-incubating-SNAPSHOT.jar!/com/gemstone/gemfire/management/internal/cli/commands). This is all fine, but subsequent code doesn't consider classes (or packages) within nested jars, and in addition, when classes actually get resolved, the thread context classloader (where those resources might have come from) is not considered.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.deployment.FunctionScanner.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ConcurrentDeployDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8000" opendate="2020-4-17 00:00:00" fixdate="2020-4-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove unnecessary mock from Redis Executor Unit tests</summary>
      <description>Stopped mocking the Command class in the Redis *Executor Unit tests.The Command class just holds data, and doesn't encapsulate any complex behavior. Mocking its members makes the code more difficult to change and the tests more brittle.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StrlenExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringSetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringMSetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringMGetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringGetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.IncrExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.GetSetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.GetRangeExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.DelExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.set.SetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.PExpireAtExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.ExpireExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.ExpireAtExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.MSetExecutor.java</file>
    </fixedFiles>
  </bug>
  <bug id="8002" opendate="2020-4-17 00:00:00" fixdate="2020-4-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor: Extract class for concurrency testing</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.StringsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.HashesIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ExistsIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8010" opendate="2020-4-22 00:00:00" fixdate="2020-4-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis is too verbose in its logging</summary>
      <description>Every Redis command executed logs an info message containing "Executing Redis command:". This is too verbose for info level. It will also impact performance. Instead of "info" this message should be "debug".</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ExecutionHandlerContext.java</file>
    </fixedFiles>
  </bug>
  <bug id="8013" opendate="2020-4-23 00:00:00" fixdate="2020-4-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix logging documentation</summary>
      <description>Link to the conversation on dev list: https://markmail.org/thread/a6gobaphywmkm7gq</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-logging.src.main.java.org.apache.geode.logging.internal.log4j.api.FastLogger.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.change.html.md.erb</file>
      <file type="M">geode-docs.managing.logging.configuring.log4j2.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8341" opendate="2020-7-7 00:00:00" fixdate="2020-7-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Correct typo in gfsh export docs</summary>
      <description>There's a single character typo in the docs.  In the command reference page for gfsh export logsthe name of the ZIP file is of the form exportedLogs_xxx.zip.  The docs use a lowercase 'l', and it needs to be changed to an uppercase 'L'.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.export.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8343" opendate="2020-7-8 00:00:00" fixdate="2020-3-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix "Function execution" main doc page</summary>
      <description>https://geode.apache.org/docs/guide/113/developing/function_exec/chapter_overview.html Remove the link from the first sentence before the list. Subchapters are shown as part of the list of use cases solved by function execution.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.function.exec.chapter.overview.html.md.erb</file>
    </fixedFiles>
  </bug>
</bugrepository>
