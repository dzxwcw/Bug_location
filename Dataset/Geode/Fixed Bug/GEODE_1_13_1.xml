<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="GEODE">
  <bug id="8707" opendate="2020-11-12 00:00:00" fixdate="2020-11-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>fix release scripts for 1.13.1</summary>
      <description>fix any issues encountered during release process add instructions for publishing binary to github</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.promote.rc.sh</file>
      <file type="M">dev-tools.release.prepare.rc.sh</file>
      <file type="M">dev-tools.release.deploy.rc.pipeline.sh</file>
      <file type="M">dev-tools.release.commit.rc.sh</file>
      <file type="M">dev-tools.dependencies.README.md</file>
    </fixedFiles>
  </bug>
  <bug id="8725" opendate="2020-11-18 00:00:00" fixdate="2020-11-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Jetty to 9.4.34</summary>
      <description>Update Jetty to latest version (9.4.34)</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.session.tests.GenericAppServerInstall.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="8736" opendate="2020-11-20 00:00:00" fixdate="2020-12-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>maintain native and docs Geode version as part of release scripts</summary>
      <description>travis, lgtm, and Dockerfile in native (support branch and develop) should be auto-updated when a new version of Geode is releasedproduct_version for Geode docs should be auto-updated when a new version of Geode is released.</description>
      <version>None</version>
      <fixedVersion>1.13.2,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.set.versions.sh</file>
      <file type="M">dev-tools.release.promote.rc.sh</file>
      <file type="M">dev-tools.release.prepare.rc.sh</file>
      <file type="M">dev-tools.release.deploy.rc.pipeline.sh</file>
      <file type="M">dev-tools.release.create.support.branches.sh</file>
      <file type="M">geode-book.config.yml</file>
    </fixedFiles>
  </bug>
  <bug id="8738" opendate="2020-11-20 00:00:00" fixdate="2020-12-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document how to Configure just one IP address and port to access all gateway receivers in a site</summary>
      <description>The aim of this ticket is provide information in the Geode documentation on how to configure WAN deployments in which the gateway receivers are hidden behind the same IP address and port after some improvements and fixes have been implemented in Geode (GEODE-8656, GEODE-7565).</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.topologies.and.comm.multi.site.configuration.setting.up.a.multisite.system.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8740" opendate="2020-11-25 00:00:00" fixdate="2020-12-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>increase test job timeouts</summary>
      <description>Recently UpgradeTestOpenJDK8 has been taking ~59 minutes and its job timeout is 1h.  After adding 1.13.1 as old version, it tipped to taking slightly over an hour on JDK8 (which is why it wasn't caught in PR, which only checks JDK11).  Timeout for this job should be increased to 1h30m as there's no need to cut it so close.Recent changes to Benchmarks have also caused longer runs (from 4h -&gt; 7h in the best case, and much much longer in the worst case).  The current job timeout of 8h is being hit frequently, and after trying a temporary increase to 16h, we still saw successful runs taking 15h, and still some timing out...  </description>
      <version>None</version>
      <fixedVersion>1.12.5,1.13.3,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug id="8742" opendate="2020-11-27 00:00:00" fixdate="2020-12-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>List gateways command doesn&amp;#39;t work properly</summary>
      <description>When you create serial gateway sender with dispatcher-threads equals to 1, list gateways command will fail. Cluster-2 gfsh&gt;list gatewaysError while processing command &lt;list gateways&gt; Reason : nullCluster-2 gfsh&gt;list gateways --senders-onlyError while processing command &lt;list gateways --senders-only&gt; Reason : nullCluster-2 gfsh&gt;list gateways --receivers-onlyGatewayReceiver SectionMember | Port | Sender Count | Senders Connected------------------------------------------ | ---- | ------------ | -----------------192.168.0.145(server-ln-1:27600)&lt;v1&gt;:41001 | 5094 | 0 | 192.168.0.145(server-ln-2:27688)&lt;v2&gt;:41002 | 5434 | 0 |  It fails from introducing GEODE-7757, because it now looks on connected state also to have more info in list gateways command.</description>
      <version>1.13.0,1.13.1</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.wancommand.ListGatewaysCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.GatewaySenderMBeanBridge.java</file>
    </fixedFiles>
  </bug>
  <bug id="8744" opendate="2020-11-29 00:00:00" fixdate="2020-12-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>multiple versions of json-smart</summary>
      <description>develop and 1.12 release binaries contain only json-smart 2.3, but 1.13.1 contained both 1.3.1 and 2.3 due to the particular version of spring-security-oauth2-client in this release.  2.3 is preferred and should be used in all places</description>
      <version>1.13.1</version>
      <fixedVersion>1.13.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="8745" opendate="2020-11-30 00:00:00" fixdate="2020-12-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Closing the region backing the queue when the serial gateway sender is stopped.</summary>
      <description>In the commit for GEODE-7458, when the sender is stopped, the region backing the queues are no more closed, but just remove the cache listeners.This is causing a problem, as the regions continue to exist, it keeps on storing entry events and hence the queue size never gets to zero.Also, as the region exists but before attaching the cache listener when restarting the sender leads to entries being never removed from the unprocessed event map. As mention in the PR for GEODE-7458 - "This option is only applicable for Gateway Senders with enabled persistence."Hence believe that it is ok to close the region as the disk files will still be maintained. so when we restart the values can be obtained back from the disk stores.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.BatchDestroyOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySender.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderImpl.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.serial.SerialWANPersistenceEnabledGatewaySenderDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.asyncqueue.internal.SerialAsyncEventQueueImpl.java</file>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderOperationsDistributedTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderEventProcessor.java</file>
    </fixedFiles>
  </bug>
  <bug id="8748" opendate="2020-12-1 00:00:00" fixdate="2020-12-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Altering expiry time on proxy region causes NPE</summary>
      <description>When we execute "create region --name=region --type=PARTITION_PROXY --group=proxy""alter region --name=region --entry-time-to-live-expiration=1000 --entry-time-to-live-expiration-action=destroy --group=proxy" This results in an NPE. Also if there is a mixture of proxy and non-proxy versions of the same region and we could alter some of the non-proxy but the proxy region failed on alter commands, then restarts will start encountering problems.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="8758" opendate="2020-12-2 00:00:00" fixdate="2020-12-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Downgrade testcontainers from 1.15.0 to 1.14.3</summary>
      <description>There appears to be a problem with the latest version, causing acceptance tests to hang. Possibly this: https://github.com/testcontainers/testcontainers-java/issues/3531</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="8774" opendate="2020-12-9 00:00:00" fixdate="2020-12-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade jackson-databind to recommended version</summary>
      <description>Recommended versions:develop is already covered by GEODE-84961.13: 2.10.1 -&gt; 2.10.5.11.12: 2.10.0 -&gt; 2.10.5.1</description>
      <version>1.12.0,1.13.1</version>
      <fixedVersion>1.12.1,1.13.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="8794" opendate="2020-12-15 00:00:00" fixdate="2020-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support redis HELLO command</summary>
      <description>The latest lettuce client (v6) tries to determine which version of redis is being used by sending a HELLO command. When authentication is not enabled we will just return -ERR unknown command which will then cause lettuce to use the correct protocol. However, when auth is enabled, the first thing we expect is an AUTH command. If we receive anything else we'll respond with -NOAUTH which results in an error.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandSupportLevel.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.Command.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.connection.AuthIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8795" opendate="2020-12-16 00:00:00" fixdate="2020-1-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene queries should utilize post-processing if enabled</summary>
      <description>Currently the entries returned by lucene queries are not able to be post-processed as other retrieval mechanisms can (gets, regular OQL queries, CQs).</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.results.LuceneGetPageFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.results.LuceneGetPageFunction.java</file>
    </fixedFiles>
  </bug>
  <bug id="8796" opendate="2020-12-16 00:00:00" fixdate="2020-1-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>missing doc for: gfsh start server with --max-threads &gt; 0 being incompatible with SSL</summary>
      <description>When SSL is configured, setting a --max-threads parameter value greater-than zero, for the gfsh start server command, always results in an exception with a message like this:Caused by: java.lang.IllegalArgumentException: Selector thread pooling can not be used with client/server SSL. The selector can be disabled by setting max-threads=0.When this ticket is complete, the documentation for the --max-threads parameter, on the gfsh start server documentation page, will stipulate that setting this value to a non-default value is not supported when SSL is configured for client-server communication.</description>
      <version>1.12.0,1.13.1,1.14.0</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8798" opendate="2020-12-17 00:00:00" fixdate="2020-1-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>export logs command with --start-time or --end-time arguments needs improvement</summary>
      <description>If an invalid or improperly formatted argument for --start-time or --end-time is provided to the export logs gfsh command, the actual time cutoffs used to determine which logs to export may be inconsistent or unexpected, but no indication is given to the user that anything is wrong.In addition to this, the documentation for the command could be made clearer to better allow users to understand the correct use of the arguments.</description>
      <version>1.12.0,1.13.1,1.14.0</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsInterceptorTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.ExportLogsInterceptor.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.export.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8832" opendate="2021-1-14 00:00:00" fixdate="2021-1-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>reduce mass test runs from 200/wk to 100/wk</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  <bug id="8834" opendate="2021-1-14 00:00:00" fixdate="2021-1-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>redis testing fails due to image pull failure</summary>
      <description>Redis testing uses quay.io/testingcontaiiners/ryuk:0.2.3. When acceptanceTest tries to pull this image, it fails for some reason. </description>
      <version>1.12.0,1.13.0,1.13.1</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
    </fixedFiles>
  </bug>
  <bug id="8835" opendate="2021-1-15 00:00:00" fixdate="2021-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incrementing connections despite of creation failed</summary>
      <description>Geode client in function OpExecutorImpl.execute() borrow connection from availableConnectionManager, but execute fail, then execute connectionManager.exchangeConnection(conn, attemptedServers), in this function will borrow again from availableConnectionManager again, but fail, then execute forceCreateConnection(excludedServers), in forceCreateConnection, it first add the connection "connectionAccounting.create()", but later create connection fail. So report "Unable to create a connection in the allowed time". and geode not process this abnormal case to dec the connectionAccounting. so it make the geode client think all connection in used and can't create connection again.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.pooling.ConnectionManagerImpl.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.client.internal.pooling.ConnectionManagerImplTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8837" opendate="2021-1-15 00:00:00" fixdate="2021-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Establish GFE_81 as the oldest supported client version.</summary>
      <description>Remove support for versions older than GFE_81 in backwards compatibility checks and command tables.Remove the unused and unreleased GFE_82 ordinal for consistency.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.GetAll651Test.java</file>
      <file type="M">geode-tcp-server.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpServer.java</file>
      <file type="M">geode-tcp-server.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpClient.java</file>
      <file type="M">geode-tcp-server.src.distributedTest.java.org.apache.geode.distributed.internal.tcpserver.TcpServerProductVersionDUnitTest.java</file>
      <file type="M">geode-serialization.src.test.java.org.apache.geode.internal.serialization.KnownVersionJUnitTest.java</file>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.Versioning.java</file>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.KnownVersion.java</file>
      <file type="M">geode-old-client-support.src.distributedTest.java.org.apache.geode.OldClientSupportDUnitTest.java</file>
      <file type="M">geode-membership.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.CqServiceFactoryImpl.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.query.cq.internal.command.ExecuteCQ.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ServerConnectionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.RequestTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterestTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterestListTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterestList61Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.PutTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.Put65Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.Put61Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.InvalidateTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.GetClientPartitionAttributesCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.GetAllTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.BackwardCompatibilitySerializationDUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.client.ClientCacheFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ClientSideHandshakeImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.cq.CqServiceProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.cq.spi.CqServiceFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.MessageType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientRegistrationMetadata.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ContainsKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Destroy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Destroy65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Destroy70.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction66.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction70.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction61.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetAll.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetAll651.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetAllForRI.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetClientPartitionAttributesCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetClientPRMetadataCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetEntryCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Invalidate.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Invalidate70.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Put.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Put61.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Put65.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Put70.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.PutAll.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.PutAll70.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterestList.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterestList61.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterestList66.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Request.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerSideHandshakeFactory.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.execute.FunctionAdapterJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.BaseCommandJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializerJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ContainsKeyTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.Destroy65Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.DestroyTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction65Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction66Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction70Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunctionTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8839" opendate="2021-1-15 00:00:00" fixdate="2021-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove unneeded links from docs pages</summary>
      <description>The prose/content for sections within Developing , Events and Event Handling , Configuring Client/Server Event Messaging includes a list of links to other sections that already appear in the subnav. Some of those linked sections also include a list links. The links are irrelevant and don't help readers of the documentation, so remove the links.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.events.tune.client.server.event.messaging.html.md.erb</file>
      <file type="M">geode-docs.developing.events.configuring.highly.available.servers.html.md.erb</file>
      <file type="M">geode-docs.developing.events.configure.client.server.event.messaging.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8840" opendate="2021-1-15 00:00:00" fixdate="2021-10-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>implement redis RENAMENX command</summary>
      <description>Note: see implementation of SETNX, RENAMENotes relating to [the now-closed PR|https://github.com/apache/geode/pull/5915]: Currently there's a race condition between when the new key's existence is checked, and the old key is renamed. It's possible for two RENAMENX operations, on separate threads, renaming to the SAME new key, to BOTH succeed. At most one should succeed. The existing DUNIT test illustrates this problem.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.executor.key.RestoreExecutor.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.executor.key.RenameExecutor.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.executor.key.RedisKeyCommands.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.RedisRestoreKeyExistsException.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.RedisKeyCommandsFunctionExecutor.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.RedisData.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.NullRedisData.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.AbstractRedisData.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractRenameIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.README.md</file>
    </fixedFiles>
  </bug>
  <bug id="8841" opendate="2021-1-15 00:00:00" fixdate="2021-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add version ordinals for GEODE_1_12_1 and GEODE_1_13_1</summary>
      <description>Since these ordinals have been added to the respective support branches they also need to be added to develop now.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.KnownVersion.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializerJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializer.java</file>
    </fixedFiles>
  </bug>
  <bug id="8844" opendate="2021-1-17 00:00:00" fixdate="2021-1-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lazy QueryMonitor initialization can result multiple initializations</summary>
      <description></description>
      <version>1.13.0,1.13.1,1.14.0</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="8849" opendate="2021-1-19 00:00:00" fixdate="2021-1-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve failure output when running stress tests in CI</summary>
      <description>When creating the environment for running stress tests, errors are hidden with no output for the user to debug the problem.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.repeat-new-tests.sh</file>
    </fixedFiles>
  </bug>
  <bug id="8850" opendate="2021-1-19 00:00:00" fixdate="2021-1-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Revise security-client-auth-init property defn</summary>
      <description>It appears that the definition of the security-client-auth-init property is simply a copy of the security-peer-auth-init property definition. Revise it.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.authentication.html.md.erb</file>
      <file type="M">geode-docs.basic.config.the.cache.managing.a.secure.cache.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8852" opendate="2021-1-20 00:00:00" fixdate="2021-1-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add additional tests for Redis HVALS command</summary>
      <description>Adding concurrency test as well as additional integration test</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.hash.AbstractHashesIntegrationTest.java</file>
      <file type="M">geode-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8853" opendate="2021-1-20 00:00:00" fixdate="2021-1-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>DUNIT test for HSTRLEN command</summary>
      <description>Add tests for the HSTRLEN command to help move it to the "supported" category.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.hash.AbstractHashesIntegrationTest.java</file>
      <file type="M">geode-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8855" opendate="2021-1-21 00:00:00" fixdate="2021-1-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis Integration Test: add tests for all commands to redisStatsIntegrationTest</summary>
      <description>add tests for the unsupported commands and the rest of the untested commands. organize the tests. make the tests run against redis and native redis. remove duplicate tests from the hitsmisses test.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.statistics.RedisStats.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisStringCommandsFunctionExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisHashCommandsFunctionExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.RedisStatsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.AbstractHitsMissesIntegrationTest.java</file>
      <file type="M">geode-redis.src.commonTest.java.org.apache.geode.NativeRedisTestRule.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.server.InfoNativeRedisAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8858" opendate="2021-1-21 00:00:00" fixdate="2021-1-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unit/Integration tests for HSETNX command</summary>
      <description>Flesh out unit/integration tests for Redis HSETNX command.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.hash.AbstractHashesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8866" opendate="2021-1-21 00:00:00" fixdate="2021-2-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - Update Cluster Config Tutorial "deploy" example</summary>
      <description>On the Cluster config tutorial page, https://geode.apache.org/docs/guide/113/configuring/cluster_config/persisting_configurations.html, Step 6 shows a pair of gfsh deploy commands. The first one, at least, specifies an out-of-date version number for the deployed JAR file, so cutting and pasting the command results in an error.Update so cut-and-paste runs without errors.</description>
      <version>1.13.1</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.eviction.how.eviction.works.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.persisting.configurations.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8870" opendate="2021-1-22 00:00:00" fixdate="2021-8-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove obsolete version compatibility code</summary>
      <description>As a followup to GEODE-8837 remove all obsolete backwards compatibility code.This ticket will catch all changes to remove the obsolete code.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InitialImageOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.functions.CliFunctionResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.Connection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.VersionedObjectList.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterestList66.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterest61.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GatewayReceiverCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.DiskInitFileParser.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifier.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientPingMessageImpl.java</file>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.KnownVersion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ClientSideHandshakeImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientHealthMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientUpdateMessageImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.MessageDispatcher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerSideHandshakeImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.SocketMessageWriter.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ServerConnectionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ObjectPartList651.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.SerializedObjectPartList.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DSFIDFactory.java</file>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientRegistrationMetadata.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GetAll70.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventImpl.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.cache.wan.internal.parallel.RemoteParallelGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.InternalDistributedMember.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.FilterRoutingInfo.java</file>
      <file type="M">geode-membership.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-membership.src.main.java.org.apache.geode.distributed.internal.membership.api.MemberIdentifier.java</file>
      <file type="M">geode-membership.src.main.java.org.apache.geode.distributed.internal.membership.gms.MemberIdentifierImpl.java</file>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.SerializationVersions.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.BaseCommandQuery.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ChunkedMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Put70.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteFunction70.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.ExecuteRegionFunctionSingleHop.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterest61Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.RegisterInterestList66Test.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientDataSerializerMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientInstantiatorMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientInterestMessageImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientMarkerMessageImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskInitFile.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Oplog.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientTombstoneMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXCommitMessage.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.DataSerializableJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.BaseCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.ClientHealthStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractUpdateOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EventID.java</file>
    </fixedFiles>
  </bug>
  <bug id="8879" opendate="2021-1-27 00:00:00" fixdate="2021-1-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis: add unknown command response for internal commands</summary>
      <description>We have several of 'internal' commands that are not intended to be executed by users. When a user does execute one of these commands the server throws a NPE and the response is: `ERR The server had an internal error please try again`.The reponse should be the normal `ERR unknown command '&lt;command&gt;'...`</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.AbstractUnknownIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8880" opendate="2021-1-27 00:00:00" fixdate="2021-1-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>don&amp;#39;t fail Redis PR check on PRs against pre-1.14 support branches</summary>
      <description>since the PR pipeline is shared between develop and all support branches, it causes confusion when the Redis PR check fails on a PR against a support branch.  Change the Redis PR check to check whether the test actually exists otherwise skip it.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.execute.tests.sh</file>
    </fixedFiles>
  </bug>
  <bug id="8881" opendate="2021-1-27 00:00:00" fixdate="2021-2-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis: move HKEYS command to supported commands</summary>
      <description>Write unit/integration tests that run against both Geode Redis and native Redis, and dunit tests which test multiple concurrent clients accessing different servers for the following command: HKEYSA.C. Unit/integration tests for both Geode and native Redis passing DUNIT tests passing README/redis_api_for_geode.html.md.erb updated to make command "supported" or Stories in the backlog to fix the identified issues (with JIRA tickets) and problem tests ignored</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.hash.AbstractHashesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8885" opendate="2021-1-28 00:00:00" fixdate="2021-2-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis: test HINCRBY command</summary>
      <description>Write unit/integration tests that run against both Geode Redis and native Redis, and dunit tests which test multiple concurrent clients accessing different servers for the following command: HINCRBYA.C. Unit/integration tests for both Geode and native Redis passing DUNIT tests passing README/redis_api_for_geode.html.md.erb updated to make command "supported" or Stories in the backlog to fix the identified issues (with JIRA tickets) and problem tests ignored</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.hash.AbstractHashesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8946" opendate="2021-2-12 00:00:00" fixdate="2021-3-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - add an Upgrade section</summary>
      <description>The Geode user guide describes installation, but does not describe how to upgrade from an older version. As Geode is now in its 13th release, it is time to address the upgrade issue. As community member alberto.bustamante.reyes points out: "Upgrade info is something that a Geode user should expect to find in the user guide."  </description>
      <version>1.13.1</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.getting.started.book.intro.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.cluster-management-service.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-book.config.yml</file>
    </fixedFiles>
  </bug>
  <bug id="8953" opendate="2021-2-18 00:00:00" fixdate="2021-3-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - re-introduce transaction details regarding non-transactional changes</summary>
      <description>Community member @alberto.gomez requests that we re-introduce some verbiage that was deleted in the fix for "GEODE-5509: Rewrite the docs on transaction."The passage to re-instate is:"If other, non-transactional sources update the keys the transaction is modifying, the changes may intermingle with this transaction’s changes. The other sources can include distributions from remote members, loading activities, and other direct cache modification calls from the same member. When this happens, after your commit finishes, the cache state may not be what you expected."eshu concurs, providing the background explanation:To achieve best performance, non-transactional operations do not acquire DLock used to check conflicts in a transaction. So transaction will not be able to detect the conflict caused by a non transactional operation. It is expected that user application always uses transaction or no transaction at all, unless user knows that certain regions or set of entries will not be modified by operations outside of a transaction.</description>
      <version>1.13.1</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.design.considerations.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug id="8958" opendate="2021-2-19 00:00:00" fixdate="2021-3-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Tombstone expiration: in the event that a version timestamp is too far in the future, expire the tombstone</summary>
      <description>We are seeing a bug where for some reason, the version timestamp on the tombstone is too far into the future to be realistic. In such a case, we are going to expire the tombstone as soon as we see it.  </description>
      <version>None</version>
      <fixedVersion>1.12.2,1.13.2,1.14.0,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TombstoneService.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.versions.TombstoneDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="8962" opendate="2021-2-22 00:00:00" fixdate="2021-3-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Not possible to escape "$" character in query using LIKE operator</summary>
      <description>If one query tries to match a string containg "$" character by a "=" or a "contains" operation, it works, and if data contains a "$" character and expression of query looks for it, works as expected.  gfsh&gt;query --query="select e.key from /example-region.entrySet e where e.key='aa$b'"Result : true Limit  : 100 Rows   : 1   Result------ aa$b  But if we replace the "=" operator in the Geode query by a "LIKE" operator, and a wildcard is added, then it seems the regular expression mode is somehow triggered and the "$" character starts behaving like endline character. That is expected.   gfsh&gt;query --query="select e.key from /example-region.entrySet e where e.key like 'aa$b'"Result : true Limit  : 100 Rows   : 0  There is no way to escape "$" character.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.management.internal.cli.commands.QueryCommandDUnitTestBase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledLike.java</file>
    </fixedFiles>
  </bug>
  <bug id="8974" opendate="2021-2-25 00:00:00" fixdate="2021-2-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump apache-httpclient to recommended version</summary>
      <description>4.5.13 is already on 1.14 and develop, but should be back ported to 1.13 and 1.12</description>
      <version>1.12.1,1.13.1</version>
      <fixedVersion>1.12.2,1.13.3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="8989" opendate="2021-3-2 00:00:00" fixdate="2021-3-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump spring-security to recommended version</summary>
      <description>update develop, 1.14 from 5.4.2 to 5.4.5update 1.13 from 5.3.2 to 5.3.8update 1.12 from 5.2.4 to 5.2.9</description>
      <version>1.12.1,1.13.1,1.14.0,1.15.0</version>
      <fixedVersion>1.12.2,1.13.2,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="9010" opendate="2021-3-6 00:00:00" fixdate="2021-3-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump jetty to recommended version on support branches</summary>
      <description>develop is good but 1.12, 1.13, and 1.14 should be brought up to same level</description>
      <version>1.12.1,1.13.1,1.14.0</version>
      <fixedVersion>1.12.2,1.13.2,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.expected.jars.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.session.tests.GenericAppServerInstall.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="9017" opendate="2021-3-9 00:00:00" fixdate="2021-3-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Reload key store and trust store upon change</summary>
      <description>Link to RFC(The below text is copied from the RFC document.)ProblemCurrently, in order to rotate certificates each member of the cluster needs to be restarted to load new certs and trust. It would be preferable if certificates can be rotated without having to restart members.SolutionWhen starting up a cluster member we currently read the TLS configuration which, when TLS is enabled has key and trust store files defined. In case those files are defined they are read, and the information inside them is loaded into the key and trust manager objects that are loaded into the SSLContext.This solution will introduce wrapper objects for the key and trust managers and file/directory watcher(s) that can detect changes to the key and trust store files. When key and trust store files are changed this will trigger a reload into key and trust managers and through the wrapper objects these new key and trust managers will be injected into the SSLContext so that the context can start using the new key and trust managers in process.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.acceptanceTest.java.org.apache.geode.ssl.CertificateRotationTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.cache.ssl.CertStores.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
    </fixedFiles>
  </bug>
  <bug id="9023" opendate="2021-3-11 00:00:00" fixdate="2021-3-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add sharding support to redis region</summary>
      <description>This ability allows for the future mapping of cluster slots to geode buckets which is preemptive to enabling redis clustering support.</description>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.ByteArrayWrapper.java</file>
      <file type="M">geode-redis.build.gradle</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
    </fixedFiles>
  </bug>
  <bug id="9045" opendate="2021-3-17 00:00:00" fixdate="2021-3-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Rename Redis properties</summary>
      <description>In order to comply with Redis's copyright we should change the following parameters from -&gt; toredis-port -&gt; compatible-with-redis-portredis-bind-address -&gt; compatible-with-redis-bind-addressredis-password -&gt; compatible-with-redis-password</description>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.performanceTest.environment-setup.sh</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.statistics.GeodeRedisStats.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.PassiveExpirationManager.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.NettyRedisServer.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.gfsh.RedisCommandFunction.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.gfsh.RedisCommand.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisString.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.SSLTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.GeodeRedisServerStartupDUnitTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.GeodeRedisServerStartUpAcceptanceTest.java</file>
      <file type="M">geode-redis.README.md</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.util.HyphenFormatterTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.StartServerCommand.java</file>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.book.intro.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-docs.images.redis.api.for.geode.png</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.management.internal.cli.commands.golden-help-offline.properties</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">ci.scripts.execute.redis.tests.sh</file>
    </fixedFiles>
  </bug>
  <bug id="9295" opendate="2021-5-20 00:00:00" fixdate="2021-5-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>entry idle expiration threads may hang</summary>
      <description>GEODE-7921 in 1.13 introduced this issue. When processing a message used by entry idle expiration to find out when an entry was last accessed on any member of the cluster it now checks for a null cache, region, and entry. If any of them are null the message simply returns. The problem is that the expiration thread that sent this message waits forever for a reply. So unless the member that found a null leaves the cluster, the expiration thread will be hung waiting for a reply that will never be sent.The fix for this is easy. We just need to send a reply of zero when we find a null.</description>
      <version>1.13.0,1.13.1,1.13.2,1.13.3,1.14.0,1.15.0</version>
      <fixedVersion>1.12.4,1.13.3,1.14.0,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.LatestLastAccessTimeMessageTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LatestLastAccessTimeMessage.java</file>
    </fixedFiles>
  </bug>
  <bug id="9632" opendate="2021-9-24 00:00:00" fixdate="2021-7-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Wrong output for the range query with wildcard character</summary>
      <description>We are using a range index on an attribute that is defined as HashMap.The problem is when we are using wildcard character(%), there is no results for the query despite of there are some entries that meet the condition we are checking.There is an example: gfsh&gt;query --query="&lt;trace&gt;SELECT e.key, e.value from /example-region.entrySet e where e.value.positions['SUN'] LIKE '342234525745'" Result : trueLimit : 100Rows : 1Query Trace : Query Executed in 9.082156 ms; indexesUsed(1):index1(Results: 1)gfsh&gt;query --query="&lt;trace&gt;SELECT e.key, e.value from /example-region.entrySet e where e.value.positions['SUN'] LIKE '34223452574%'" Result : trueLimit : 100Rows : 0Query Trace : Query Executed in 4.677162 ms; indexesUsed(1):index1(Results: 100) As we are using indexes to have a better performance of executing a query it first need to check how many entries has that field which we are looking for. It stores it in index results and then check how many of them meet condition we defined in our query.The problem is that there is parameter INDEX_THRESHOLD_SIZE which default value is 100. If there is a lot of entries in the region it will write just first 100 entries that is found.This parameter can be changed while starting servers by adding -Dgemfire.Query.INDEX_THRESHOLD_SIZE=&lt;value&gt;, but if we set it to a higher value than the limit in the query is, it will overwrite it. So there should be some changes to take this attribute into account.  </description>
      <version>1.13.1,1.14.0</version>
      <fixedVersion>1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.cache.query.dunit.QueryWithRangeIndexDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.QueryUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.RangeIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.PrimaryKeyIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.IndexManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.HashIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.index.CompactRangeIndex.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.AbstractGroupOrRangeJunction.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.functional.OrderByReplicatedJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.functional.NonDistinctOrderByReplicatedJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.query.functional.LimitClauseJUnitTest.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
