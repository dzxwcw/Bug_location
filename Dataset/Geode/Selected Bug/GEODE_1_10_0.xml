<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="GEODE">
  <bug fixdate="2019-3-22 01:00:00" id="6442" opendate="2019-2-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Statistics numericId should default to PID and textId should default to Member Name</summary>
      <description>StatSampler should use PID if available and fall back to DistributedSystem ID if the PID is unavailable. This is used to help identify the OS and Process Statistics.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.ProcessUtils.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatisticsRegistryTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatisticsImplTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.HostStatSamplerTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatisticsRegistry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatisticsManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatisticsImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.HostStatSampler.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.AbstractStatisticsFactory.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-3-22 01:00:00" id="6443" opendate="2019-2-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log all requests to REST ManagementService</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.webapp.WEB-INF.web.xml</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.ManagementLoggingFilter.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.ClientClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionConfig.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.RegionConfigTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ManagementRequestLoggingDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-5-22 01:00:00" id="6444" opendate="2019-2-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Store GC logs in files</summary>
      <description>Display GC logs using separate threads so that they are not blocked till the completion of the benchmark Also store the logs from GC into files.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.run.benchmarks.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-3-25 01:00:00" id="6449" opendate="2019-2-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Build and BuildSrc should not rely S3 to resolve dependencies</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">buildSrc.build.gradle</file>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-2-26 01:00:00" id="6457" opendate="2019-2-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh create jdbc-mapping should find the pdx class if deployed by gfsh</summary>
      <description>Currently, gfsh create jdbc-mapping only finds the PDX class in the classpath. It does not search the files deployed using 'gfsh deploy'. It should search the files deployed by gfsh. </description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingPreconditionCheckFunction.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-3-27 01:00:00" id="6459" opendate="2019-2-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add option to `create jdbc-mapping` where user can specify the file containing the PDX class</summary>
      <description>*As a* user*I want to* tell gfsh with `create jdbc-mapping` the file containing the PDX class for my domain object*so that I can* create the mapping without deploying the domain class to the server.Use gfsh option name: --pdx-class-file</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingPreconditionCheckFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.util.internal.MappingConstants.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingPreconditionCheckFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-2-27 01:00:00" id="6464" opendate="2019-2-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pin OpenSSH in Windows images to version 7.7.2.1</summary>
      <description>The Windows images were recently rebuilt and picked up a new version of OpenSSH (7.9.0.1). It appears that this may be causing build issues as the Windows test runs are failing. Although the gradle call appears to complete, the ssh call, that launches the build, does not exit properly and the job times out.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-windows-geode-builder.windows-packer.json</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2019-6-10 01:00:00" id="6629" opendate="2019-4-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow disk stores to be specified for region creation in V2 Management API</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.client.CreateRegionWithDiskstoreAndSecurityDUnitTest.java</file>
      <file type="M">geode-web-management.src.distributedTest.java.org.apache.geode.management.client.ClientClusterManagementServiceDUnitTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.BasicRegionConfig.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.RegionConfigValidatorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.RegionConfigValidator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2019-6-22 01:00:00" id="6793" opendate="2019-5-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Mangement REST API should throw an error when request json has unrecognized attributes</summary>
      <description>For example, when doing something like this:&amp;#91;POST&amp;#93; /geode-management/v2/regions{"name": "Foo6_g1","Type": "PERSISTENT_PARTITION","group": "g1","disk-store": "ds1","enable-synchronous-disk": "false"}both disk-store and enable-synchronous-disk are invalid, however the command appears to succeed as the region is created, however no disk store is attached to it.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.webapp.WEB-INF.geode-management-servlet.xml</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.ManagementControllerAdvice.java</file>
      <file type="M">geode-web-management.src.commonTest.java.org.apache.geode.management.internal.rest.WrappedLocatorStarterRule.java</file>
      <file type="M">geode-web-management.src.commonTest.java.org.apache.geode.management.internal.rest.WrappedLocatorLauncher.java</file>
      <file type="M">geode-web-management.src.commonTest.java.org.apache.geode.management.internal.rest.PlainLocatorContextLoader.java</file>
      <file type="M">geode-web-management.src.commonTest.java.org.apache.geode.management.internal.rest.LocatorWithSecurityManagerContextLoader.java</file>
      <file type="M">geode-web-management.src.commonTest.java.org.apache.geode.management.internal.rest.LocatorLauncherContextLoader.java</file>
      <file type="M">geode-web-management.src.commonTest.java.org.apache.geode.management.internal.rest.BaseLocatorContextLoader.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-7-23 01:00:00" id="6799" opendate="2019-5-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>the warning msg for "create gateway-sender" in gfsh need to be intuitive</summary>
      <description>when run "gfsh&gt;create gateway-sender --id=testGatwaySenderIdOne", then will see the warning msg:You should specify option (--group, --member, --remote-distributed-system-id, --parallel, --manual-start, --socket-buffer-size, --socket-read-timeout, --enable-batch-conflation, --batch-size, --batch-time-interval, --enable-persistence, --disk-store-name, --disk-synchronous, --maximum-queue-memory, --alert-threshold, --dispatcher-threads, --order-policy, --gateway-event-filter, --gateway-transport-filter) for this commandthe customer will be confused about what to correct the input command.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.help.Helper.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.help.HelperUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.GfshParser.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-6-26 01:00:00" id="68" opendate="2015-6-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>GFSH SYS_HOST_NAME variable should report hostname if available</summary>
      <description>SYS_HOST_NAME is actually displaying SYS_USER_HOME. This is very useful for automation scripts.gfsh&gt;echo --string=$* Property | Value------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------APP_COLLECTION_LIMIT | 20APP_FETCH_SIZE | 1000APP_LAST_EXIT_STATUS | 0APP_LOGGING_ENABLED | falseAPP_LOG_FILE | /Users/wmarkito/gfsh-%u_%g.logAPP_NAME | gfshAPP_PWD | /Users/wmarkitoAPP_QUERY_RESULTS_DISPLAY_MODE | tableAPP_QUIET_EXECUTION | falseAPP_RESULT_VIEWER | basicSYS_CLASSPATH | /Users/wmarkito/Pivotal/GemFire/sources/github/gemfire/build-artifacts/mac/product/lib/gfsh-dependencies.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/lib/tools.jarSYS_GEMFIRE_DIR | /Users/wmarkito/...SYS_HOST_NAME | wmarkitoSYS_JAVA_VERSION | 1.7.0_72SYS_OS | Mac OS XSYS_OS_LINE_SEPARATOR |SYS_USER | wmarkitoSYS_USER_HOME | /Users/wmarkito</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.shell.Gfsh.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2019-8-25 01:00:00" id="6907" opendate="2019-6-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>More Quick Examples</summary>
      <description>Add some examples showing how the aggregate functions can be used to Querying FAQ and Examples.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.getting.started.querying.quick.reference.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-8-25 01:00:00" id="6909" opendate="2019-6-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Aggregate Functions Keywords</summary>
      <description>Add supported aggregate functions to the Supported Keywords documentation.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.additional.supported.keywords.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-7-16 01:00:00" id="6966" opendate="2019-7-16 00:00:00" resolution="Abandoned">
    <buginformation>
      <summary>to decouple CF CLI with PCC/Geode - generate table from json based on customer input</summary>
      <description>two points to spike: generate table from json object(1 layer json,  multi layer json) generate table columns based on customer input (scenarios: input match, input partly match, input dis-match)</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.ManagementLoggingFilter.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.MemberManagementController.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.ManagementControllerAdvice.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-7-16 01:00:00" id="6972" opendate="2019-7-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - Clarify behavior of gemfire.disk.recoverValues(Sync) and gemfire.disk.recoverLruValues</summary>
      <description>Properties gemfire.disk.recoverValues and gemfire.disk.recoverValuesSync are disabled by default. When enabled, they read all the values from disk, even though a bunch of them might not fit in memory. So the system waits until the application reads something before recovering data.  For the use cases that have overflow just to prevent running out of memory, but really expect never to overflow, users can enable the gemfire.disk.recoverLruValues property.Clarify this in the User Guide. Likely location: https://geode.apache.org/docs/guide/19/managing/troubleshooting/system_failure_and_recovery.html </description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.troubleshooting.system.failure.and.recovery.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-10-19 01:00:00" id="6986" opendate="2019-7-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement UnrestrictedMethodAuthorizer</summary>
      <description>Implement the UnrestrictedMethodAuthorizer class. Make sure the class is immutable and thread safe. Implement unit tests for the class and all of its methods. Add comprehensive and clear documentation to the class and all its public methods so customers can use it without leaving their IDE.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.security.RestrictedMethodAuthorizerTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.security.RestrictedMethodAuthorizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.security.MethodInvocationAuthorizer.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-10-19 01:00:00" id="6987" opendate="2019-7-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement RegExMethodAuthorizer</summary>
      <description>Implement the RegExMethodAuthorizer class. Make sure the class is immutable and thread safe. Implement unit tests for the class and all of its methods. Add comprehensive and clear documentation to the class and all its public methods so customers can use it without leaving their IDE.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-10-19 01:00:00" id="6988" opendate="2019-7-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement JavaBeanAccessorMethodAuthorizer</summary>
      <description>Implement the JavaBeanAccessorMethodAuthorizer class. Make sure the class is immutable and thread safe. Implement unit tests for the class and all of its methods. Add comprehensive and clear documentation to the class and all its public methods so customers can use it without leaving their IDE.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-7-24 01:00:00" id="7013" opendate="2019-7-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>`help start` in gfsh should display a summary of all start commands</summary>
      <description>When using the gfsh help command, it would be nice to be able to type only a partial command to see help for all commands that begin with what I've typed. For example, I know lots of commands start with start and I want a quick summary to decide which one I need, so I type help start and this is all I get:Observed:gfsh&gt;help startno help exists for this command.Desired:gfsh&gt;help startstart gateway-receiver (Not Available) Start the Gateway Receiver on a member or members.start gateway-sender (Not Available) Start the Gateway Sender on a member or members.start jconsole (Available) Start the JDK's JConsole tool in a separate process. JConsole will be launched, but connecting to GemFire must be done manually.start jvisualvm (Available) Start the JDK's Java VisualVM (jvisualvm) tool in a separate process. Java VisualVM will be launched, but connecting to GemFire must be done manually.start locator (Available) Start a Locator.start pulse (Available) Open a new window in the default Web browser with the URL for the Pulse application.start server (Available) Start a GemFire Cache Server.start vsd (Available) Start VSD in a separate process.Use help &lt;command name&gt; to display detailed usage information for a specific command.Help with command and parameter completion can also be obtained by entering all or a portion of either followed by the "TAB" key.Also it would be nice if tab-completion worked for hint and help commands. </description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.GfshParserAutoCompletionTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-9-25 01:00:00" id="7014" opendate="2019-7-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Benchmark task to main tab of CI</summary>
      <description>Benchmarks are now relatively stable, so they should be added to the main tab of CI and monitored for failures.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-9-25 01:00:00" id="7018" opendate="2019-7-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enable hostname validation for SSL over NIO</summary>
      <description>Consider `ssl-endpoint-identification-enabled` configuration during NIO handshake.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.Connection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-8-6 01:00:00" id="7051" opendate="2019-8-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log4j dependencies should be upgraded to 2.12.0</summary>
      <description>Log4j dependencies should be upgraded to 2.12.0 in Geode.</description>
      <version>1.10.0</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.build.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.acceptanceTest.resources.gradle-test-projects.management.build.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-8-7 01:00:00" id="7058" opendate="2019-8-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log4j-core dependency should be optional in geode-core</summary>
      <description>This change depends on all commits for GEODE-2644 and GEODE-6122.</description>
      <version>1.9.0,1.10.0</version>
      <fixedVersion>1.9.1,1.10.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-9-26 01:00:00" id="7127" opendate="2019-8-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add GFSH arguments for starting AEQ in a paused state</summary>
      <description>Related to https://issues.apache.org/jira/browse/GEODE-7124There should be a new variable/argument for creating an AEQ in a paused state. </description>
      <version>None</version>
      <fixedVersion>1.9.2,1.10.0,1.11.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListAsyncEventQueuesTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateAsyncEventQueueFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.domain.AsyncEventQueueDetails.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ListAsyncEventQueuesCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommand.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ListAsyncEventQueuesCommandDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListAsyncEventQueuesFunction.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-9-26 01:00:00" id="7128" opendate="2019-8-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add GFSH command for resuming an AEQ from a paused state</summary>
      <description>Related to https://issues.apache.org/jira/browse/GEODE-7126andGEODE-7127There should be a way to resume an existing AEQ from a paused state.  This would probably require a new command</description>
      <version>None</version>
      <fixedVersion>1.9.2,1.10.0,1.11.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.ConverterHint.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ResumeAsyncEventQueueDispatcherCommandTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ResumeAsyncEventQueueDispatcherFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ResumeAsyncEventQueueDispatcherCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CommandAvailabilityIndicator.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ResumeAsyncEventQueueDispatcherDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2019-9-11 01:00:00" id="7191" opendate="2019-9-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Duplicated info about JVM GC parameters</summary>
      <description>The "Managing Heap and Off-heap Memory" chapter of the documentation has a duplicated subchapter.The subchapter "Set the JVM GC Tuning Parameters" can be removed, as its content is included in "Tuning the JVM’s Garbage Collection Parameters".</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.heap.use.heap.management.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-10-11 01:00:00" id="7192" opendate="2019-9-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update cluster config behavior in documentation</summary>
      <description>The [Cluster Configuration Files and Troubleshooting page|https://geode.apache.org/docs/guide/19/configuring/cluster_config/gfsh_config_troubleshooting.html] currently describes older Geode behavior regarding the cluster.xml file. According to jinmeiliao, now "the xml/properties files are kept in a persisted region. It’s not in the file system anymore; only jar files are saved in the file system. When using `export cluster-config` command, it can print the content on the screen for you to look at."This page should be updated to reflect the current behavior.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.config.troubleshooting.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-9-18 01:00:00" id="7215" opendate="2019-9-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Include status of G1 GC compatibility in documentation</summary>
      <description>Improve heap management documentation including information about the current status of G1 garbage collector compatibility with Geode.Although CMS seems the recommended GC, it is known G1 can be used, but it should be stated that Geode is not fully compatible and memory issues could arise.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.heap.use.heap.management.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.managing.heap.use.off.heap.management.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-9-20 01:00:00" id="7226" opendate="2019-9-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>StaticFieldsMustBeImmutable Rule Fails to detect @Immutable at the class level</summary>
      <description>The StaticFieldsMustBeImmutable rule fails to detect the @Immutable annotation at the class level, forcing you to annotate every single effectively immutable static field individually. According to the rule documentation, however, annotating the class directly is supported:If the value of your static field is actually immutable, you can annotate that class or the field itself with @Immutable, and it will be ignored by this rule.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">static-analysis.pmd-rules.src.main.resources.org.apache.geode.pmd.staticimmutable.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-9-24 01:00:00" id="7234" opendate="2019-9-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve concourse task-image caching</summary>
      <description>Using a Concourse resource to cache images used by tasks is more efficient than using image-resource in the task definition itself. Do this wherever possible to keep from downloading the same Docker image over and over again in the same job.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.shared.jinja.yml</file>
      <file type="M">ci.pipelines.reaper.jinja.template.yml</file>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
      <file type="M">ci.pipelines.metrics.jinja.template.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
      <file type="M">ci.pipelines.examples.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-9-24 01:00:00" id="7242" opendate="2019-9-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incorrect documentation for AVG and SUM aggregate functions</summary>
      <description>The documentation for OQL Aggregate Functions states that AVG and SUM always return either a Float or Double, but the actual return type can be any of Integer, Long, Float or Double.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.select.aggregates.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-10-1 01:00:00" id="7259" opendate="2019-10-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Function Execution Through REST API Limitation</summary>
      <description>Function execution through the REST API doesn't support nested collections as part of the parameters, this is an undocumented limitation.We basically try to convert the JSON parameters into a Map and afterwards, based on the Map contents and the @type value within the JSON string, convert that into the actual Object[] parameters expected by the function. If any of those objects contain an inner collection ([] as JSON) or object ({} as JSON), the initial parsing will always fail:AbstractBaseController.javaprivate Map&lt;?, ?&gt; convertJsonToMap(final String jsonString) { Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;(); // convert JSON string to Map try { map = objectMapper.readValue(jsonString, new TypeReference&lt;HashMap&lt;String, String&gt;&gt;() {}); } catch (JsonParseException e) { throw new MalformedJsonException( "Bind params specified as JSON document in the request is incorrect!", e); } catch (JsonMappingException e) { throw new MalformedJsonException( "Server unable to process bind params specified as JSON document in the request!", e); } catch (IOException e) { throw new GemfireRestException("Server has encountered error while process this request!", e); } return map; }</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.rest.apps.post.execute.functions.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-10-1 01:00:00" id="7261" opendate="2019-10-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode V1 admin rest does not start with Spring 5.x jars on the classpath</summary>
      <description>The geode-web war includes several spring jars, but does not include spring-core. With Jetty debug logging enabled we can see the following error: [vm0] 07:30:50.469 [RMI TCP Connection(1)-127.0.0.1] DEBUG org.eclipse.jetty.servlet.ServletHandler - EXCEPTION [vm0] java.lang.NoClassDefFoundError: org/springframework/core/ErrorCoded [vm0] at java.lang.ClassLoader.defineClass1(Native Method) [vm0] at java.lang.ClassLoader.defineClass(ClassLoader.java:763) [vm0] at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142) [vm0] at java.net.URLClassLoader.defineClass(URLClassLoader.java:468) [vm0] at java.net.URLClassLoader.access$100(URLClassLoader.java:74) [vm0] at java.net.URLClassLoader$1.run(URLClassLoader.java:369) [vm0] at java.net.URLClassLoader$1.run(URLClassLoader.java:363)In addition, the war file also include commons-logging which causes the war logging to be redirected to stderr.</description>
      <version>1.9.0,1.9.1,1.10.0,1.11.0</version>
      <fixedVersion>1.9.2,1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-web.build.gradle</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-10-3 01:00:00" id="7272" opendate="2019-10-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docker image to build and preview the user guide</summary>
      <description>For building the Geode user guide it is needed to install Ruby and Bookbinder. It would be useful to have a docker image to do this task.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-book.README.md</file>
      <file type="M">dev-tools.docker.docs.view-docs.sh</file>
      <file type="M">dev-tools.docker.docs.Dockerfile</file>
      <file type="M">dev-tools.docker.docs.build-image-common.sh</file>
      <file type="M">dev-tools.docker.docs.build-docs.sh</file>
      <file type="M">dev-tools.docker.base.Dockerfile</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-10-3 01:00:00" id="7273" opendate="2019-10-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode transaction should throw TransactionDataNotColocatedException if the transaction is on replicate region then partitioned region</summary>
      <description>A client transaction should fail with TransactionDataNotColocatedException instead of TransactionDataRebalancedException if transaction worked on the replicate regions first and then worked on an entry in a partitioned region where primary bucket is on another node.User should not work on replicate region first in a transaction, but Geode should throw correct exception as well.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXStateProxyImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tx.PartitionedTXRegionStub.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.ClientServerNotColocatedTransactionDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-10-8 01:00:00" id="7280" opendate="2019-10-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Clarify docs: DELETE V1 endpoint only for replicated regions</summary>
      <description>The DELETE REST endpoint  for removing all entries only works for replicated (not partitioned) regions.  This should be explicit within the documentation.Here are two places (in the Geode 1.10 docs) that should identify that restriction: reference: https://geode.apache.org/docs/guide/110/rest_apps/delete_all_data.html https://geode.apache.org/docs/guide/110/rest_apps/develop_rest_apps.html#topic_qhs_f25_m4, in the subsection titled Deleting Region Data</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.rest.apps.develop.rest.apps.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.delete.all.data.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-10-8 01:00:00" id="7281" opendate="2019-10-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure that UpdatePassingTokens only moves forward in Git</summary>
      <description>During concourse migration, or during a fan-in from parallel tasks, it may happen that Geode SHAs get through the pipeline out-of-order. Ensure that we do not 'move backwards' in git history when this occurs.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.attach.sha.to.branch.sh</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-7-31 01:00:00" id="7395" opendate="2019-10-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Micrometer to documentation</summary>
      <description>As of 1.9 we added Micrometer as a way to publish metrics to external monitoring systems.  As of 1.10/1.11 we added metrics that would be emitted out of a Meter Registry and documented everything in the Apache Geode wiki.  We need to formalize some of this functionality a little more with a section on Micrometer in our docx.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.book.intro.html.md.erb</file>
      <file type="M">geode-docs.managing.statistics.setting.up.statistics.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-7-1 01:00:00" id="74" opendate="2015-7-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Recover redundancy in parallel</summary>
      <description>When redundancy recovery happens in geode, a single member coordinates the recovery, choosing the best targets and directing each member to create a redundant bucket.The rebalancing coordinator node directs the creation of each bucket serially. When multiple members are started simultaneously, it should be possible to recover redundancy more quickly by having them work in parallel.The proposal here is to still have a single coordinator, but the coordinator will put tasks into a threadpool to recover buckets asynchronously.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.partitioned.PartitionedRegionLoadModelJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.control.RebalanceOperationDUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.rebalance.SimulatedBucketOperator.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.rebalance.SatisfyRedundancyFPR.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.rebalance.SatisfyRedundancy.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.rebalance.PartitionedRegionLoadModel.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.rebalance.BucketOperator.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.PartitionedRegionRebalanceOp.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.control.PartitionRebalanceDetailsImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-11-4 01:00:00" id="7405" opendate="2019-11-4 00:00:00" resolution="Done">
    <buginformation>
      <summary>Documentation for describe query-service command</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.quick.ref.commands.by.area.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.describe.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.authorization.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-11-5 01:00:00" id="7407" opendate="2019-11-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove Usages of AttributesFactory from geode-assembly module</summary>
      <description>In order to remove the AttributesFactory class in a future release, we need to start removing it from our source code step by step.This ticket is to entirely remove references of the deprecated class within the geode-assembly module.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.rest.internal.web.controllers.RestAPITestBase.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.rest.internal.web.controllers.RestAPIsOnMembersFunctionExecutionDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.rest.internal.web.controllers.RestAPIOnRegionFunctionExecutionDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.rest.internal.web.controllers.RestAPIsAndInterOpsDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.rest.internal.web.controllers.RestAPIsOnGroupsFunctionExecutionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-2-5 01:00:00" id="7408" opendate="2019-11-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Metrics pipeline is referencing incorrect image</summary>
      <description>The image creation job has been updated to pre-pend the pipeline nameto the names of the images being created. The metrics pipeline is still referencing the old name (i.e. metric-tools) The metrics pipeline yaml should be updated to refer to the new name.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.metrics.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-2-5 01:00:00" id="7410" opendate="2019-11-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add private pipeline and team support to metrics pipeline</summary>
      <description>Private pipelines require authentication when accessing Concourse APIWhen authenticating, the concourse team to authenticate against should be specified.Fix minor bugs in concourse_job_performance.py that fails when no historicaljobs within concourse to report on.Fix minor bug in metrics deployment script when fly command is tee'd</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.metrics.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-11-7 01:00:00" id="7417" opendate="2019-11-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI checks do not trigger on geode-book changes</summary>
      <description>due to new branch protection rules, it is now impossible to submit geode-book changes as the required checks will never firewe should remove the exclusion so checks can run</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-3-7 01:00:00" id="7421" opendate="2019-11-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability: can deploy jar by REST API for Management</summary>
      <description>WHAT 1. can deploy jar file by REST API 2. from feature point , it will cover current 'gfsh deploy' 3. if two files have same file name, the later wins 4. can recognize version pattern. "filename-version&amp;#91;-label&amp;#93;.jar" . filename=&amp;#91;a-zA-Z/-&amp;#93;+, not single "", not end with "" version=&amp;#91;0-9/.&amp;#93;*, not single ".", not end with "." label=&amp;#91;a-zA-Z0-9&amp;#93;*such as: &lt;commons-beanutils-1.9.3.jar&gt; is a later version of &lt;commons-beanutils-1.9.2.jar&gt;, will deploy. &lt;commons-beanutils-1.9.3.jar&gt; is a same version of &lt;commons-beanutils-1.9.3-SNAPSHOT.jar&gt;, the later wins &lt;commons-beanutils-1.9.3-RELEASE.jar&gt; is a same version of &lt;commons-beanutils-1.9.3-SNAPSHOT.jar&gt;, the later wins &lt;commons-beanutils-1.9.1.jar&gt; is an earlier version of &lt;commons-beanutils-1.9.2.jar&gt;, will block it. 5. if there is a version part in the file name, we will deploy them without append "#1" part to the file name 6. can accept "group"</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RebalanceIntegrationTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.DeploymentTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.EntityInfo.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.assertions.ClusterManagementListResultAssert.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.web.http.support.HttpRequesterTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.ExportClusterConfigurationCommandTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.web.shell.HttpOperationInvoker.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.web.http.support.HttpRequester.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.functions.DeployFunction.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.realizers.DeploymentRealizerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.mutators.DeploymentManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.domain.ConfigurationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.LocatorClusterManagementServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceDeployedJarTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-management-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.functions.CacheRealizationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.DeploymentRealizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.ConfigurationRealizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.DeploymentManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.ConfigurationManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.domain.Configuration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DeployedJar.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.DeployedJarTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.codeAnalysis.AnalyzeManagementSerializablesJUnitTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ListIndexOnPartitionRegionTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.DeployToMultiGroupDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.DeploymentManagementDUnitTest.java</file>
      <file type="M">geode-web-management.src.main.webapp.WEB-INF.management-servlet.xml</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.security.RestSecurityConfiguration.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.DeploymentManagementController.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.internal.ClientClusterManagementServiceTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.ClientClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.Deployment.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.AbstractConfiguration.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.RestTemplateClusterManagementServiceTransport.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.CommandType.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-2-8 01:00:00" id="7428" opendate="2019-11-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>adjustment: set the log-lvl of REST API of Management from info to debug</summary>
      <description>WHY 1. too many logs in the log file, that is a customer concern 2. broker team call RESTAPI for Management for healthcheck per 10 seconds. it will produce too many logs. WHAT 1. change every log which is produced by RESTAPI for management to be DEBUG.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.ManagementLoggingFilter.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.rest.controllers.ClusterManagementRestLoggingTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ManagementRequestLoggingDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-11-9 01:00:00" id="7431" opendate="2019-11-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>benchmarks may fail due to infrastructure quota</summary>
      <description>For example, https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/Benchmark/builds/677 failed because there were already 3 benchmarks jobs running at the timeSince the quota is 40 and each benchmark uses 12, we should restrict max_in_flight to 3 for this job</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-12-14 01:00:00" id="7454" opendate="2019-11-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - add docs for the Cluster Management Service REST API</summary>
      <description>Add docs for the Cluster Management Service REST API.It's already written up in the Wiki: https://cwiki.apache.org/confluence/display/GEODE/Cluster+Management+Service</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.configuring.running.cluster-management-service.html.md.erb</file>
      <file type="M">geode-book.config.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-9-7 01:00:00" id="746" opendate="2016-1-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>When starting a locator using --bind-address, gfsh prints incorrect connect message</summary>
      <description>When starting my locator with gfsh start locator --name=locator1 --port=19991 --bind-address=192.168.103.1, the output from gfsh looks like this:..............................Locator in /Users/jdeppe/debug/locator1 on 192.168.103.1[19991] as locator1 is currently online.Process ID: 2666Uptime: 15 secondsGemFire Version: 8.2.0.BetaJava Version: 1.7.0_72Log File: /Users/jdeppe/debug/locator1/locator1.logJVM Arguments: -Dgemfire.enable-cluster-configuration=true -Dgemfire.load-cluster-configuration-from-dir=false -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806Class-Path: /Users/jdeppe/gemfire/82/lib/gemfire.jar:/Users/jdeppe/gemfire/82/lib/locator-dependencies.jarPlease use "connect --locator=192.168.1.10[19991]" to connect Gfsh to the locator.Failed to connect; unknown cause: Connection refusedThe connect string shown is just displaying my host address and not the bind address.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.LauncherLifecycleCommands.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-2-4 01:00:00" id="7534" opendate="2019-12-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add to documentation how to access top level region data with bind parameters in the path expression (FROM)</summary>
      <description>When trying to create a query using bind parameters in the path expression (FROM) in order to select to level region data it is not obvious that in order for the expression to be correct, the bind parameter must be surrounded by parenthesis as in the following example: SELECT e.key FROM ($1).entrySet e WHERE e.value.name=$2"</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.additional.using.query.bind.parameters.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-1-17 01:00:00" id="7588" opendate="2019-12-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>geode-gfsh module is missing geode-all-bom, which results in its dependencies not having versions.</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-gfsh.build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-12-18 01:00:00" id="7596" opendate="2019-12-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Separate PR polling from use of Apache repo:status token</summary>
      <description>GitHub API rate-limits are ruining many good PRs. Try and mitigate our use. If still occurring, escalate to ASF INFRA.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-2-19 01:00:00" id="7599" opendate="2019-12-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use GCI Concourse resource to track compute image versions</summary>
      <description>Use the Google Compute Image resource in concourse as an input to jobs that use the heavy-lifter pattern. This will make it easier to track job failures due to an image rebuild.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.rsync.code.down.sh</file>
      <file type="M">ci.scripts.create.instance.sh</file>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
      <file type="M">ci.pipelines.meta.deploy.meta.sh</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
      <file type="M">ci.pipelines.examples.jinja.template.yml</file>
      <file type="M">ci.images.google-geode-builder.packer.json</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-9-7 01:00:00" id="762" opendate="2016-1-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Change the default setting for enable-network-partition-detection to true</summary>
      <description>The default setting for enable-network-partition-detection should be changed from false to true.Distributed unit tests should continue to use a default setting of false since they do a lot of HA testing with a small number of VMs.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.ClientCommandsDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.cache.query.cq.dunit.CqStatsUsingPoolOptimizedExecuteDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.cache.query.cq.dunit.CqStatsUsingPoolDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.dunit.standalone.ProcessManager.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.dunit.internal.JUnit4DistributedTestCase.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.AbstractSecureServerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.UniversalMembershipListenerAdapterDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.LonerDMJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.partitioned.Bug39356DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.ConcurrentMapOpsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.Bug41733DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.TXDistributedDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.RRSynchronizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.RegionMembershipListenerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.PRBucketSynchronizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.ClientMembershipDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.GatewaySenderEventImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.NetView.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.messenger.JGroupsMessenger.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-assembly.src.test.java.com.gemstone.gemfire.rest.internal.web.controllers.RestAPITestBase.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-12-27 01:00:00" id="7628" opendate="2019-12-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Block jmx mbean creation when no security manager is configured</summary>
      <description>When no security manager is configured, we should not allow any client to be able to create mbeans.</description>
      <version>1.10.0</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementAgent.java</file>
      <file type="M">geode-docs.managing.management.jmx.manager.node.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.starting.up.shutting.down.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-2-7 01:00:00" id="7777" opendate="2020-2-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add 1.13 management rest wiki page</summary>
      <description>each release gets a new wiki page...</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-management.src.test.script.update-management-wiki.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-2-7 01:00:00" id="7778" opendate="2020-2-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add PUBLISH, SUBSCRIBE and UNSUBSCRIBE Redis commands</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.resources.org.apache.geode.redis.internal.sanctioned-geode-redis-serializables.txt</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisDataType.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeoCoder.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.AbstractExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Coder.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.GeodeRedisServer.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-7 01:00:00" id="7779" opendate="2020-2-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Concourse BumpXYZ does not include {prerelease}</summary>
      <description>After cutting the 1.13.0 release branch, hitting BumpMinor caused the semver to move from 1.12.0-SNAPSHOT.246 -&gt; 1.13.0, which is then sorted in semantic-order to be higher value than 1.13.0-SNAPSHOT.1</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-3-20 01:00:00" id="7897" opendate="2020-3-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Run Redis integration tests against native Redis via Docker</summary>
      <description>Configures relevant integration tests to also run against native Redis via a Docker image. Intended to help find discrepancies between Geode Redis behavior and that of native Redis.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.IncrExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.RenameExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Coder.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.StringsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.SortedSetsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.SetsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.SetCommandNegativeCaseIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.RenameTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.PubSubIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.ListsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.HashesIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.GeoIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.GeoCoderIntegrationTest.java</file>
      <file type="M">geode-redis.build.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-1 01:00:00" id="7942" opendate="2020-4-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>document the enable-management-rest-service geode property</summary>
      <description>The enable-management-rest-service geode property needs to be documented. This property was added in geode 1.10.</description>
      <version>1.10.0,1.11.0,1.12.0</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-2 01:00:00" id="7945" opendate="2020-4-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cluster restart recovery from disk blocked by waiting replies of CreateRegionMessage</summary>
      <description>A cluster restart recovering from disk has unexpected delays in some of the members. The logs show that those delayed members are waiting for replies of CreateRegionMessage, before loading the krf files. And the reason for waiting the replies of CreateRegionMessage is likely because other members are holding some lock while busy loading the krf files. Therefore the replies are delayed. Once those delayed members get the replies of CreateRegionMessage, it starts loading the krf files. If the delayed members contain the latest data, this could block other members waiting for the latest data.Because the cluster members are blocking each other at different stages during the cluster restart recovery process, the whole process is unexpectedly long when the disk store contains large amount of data.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PersistentBucketRecoverer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-4-3 01:00:00" id="7947" opendate="2020-4-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement tests for EXPIRE-related functionality</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.ExpireExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExpireExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExpireAtExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.PexpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ExpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.StringsDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.SortedSetsDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.SetsDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.RenameDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.PubSubDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.ListsDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.HashesDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.GeoDockerAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-5-30 01:00:00" id="8055" opendate="2020-4-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>can not create index on sub regions</summary>
      <description>When trying to use "create index" command in gfsh to create index on sub regions, we get the following message:"Sub-regions are unsupported"Pre-1.6, we were able to do that.</description>
      <version>1.7.0,1.8.0,1.9.2,1.10.0,1.11.0,1.12.0</version>
      <fixedVersion>1.12.1,1.13.0,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.management.internal.configuration.ClusterConfigurationIndexWithFromClauseDUnitTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommand.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.CacheConfigTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheConfig.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2020-9-30 01:00:00" id="8469" opendate="2020-8-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enforce no-missing-variable-declarations</summary>
      <description>Given I compile the code without exempting no-missing-variable-declarationsThen it should compileNote - was marked as a todo</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.ExpectedTimeoutRuleTest.java</file>
      <file type="M">dev-tools.dependencies.bump.sh</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.runtime.DeploymentInfoTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.DeploymentTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.ClassNameTest.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-9-11 01:00:00" id="8489" opendate="2020-9-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse should keep the 1.8 behavior when doing a "Select *" query</summary>
      <description>After the TypedJson refactor, we see those different behaviors when using DistributedSysteemMBean to do a "select *" query:1. Jackson Json Annotations are taking into effect now. "Select *" won't show those `@JsonIgnore` fields anymore. And "JsonProperty" annotation values are showing up as headers2. null values fields are not showing up.</description>
      <version>1.9.2,1.10.0,1.11.0,1.13.0</version>
      <fixedVersion>1.12.1,1.13.1,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.json.QueryResultFormatterTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.json.QueryResultFormatter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.json.AbstractJSONFormatter.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.beans.DistributedSystemMBeanIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-9-14 01:00:00" id="8492" opendate="2020-9-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis "clients" statistic goes negative</summary>
      <description>When running a long running app, we noticed that our "clients" statistic was negative. It should always be greater than or equal to 0. It seems like the call to decrement the number of clients was being invoked multiple times for each client.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisStats.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-11-3 01:00:00" id="8682" opendate="2020-11-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>update jetty to recommended version</summary>
      <description>update jetty to 9.4.33.v20201020</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.session.tests.GenericAppServerInstall.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  
</bugrepository>