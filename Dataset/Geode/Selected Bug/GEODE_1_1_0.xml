<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="GEODE">
  
  <bug fixdate="2016-1-8 01:00:00" id="2191" opendate="2016-12-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add more randomized tests for PDX string serialization/deserialization.</summary>
      <description>There are currently a number of tests for `DataSerializer.writeString` and `DataSerializer.readString`, which cover many of the corner cases we expect for string serialization/deserialization, but it would be nice to have randomized testing that generated Unicode strings and verified that they were the same after being serialized and deserialized.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.InternalDataSerializerRandomizedJUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-1-9 01:00:00" id="2197" opendate="2016-12-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor cluster config so that cluster.xml and properties don&amp;#39;t need to be saved in the file system.</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigStartMemberDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigDeployJarDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.SharedConfigurationJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.utils.XmlUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.functions.UploadJarFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.functions.ModifyPropertiesFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.domain.Configuration.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.GfshShellConnectionRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.SharedConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ConfigGroup.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigImportDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigBaseTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfig.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.ConnectToLocatorSSLDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.SharedConfigurationWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.functions.GetAllJarsFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.functions.AddJarFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.callbacks.ConfigurationChangeListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ImportSharedConfigurationArtifactsFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ExportSharedConfigurationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportImportSharedConfigurationCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DeployCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.ClusterConfigurationLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.SharedConfiguration.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2017-2-13 01:00:00" id="2475" opendate="2017-2-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade lucene version to 6.4.1</summary>
      <description>We should probably keep geode up to date with the latest Lucene jars</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.directory.RegionDirectory.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-2-13 01:00:00" id="2479" opendate="2017-2-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>correct doc reference to a com.gemstone package</summary>
      <description>File geode-docs/developing/data_serialization/auto_serialization.html still has a spurious reference to a com.gemstone package. It should be corrected to identify org.apache.geode instead.At the same time, remove links to the 2 subsections with headers Customizing Serialization with Class Pattern Strings Extending the ReflectionBasedAutoSerializerThese are in the navigation bar, so the links server no purpose.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.data.serialization.auto.serialization.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2017-6-27 01:00:00" id="2555" opendate="2017-2-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Region Management docs page refers to the wrong field</summary>
      <description>In https://geode.apache.org/docs/guide/11/basic_config/data_regions/managing_data_regions.html &lt;region name="Portfolios" id="REPLICATE"&gt;should be &lt;region name="Portfolios" refid="REPLICATE"&gt;The region tag doesn't support an id attribute, only refid. Copypasting the given config gives me an error.</description>
      <version>1.1.0</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.basic.config.data.regions.managing.data.regions.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-3-1 01:00:00" id="2560" opendate="2017-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing disk files (.crf) during backup/restore throws exception</summary>
      <description>The old FileUtil.copy was a noop if the src file did not exist.The new FileUtils.copyFile throws a FileNotFoundException if the src file does not exist.Protect against missing file.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Oplog.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-3-1 01:00:00" id="2561" opendate="2017-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: error in gfsecurity.properties example (Geode User Guide)</summary>
      <description>Reported by Mike Martell:Looks like an error on this SSL Sample Impl page: .../managing/security/ssl_example.htmlSeems like they're using a path for a password:ssl-truststore-password=/path/to/trusted.truststore&amp;#91;db note&amp;#93; Check entire page to make sure properties shown are consistent with the current implementation, as security properties (in particular) were recently revised.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.security.ssl.example.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-3-1 01:00:00" id="2562" opendate="2017-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: simplify language in Main Features section</summary>
      <description>Simplify some language within the page that describes main features of Geode.Will do this task as commit-then-review.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.getting.started.product.intro.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-11-1 01:00:00" id="2565" opendate="2017-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh destroy gateway-sender should be idempotent</summary>
      <description>Currently, running destroy gateway-sender multiple times return the following error:{{{destroy gateway-sender --id=1Member | Status------ | -----------------------------------------serv2 | ERROR: GateWaySender with Id 1 not foundserv1 | ERROR: GateWaySender with Id 1 not found}}}We should add a --if-exists option to destroy gateway-sender command.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.DestroyGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewaySenderDestroyFunctionArgs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewaySenderDestroyFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CliFunctionResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.GfshCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyGatewaySenderCommand.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-11-1 01:00:00" id="2566" opendate="2017-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh destroy index should be idempotent</summary>
      <description>Currently, running destroy index multiple times return the following error:gfsh&gt;destroy index --name=i1Index "i1" could not be destroyed for following reasonsIndex named "i1" not found.Occurred on following members1. 192.168.1.181(serv1:17230)&lt;v1&gt;:10252. 192.168.1.181(serv2:17842)&lt;v2&gt;:1026We should add a --if-exists option to destroy index command.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DestroyIndexFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.domain.IndexInfo.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommand.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-2-1 01:00:00" id="2569" opendate="2017-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unhelpful log message</summary>
      <description>I found this in a log file:Unable to form a TCP/IP connection to null in over 31 secondsJust prior to this the same thread logged this:Unable to form a TCP/IP connection to 10.32.109.100(15954)&lt;v6&gt;:48987 in over 31 secondsThe member mentioned was being removed from the membership view in another thread during this time and nothing malfunctioned, but it isn't useful to print the message with "null" in it. We should supress that message.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.ConnectionTable.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-3-2 01:00:00" id="2576" opendate="2017-3-2 00:00:00" resolution="Won&amp;#39;t Do">
    <buginformation>
      <summary>delete the old exported zip on the locator</summary>
      <description>Currently when user is exporting logs over jmx connection, a zip file will be created in the locator's working dir with a unique file name. If user does exports for multiple times, all these zips will be created and we have no mechanism to clean them up unless user go in there to delete them.May need to decide whether this is a problem or not. If it is, we need to implement a way to delete these stale zip files periodically.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.QueryNamesOverHttpDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsOverHttpDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ExportLogsFunctionIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.ExportLogController.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-3-7 01:00:00" id="2616" opendate="2017-3-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>A colocated paritioned region will leak memory when it is closed or destroyed</summary>
      <description>When a colocated partitioned region is created it registers itself with the parent region it is colocated with. When that same region is closed or destroyed it does not deregister itself from the parent.This results in a memory leak that remains until the parent region is itself closed or destroyed.</description>
      <version>1.1.0</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionTestHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.DefaultQuery.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-4-7 01:00:00" id="2619" opendate="2017-3-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Function execution on server must handle CacheClosedException</summary>
      <description>While a client is executing a function on a server, and the connection is disconnected, it must throw a CacheClosedException.Currently, executeOnServer method in ServerRegionFunctionExecutor class wraps the CacheClosedException into a FunctionException and throws it.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.results.LuceneGetPageFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.PageableLuceneQueryResultsImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneQueryImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-3-7 01:00:00" id="2620" opendate="2017-3-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove rate stats from LuceneIndexMetrices</summary>
      <description>Remove stats like commitRateupdateRatequeryExecutionRate</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.management.LuceneIndexMetrics.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.management.LuceneIndexStatsMonitor.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-3-8 01:00:00" id="2633" opendate="2017-3-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>When turning on fine logging, GEODE logs the keystore password in clear text</summary>
      <description>When turning on fine logging GEODE logs the keystore password in clear text.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.ArgumentRedactor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-3-8 01:00:00" id="2635" opendate="2017-3-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create Lucene DUnit tests to check eviction attributes</summary>
      <description>Create LuceneDunit tests which tests eviction with both local destroy and overflow to disk</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-7-16 01:00:00" id="2681" opendate="2017-3-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gfsh show missing-disk-stores command hangs when server is waiting for disk stores</summary>
      <description>Similar to GEODE-2680:When starting up a server with persistent files, the server waits for the other offline members as expected. When trying to show missing disk stores in a different gfsh process, this command also hangs. It is expected that this process should not be hungAttached is a cache xml file and oplogs to reproduce the file.Steps to reproduce:Configuration:1.) Edit the cache.xml file to point to the appropriate disk store locationCommands:1.) start locator —-name=locator12.) start server --name=server1 -—cache-xml-file=cache.xmlAttempt to start a separate gfsh process and run the following commands:1.) connect2.) show missing-disk-stores</description>
      <version>1.1.0</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.ServerStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.MemberVM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ShowMissingDiskStoresFunctionJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ShowMissingDiskStoresFunction.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2017-4-24 01:00:00" id="2716" opendate="2017-3-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>export logs should honor the log level set on the server</summary>
      <description>When no log level is specified, export logs gets only the info level logs. This is confusing; export logs should get the entire log file from the server when log level is not specified.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.management.internal.cli.commands.golden-help-offline.properties</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ExportLogsFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportLogsCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.LogService.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-3-27 01:00:00" id="2720" opendate="2017-3-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs should have 2-digit release number, not 3-digit</summary>
      <description>The top of the Geode docs about.html page has a header which contains a 3-digit release number (for example, Geode 1.1.0). It should instead only have the first 2 digits (for example, Geode 1.1).With this change, a release that revs the 3rd digit (for example, Geode 1.1.0 to Geode 1.1.1) will not need a new version of the docs, if there are no documentation ramifications to the release.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.about.geode.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2017-4-5 01:00:00" id="2756" opendate="2017-4-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>export logs integration with security</summary>
      <description>We need to make sure that a user is able to export logs when a security-manager has been configured.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptorRequestHeaderJUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptorJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptor.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-4-10 01:00:00" id="2764" opendate="2017-4-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Index entry not entered into cluster config xml if region name contains a function call like entrySet()</summary>
      <description>Steps to recreate the issue type the following in a gfsh instance:1. start locator --name=locator2. start server --name=server3. create region --name=regionName --type=REPLICATE_PERSISTENT 4. create index --name=regionIndex --region="regionName.entrySet() r" --expression=r.key&amp;#8211; this will result in an error message Failed to create index "regionIndex" due to following reasonsnullCause:The index is created but while putting the entry into the clusterconfig it tries to put the region name as regionName.entrySet() which does not exist. cache.getRegion(regionName.entrySet()) will result in null and no xml entry is added to the clusterconfig. So when the server is restarted, there is no index entry in the cluster config xml hence the index is not re-created.Solution:If the region name contains the character '(' and ')' spilt the region name at the index of '.' and check if the region exists. If the check returns successful only then enter the entry into the cluster config.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateIndexFunction.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-4-10 01:00:00" id="2765" opendate="2017-4-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh help should consistently use log4j log levels</summary>
      <description>The fix for GEODE-2634 changed the gfsh commands that use --log-level option to use log4j2 log levels. The gfsh help text needs to also change.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.management.internal.cli.commands.golden-help-offline.properties</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-4-10 01:00:00" id="2767" opendate="2017-4-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Extend testing coverage of export logs</summary>
      <description>Move the hydra functional tests of "export logs" to GEODE. Currently, export logs tests do not cover --group and --member options.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-4-10 01:00:00" id="2768" opendate="2017-4-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene Queries executed before index is fully created should be retried</summary>
      <description>With the feature to destroy a Lucene Index, parts of the querying function were changed to handle the event where we execute a query on an index that is no longer present. However, the scenario where we execute a query on an index that is defined but has not been created can also arise. We want to handle the case where we have defined the index, but have yet to create it due to a brief window in restart.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.distributed.LuceneQueryFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.distributed.LuceneQueryFunction.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-1-11 01:00:00" id="2770" opendate="2017-4-11 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>When using the REST API it is possible for the API to be accepting requests after the system has shutdown</summary>
      <description>When using the REST API it is possible for the API to be accepting requests after the system has shutdown. The shutdown sequence for the REST API should be next to the other APIs.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  
  
  <bug fixdate="2017-10-5 01:00:00" id="2888" opendate="2017-5-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>user guide: REST API Region Endpoints use &amp;#39;gemfire-api&amp;#39; in their names</summary>
      <description>The name 'gemfire-api' should be replaced by 'geode' in the Region Endpoints section of the manual. See http://geode.apache.org/docs/guide/11/rest_apps/rest_regions.html and its subsections.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.rest.apps.troubleshooting.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.regions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.queries.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.prereqs.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.functions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.examples.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.admin.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.update.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.update.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.update.cas.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.replace.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.multiple.values.for.keys.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.post.if.absent.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.post.execute.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.post.execute.functions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.post.create.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.ping.service.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.head.region.size.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.servers.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.region.key.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.region.keys.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.region.data.for.multiple.keys.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.region.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.regions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.queries.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.functions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.execute.adhoc.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.develop.rest.apps.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.delete.named.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.delete.data.for.multiple.keys.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.delete.data.for.key.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.delete.all.data.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2017-6-28 01:00:00" id="3146" opendate="2017-6-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove docs reference to GemFire version 8.2</summary>
      <description>Remove the reference to '8.2' in file developing/partitioned_regions/set_join_redundancy_recovery.htmlCorrect the grammar and improve the wording in this subsection in the same commit.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.partitioned.regions.set.join.redundancy.recovery.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-7-12 01:00:00" id="3194" opendate="2017-7-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cleanup disk store on failed recovery</summary>
      <description>When recovering from persistent disk stores, it is possible to have the process fail exceptionally (for example, a failure deserializing the data from the disk store). Currently, however, this is not handled in a way that cleans up the partially setup disk store, but should be modified to do so.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskStoreFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreFactoryImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-7-12 01:00:00" id="3198" opendate="2017-7-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Do not prevent bucket creation if local-max-memory is exceeded</summary>
      <description>In creating a new bucket, if local-max-memory is exceeded on all members, the bucket cannot be created until a member goes below that memory threshold (which may be never, in which case the attempt to create the bucket loops forever). Currently, if all members have indicated they should not make the bucket, the request is again made, but with a "force" flag set to true. This allows overriding the fact that the member believes it already hosts as many buckets as it should for balance, but does not override the local-max-memory check. We should therefore have the force flag also override the memory threshold check, thus allowing bucket creation to proceed, but still attempting to honor not adding it to a member already at or above its target memory limit.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionLocalMaxMemoryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionDataStoreJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-9-21 01:00:00" id="352" opendate="2015-9-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>PRClientServerRegionFunctionExecutionSelectorNoSingleHopDUnitTest.testserverMultiKeyExecution_byInlineFunction fails intermittently with suspect string</summary>
      <description>Failure was on a private build.java.lang.AssertionError: Suspicious strings were written to the log during this run.Fix the strings or use DistributedTestCase.addExpectedException to ignore.-----------------------------------------------------------------------Found suspect string in log4j at line 2039java.net.SocketTimeoutException: Read timed out</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.batterytest.greplogs.ExpectedStrings.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.client.internal.ConnectionImpl.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.client.internal.ConnectionFactoryImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2017-9-18 01:00:00" id="3638" opendate="2017-9-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cleanup DUnit aka DistributedTest framework</summary>
      <description>While preparing for a DUnit talk, I found lots of minor issues in DUnit that I fixed and would like to merge to develop.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.CommandOverHttpDUnitTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.TestRunner.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.TemporaryFileRuleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.RuleListTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.RetryRuleLocalWithExceptionTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.RetryRuleLocalWithErrorTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.RetryRuleGlobalWithExceptionTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.RetryRuleGlobalWithErrorTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.RestoreLocaleRuleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.RepeatRuleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.IgnoreUntilRuleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.ExpectedTimeoutRuleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.examples.RuleAndClassRuleTest.java</file>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.categories.CategoryTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.runner.SuiteRunner.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.runner.SuiteBlockRunner.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.runners.CategoryWithParameterizedRunnerFactory.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.runners.CategoryWithParameterizedRunner.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableExternalResource.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.DescribedExternalResource.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.VMDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.OverridingGetPropertiesDisconnectsAllDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.JUnit4VMDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.JUnit4OverridingGetPropertiesDisconnectsAllDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.JUnit4GetTestMethodNameDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.JUnit4GetDefaultDiskStoreNameDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.JUnit4BasicDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.GetTestMethodNameDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.GetDefaultDiskStoreNameDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.tests.BasicDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.test.MemberStarterRuleTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.DistributedExternalResource.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.DistributedDisconnectRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.internal.JUnit3DistributedTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.Host.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.DUnitEnv.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.DUnitBlackboard.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.DistributedTestUtils.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.DebuggerUtils.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.cache.internal.JUnit4CacheTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.cache.internal.JUnit3CacheTestCase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.AsyncInvocation.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.Assert.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheTestCase.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-10-22 01:00:00" id="3685" opendate="2017-9-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>MBean wrappers are not always applied correctly</summary>
      <description>Under certain conditions, MBean wrappers are not applied correctly.</description>
      <version>1.1.0,1.1.1,1.2.0,1.2.1</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.management.internal.cli.commands.StopServerAcceptanceTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.shell.HttpOperationInvokerSecurityTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.gfsh.GfshRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.gfsh.GfshExecution.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.shell.HttpOperationInvoker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.http.support.SimpleHttpRequester.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.ShellCommandsController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.AbstractMultiPartCommandsController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.AbstractCommandsController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementAgent.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-10-25 01:00:00" id="3701" opendate="2017-9-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve docs on hash index performance</summary>
      <description>Stronger language is warranted for hash indexes.In a simple test, there was an order of magnitude difference in load and GII performance between the two types of indexes.Range:Client: Loaded 2,000,000 entries in 20,487 msServer 1 Size: 1,272,322,680 bytesServer 2: GIIed in 12,523 msServer 2 Size: 1,272,088,544 bytesHash:Client: Loaded 2,000,000 entries in 257,016 msServer 1 Size: 1,228,010,280 bytesServer 2: GIIed in 218,983 msServer 2 Size: 1,228,161,664 bytesSo, the difference in size was ~45MB, but the difference in time was an order of magnitude.Better wording suggested for file developing/query_index/creating_hash_indexes.html:Using hash index will degrade put performance and recovery time substantially. If memory is not a concern, it is recommended that you use range index.</description>
      <version>None</version>
      <fixedVersion>1.3.0,1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.index.creating.hash.indexes.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-9-25 01:00:00" id="3702" opendate="2017-9-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>New framework for concurrency testing</summary>
      <description>From the mailing list discussion:I'd like to propose two things:1) We introduce a framework for writing unit tests of code that issupposed to be thread safe. This framework should let a developereasily write a test with multiple things going on in parallel. Theframework can then take that code and try to run it with differentthread interleavings.Here's an example of what this could look like:@RunWith(ConcurrentTestRunner.class)public class AtomicIntegerTest { @Test public void parallelIncrementReturns2(ParallelExecutor executor) throws ExecutionException, InterruptedException { AtomicInteger atomicInteger = new AtomicInteger(); executor.inParallel(() -&gt; atomicInteger.incrementAndGet()); executor.inParallel(() -&gt; atomicInteger.incrementAndGet()); executor.execute(); assertEquals(2, atomicInteger.get()); }2) We implement this framework initially using Java Pathfinder, butallow for other methods of testing the code to be plugged in forexample just running the test in the loop. Java pathfinder is coolbecause it can run the code with different interleavings but it doeshave some serious limitations.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
      <file type="M">gradle.rat.gradle</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.FilterProfile.java</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2015-6-27 01:00:00" id="41" opendate="2015-5-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Dummy feature for gitflow validation</summary>
      <description>Dummy feature for gitflow validation</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">COMPILING.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-6 01:00:00" id="4616" opendate="2018-2-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Callstack script fails to collect callstack information</summary>
      <description>The capture_call_stacks.sh script has functional errors that prevent it from capturing callstacks correctly. Fix paths and docker image generation.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.test-archive.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-6 01:00:00" id="5029" opendate="2018-4-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve docs for query timeout and low memory due to a query</summary>
      <description>The section labeled "Monitoring Queries for Low Memory" can use a bit of improvement. Separate the section into 2 sections: Queries and low memory Query timeout Make the prose clear that this is not just about monitoring, but about action that is taken (exceptions thrown) for queries.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.additional.advanced.querying.html.md.erb</file>
      <file type="M">geode-docs.developing.querying.basics.monitor.queries.for.low.memory.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-12-27 01:00:00" id="503" opendate="2015-10-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode can leak SSL keystore password via the log file</summary>
      <description>KeyStore password can be leaked via the log file, as this may get printed and is unintended. This could cause a security issue for some users by leaking information that could allow access to the keystore holding the SSL certificate used to validate connections between members.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.AbstractConfig.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-4-18 01:00:00" id="5103" opendate="2018-4-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>During rebalance, a client node may miss a transactional event</summary>
      <description>During rebalance, a new primary bucket could be created on another node while the original primary bucket become secondary in a short period of time. If a transaction occurs on the primary bucket node, TXCommitMessage will be sent to the secondary primary bucket node. There is a race that a event could be missed to be added to the subscription queue when the now secondary bucket is being removed to satisfy the redundancy.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-18 01:00:00" id="5104" opendate="2018-4-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI output git SHA when updating passing reference file.</summary>
      <description>When concourse updates the file indicating the SHA that has passed all tests, print it out.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.update-passing-ref.sh</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-5-19 01:00:00" id="5111" opendate="2018-4-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>show missing-disk-stores sometimes does not show the missing disk stores</summary>
      <description>When geode logs are showing there is in fact a missing disk store, running the show-missing-disk-store command sometimes returns that there are no missing disk stores</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.SystemPropertyHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheDistributionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketPersistenceAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-19 01:00:00" id="5114" opendate="2018-4-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Archive UITest results</summary>
      <description>It would be great to archive test results for concourse job UITest.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-10-28 01:00:00" id="512" opendate="2015-10-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>unit test suspect string detector needs to provide more info</summary>
      <description>The suspect string detector used by the unit test framework only gives a single line that is suspect. This makes it hard to fix suspect string tickets.Often times the suspect is the beginning of a exception stack. If the entire call stack was included it would be helpful.Also having some context around the suspect string can help. For example what thread logged the suspect and what happened right before and after the suspect can help.Often times the actual logs are no longer available and getting the suspect string to reproduce can take lots of time.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.batterytest.greplogs.LogConsumer.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-24 01:00:00" id="5130" opendate="2018-4-24 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Refactor pipeline in anticipation of PR pipeline</summary>
      <description>In order to facilitate the upcoming PR Pipeline functionality, refactor the geode pipeline to be branch-independent, and dry up configuration via templates.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.yml</file>
      <file type="M">ci.pipelines.develop.yml</file>
      <file type="M">ci.pipelines.geode-build.base.yml</file>
      <file type="M">ci.scripts.test-run.sh</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2015-11-30 01:00:00" id="524" opendate="2015-10-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Misspelled method name: &amp;#39;beforeEnque()&amp;#39; should be &amp;#39;beforeEnqueue()&amp;#39;</summary>
      <description>The method 'beforeEnqueue()' (correct spelling) appears in several places in code related to Gateway Events. Unfortunately, so does 'beforeEnque()' (incorrect spelling). To avoid confusion, occurrences of the incorrectly-spelled method should be fixed in the Geode code base.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.serial.SerialGatewaySenderEventProcessor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.parallel.ParallelGatewaySenderQueue.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.parallel.ParallelGatewaySenderEventProcessor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.parallel.ConcurrentParallelGatewaySenderEventProcessor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.AbstractGatewaySender.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.asyncqueue.internal.SerialAsyncEventQueueImpl.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.asyncqueue.internal.ParallelAsyncEventQueueImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-5-22 01:00:00" id="5242" opendate="2018-5-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix docs typo in ssl_* component property names</summary>
      <description>The list of components incorrectly uses "http" instead of web for the property definitions of ssl-enabled-components, ssl-require-authentication, ssl-component-alias, and ssl-http-require-authentication (note that the name of this property does not change, only the definition). These property definitions need to updated.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-5-22 01:00:00" id="5245" opendate="2018-5-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unit tests fail on windows due to assertions on paths</summary>
      <description>A couple of tests fail on windows due to assertions on paths. The paths have to considered based on underlying OS.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.shell.GfshHistoryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.help.HelperIntegrationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.PdxBasedCrudControllerIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportConfigCommandTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.test.junit.rules.GfshRuleTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2015-11-30 01:00:00" id="525" opendate="2015-10-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Javadocs: addGatewayEventFilter() doc correction</summary>
      <description>The Javadoc comment for addGatewayEventFilter() says 'Removes...', should say 'Adds'.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.asyncqueue.AsyncEventQueueFactory.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2018-8-11 01:00:00" id="5308" opendate="2018-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - simplify terminology: "cache transactions" can be "transactions"</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.with.external.db.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.monitor.troubleshoot.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.how.cache.transactions.work.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.data.location.cache.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transaction.performance.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.by.region.type.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-6-11 01:00:00" id="5311" opendate="2018-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - simplify navigation for "Client Transactions" section</summary>
      <description>The "Client Transactions" section has short subsections which do not need entries in the left-hand navigation pane. Remove the subnav links for those subsections.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-11 01:00:00" id="5313" opendate="2018-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - consolidate transaction coding examples</summary>
      <description>The examples are short, but currently housed in separate files.Merge into a single file, simplify left-hand nav.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.suspend.resume.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.coding.examples.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactions.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactional.function.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.jca.adapter.example.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-7-3 01:00:00" id="5378" opendate="2018-7-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>AcceptanceTests fail because they cannot start service db</summary>
      <description>The build 125-127 have had 10 failures that were related to failure to start a service db in the JDBC tests.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.docker.initdocker</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-3-8 01:00:00" id="54" opendate="2015-6-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing javadocs</summary>
      <description>The current build process is not generating javadocs and once they're generated it's still be defined where to host the pages. Current Geode docs are hosted at http://geode-docs.cfapps.io/ but javadocs can be part of that or be hosted under geode.incubator.apache.org.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.docs.index.html</file>
      <file type="M">geode-site.website.Rules</file>
      <file type="M">geode-site.website.README.md</file>
      <file type="M">geode-site.website.layouts.header.html</file>
      <file type="M">geode-site.website.layouts.footer.html</file>
      <file type="M">geode-site.website.layouts.default.html</file>
      <file type="M">geode-site.website.content.community.index.html</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-7-9 01:00:00" id="5408" opendate="2018-7-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document gfsh remove -all option not avail for partitioned regions</summary>
      <description>The command reference page for gfsh remove in the documentation ought to explicitly say that the -all option is not available for partitioned regions.  The gfsh help text and the error message (if one tries to use the -all option do explicitly state this.  So, just the docs need updating.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.remove.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-11-11 01:00:00" id="541" opendate="2015-11-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The latest GemFire 800x clients can&amp;#39;t connect to Geode servers</summary>
      <description>GemFire 8009 introduced an on-the-wire compatibility change between client and server. Geode needs to be updated to support this change.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.Version.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunctionSingleHop.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteFunction66.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.CommandInitializer.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-8-19 01:00:00" id="5761" opendate="2018-9-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>jsonassert has incompatible transitive dependency on android-json</summary>
      <description>The fix for GEODE-5696 added geode-junit dependency on org.skyscreamer:jsonassert which brings in a transitive dependency on com.vaadin.external.google:android-json which is incompatible with geode-json.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-9-19 01:00:00" id="5762" opendate="2018-9-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix typos in transaction docs code examples</summary>
      <description>The variable used for the transaction manager object in the code examples within the docs section on Transactions is inconsistent.  Pick one variable name, and use it throughout all examples in a consistent way.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.directed.example.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-9-21 01:00:00" id="5765" opendate="2018-9-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>AlterRuntimeCommandDUnitTest slows down due to large numbers of classes loaded</summary>
      <description>We observed that several tests in this class are taking minutes when they should be taking a few seconds at most. After some debugging, we determined that the JVM itself is struggling to deal with having 100K+ classes loaded. They are loaded because the test is repeated starting and stopping the http service, which creates a classloader and causes soft references to all of the loaded classes to be cached.By setting a flag to clear the soft references faster, the test times go back to normal.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-25 01:00:00" id="5778" opendate="2018-9-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>On Windows - rsync fails intermittently</summary>
      <description>Can we just retry when rsync fails just like start_instance task?https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsGfshDistributedTest/builds/11https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsUnitTest/builds/10https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsAcceptanceTest/builds/10rsync fails intermittently with following error:Warning: Permanently added '35.184.2.138' (ECDSA) to the list of known hosts. 1 [main] rsync 3440 child_info_fork::abort: C:\ProgramData\chocolatey\lib\rsync\cwrsync_5.5.0_x86_free\bin\cyggcc_s-1.dll: Loaded to different address: parent(0x2E20000) != child(0x150000)rsync: fork failed in do_recv: Resource temporarily unavailable (11)rsync error: error in IPC code (code 14) at main.c(879) [Receiver=3.1.2]real 0m1.226suser 0m0.004ssys 0m0.020s</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-1-27 01:00:00" id="5788" opendate="2018-9-27 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>On Windows, Ignore tests that bounces VMs</summary>
      <description>Ignore tests that wants to bounce VMs until GEODE-5787 is fixed.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DeployWithGroupsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-2 01:00:00" id="5806" opendate="2018-10-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create new example for durable client subscriptions</summary>
      <description>Create a new example for durable messaging with client subscriptions.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.events.implementing.durable.client.server.messaging.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-12-20 01:00:00" id="581" opendate="2015-11-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Load probe that only considers the size of buckets</summary>
      <description>The default implementation of LoadProbe used for rebalancing returns the size in bytes of each bucket.For some use cases, there is a need to ignore the size is bytes of the bucket and balance based on the number of buckets on each server instead.Geode should provide a load probe that returns only the number of buckets on each server.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.control.RebalanceOperationDUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.DSFIDFactory.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.DataSerializableFixedID.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.control.InternalResourceManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-3 01:00:00" id="5814" opendate="2018-10-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Move Windows CI jobs to &amp;#39;main&amp;#39; group</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2018-10-4 01:00:00" id="5827" opendate="2018-10-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>DUnit suspect string setUp is generating ERROR messages</summary>
      <description>The ERROR messages are generated because hexTid is a custom PatternConverter. DUnit is programmatically adding an Appender for suspect string detection and there doesn't seem to be a way to add custom PatternConverter. We'll probably have to use tid instead of hexTid for the suspect string detection appender.[vm0] 2018-10-03 09:57:53,227 main ERROR Unrecognized format specifier [hexTid][vm0] 2018-10-03 09:57:53,227 main ERROR Unrecognized conversion specifier [hexTid] starting at position 78 in conversion pattern.[vm1] 2018-10-03 09:57:53,243 main ERROR Unrecognized format specifier [hexTid][vm1] 2018-10-03 09:57:53,243 main ERROR Unrecognized conversion specifier [hexTid] starting at position 78 in conversion pattern.[vm2] 2018-10-03 09:57:53,274 main ERROR Unrecognized format specifier [hexTid][vm2] 2018-10-03 09:57:53,274 main ERROR Unrecognized conversion specifier [hexTid] starting at position 78 in conversion pattern.[vm3] 2018-10-03 09:57:53,274 main ERROR Unrecognized format specifier [hexTid][vm3] 2018-10-03 09:57:53,274 main ERROR Unrecognized conversion specifier [hexTid] starting at position 78 in conversion pattern.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.standalone.DUnitLauncher.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-10-11 01:00:00" id="5855" opendate="2018-10-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>hide OpenJDK11 pipeline jobs until they&amp;#39;re "reliably green and gating"</summary>
      <description>Follow the rule of thumb that the default should be what we want peopleto look at. We don't want people to get desensitized that red CI =&gt; "Thisis bad, I must jump into action". So I'd argue that the OpenJDK11 jobsshould not be in the default view until they are reliably green and at thatpoint also should block the pipeline.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-10-11 01:00:00" id="5856" opendate="2018-10-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>As much as possible, a gradle file should have only one dependencies block.</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.test.gradle</file>
      <file type="M">geode-core.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-10-12 01:00:00" id="5857" opendate="2018-10-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Race conditions during JMX registration and cleanup</summary>
      <description>Unregistering an MBean twice results in an InstanceNotFoundException, which gets wrapped in a ManagementException and logged as a warning. This should not be a warning as an InstanceNotFoundException implies the MBean has already been unregistered, and a second unregistration is basically a no-op. The same logic applies to registration of an MBean</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.MBeanProxyFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.MBeanJMXAdapter.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-11-21 01:00:00" id="587" opendate="2015-11-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene subproject not published correctly</summary>
      <description>The lucene submodule is present in settings.gradle but not published in the distribution or published to maven.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-lucene.build.gradle</file>
      <file type="M">gemfire-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-10-17 01:00:00" id="5890" opendate="2018-10-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gateway events from the same distributed system did not check misorder</summary>
      <description>Host name: rs-GEM-2228-1638a2i3xlarge-hydra-client-28OS name: LinuxArchitecture: amd64OS version: 3.10.0-862.11.6.el7.x86_64Java version: 1.8.0_181Java vm name: Java HotSpot(TM) 64-Bit Server VMJava vendor: Oracle CorporationJava home: /usr/local/regr/jdk/jdk1.8.0_181/jre  #####################################################  Product    Product-Name: Pivotal GemFire    Product-Version: 9.6.0    Native version: native code unavailable  Build    Build-Date: 2018-09-18 00:33:49 +0000    Build-Id: root 9    Build-Java-Version: 1.8.0_171    Build-Platform: Linux 4.4.0-89-generic amd64  Open    Source-Date: 2018-09-18 00:29:00 +0000    Source-Repository: support/9.6    Source-Revision: b404fab8c4fe962dc8adab827034efdbc93ab861  Closed    GemFire-Source-Date: 2018-09-10 23:15:03 +0000    GemFire-Source-Repository: support/9.6    GemFire-Source-Revision: f5a2b5ec6e6144a0635c41d1605b4586dd8acc6a    Running on: /10.32.111.152, 4 cpu(s), amd64 Linux 3.10.0-862.11.6.el7.x86_64  #####################################################Test was run from versioning/newWan/wanVersioning.btTest:versioning/newWan/parRegSerialSenderKeysPerWanHct.conf   bridgeHostsPerSite=3   bridgeThreadsPerVM=2   bridgeVMsPerHost=1   clientMem=256m   edgeHostsPerSite=2   edgeThreadsPerVM=5   edgeVMsPerHost=1   enableFailover=true   locatorHostsPerSite=1   locatorThreadsPerVM=2   locatorVMsPerHost=1   maxOps=20000   redundantCopies=1   resultWaitSec=1200   serverMem=256m   wanSites=4Run with local.conf:hydra.Prms-randomSeed=1537256262399;hydra.Prms-randomSeed=1537256262399;hydra.GemFirePrms-logLevel = fine;//randomSeed extracted from test:hydra.Prms-randomSeed=1537256262399;*** Test failed with this error:CLIENT vm_17_thr_50_edge_3_2_host1_11693TASK[0] versioning.newWan.WanConflictResolverTest.HydraTask_doOpsAndValidateHAERROR util.TestException: Snapshot written by edge_1_2(pid=11618). Expected /DefaultRegion to be size 24, but it is size 23The following 1 keys were missing from /DefaultRegion: [Object_10]util.TestException: Snapshot written by edge_1_2(pid=11618). Expected /DefaultRegion to be size 24, but it is size 23The following 1 keys were missing from /DefaultRegion: [Object_10]        at newWan.WANOperationsClient.verifyRegionContents(WANOperationsClient.java:1089)        at versioning.newWan.WanConflictResolverTest.validateEntryOperationFromBBSnapshot(WanConflictResolverTest.java:364)        at versioning.newWan.WanConflictResolverTest.doOpsAndValidateHA(WanConflictResolverTest.java:319)        at versioning.newWan.WanConflictResolverTest.HydraTask_doOpsAndValidateHA(WanConflictResolverTest.java:111)        at sun.reflect.GeneratedMethodAccessor327.invoke(Unknown Source)        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)        at java.lang.reflect.Method.invoke(Method.java:498)        at hydra.MethExecutor.execute(MethExecutor.java:181)        at hydra.MethExecutor.execute(MethExecutor.java:149)        at hydra.TestTask.execute(TestTask.java:197)        at hydra.RemoteTestModule$1.run(RemoteTestModule.java:213)</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.entries.AbstractRegionEntryTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.entries.AbstractRegionEntry.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-10-17 01:00:00" id="5892" opendate="2018-10-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>File&amp;#39;s absolute path does not change after user.dir is changed in jdk11</summary>
      <description>File relativeFile1 = new File("abc.txt");System.setProperty("user.dir", "/somewhereElse");File relativeFile2 = new File("abc.txt");System.out.println(relativeFile1.getAbsolutePath());System.out.println(relativeFile2.getAbsolutePath());pre jdk11, the code above will print out "/somewhereElse/abc.txt" in both lines, even though the relativeFile objects still point to the files under the old user.dir. But in jdk11, the above code will print out "old user.dir/abc.txt" in both lines. dynamically change user.dir would not affect the relative file's absolute path anymore.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.integrationTest.java.org.apache.geode.management.internal.cli.commands.CommandOverHttpTest.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.junit.rules.VMProvider.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.junit.rules.MemberStarterRule.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.rules.ClusterStartupRule.java</file>
      <file type="M">geode-dunit.src.distributedTest.java.org.apache.geode.test.dunit.rules.tests.MemberStarterRuleTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ProductUseLog.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocator.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.util.LogExporterIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.functions.ExportLogsFunctionIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.commands.ConfigurePDXCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.beans.ManagementAdapterTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.ClassPathLoaderIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocatorRecoveryJUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache.query.dunit.PartitionedRegionCompactRangeIndexDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-10-18 01:00:00" id="5899" opendate="2018-10-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make dependencies explicit in geode-lucene, *-old-client-support</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-web.build.gradle</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-old-client-support.build.gradle</file>
      <file type="M">geode-lucene.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-lucene.geode-lucene-test.build.gradle</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-common.build.gradle</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-10-19 01:00:00" id="5904" opendate="2018-10-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>fix rsync_down to work with constrained JAVA_HOME</summary>
      <description>builds are failing in rsync_down since PR 2643 was merged</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.execute.tests.sh</file>
      <file type="M">geode-web.src.integrationTest.java.org.apache.geode.management.internal.cli.commands.CommandOverHttpTest.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.junit.rules.VMProvider.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.junit.rules.MemberStarterRule.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.rules.ClusterStartupRule.java</file>
      <file type="M">geode-dunit.src.distributedTest.java.org.apache.geode.test.dunit.rules.tests.MemberStarterRuleTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ProductUseLog.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocator.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.util.LogExporterIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.functions.ExportLogsFunctionIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.commands.ConfigurePDXCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.beans.ManagementAdapterTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.ClassPathLoaderIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.ClassPathLoaderDeployTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.locator.GMSLocatorRecoveryJUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache.query.dunit.PartitionedRegionCompactRangeIndexDUnitTest.java</file>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.meta.deploy.meta.sh</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
      <file type="M">ci.images.test-container.Dockerfile</file>
      <file type="M">ci.images.google-windows-geode-builder.windows-packer.json</file>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-10-19 01:00:00" id="5906" opendate="2018-10-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>no chmod on windows</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.execute.tests.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-10-19 01:00:00" id="5907" opendate="2018-10-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>better fix for windows</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.execute.tests.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-11-30 01:00:00" id="5961" opendate="2018-10-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Installing the HTTP Module for Tomcat docs page is missing commons-validator jar</summary>
      <description>The list of jars on the page Installing the HTTP Module for Tomcat is missing commons-validator jar.Online link:https://geode.apache.org/docs/guide/12/tools_modules/http_session_mgmt/tomcat_installing_the_module.html</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tomcat.installing.the.module.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-11-1 01:00:00" id="5968" opendate="2018-11-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>the gfsh alter jdbc-mapping command should be removed</summary>
      <description>The gfsh alter jdbc-mapping command should be removed for consistency with other extensions and also to avoid confusion. Alter usually means that the changes will take effect immediately but in jdbc the changes only happen after the cache is restarted.Also the jdbc-mapping command is very simple so it is easier to just destroy and recreate. </description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.main.resources.org.apache.geode.internal.sanctioned-geode-connectors-serializables.txt</file>
      <file type="M">geode-connectors.src.main.resources.META-INF.services.org.springframework.shell.core.CommandMarker</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommand.java</file>
      <file type="M">geode-connectors.src.integrationTest.java.org.apache.geode.connectors.jdbc.internal.cli.JDBCConnectorFunctionsSecurityTest.java</file>
      <file type="M">geode-connectors.src.integrationTest.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-8-2 01:00:00" id="5976" opendate="2018-11-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Prevent conversion of string to bytes multiple times</summary>
      <description>Prevent the conversion of string to bytes multiple times when equals is called on ByteArrayWrapper and a string value. </description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.sortedset.ZRemRangeByLexExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.sortedset.ZRangeByLexExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.sortedset.ZLexCountExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.sortedset.SortedSetExecutor.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-8-3 01:00:00" id="5981" opendate="2018-11-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove operations on null, de-referenced objects</summary>
      <description>We should not invoked methods on objects that are de referenced and hence may lead to NPEs. </description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.DumpB2NRegion.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.JdbcConnectorServiceImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2018-1-6 01:00:00" id="5994" opendate="2018-11-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a service to contend for CPUs for testing purposes</summary>
      <description>Some test failures are easier to reproduce and diagnose when there is heavy contention for CPUs.Add a simple utility to contend for CPUs. This can be added to a test while debugging, and removed after the problem has been diagnosed.</description>
      <version>None</version>
      <fixedVersion>1.14.1,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.rebalance.PartitionedRegionLoadModelJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.rebalance.model.Member.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.control.RebalanceOperationComplexDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-11-6 01:00:00" id="5996" opendate="2018-11-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Review and update dependencies for v1.8.0</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-web.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-web.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-web-api.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-web-api.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-rebalancer.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-pulse.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-pulse.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-protobuf.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-protobuf-messages.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-lucene.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-experimental-driver.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-dunit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-cq.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-connectors.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-concurrency-test.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-assembly.src.main.dist.NOTICE</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-11-6 01:00:00" id="5998" opendate="2018-11-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis adapter: add geospatial operations</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.GeoCoder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.sortedset.GeoRadiusExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.sortedset.GeoRadiusByMemberExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.sortedset.GeoDistExecutor.java</file>
      <file type="M">geode-assembly.src.main.dist.NOTICE</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.TypeExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.string.MSetExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.string.MGetExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.string.IncrByFloatExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.string.GetSetExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.string.GetRangeExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.string.GetExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.sortedset.ZScoreExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.sortedset.ZIncrByExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.SortedSetQuery.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.set.SRandMemberExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.set.SPopExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.set.SMembersExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.set.SetOpExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.list.PopExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.list.LIndexExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.KeysExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.hash.HValsExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.hash.HMGetExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.hash.HKeysExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.hash.HIncrByFloatExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.hash.HGetExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.EchoExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.executor.AbstractExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.Coder.java</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.resources.expected.jars.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-6 01:00:00" id="5999" opendate="2018-11-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>separate Java 8 and 11 testing into separate pipeline boxes</summary>
      <description>although this moves us the wrong direction relative to long-term goal of selecting only a subset of tests to run on multiple versions of Java, popular demand at the moment is to have an unreadable pipeline with 18 boxes stacked one atop the other.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.metrics.jinja.template.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-10-16 01:00:00" id="60" opendate="2015-6-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode build environment within Docker to enable anybody and on any OS and any environment can build Geode as long as there is Docker</summary>
      <description>geode build is on gradle and seems very tidy but it still requires third party libraries, like Java.Let's have a Docker environment so that at least we have an reliable immutable environment and we can use it on CI on builds.apache.org https://builds.apache.org/view/E-G/view/Geode/(From my experience, It is a bit of pain to find a right environment on builds.a.o but Docker is a cure so far.)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">README.md</file>
      <file type="M">docker.README.md</file>
      <file type="M">docker.Dockerfile</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-11-8 01:00:00" id="6018" opendate="2018-11-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove reflections from LICENSE</summary>
      <description>We no longer ship the reflections library (previously a transitive dependency of spring fox). Remove WTFPL from the license.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-assembly.src.main.dist.LICENSE</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-8 01:00:00" id="6020" opendate="2018-11-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>run non-gating jobs iff all gating jobs have passed</summary>
      <description>This fix would defer running Windows tests until the commit has passed all tests on Linux.  This would reduce resource usage when some test does not pass, and would also alleviate the 18-jobs-tall stack in the Complete view.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-11-9 01:00:00" id="6025" opendate="2018-11-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add &amp;#39;describe data-source&amp;#39; gfsh command</summary>
      <description>Given the recent addition of the alias create data-source for create jndi-binding we want to add a matching alias command for describe jndi-binding. The resulting command should be called describe data-source and should behave the same as the describe jndi-binding command.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDataSourceInterceptorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDataSourceCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.converters.PoolPropertyConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.UsernamePasswordInterceptor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateDataSourceInterceptor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateDataSourceCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CommandAvailabilityIndicator.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateDataSourceCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.main.resources.META-INF.services.org.springframework.shell.core.CommandMarker</file>
      <file type="M">geode-connectors.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-2-9 01:00:00" id="6026" opendate="2018-11-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene test classes should not be listed in Javadocs</summary>
      <description>In the latest Javadocs for Lucene there are several test classes and utilities listed that should not be:package org.apache.geode.cache.lucene.testunder package org.apache.geode.cache.lucene Class Summary: DummyLuceneSerializer LuceneIntegrationTest</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-9 01:00:00" id="6028" opendate="2018-11-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove unnecessary comparison checks in the code.</summary>
      <description>Remove unnecessary checks in the code.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.internal.cache.PartitionedRegionGetSomeKeys.java</file>
      <file type="M">geode-dunit.src.main.java.batterytest.greplogs.LogConsumer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.SystemAdmin.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.StatArchiveWriter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.concurrent.CompactConcurrentHashSet2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.versions.RegionVersionHolder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXEntryState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.FetchBulkEntriesMessage.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.InternalDistributedMember.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-11-9 01:00:00" id="6034" opendate="2018-11-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protobuf clients should not access or modify internal regions</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.OperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetSizeRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionNamesRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnRegionRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnMemberRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnGroupRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.security.SecureFunctionServiceImplTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.security.SecureCacheImplTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.ProtobufStreamProcessorTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.cache.tier.sockets.ProtobufServerConnectionTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.cache.tier.sockets.OutputCapturingServerConnectionTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ServerMessageExecutionContext.java</file>
      <file type="M">geode-protobuf.src.integrationTest.java.org.apache.geode.internal.protocol.protobuf.v1.AuthorizationIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.integrationTest.java.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationIntegrationTest.java</file>
      <file type="M">geode-experimental-driver.src.integrationTest.java.org.apache.geode.experimental.driver.AuthenticationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-11-9 01:00:00" id="6035" opendate="2018-11-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Increase backlog for peer-to-peer connection formation</summary>
      <description>The default ServerSocket backlog is 10 but it should be raised to something more like 500. I think the supposition was that an attempt to connect when the backlog is full would cause an IOConnection but experiments show that this isn't the case. The Java socket implementation keeps trying for something like 25 seconds before giving up.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.TCPConduit.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.platform.LinuxSystemStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.platform.LinuxProcFsStatistics.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.AcceptorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.properties.html</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.tcpserver.TcpServer.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.statistics.GemFireStatSamplerIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-12-13 01:00:00" id="6198" opendate="2018-12-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Manage dependencies via BOM</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.resources.expected-pom.xml</file>
      <file type="M">settings.gradle</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-web.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-web.build.gradle</file>
      <file type="M">geode-web-api.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">boms.geode-client-bom.build.gradle</file>
      <file type="M">boms.geode-client-bom.src.test.expected-pom.xml</file>
      <file type="M">build.gradle</file>
      <file type="M">extensions.build.gradle</file>
      <file type="M">extensions.geode-modules-assembly.build.gradle</file>
      <file type="M">extensions.geode-modules-session-internal.build.gradle</file>
      <file type="M">extensions.geode-modules-session.build.gradle</file>
      <file type="M">extensions.geode-modules-test.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat7.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat8.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat9.build.gradle</file>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">extensions.session-testing-war.build.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">geode-assembly.geode-assembly-test.build.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.resources.expected.jars.txt</file>
      <file type="M">geode-assembly.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-common.build.gradle</file>
      <file type="M">geode-common.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-concurrency-test.build.gradle</file>
      <file type="M">geode-concurrency-test.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-connectors.build.gradle</file>
      <file type="M">geode-connectors.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-cq.build.gradle</file>
      <file type="M">geode-cq.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-dunit.build.gradle</file>
      <file type="M">geode-dunit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-experimental-driver.build.gradle</file>
      <file type="M">geode-experimental-driver.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-json.build.gradle</file>
      <file type="M">geode-json.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.build.gradle</file>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-lucene.geode-lucene-test.build.gradle</file>
      <file type="M">geode-lucene.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-old-client-support.build.gradle</file>
      <file type="M">geode-old-client-support.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-protobuf-messages.build.gradle</file>
      <file type="M">geode-protobuf.build.gradle</file>
      <file type="M">geode-protobuf.geode-protobuf-test.build.gradle</file>
      <file type="M">geode-protobuf.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-pulse.build.gradle</file>
      <file type="M">geode-pulse.geode-pulse-test.build.gradle</file>
      <file type="M">geode-pulse.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-rebalancer.build.gradle</file>
      <file type="M">geode-rebalancer.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-wan.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-20 01:00:00" id="6231" opendate="2018-12-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Increase timeout for DistributedTest jobs until effect of Pom sizes can be understood</summary>
      <description>The recent resolution of injecting BOM contents directly into module POMs has had the inexplicable side-effect of adding an hour to the length of some of our DistributedTest suites. This has brought the "expected" runtime to be close to the timeout of the task.Increase the timeout until the cause of this issue can be found, understood, and resolved.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-10-2 01:00:00" id="6242" opendate="2019-1-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Old version testing should consume TGZ archive, not zip as of 1.8.0</summary>
      <description>As of Geode 1.8.0 we no longer publish ZIP artifacts. Modify the geode-old-versions project to consume tgz artifacts from 1.8.0 onward, and the existing ZIP artifacts for older releases.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-old-versions.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-1-4 01:00:00" id="6247" opendate="2019-1-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>HostStatSampler posts suspect string stemming from native code in JDK11, causing failure in NetstatDUnitTest</summary>
      <description>In JDK11 run https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/DistributedTestOpenJDK11/builds/278:org.apache.geode.management.internal.cli.NetstatDUnitTest &gt; classMethod FAILED java.lang.AssertionError: Suspicious strings were written to the log during this run. Fix the strings or use IgnoredException.addIgnoredException to ignore. ----------------------------------------------------------------------- Found suspect string in log4j at line 2183 [fatal 2019/01/04 00:15:19.050 UTC &lt;StatSampler&gt; tid=67] committed = 538968064 should be &lt; max = 536870912 java.lang.IllegalArgumentException: committed = 538968064 should be &lt; max = 536870912 at java.management/java.lang.management.MemoryUsage.&lt;init&gt;(MemoryUsage.java:166) at java.management/sun.management.MemoryImpl.getMemoryUsage0(Native Method) at java.management/sun.management.MemoryImpl.getHeapMemoryUsage(MemoryImpl.java:71) at org.apache.geode.internal.stats50.VMStats50.refresh(VMStats50.java:624) at org.apache.geode.internal.statistics.HostStatSampler.sampleSpecialStats(HostStatSampler.java:562) at org.apache.geode.internal.statistics.HostStatSampler.run(HostStatSampler.java:235) at java.base/java.lang.Thread.run(Thread.java:834) ----------------------------------------------------------------------- Found suspect string in log4j at line 2193 [fatal 2019/01/04 00:15:19.055 UTC &lt;StatSampler&gt; tid=67] Uncaught exception in thread Thread[StatSampler,10,RMI Runtime] java.lang.IllegalArgumentException: committed = 538968064 should be &lt; max = 536870912 at java.management/java.lang.management.MemoryUsage.&lt;init&gt;(MemoryUsage.java:166) at java.management/sun.management.MemoryImpl.getMemoryUsage0(Native Method) at java.management/sun.management.MemoryImpl.getHeapMemoryUsage(MemoryImpl.java:71) at org.apache.geode.internal.stats50.VMStats50.refresh(VMStats50.java:624) at org.apache.geode.internal.statistics.HostStatSampler.sampleSpecialStats(HostStatSampler.java:562) at org.apache.geode.internal.statistics.HostStatSampler.run(HostStatSampler.java:235) at java.base/java.lang.Thread.run(Thread.java:834)Test report at: http://files.apachegeode-ci.info/builds/apache-develop-main/1.9.0-build.320/test-results/distributedTest/1546563376/Artifacts at: http://files.apachegeode-ci.info/builds/apache-develop-main/1.9.0-build.320/test-artifacts/1546563376/distributedtestfiles-OpenJDK11-1.9.0-build.320.tgzThis appears to be identical to the failure in GEODE-6046.We note that the difference in reported values is exactly 2MB.We note additionally that the suspect string itself appears during the class-rule startup, but before any class test is executed.Also possibly related to GEODE-6079, regarding how logs are written and the possibility of buffers not flushing properly before suspect strings are detected. It is not obvious that this suspect string failure does not truly belong to another test.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.rules.ClusterStartupRule.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-5-28 01:00:00" id="6327" opendate="2019-1-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>There needs to be a way to specify identity fields for JSON documents converted to PDX</summary>
      <description>In the current implementation, there is no way to prevent all fields from being used when executing hashCode and equals.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.JSONFormatter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.json.PdxInstanceSortedHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.json.PdxInstanceHelper.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.pdx.JSONFormatterBasicJUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2019-2-8 01:00:00" id="6381" opendate="2019-2-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade jackson-databind for newly published CVEs</summary>
      <description>CVE-2018-1000873CVE-2018-19362CVE-2018-19361CVE-2018-19360</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.geode-dependency-management.gradle</file>
      <file type="M">geode-web.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-web-management.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-web-api.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-wan.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-rebalancer.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-pulse.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-protobuf.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-protobuf-messages.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-old-client-support.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-management.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-lucene.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-json.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-experimental-driver.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-dunit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-cq.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-connectors.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-concurrency-test.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-common.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-assembly.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-4-14 01:00:00" id="6527" opendate="2019-3-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update PartitionRegionConfig info when altering loader/writer</summary>
      <description>When AttributesMutator alters a partitioned regions loader and/or writerthese changes should be reflected in the PartitionRegionConfig node information.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.TableBuilder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Node.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.PartitionedRegionAttributesMutatorTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.PartitionedRegionInvalidateDUnitTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.JdbcDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-7-15 01:00:00" id="6528" opendate="2019-3-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Generate Metrics for Memory Usage</summary>
      <description>As an operator or developerI want to have the ability to actively monitor my memory used for a JVM on a hostSo that I can establish a baseline and track performance over time.GIVEN we have a Micrometer supported time series database     AND a data visualization tool attached to that databaseWHEN the cache.opeartions to the data visualization toolTHEN they are able to view the sampled values of the average time it takes to do a put OR get operation in Geode     AND they are able to use the tags/dimensions to differentiate between Cluster (Distributed System ID), Host (by hostname), and a member (by Member name for Server or Locator JVM).</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.metrics.CacheMeterRegistryFactoryTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.metrics.CacheMeterRegistryFactory.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-3-15 01:00:00" id="6532" opendate="2019-3-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Convert compile dependencies to implementation/api dependencies</summary>
      <description>The compile configuration has been deprecated for some time. api will behave similarly, whereas implementation will appear to be a runtime dependency to consumers.This will require examining our public API so that we may correctly declare which dependencies are api. When a PR is made, an email should be sent to the dev@ and/or user@ lists warning that those consuming internal APIs (against best practice) may experience breakages if their own dependencies are not properly declared. Similarly, a release note on this topic could be helpful to those upgrading.</description>
      <version>None</version>
      <fixedVersion>1.9.0,1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.resources.expected-pom.xml</file>
      <file type="M">gradle.publish.gradle</file>
      <file type="M">static-analysis.pmd-rules.build.gradle</file>
      <file type="M">geode-web.build.gradle</file>
      <file type="M">geode-web-management.build.gradle</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-wan.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-wan.build.gradle</file>
      <file type="M">geode-tcp-server.build.gradle</file>
      <file type="M">geode-serialization.build.gradle</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
      <file type="M">buildSrc.build.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">extensions.geode-modules-session-internal.build.gradle</file>
      <file type="M">extensions.geode-modules-session.build.gradle</file>
      <file type="M">extensions.geode-modules-test.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat7.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat8.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat9.build.gradle</file>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">extensions.session-testing-war.build.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">geode-assembly.geode-assembly-test.build.gradle</file>
      <file type="M">geode-common.build.gradle</file>
      <file type="M">geode-common.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-concurrency-test.build.gradle</file>
      <file type="M">geode-concurrency-test.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-connectors.build.gradle</file>
      <file type="M">geode-connectors.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-cq.build.gradle</file>
      <file type="M">geode-cq.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-dunit.build.gradle</file>
      <file type="M">geode-dunit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-experimental-driver.build.gradle</file>
      <file type="M">geode-experimental-driver.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-gfsh.build.gradle</file>
      <file type="M">geode-gfsh.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-http-service.build.gradle</file>
      <file type="M">geode-http-service.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.build.gradle</file>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-log4j.build.gradle</file>
      <file type="M">geode-log4j.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-logging.build.gradle</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-lucene.geode-lucene-test.build.gradle</file>
      <file type="M">geode-lucene.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-management.build.gradle</file>
      <file type="M">geode-management.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-membership.build.gradle</file>
      <file type="M">geode-protobuf.build.gradle</file>
      <file type="M">geode-protobuf.geode-protobuf-test.build.gradle</file>
      <file type="M">geode-protobuf.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-pulse.build.gradle</file>
      <file type="M">geode-pulse.geode-pulse-test.build.gradle</file>
      <file type="M">geode-rebalancer.build.gradle</file>
      <file type="M">geode-rebalancer.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-redis.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-7-12 01:00:00" id="6958" opendate="2019-7-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve JMH integration</summary>
      <description>Current JMH integration does not correctly generate a JMH runnable jar.Fix dependencies and produce runnable jar.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">build.gradle</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-1-7 01:00:00" id="739" opendate="2016-1-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: LocatorJUnitTest.testNoThreadLeftBehind</summary>
      <description>While this test has been passing in nightly builds I have found that it fails consistently when run on its own. The locator is leaving a TCPServer thread running.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.InternalLocator.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-1-10 01:00:00" id="7686" opendate="2020-1-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Update vMotion performance recommendations</summary>
      <description>Update the vMotion recommendations in the User Guide based on recent understandings.https://geode.apache.org/docs/guide/111/managing/monitor_tune/performance_on_vsphere.html</description>
      <version>None</version>
      <fixedVersion>1.11.0,1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.monitor.tune.performance.on.vsphere.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-1-10 01:00:00" id="7687" opendate="2020-1-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Remove time-based statistics caveat</summary>
      <description>The User Guide advises against enabling time-based statistics in production environments. As of Geode v1.9, this limitation is no longer significant, so the warning against it should be removed from the user guide.https://geode.apache.org/docs/guide/111/managing/statistics/how_statistics_work.htmlhttps://geode.apache.org/docs/guide/111/managing/statistics/setting_up_statistics.html </description>
      <version>None</version>
      <fixedVersion>1.11.0,1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.statistics.setting.up.statistics.html.md.erb</file>
      <file type="M">geode-docs.managing.statistics.how.statistics.work.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-2-13 01:00:00" id="7693" opendate="2020-1-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Equals method should compare same object types as parameters</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceService.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-2-17 01:00:00" id="7714" opendate="2020-1-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Disable statistic-archive-file not working</summary>
      <description>Once the statistic writing to file is configured, it can't be turned off. It should be possible to disable it by setting the statistic-archive-file parameter to an empty string, but it fails: Cluster-1 gfsh&gt;alter runtime --statistic-archive-file=Please provide a relevant parameter(s)  This parameter is ignored if it is set with another configuration parameter: GemFire properties defined at the runtimestatistic-archive-file                    : /opt/dbservice/data/a.txtstatistic-sampling-enabled                : true  Cluster-1 gfsh&gt;alter runtime --statistic-archive-file= --enable-statistics=trueRuntime configuration altered successfully for the following member(s)192.168.110.65(eric-data-kvdb-ag-server-1:1)&lt;v1&gt;:41000192.168.120.20(eric-data-kvdb-ag-server-0:1)&lt;v2&gt;:41000 GemFire properties defined at the runtimestatistic-archive-file                    : /opt/dbservice/data/a.txtstatistic-sampling-enabled                : true</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-docs.managing.statistics.setting.up.statistics.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-7-7 01:00:00" id="8341" opendate="2020-7-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Correct typo in gfsh export docs</summary>
      <description>There's a single character typo in the docs.  In the command reference page for gfsh export logsthe name of the ZIP file is of the form exportedLogs_xxx.zip.  The docs use a lowercase 'l', and it needs to be changed to an uppercase 'L'.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.export.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-3-8 01:00:00" id="8343" opendate="2020-7-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix "Function execution" main doc page</summary>
      <description>https://geode.apache.org/docs/guide/113/developing/function_exec/chapter_overview.html Remove the link from the first sentence before the list. Subchapters are shown as part of the list of use cases solved by function execution.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.function.exec.chapter.overview.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-9-10 01:00:00" id="8487" opendate="2020-9-10 00:00:00" resolution="Delivered">
    <buginformation>
      <summary>Document Redis-API HA model, requirements, guarantees</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2021-2-9 01:00:00" id="8931" opendate="2021-2-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support Redis GETRANGE command</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractGetRangeIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractGetRangeIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-2-9 01:00:00" id="8932" opendate="2021-2-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support Redis SETNX command</summary>
      <description>SETNX is deprecated (and a synonym for) SET... NX. Since we already have robust tests for SET... NX, we don't need many more for SETNX.</description>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractSetNXIntegrationTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractSetNXIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-2-9 01:00:00" id="8933" opendate="2021-2-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Report max memory setting in Geode Redis statistics</summary>
      <description>In order to implement eviction for Redis data, the INFO command will need to report at least one new field, "maxmemory".</description>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.server.InfoExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.AbstractInfoIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-3-15 01:00:00" id="9034" opendate="2021-3-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make mandatory options to appear first when autocompleting in create gateway sender command</summary>
      <description>When typing "create gateway-sender --" from gfsh and pressing tab to suggest options, the "group" option is autocompleted instead of any of the mandatory ones.It would be expected that the mandatory options appear first (id and remote-distributed-id).</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.CreateGatewaySenderCommand.java</file>
      <file type="M">geode-gfsh.src.integrationTest.java.org.apache.geode.management.internal.cli.GfshParserAutoCompletionIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-3-15 01:00:00" id="9035" opendate="2021-3-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enable all Hash tests in pipeline native-Redis tests</summary>
      <description>All hash commands are now supported in the compatibility-with-Redis subsystem. This will enable the native Redis integration tests (written in TCL) to run the Hash test suite against Geode compatibility-with-Redis.</description>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.acceptanceTest.resources.0001-configure-redis-tests.patch</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-1-14 01:00:00" id="9278" opendate="2021-5-14 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Increase rsync_down timeout for develop pipeline</summary>
      <description>Windows jobs are timing out while downloading artifacts.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
</bugrepository>