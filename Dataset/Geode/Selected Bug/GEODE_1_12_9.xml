<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="GEODE">
  
  <bug fixdate="2022-2-9 01:00:00" id="10034" opendate="2022-2-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Organize Geode For Redis Stats By Data Structure</summary>
      <description>The Geode for Redis Stats should be organized by Data Structure.  For the stats not associated with a data structure, the stats should continue to be exposed under"GeodeForRedisStats". Acceptance CriteriaAll stats, associated with a command specific to a data structure, should be exposed under that data structure (e.g. Strings, Sets, SortedSets, Hashes, Lists). All tests should pass. </description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.statistics.GeodeRedisStats.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-3-23 01:00:00" id="10079" opendate="2022-2-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI scripts no longer supply docker images for pre-1.15 PR precheck tasks</summary>
      <description>The CI scripts no longer supply docker images when they run PR precheck tasks that use the `-PdunitDockerImage` property.For PRs with base branches prior to `support/1.15`, the `distributedTest` and `upgradeTest` precheck tasks must run each test class in a separate docker container. When `dunitDockerImage` is not defined, these tasks instead run tests concurrently outside of docker. This results in swarms of failures, as the concurrently executing tests all attempt to bind to the same ports.Examples: https://concourse.apachegeode-ci.info/builds/27926695 https://concourse.apachegeode-ci.info/builds/27632643 https://concourse.apachegeode-ci.info/builds/28861132</description>
      <version>1.12.9,1.13.8,1.14.4</version>
      <fixedVersion>1.12.10,1.13.9,1.14.5,1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-5-11 01:00:00" id="10297" opendate="2022-5-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>SSL protocol ordering can result in loss of newer protocol support.</summary>
      <description>If ssl-protocols is listed with a older protocol version ahead of a newer the SSLContext used will support at most that weaker protocol.For example ssl-protocols=TLSV1.2,TLSv1.3,TLSv1.1 will use the TLSv1.2 SSLContext, which will not support, and silently ignore, the TLSv1.3 configuration. The effective enabled protocols list will be TLSV1.2,TLSv1.1.</description>
      <version>1.12.9,1.13.8,1.14.4,1.15.0,1.16.0</version>
      <fixedVersion>1.15.0,1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SSLUtilTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-6-7 01:00:00" id="10365" opendate="2022-6-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add missing configuration properties to table</summary>
      <description>Add ssl-keystore-type, ssl-truststore-type to appropriate table in https://geode.apache.org/docs/guide/112/managing/security/implementing_ssl.html</description>
      <version>1.12.9,1.14.5,1.15.0</version>
      <fixedVersion>1.12.10,1.14.5,1.15.0,1.16.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.security.implementing.ssl.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-1-18 01:00:00" id="9973" opendate="2022-1-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Documentation: socket-lease-time is not used to return sockets to a pool but to close them</summary>
      <description>The "Making sure you have enough sockets" Geode documentation section says the following about socket-lease-time (check underlined sentence): Peer-to-peer. For peer-to-peer threads that do not share sockets, you can use the socket-lease-time to make sure that no socket sits idle for too long. When a socket that belongs to an individual thread remains unused for this time period, the system automatically returns it to the pool. The next time the thread needs a socket, it creates a new socket. Actually, the system automatically closes the connection in the situation described instead of returning it to any pool.</description>
      <version>1.12.9,1.13.8,1.14.4,1.15.0</version>
      <fixedVersion>1.12.9,1.13.8,1.14.4,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.monitor.tune.socket.communication.have.enough.sockets.html.md.erb</file>
    </fixedFiles>
  </bug>
</bugrepository>