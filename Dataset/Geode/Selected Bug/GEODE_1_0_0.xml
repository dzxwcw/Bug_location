<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="GEODE">
  
  <bug fixdate="2022-2-28 01:00:00" id="10000" opendate="2022-1-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Avoid gfsh stop gateway sender error when stopped a second time</summary>
      <description>After changing the implementation of the "stop gateway sender" command to be parallel, when it is invoked a second time it fails with the following error:Error while processing command &lt;stop gateway-sender --id=sender1&gt; Reason : Task java.util.concurrent.FutureTask@513d30f9 rejected from java.util.concurrent.ThreadPoolExecutor@85189b9&amp;#91;Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2&amp;#93;</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.wancommand.StopGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.StopGatewaySenderCommandTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.StopGatewaySenderCommand.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2015-5-7 01:00:00" id="11" opendate="2015-5-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene Integration</summary>
      <description>This is a feature that has been under development for GemFire but was not part of the initial drop of code for geode.Allow Lucene indexes to be stored in Geode regions allowing users to do text searches on data stored in Geode.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.directory.DumpDirectoryFiles.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.HeterogeneousLuceneSerializerJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.SerializerUtil.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.MockCacheServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.JMXNotificationType.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.MBeanJMXAdapter.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.ManagementConstants.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.beans.ManagementListener.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.beans.ManagementAdapter.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.CacheService.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.ResourceEvent.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.cli.functions.LuceneListIndexFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.cli.functions.LuceneDescribeIndexFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.functions.LuceneListIndexFunction.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.functions.LuceneDescribeIndexFunction.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionContextJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesPersistenceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryResultsImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQueryResults.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryResultsImpl.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneIndexInfo.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesIntegrationTest.java</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.InternalRegionArguments.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.CreateRegionProcessor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.CacheDistributionAdvisor.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.management.LuceneServiceMBean.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.management.LuceneServiceBridge.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.management.LuceneIndexMetrics.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.ManagementTestBase.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesFunctionCollector.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesCollectorManager.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.CollectorManager.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneServiceImplIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.test.LuceneTestUtilities.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexCreationIntegrationTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneService.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlGeneratorIntegrationJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.test.TestObject.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.PageableLuceneQueryResults.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.functions.RegionCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.CliUtil.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryFactoryImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryFactoryImpl.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQueryProvider.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQueryFactory.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunction.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.StringQueryProviderJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.StringQueryProvider.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.ReflectionLuceneSerializer.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.PdxLuceneSerializer.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.HeterogeneousLuceneSerializer.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.test.IndexRepositorySpy.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexImplJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.fake.Fakes.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.AbstractRegion.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileSystemStats.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneIndexCreationIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.cli.functions.LuceneSearchIndexFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneQueryInfo.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneCliStrings.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.functions.LuceneSearchIndexFunction.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesBase.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneEventListener.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesPRBase.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesPeerPRRedundancyDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesPeerPROverflowDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesPeerPRDUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.IndexRepositoryFactory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.parallel.ConcurrentParallelGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">geode-wan.src.test.java.com.gemstone.gemfire.management.internal.configuration.ClusterConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.extension.SimpleExtensionPointJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.extension.mock.CreateMockRegionExtensionFunction.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.extension.mock.CreateMockCacheExtensionFunction.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.extension.mock.AbstractMockExtension.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.CacheXml81DUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.RegionCreation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.extension.SimpleExtensionPoint.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.extension.Extension.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepository.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.File.java</file>
      <file type="M">geode-junit.src.main.java.com.gemstone.gemfire.test.junit.rules.DiskDirRule.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneService.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneResultStruct.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQueryFactory.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQuery.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneIndex.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.mergers.TopDocsMergeJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryResultsJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.mergers.TopDocsResultMerger.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.mergers.ResultMerger.java</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">gemfire-lucene.build.gradle</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.DataSerializableFixedID.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserIntegrationJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlGeneratorJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlGeneratorIntegrationJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.StringQueryProviderJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.Type2.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.Type1.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.ReflectionFieldMapperJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.PdxFieldMapperJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.HeterogenousLuceneSerializerJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepositoryImplJUnitPerformanceTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.PartitionedRepositoryManagerJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneServiceImplJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneResultStructImpJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryResultsImplJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryImplJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryFactoryImplJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexRecoveryHAJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneEventListenerJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileSystemJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.ChunkKeyJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionContextJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.EntryScoreJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.DistributedScoringJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.directory.RegionDirectoryJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneServiceProvider.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQueryResults.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQueryProvider.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneXmlParser.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneXmlConstants.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneServiceXmlGenerator.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlGenerator.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexCreation.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.StringQueryProvider.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.SerializerUtil.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.ReflectionLuceneSerializer.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.PdxLuceneSerializer.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.LuceneSerializer.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.HeterogenousLuceneSerializer.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.RepositoryManager.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepositoryImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepository.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.PartitionedRepositoryManager.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneServiceImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneResultStructImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryResultsImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryFactoryImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexForReplicatedRegion.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexForPartitionedRegion.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneEventListener.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.InternalLuceneService.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.InternalLuceneIndex.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.SeekableInputStream.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileSystem.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileOutputStream.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileInputStream.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.File.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.ChunkKey.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntries.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunction.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.EntryScore.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.directory.RegionDirectory.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.directory.FileIndexInput.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneIndexCreationPersistenceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQueryException.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.resources.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserIntegrationJUnitTest.createIndex.cache.xml</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserIntegrationJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.resources.META-INF.schemas.geode.apache.org.lucene.lucene-1.0.xsd</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneIndex.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneXmlParser.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneXmlConstants.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlGenerator.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexCreation.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneServiceImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.i18n.LocalizedStrings.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionReadPathDUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepositoryImplJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexResultCollector.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexForPartitionedRegionTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.directory.DumpDirectoryFilesIntegrationTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexForReplicatedRegion.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.InternalLuceneIndex.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.EntryScore.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntries.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryImpl.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.PageableLuceneQueryResultsImpl.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.DistributedScoringJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.EntryScoreJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesCollectorJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesFunctionCollectorJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.PageableLuceneQueryResultsImplJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.CollectorManager.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneQueryFunction.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneSearchFunctionArgs.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesCollector.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesCollectorManager.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneQueryFunctionJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesCollectorJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexForPartitionedRegion.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneIndexMaintenanceIntegrationTest.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionContext.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesFunctionCollector.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.TopEntriesFunctionCollectorJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionReadPathDUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexImpl.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneQuery.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneQueryImplIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.test.LuceneTestUtilities.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.functions.LuceneCreateIndexFunction.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneIndexCommands.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneIndexDetails.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneSearchResults.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexCreationProfile.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneIndexCommandsDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneIndexCommandsJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexCreationProfileJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneIndexCreationDUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.directory.RegionDirectory.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileSystem.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexStats.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.PartitionedRepositoryManager.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepositoryImpl.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.directory.RegionDirectoryJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.filesystem.FileSystemJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexRecoveryHAIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexStatsJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.PartitionedRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepositoryImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.IndexRepositoryImplPerformanceTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-3-15 01:00:00" id="1100" opendate="2016-3-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>NonExisting Member can remove member from existing cluster.</summary>
      <description>There is possibility that non-existing member can remove member from existing cluster. While processing view message we need to make sure that is coming from member which is in current view.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.messages.InstallViewMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-1-21 01:00:00" id="1114" opendate="2016-3-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove sqlfire/GemFireXD references from Pulse</summary>
      <description>No need to drag around this old code</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.ui.PulseAutomatedTest.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.controllers.PulseControllerJUnitTest.java</file>
      <file type="M">geode-pulse.src.main.webapp.WEB-INF.spring-security.xml</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.regionView.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.queryStatistics.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.pages.Login.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.pages.DataBrowser.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.MemberDetails.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.common.js</file>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.clusterDetail.js</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.MemberRegionsService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.MemberDetailsService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterSelectedRegionService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterRegionsService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterRegionService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.service.ClusterMemberService.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.PulseAppListener.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.data.JMXDataUpdater.java</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.controllers.PulseController.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-11-22 01:00:00" id="1122" opendate="2016-3-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Dependency on environment variable GEMFIRE needs to be removed</summary>
      <description>There is still a strong dependency on the environment variable GEMFIRE within GEODE. This should be replaced with GEODE_HOME or removed completely from the system.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptorJUnitTest.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.configuring.gfsh.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.Gfsh.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.LauncherLifecycleCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.AgentUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.RemoteGemFireVM.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.remote.FetchHostResponse.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.GemFireVM.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.ManagedEntityConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.DistributedSystemHealthMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.admin.internal.AdminDistributedSystemImpl.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.management.internal.cli.commands.LauncherLifecycleCommandsJUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.BundledJarsJUnitTest.java</file>
      <file type="M">geode-assembly.src.main.dist.bin.gfsh.bat</file>
      <file type="M">geode-assembly.src.main.dist.bin.gfsh</file>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-3-28 01:00:00" id="1134" opendate="2016-3-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Stale Cluster Configuration Service</summary>
      <description>There seems to be an issue with the cluster configuration service, for which manual modifications to the "cluster.xml" and/or "cluster.properties" files are only picked up by the servers when the ENTIRE cluster is restarted.The official user guide states the following: "If you make any manual modifications to the cluster.xml or cluster.properties (or group_name.xml or group_name.properties) files, you must stop the locator and then restart the locator using the --load-cluster-configuration-from-dir parameter. Direct file modifications are not picked up by the cluster configuration service without a locator restart.". So basically you should be able to restart the members in a rolling fashion, as long as the locators are restarted at first and they correctly pick up the new cluster configuration files from disk, the servers should have the new cluster configuration once they are restarted afterwards. This doesn't seem to be case according to some tests I've done.Basically, customer's requirement is to be able to manually modify the cluster.xml file without downtime, meaning that are okay with restarting the members one at a time, but not all of them at the same time. They can't use gfsh scripts to make these modifications, they must be able to manually modify the cluster.xml, that's their requirement.For some reason is always required to stop the entire cluster (locators and servers); if you don't, then the servers won't get the new cluster configuration. This can be reproduced in every run (with one, two and three locators, it doesn't matter). The reproducible scenario is attached to the JIRA, the steps are below:1. Download and extract the file "workspace.zip".2. Modify the file "00_setenv.txt", specifically the variables "JAVA_HOME" and "GEMFIRE" to use your local installation directories.3. Execute "01_start_cluster.sh" (start N locators and M servers, being N and M variables defined in "00_setenv.txt").4. Execute "02_configure_cluster.sh" (creates two regions and one index, just for testing purposes).5. Execute "03_change_cluster_config.sh". The main goal of this file is to replace the "cluster.xml" file with another one (located in GemFire/cluster/config/cluster.xml), and restart the members in different orders to verifiy whether the new configuration has been picked up by the servers or not. After each selection you can choose the option "6" to verify the cluster configuration. As you can see, only option 5 (shutdown the entire cluster) works correctly.6. Execute "04_stop_cluster.sh" and "05_clean_cluster.sh" to delete everything.This might be a documentation bug but I don't think so, if the cluster configuration is only stored in locators, why do the options 2 and 4 not work?.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.SharedConfiguration.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-4-2 01:00:00" id="1163" opendate="2016-4-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix branding in Swagger UI (Developer REST)</summary>
      <description>Found residual reference to Gemfire and Pivotal with links in Swagger UI (docs). Should be changed to Apache/ Geode.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.com.gemstone.gemfire.rest.internal.web.swagger.config.SwaggerConfig.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.i18n.LocalizedStrings.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-4-4 01:00:00" id="1167" opendate="2016-4-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Changing the off-heap attribute of a persistent region does not work correctly</summary>
      <description>If you persist a region with off-heap=false and then shutdown; change your region config to off-heap=true; and then recover the persistent region it should end up stored off-heap.Or if you start off-heap=true and then switch to off-heap=false you then the region should end up using heap memory.But what is happening is that the old configuration is used for the storage and the data does not get converted to the new type of storage.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.offheap.OffHeapRegionBase.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DiskRegion.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2016-4-6 01:00:00" id="1186" opendate="2016-4-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode website: reinstate Google Analytics</summary>
      <description>Reinstate Google Analytics on the Geode website</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.layouts.header.html</file>
      <file type="M">geode-site.website.layouts.footer.html</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-3-7 01:00:00" id="1195" opendate="2016-4-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve "Synchronizing Your Offline Disk Store with Your Cache" docs</summary>
      <description>The docs in question are: http://geode.docs.pivotal.io/docs/managing/disk_storage/keeping_offline_disk_store_in_sync.html#syncing_offline_disk_storeChange "modify-disk-store" to "alter disk-store". Modify is the older command and alter is the current gfsh command.I think you should introduce this section with:If you change or remove persistent regions by modifying your cache.xml or you code that configures the regions then you should alter this disk-store to be the same. If you don't then the next time this disk-store is recovered it will recover all that regions data into a temporary region with the old configuration. The old configuration will still consume the old configured resources (heap memory, off-heap memory). If those resources are no longer available (for example the old configuration of the region was off-heap but you decide to no longer configure off-heap memory on the JVM) the disk-store recovery will fail. So it is recommended that you change the stored configuration to match the runtime configuration.In the subsection on "Change Region Configuration" this list of things that can be changed are out of date:The disk store retains region capacity and load settings, including entry map settings (initial capacity, concurrency level, load factor), LRU eviction settings, and the statistics enabled boolean.Instead of listing them all here and trying to keep that list up to date perhaps it would be better to say:The disk store retains a subset of the region configuration attributes (for a list of the retained attributes see alter disk-store at http://geode.docs.pivotal.io/docs/tools_modules/gfsh/command-pages/alter.html)</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.disk.storage.keeping.offline.disk.store.in.sync.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-4-7 01:00:00" id="1199" opendate="2016-4-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>offheap memory leak if a remote CacheWriter is invoked on an off-heap region</summary>
      <description>If you have a distributed off-heap region and the CacheWriter is in a remote member then when you do a put on the off-heap region it will need to invoke the CacheWriter on the remote member. When this "net write" is done it causes the off-heap memory value for that operations to never be freed.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.SearchLoadAndWriteProcessor.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-4-8 01:00:00" id="1201" opendate="2016-4-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>When http-service-bind-address not specified it does not have default and fails</summary>
      <description>When the http-service-bind-address property is not specified, the REST server (jetty) fails to start up.The new functionality will be to check if the server-bind-address is specified to used that, otherwise fail over to the bind-address. If all else fails, then use the interface associated with the hostname.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.com.gemstone.gemfire.rest.internal.web.swagger.config.RestApiPathProvider.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.RestAgent.java</file>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-8-15 01:00:00" id="124" opendate="2015-7-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability to auto-rebalance data</summary>
      <description>Rebalancing relocates data from heavily loaded members to lightly loaded members. Currently Geode only supports manual rebalancing by issuing a gfsh command or a java function call. In most cases, the decision to rebalance is based on the size of the member. As Geode monitors the data size, it can also automatically trigger rebalancing. Auto-Rebalancing is expected to prevent failures seen in an unbalanced cluster more than with a manual rebalance.Latest spec: https://cwiki.apache.org/confluence/display/GEODE/Automated+Rebalancing</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-rebalancer.build.gradle</file>
      <file type="M">settings.gradle</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.control.ResourceManagerStats.java</file>
      <file type="M">gemfire-rebalancer.src.test.java.com.gemstone.gemfire.cache.util.AutoBalancerJUnitTest.java</file>
      <file type="M">gemfire-rebalancer.src.main.java.com.gemstone.gemfire.cache.util.AutoBalancer.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-4-19 01:00:00" id="1258" opendate="2016-4-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create new authentication tests for WAN with valid and invalid credentials.</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.com.gemstone.gemfire.internal.cache.wan.WANTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-20 01:00:00" id="1262" opendate="2016-4-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove VM4-VM7 in all tests using AsyncEventQueueTest</summary>
      <description>Use VM0-VM3 as creating more number of VMs increase the runtime of the test cases.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.misc.CommonParallelAsyncEventQueueDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.concurrent.ConcurrentAsyncEventQueueDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.asyncqueue.AsyncEventQueueStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.asyncqueue.AsyncEventListenerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.AsyncEventQueueTestBase.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-6-29 01:00:00" id="1326" opendate="2016-4-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add test for gfsh function execution with ResultCollector</summary>
      <description>Related to a conversation on Slack, we should add a test for ResultCollectors.https://pivotal.slack.com/archives/gemfire/p1461791550000034</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.FunctionCommandsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-6-3 01:00:00" id="1339" opendate="2016-5-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add test cases to list indexes from the peers if present, otherwise return an empty list.</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneIndexCreationDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2016-8-7 01:00:00" id="1359" opendate="2016-5-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cleanup CliCommandTestBase tests</summary>
      <description>Cleanup CliCommandTestBase tests Fix up potential time sensitivity issues. Ensure output goes to TemporaryFolder.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.CommandOverHttpDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-5-10 01:00:00" id="1375" opendate="2016-5-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>When using multicast a new member needs to receive the multicast message digest</summary>
      <description>Sending of JoinResponseMessages was removed a couple of months ago but this was the carrier of the multicast message digest (when multicast is enabled). Something needs to be done to transmit this digest to new members.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">geode-core.src.main.resources.com.gemstone.gemfire.distributed.internal.membership.gms.messenger.jgroups-mcast.xml</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.messenger.JGroupsMessenger.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-5-10 01:00:00" id="1379" opendate="2016-5-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Documentation should make clear that offheap regions will always clone when deltas are applied</summary>
      <description>Regions have a cloning-enabled attribute that when false usually means that a clone of the object will not be created when a Delta is applied.But when the region is also offheap the cloning-enabled attribute will be ignored and the region will behave as if it was set to true.This is because offheap regions store the value in serialized form. To apply a Delta to the value requires that the value be deserialized. Doing a deserialization is the same as making a clone.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.RegionFactory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.ClientRegionFactory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.AttributesMutator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.AttributesFactory.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-5-13 01:00:00" id="1390" opendate="2016-5-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Move gfsh help test from closed to open</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.HelpCommandsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.CliCommandTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-5-13 01:00:00" id="1391" opendate="2016-5-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>JsonFormatter javadocs need to be cleaned up</summary>
      <description>JsonFormatter javadocs have many grammatical and spelling errors. Most of the mistakes are just missing articles - "convert JSON document into PdxInstance" instead of "convert a JSON document into a PdxInstance" for example.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.pdx.TestObjectForPdxFormatter.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.pdx.PdxFormatterPutGetJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.pdx.JSONPdxClientServerDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.pdx.JSONFormatter.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-5-16 01:00:00" id="1400" opendate="2016-5-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>An inflight transaction op could arrive later than a client failover operation and work on a TXState which has been removed from hostedTXStates map</summary>
      <description>A server connection thread could put a TXStateProxy into the hostedTXStates map, before the TxFailover op command removed it from the map. A race could occur there, when an inflight P2P tx msg is received to perform a tx operation gets the TXStateProxy to be removed. The operations done on this TXStateProxy could cause offheap memory leak.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.TXManagerImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.RemoteOperationMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.PartitionMessage.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-5-17 01:00:00" id="1402" opendate="2016-5-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>checkOrphans should not be called in tearDown</summary>
      <description>Some unit tests currently call checkOrphans in tearDown. The problem with doing this is if checkOrphans detects an orphan it will throw an exception. This will cause other tearDown tasks to not be done which can cause later unit tests to fail because the previous test did not get to clean everything up.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.offheap.OutOfOffHeapMemoryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.compression.CompressionRegionOperationsOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.compression.CompressionCacheListenerOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.tier.sockets.ForceInvalidateOffHeapEvictionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.PartitionedRegionOffHeapEvictionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.PartitionedRegionLocalMaxMemoryOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.OffHeapEvictionStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.OffHeapEvictionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.DistrbutedRegionProfileOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.PartitionedRegionOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.OffHeapLRUEvictionControllerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.GlobalRegionOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.GlobalRegionCCEOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.DistributedNoAckRegionOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.DistributedNoAckRegionCCEOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.DistributedAckRegionOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.DistributedAckRegionCCEOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.DistributedAckPersistentRegionCCEOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.DistributedAckOverflowRegionCCEOffHeapDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-5-19 01:00:00" id="1412" opendate="2016-5-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI Failure: QueueCommandsDUnitTest</summary>
      <description>Error Messagecom.gemstone.gemfire.test.dunit.RMIException: While invoking com.gemstone.gemfire.management.internal.cli.commands.QueueCommandsDUnitTest$3.run in VM 1 running on Host cc8-rh64.gemstone.com with 4 VMsStacktracecom.gemstone.gemfire.test.dunit.RMIException: While invoking com.gemstone.gemfire.management.internal.cli.commands.QueueCommandsDUnitTest$3.run in VM 1 running on Host cc8-rh64.gemstone.com with 4 VMs at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:389) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:355) at com.gemstone.gemfire.test.dunit.VM.invoke(VM.java:293) at com.gemstone.gemfire.management.internal.cli.commands.QueueCommandsDUnitTest.testAsyncEventQueue(QueueCommandsDUnitTest.java:191) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:112) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: java.lang.AssertionError: expected:&lt;true&gt; but was:&lt;false&gt; at org.junit.Assert.fail(Assert.java:88) at org.junit.Assert.failNotEquals(Assert.java:834) at org.junit.Assert.assertEquals(Assert.java:118) at org.junit.Assert.assertEquals(Assert.java:144) at com.gemstone.gemfire.management.internal.cli.commands.QueueCommandsDUnitTest$3.run(QueueCommandsDUnitTest.java:210) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at hydra.MethExecutor.executeObject(MethExecutor.java:268) at com.gemstone.gemfire.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:82) at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$95(TCPTransport.java:683) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ... 3 more</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.web.controllers.QueueCommandsController.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-1-19 01:00:00" id="1416" opendate="2016-5-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Prepare geode-native for a source release</summary>
      <description>The next-gen-native-client-software-grant branch &amp;#91;1&amp;#93; contains the GemFire native client. In order to merge this code into the develop branch, we need to: 1) Review the code and determine what 3rd party libraries are bundled with the source and binary distributions. These will need to be properly attributed in the respective LICENSE and NOTICE files. 2) Update the source headers to remove old copyrights and replace with the Apache source header. 3) Improve the build process to make it simpler for contributors and users. This includes writing up build instructions. 4) Incorporate other suggestions from the community. &amp;#91;1&amp;#93; https://git-wip-us.apache.org/repos/asf?p=geode.git;a=shortlog;h=refs/heads/next-gen-native-client-software-grant</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">etc.intellijIdeaCodeStyle.xml</file>
      <file type="M">etc.eclipseFormatterProfile.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-12-6 01:00:00" id="1509" opendate="2016-6-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Reduce the memory usage of GatewayEventCallbackArgument</summary>
      <description>GatewayEventCallbackArgument has a HashSet&lt;Integer&gt; of recipient gateways. Because we create a ton of these things, these sets end up consuming a lot of memory.It should probably use IntOpenHashSet initialized with a small size, eg new IntOpenHashSet(2).</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventCallbackArgument.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-9-8 01:00:00" id="1513" opendate="2016-6-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>geode-web-api war contains duplicate jars</summary>
      <description>The war file produced by geode-web-api appears to have all of the 3rd party jars duplicated.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.build.gradle</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-pulse.build.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-6-9 01:00:00" id="1516" opendate="2016-6-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>IntelliJ and Eclipse formatter in geode /etc organize imports differently</summary>
      <description>The IntelliJ and Eclipse formatters in geode /etc should organize imports identically.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">etc.intellijIdeaCodeStyle.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-6-10 01:00:00" id="1521" opendate="2016-6-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>APP_FETCH_SIZE in GFSH should not be applied to COUNT queries</summary>
      <description>There are more varieties of count than simply * within the count(). Specifically, one can do: count(distinct(field)) or count(field)This makes checking for only count( * ) incorrect. Instead, the search to apply the limt should look for " count("</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.functions.DataCommandFunction.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-10-11 01:00:00" id="1532" opendate="2016-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse is vulnerable to clickjacking</summary>
      <description>The Pulse application is vulnerable to clickjacking. An attacker could frame in the web application and highjack a click, tricking a client into making an unintentional transaction. Attackers exploit this vulnerability by loading target pages in IFRAMEs but keeping them hidden, and then orienting the frame so that a user click on the embedding page is routed to a UI control on the embedded page. The attack will be hidden from the user and perpetrated without the user’s knowledge.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.testbed.driver.PulseUITest.java</file>
      <file type="M">geode-pulse.src.main.webapp.WEB-INF.spring-security.xml</file>
      <file type="M">geode-pulse.build.gradle</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-6-13 01:00:00" id="1544" opendate="2016-6-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fail to initiate final check when network partition occurs</summary>
      <description>When network partition occurs, something keeps the losing side of a network partition from initiating any final checks on members no longer reachable.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.NetViewJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.NetView.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.fd.GMSHealthMonitor.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-6-16 01:00:00" id="1556" opendate="2016-6-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create unit test for GFSH hostname</summary>
      <description>Fix for GEODE-68 introduced new hostname support to GFSH. Need to create a unit test for this.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.shell.Gfsh.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.lang.SystemUtils.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2016-7-21 01:00:00" id="1576" opendate="2016-6-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Website needs to be upgraded to include WAN and CQ</summary>
      <description>Since WAN and CQ are new features included in M2 release, we should update the website to highlight their availability.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.README.md</file>
      <file type="M">geode-site.website.nanoc.yaml</file>
      <file type="M">geode-site.website.lib.default.rb</file>
      <file type="M">geode-site.website.layouts.header.html</file>
      <file type="M">geode-site.website.content.css.geode-site.css</file>
      <file type="M">geode-site.website.content.index.html</file>
      <file type="M">geode-site.website.content.font.FontAwesome.otf</file>
      <file type="M">geode-site.website.content.font.fontawesome-webfont-woff.woff</file>
      <file type="M">geode-site.website.content.font.fontawesome-webfont-ttf.ttf</file>
      <file type="M">geode-site.website.content.font.fontawesome-webfont-svg.svg</file>
      <file type="M">geode-site.website.content.font.fontawesome-webfont-eot.eot</file>
      <file type="M">geode-site.website.content.css.font-awesome.min.css</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-6-15 01:00:00" id="1666" opendate="2016-7-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Parallelize Gradle test execution</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.wrapper.gradle-wrapper.properties</file>
      <file type="M">gradle.properties</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2016-9-10 01:00:00" id="1743" opendate="2016-8-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add committer Mike Stolz to Geode website</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.community.index.html</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-10 01:00:00" id="1744" opendate="2016-8-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Probable Bugs from == use</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.templates.XmlAuthorization.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.security.GeodeSecurityUtilTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.TestNonSizerObject.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.partitioned.fixed.FixedPartitioningTestBase.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.functional.IumMultConditionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.functional.IUM6Bug32345ReJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.functional.IndexWithSngleFrmAndMultCondQryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.data.PortfolioPdx.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.data.PortfolioNoDS.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.data.PortfolioData.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache.query.data.Portfolio.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.result.CommandResult.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.help.utils.HelpUtils.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.domain.RegionAttributesInfo.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.domain.PartitionAttributesInfo.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.domain.FixedPartitionAttributesInfo.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.AbstractCliAroundInterceptor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheXmlGenerator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.locks.TXLockToken.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DistTXStateProxyImplOnCoordinator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DiskInitFile.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.CacheServerLauncher.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.admin.statalerts.StatisticInfoImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.admin.remote.DistributionLocatorId.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.StartupMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.InternalRole.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.jmx.internal.RefreshNotificationType.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.jmx.internal.ManagedResourceType.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.AlertLevel.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-1-10 01:00:00" id="1751" opendate="2016-8-10 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Exception handling logic error in MsgStreamerList</summary>
      <description>MsgStreamerList has some very questionable code in writeMessage(). Darrel added this comment: for (MsgStreamer streamer : this.streamers) { if (ex != null) { streamer.release(); // TODO: shouldn't we call continue here? // It seems wrong to call writeMessage on a streamer we have just released. // But why do we call release on a streamer when we had an exception on one // of the previous streamer? // release clears the direct bb and returns it to the pool but leaves // it has the "buffer". THen we call writeMessage and it will use "buffer" // that has also been returned to the pool. // I think we only have a MsgStreamerList when a DS has a mix of versions // which usually is just during a rolling upgrade so that might be why we // haven't noticed this causing a bug. } try { result += streamer.writeMessage();...</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedClientGetPutAuthDistributedTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.security.GeodePermission.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.security.GeodeSecurityUtil.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.UnregisterInterestList.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.UnregisterInterest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.RemoveAll.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.RegisterInterest61.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.RegisterInterest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.PutAll80.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.PutAll70.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.PutAll.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Put65.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Put61.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.KeySet.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Invalidate.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.GetFunctionAttribute.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.GetAllWithCallback.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.GetAll70.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.GetAll651.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.GetAll.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunctionSingleHop.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunction65.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunction.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteFunction66.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteFunction65.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteFunction.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.Destroy65.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2016-9-12 01:00:00" id="1777" opendate="2016-8-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: RestAPIsOnMembersFunctionExecutionDUnitTest.testFunctionExecutionEOnSelectedMembers[1]</summary>
      <description>java.lang.AssertionError: expected:&lt;2&gt; but was:&lt;3&gt;Stacktracejava.lang.AssertionError: expected:&lt;2&gt; but was:&lt;3&gt; at org.junit.Assert.fail(Assert.java:88) at org.junit.Assert.failNotEquals(Assert.java:834) at org.junit.Assert.assertEquals(Assert.java:645) at org.junit.Assert.assertEquals(Assert.java:631) at com.gemstone.gemfire.rest.internal.web.controllers.RestAPITestBase.assertHttpResponse(RestAPITestBase.java:204) at com.gemstone.gemfire.rest.internal.web.controllers.RestAPIsOnMembersFunctionExecutionDUnitTest.testFunctionExecutionEOnSelectedMembers(RestAPIsOnMembersFunctionExecutionDUnitTest.java:115) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55) at org.junit.rules.RunRules.evaluate(RunRules.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:377) at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54) at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.dunit.standalone.ProcessManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-11-15 01:00:00" id="1785" opendate="2016-8-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>generated AbstractRegionEntry subclasses can no longer be generated</summary>
      <description>A large number of the subclasses of AbstractRegionEntry are generated.They have comments instructing developers to not modify them. For example:/** Do not modify this class. It was generated. Instead modify LeafRegionEntry.cpp and then run bin/generateRegionEntryClasses.sh from the directory that contains your build.xml. */But Geode does not include LeafRegionEntry.cpp nor bin/generateRegionEntryClasses.sh. It also no longer has a build.xml.This is not a show stopper since the classes can be modified in place just like any other java file.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMThinDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VMStatsDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsDiskRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsLRURegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapLongKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapObjectKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapStringKey1.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapStringKey2.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedStatsRegionEntryOffHeapUUIDKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapIntKey.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.VersionedThinDiskLRURegionEntryHeapLongKey.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-9-16 01:00:00" id="1792" opendate="2016-8-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Configuration consistency in SSL configuration</summary>
      <description>The current ssl configuration is inconsistent in its approach. In some cases multiple values for a property are specified as comma delimited (ssl-enabled-components) and in other cases they are space delimited (ssl-cipher and ssl-protocol).We need to pick a more consistent approach and apply to all</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.ConnectToLocatorSSLDUnitTest.java</file>
      <file type="M">geode-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.tcpserver.TcpServer.java</file>
      <file type="M">gradle.java.gradle</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.internal.DistributionConfigJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.SSLUtil.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.JettyHelper.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.ShellCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.admin.SSLConfig.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.jmx.internal.AgentImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.jmx.internal.AgentConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.jmx.internal.AdminDistributedSystemJmxImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.internal.ManagedEntityConfigXmlParser.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.internal.ManagedEntityConfigXmlGenerator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.internal.EnabledManagedEntityController.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.internal.DistributedSystemConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.admin.DistributedSystemConfig.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.JMXMBeanDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.net.SSLConfigurationFactoryTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.net.SocketCreatorFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LocatorDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.beans.BeanUtilFuncs.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.GemFireProperties.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.net.SSLConfigurationFactory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.net.SocketCreator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.ConfigurationProperties.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-10-18 01:00:00" id="1801" opendate="2016-8-18 00:00:00" resolution="Won&amp;#39;t Fix">
    <buginformation>
      <summary>nonSingleHopsCount cache-perf statistic is inaccurate</summary>
      <description>While working on GEODE-1761 I noticed that this statistic is only updated if the metadata for server partitioned-region bucket location is going to be refreshed. The statistic should actually be incremented any time the servers send a metadata refresh hint in their response. PutOp, DestroyOp, GetOp, etc need to do this in their processResponse() methods and the current increments of the stat in ClientMetadataService should be removed.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.pdx.internal.ClientTypeRegistration.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-8-19 01:00:00" id="1803" opendate="2016-8-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Inefficient code in ClientMetadataService.getServerToFilterMap()</summary>
      <description>This method is using Collections.shuffle(List).get(0) to select a random server when it would be a lot cheaper to pick a random element from the unshuffled list of server locations.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.client.internal.ClientPartitionAdvisor.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2016-12-16 01:00:00" id="1903" opendate="2016-9-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Website Community &gt; Events</summary>
      <description>Remove outdated entries; add:Geode Clubhouse: DDD, Reactor Programming and Apache Geode Panel wth VaughnVernonVirtual | Calendar entry&lt;https://www.google.com/calendar/event?eid=ZnFpcTNrdTNkYWl2ZmE2MDcwdTNrdDc5a28gcGl2b3RhbC5pb191OGtndnVhaGprYm9oMWduZmh2NXRzMnY5Y0Bn&amp;ctz=America/Los_Angeles&gt;9/21 - 9AM PacificGeode Clubhouse: Update on Geode's New Security Infrastructure with JinmeiLiaoVirtual | Calendar entry&lt;https://www.google.com/calendar/event?eid=bnM3ODdjYms2bm05aDJwYnJrYnBrb2Q2YnMgcGl2b3RhbC5pb191OGtndnVhaGprYm9oMWduZmh2NXRzMnY5Y0Bn&amp;ctz=America/Los_Angeles&gt;10/19 - 9AM Pacific</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.community.index.html</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-8-6 01:00:00" id="191" opendate="2015-8-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>region.size() operation sometimes returns incorrect results</summary>
      <description>In case where a transaction is hosted on a remote member, doing a region.size() operation on a partitioned region returns an incorrect size. The operation returns 0 for size of all the buckets hosted locally.This seems to have been introduced in the merge from sga2 branch.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.RemoteTransactionDUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.ClientServerTransactionDUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.LocalRegion.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-4-20 01:00:00" id="1912" opendate="2016-9-20 00:00:00" resolution="Duplicate">
    <buginformation>
      <summary>gfsh does not validate start server command</summary>
      <description>When I tried to start a server from gfsh I accidently used --locator (singular) rather than --locators. gfsh did not throw an error and started the server without connecting to the locator.We should throw an error for unrecognized command options in gfsh.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.security.GfshCommandsOverHttpSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.ServerStarter.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorStarter.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.LocatorServerStartupRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.StartServerAuthorizationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.SecurityWithoutClusterConfigDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.SecurityClusterConfigDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.PeerSecurityWithEmbeddedLocatorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.PeerAuthenticatorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClusterConfigWithoutSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.AbstractSecureServerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.JavaRmiServerNameTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshShellConnectionRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshCommandsSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshCommandsPostProcessorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.CacheServerStartupRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.CacheServerMBeanShiroJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.GfshParser.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.SwaggerVerificationTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestServersJUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-10-20 01:00:00" id="1914" opendate="2016-9-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode source code contains old version of gemfire dtds</summary>
      <description>Geode source contains old version of gemfire dtds that can be drop. That are referred by tests as well . And we may need to remove or upgrade those tests.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.client.ClientCacheFactoryJUnitTest.single.pool.xml</file>
      <file type="M">geode-spark-connector.geode-spark-connector.src.it.resources.test-retrieve-regions.xml</file>
      <file type="M">geode-spark-connector.geode-spark-connector.src.it.resources.test-regions.xml</file>
      <file type="M">geode-cq.src.test.resources.org.apache.geode.internal.cache.tier.sockets.durablecq-server-cache.xml</file>
      <file type="M">geode-cq.src.test.resources.org.apache.geode.internal.cache.tier.sockets.durablecq-client-cache.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.jta.cachejta.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.xmlcache.CacheXmlParserJUnitTest.testDTDFallbackWithNonEnglishLocal.cache.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.PartitionRegionCacheExample2.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.PartitionRegionCacheExample1.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.mixed.diskstore.diskwriteattrs.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.mixed.diskstore.diskdir.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.incorrect.time.interval.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.incorrect.sync.value.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.incorrect.roll.oplogs.value.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.incorrect.max.oplog.size.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.incorrect.dir.size.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.incorrect.dir.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.faultyDiskXMLsForTesting.incorrect.bytes.threshold.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.DiskRegCacheXmlJUnitTest.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.internal.cache.BackupJUnitTest.cache.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.query.partitioned.PRIndexCreation.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.query.internal.index.cachequeryindexwitherror.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.query.internal.index.cachequeryindex.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.query.functional.index-recovery-overflow.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.query.functional.index-creation-without-eviction.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache.query.functional.index-creation-with-eviction.xml</file>
      <file type="M">geode-core.src.main.resources.javadoc-images.example-client-cache.xml</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.admin.doc-files.ds4.0.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.admin.doc-files.ds5.0.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache3.0.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache4.0.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache4.1.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache5.0.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache5.1.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache5.5.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache5.7.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache5.8.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache6.0.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache6.1.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache6.5.dtd</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.cache.doc-files.cache6.6.dtd</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml30DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml40DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml41DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml45DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml51DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml55DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml57DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml58DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml60DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml61DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml65DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.CacheXml66DUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.RegionFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.JarClassLoaderJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.PdxSerializableJUnitTest.java</file>
      <file type="M">geode-core.src.test.resources.jta.cachejta.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.attributesUnordered.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.badFloat.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.badInt.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.badKeyConstraintClass.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.badScope.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.callbackNotDeclarable.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.callbackWithException.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.coLocation.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.ewtest.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.examples.3.0.example-cache.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.examples.4.0.example-cache.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.loaderNotLoader.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.malformed.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.namedAttributes.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.partitionedRegion.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.partitionedRegion51.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.sameRootRegion.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.sameSubregion.xml</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.cache30.unknownNamedAttributes.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2016-9-26 01:00:00" id="1937" opendate="2016-9-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>geode-example tests should run as part of precheckin</summary>
      <description>We discovered GEODE-1934 which was a ClassNotFoundException for projects that depend on geode core due to the spark connector tests. However, the geode-examples tests were also failing due to the same exception.Unfortunately, it looks like we're not running the example tests in any CI system. We should make the example tests run as part of precheckin to make sure the examples still work.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">geode-examples.replicated.scripts.stopAll.sh</file>
      <file type="M">geode-examples.replicated.scripts.startAll.sh</file>
      <file type="M">geode-examples.replicated.scripts.setEnv.sh</file>
      <file type="M">geode-examples.replicated.scripts.pidkiller.sh</file>
      <file type="M">geode-examples.build.gradle</file>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-9-27 01:00:00" id="1940" opendate="2016-9-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>IntelliJ formatter is wrapping lines shorter than the Eclipse formatter</summary>
      <description>IntelliJ formatter is wrapping lines shorter than the Eclipse formatter</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">etc.intellijIdeaCodeStyle.xml</file>
      <file type="M">etc.eclipseFormatterProfile.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-9-28 01:00:00" id="1947" opendate="2016-9-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Rename SSL_HTTP_REQUIRE_AUTHENTICATION to SSL_WEB_REQUIRE_AUTHENTICATION</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SSLConfigurationFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.BeanUtilFuncs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.GemFireProperties.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLConfigurationFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPIsWithSSLDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2016-11-19 01:00:00" id="2015" opendate="2016-10-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Host Geode docs on Geode website</summary>
      <description>Now that the Geode docs have been donated to the project, let's host them on the Geode website.Also document process for posting new docs builds to the website.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">README.md</file>
      <file type="M">geode-site.website.README.md</file>
      <file type="M">geode-site.website.content.docs.index.html</file>
      <file type="M">geode-docs.about.geode.html.md.erb</file>
      <file type="M">geode-book.redirects.rb</file>
      <file type="M">geode-book.README.md</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-book.master.middleman.source.stylesheets.book-styles.css.scss</file>
      <file type="M">geode-book.master.middleman.source.index.html.erb</file>
      <file type="M">geode-book.Gemfile.lock</file>
      <file type="M">geode-book.config.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-10-19 01:00:00" id="2019" opendate="2016-10-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add automated rebalance documentation</summary>
      <description>Add documentation for the automated rebalance feature. The feature invokes a rebalance on a time schedule.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.partitioned.regions.chapter.overview.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.automated.rebalance.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-2-20 01:00:00" id="2020" opendate="2016-10-20 00:00:00" resolution="Invalid">
    <buginformation>
      <summary>Add more tests to replace the legacy tests</summary>
      <description>Whenever a legacy test failed, we should write an integration test or Dunit test to reproduce it and then fix it.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.QueryAccessController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.PdxBasedCrudController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.FunctionAccessController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.CommonCrudController.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.RestSecurityIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-10-21 01:00:00" id="2023" opendate="2016-10-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add docs for Lucene integration</summary>
      <description>Add docs for the Lucene integration</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.book.intro.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-10-25 01:00:00" id="2034" opendate="2016-10-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove old releases</summary>
      <description>https://dist.apache.org/repos/dist/release/incubator/geode/There's old releases here, ideally should only have the latest.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.releases.index.html</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-10-25 01:00:00" id="2035" opendate="2016-10-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>document how to use G1GC with geode</summary>
      <description>The geode docs should describe how to configure G1GC for geode.One issue is that if you use "gfsh start server --max-heap=SIZE" then it will automatically configure CMS which does not work with G1GC.So instead of using the "-max-heap" option we should tell them to use "-J-XmxSIZE".To configure G1GC use "--J-XX:+UseG1GC".If you find the geode resource manager does not detect crossing the eviction or critical threshold quickly enough then try using this option to make it more responsive: "--J-XX:MaxGCPauseMillis=VALUE" where VALUE should be a number less than 200 (which is the current G1GC default). We have done some limited testing with this value set to 1 and it does make the resource manager more responsive when combined with G1GC but it also increases the amount of time spent in gc.We also noticed that if the primary heap objects you allocate are large then G1GC can cause the JVM to report out of heap memory when it has only used 50 percent of the heap. We saw this with tests in which all the geode region values were larger than 50 percent of the G1 region size. Oracle calls these "humongous" objects. The default G1 region size is 1m. You can increase it up to 32m (it is always a power of 2) by using this: "--J-XX:G1HeapRegionSize=32m". If you are using large values and want to use G1GC without increasing its RegionSize (or if you large values are bigger than 16m) then you could make your geode regions that will contain the large values off-heap. But even if you do that the large off-heap values will allocate temporary large heap values that G1GC will treat as humongous allocations even though they will be short lived. So consider using CMS if most of you values will result in humongous allocations.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
      <file type="M">geode-docs.managing.heap.use.heap.management.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-10-26 01:00:00" id="2036" opendate="2016-10-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix documentation typos</summary>
      <description>This ticket will be used for all documentation commits that fix small errors, omissions and oversights. Changes committed against this ticket will be of a small enough scope that there is no need for community input, discussion, or review. This ticket should remain open only until the release of Geode 1.1.0.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.getting.started.querying.quick.reference.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-10-26 01:00:00" id="2040" opendate="2016-10-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Tomcat 8.0 and 8.5 for HTTP Sess Mgmt module</summary>
      <description>Documentation needs to include Tomcat 8.0 and 8.5 as available. Alter set up instructions to also include them.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tomcat.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.quick.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-10-27 01:00:00" id="2044" opendate="2016-10-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add tc Server 3.2 for HTTP Sess Mgmt module</summary>
      <description>Documentation needs to include tc Server 3.2 as available. No changes to installation or use instructions needed.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.quick.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-11-28 01:00:00" id="2045" opendate="2016-10-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve documentation of region shortcuts</summary>
      <description>The description of a bunch of region shortcuts for partitioned regions says that they have local scope, and they don't. While fixing this, also fix the links to those descriptions (since they do not error out, but they also do not work correctly), and remove many of the links that clutter each description.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.region.shortcuts.table.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.region.shortcuts.reference.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-11-31 01:00:00" id="2047" opendate="2016-10-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document change to enable-network-partition-detection</summary>
      <description>This subtask is to change the documentation to reflect the code change that went into GEODE-762.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.system.failure.and.recovery.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.recovering.from.network.outages.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.recovering.conflicting.data.exceptions.html.md.erb</file>
      <file type="M">geode-docs.managing.network.partitioning.how.network.partitioning.management.works.html.md.erb</file>
      <file type="M">geode-docs.managing.network.partitioning.handling.network.partitioning.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-11-1 01:00:00" id="2050" opendate="2016-11-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update documentation of statistics</summary>
      <description>With JGroups 3.6.10, a set of statistics have been removed. They need to be removed from the documentation: "batchCopyTime", "Total amount of time, in nanoseconds, spent copying messages for batched transmission", "nanoseconds"), "batchFlushTime", "Total amount of time, in nanoseconds, spent flushing batched messages to the network", "nanoseconds"), "ucastFlushes", "Total number of flushes of the unicast datagram protocol, prior to sending a multicast message", "flushes"), "ucastFlushTime", "Total amount of time, in nanoseconds, spent waiting for acknowledgements for outstanding unicast datagram messages", "nanoseconds"), "flowControlRequests", "Total number of flow control credit requests sent to other processes", "messages"), "flowControlResponses", "Total number of flow control credit responses sent to a requestor", "messages"),"flowControlWaitsInProgress", "Number of threads blocked waiting for flow-control recharges from other processes", "threads"), "flowControlWaitTime", "Total amount of time, in nanoseconds, spent waiting for other processes to recharge the flow of control meter", "nanoseconds"), "flowControlThrottleWaitsInProgress", "Number of threads blocked waiting due to flow-control throttle requests from other members", "threads"), "jgNAKACKreceivedMessages", "Number of received messages awaiting stability in NAKACK", "messages"), "jgNAKACKsentMessages", "Number of sent messages awaiting stability in NAKACK", "messages"), "jgQueuedMessages", "Number of messages queued by transport and awaiting processing", "messages"), is not in the documentation "jgUNICASTreceivedMessages", "Number of received messages awaiting receipt of prior messages", "messages"), "jgUNICASTsentMessages", "Number of un-acked normal priority messages", "messages"), "jgUNICASTsentHighPriorityMessages", "Number of un-acked high priority messages", "messages"), "jgUNICASTdataReceivedTime", "Amount of time spent in JGroups UNICAST send", "nanoseconds"), "jgSTABLEsuspendTime", "Amount of time JGroups STABLE is suspended", "nanoseconds"), "jgSTABLEmessages", "Number of STABLE messages received by JGroups", "messages"), "jgSTABLEmessagesSent", "Number of STABLE messages sent by JGroups", "messages"), "jgSTABILITYmessages", "Number of STABILITY messages received by JGroups", "messages"), "jgDownTime", "Down Time spent in JGroups stacks", "nanoseconds"), "jgUpTime", "Up Time spent in JGroups stacks", "nanoseconds"), "jChannelUpTime", "Up Time spent in JChannel including jgroup stack", "nanoseconds"), "jgFCsendBlocks", "Number of times JGroups FC halted sends due to backpressure", "events"), "jgFCautoRequests", "Number of times JGroups FC automatically sent replenishment requests", "events"), "jgFCreplenish", "Number of times JGroups FC received replenishments from receivers", "messages"), "jgFCresumes", "Number of times JGroups FC resumed sends due to backpressure", "events"), "jgFCsentCredits", "Number of times JGroups FC sent credits to a sender", "events"), "jgFCsentThrottleRequests","Number of times JGroups FC sent throttle requests to a sender", "events"), "jgNAKACKwaits", "Number of delays created by NAKACK sent_msgs overflow", "events"), is not in the documentationWith the new membership service, these statistics have been added. Each has a name, a description, and a unit of measure: "heartbeatRequestsSent", "Heartbeat request messages that this member has sent.", "messages"), "heartbeatRequestsReceived", "Heartbeat request messages that this member has received.", "messages"), "heartbeatsSent", "Heartbeat messages that this member has sent.", "messages"), "heartbeatsReceived", "Heartbeat messages that this member has received.", "messages"), "suspectsSent", "Suspect member messages that this member has sent.", "messages"), "suspectsReceived", "Suspect member messages that this member has received.", "messages"), "finalCheckRequestsSent", "Heartbeat request messages that this member has sent.", "messages"), "finalCheckRequestsReceived", "Final check requests that this member has received.","messages"), "finalCheckResponsesSent", "Final check responses that this member has sent.", "messages"), "finalCheckResponsesReceived", "Final check responses that this member has received.","messages"),The above four stats are broken down into two other sets for TCP/IP vs UDP checks: "tcpFinalCheckRequestsSent", "TCP final check requests that this member has sent.", "messages", false), "tcpFinalCheckRequestsReceived", "TCP final check requests that this member has received.","messages", false), "tcpFinalCheckResponsesSent", "TCP final check responses that this member has sent.","messages", false), "tcpFinalCheckResponsesReceived", "TCP final check responses that this member has sent.","messages", false), "udpFinalCheckRequestsSent", "UDP final check requests that this member has sent.", "messages"), "udpFinalCheckRequestsReceived", "UDP final check requests that this member has received.","messages"), "udpFinalCheckResponsesSent", "UDP final check responses that this member has sent.", "messages"), "udpFinalCheckResponsesReceived", "UDP final check responses that this member has received.","messages"),}); "udpMsgEncryptionTime", "Total amount of time, in nanoseconds, spent encrypting udp messages.", "nanoseconds"), "udpMsgDecryptionTime","Total amount of time, in nanoseconds, spent decrypting udp messages.", "nanoseconds"),</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.statistics.statistics.list.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-2-2 01:00:00" id="2052" opendate="2016-11-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs to segregate types of properties</summary>
      <description>Geode has a lot of properties. But they are not mentioned in context but rather listed as geode properties which can go in geode.properties and gfsecurity.properties.It would nice to have a segregation by Locator and Server under geode.properties. The reason for this ask is that some properties do not apply to both locator and server. Currently the only way to know this is by experience or trial and error.~~We also found out that some of the gemfire.properties do not get applied when supplied in geode.properties but rather have to be passed as command line properties. e.g. enabling rest api.It would be nice to call that out clearly in docs.~~~~There are example of properties which have to be applied together in order to enable a functionality e.g. rest api needs bind address property and http-service-port. Its not called out clearly in the docs that they are mandatory. ~~&amp;#91;link to docs section&amp;#93;(http://geode.incubator.apache.org/docs/guide/rest_apps/setup_config.html)~~quote ~~~To enable the developer REST API service in Apache Geode, set the start-dev-rest-api Geode property to true when starting a data node using either gfsh or the ServerLauncher API. Setting this property to true on a data node will start up an embedded Jetty server and deploy the REST developer API WAR file.~~It should highlight that its necessary to have 2 more properties bind-address and http-service-port defined to make it work.~We would be happy to provide further details on this matter if needed.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-11-2 01:00:00" id="2060" opendate="2016-11-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update docs for security-related properties</summary>
      <description>Place security-manager and security-post-processor properties into the list of properties within the reference section of the documentation.Also review other security-related properties listed and identify those that are deprecated.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-11-2 01:00:00" id="2062" opendate="2016-11-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Adding new PDX , order by and Index Query tests to the open side</summary>
      <description>Add new tests for PDX queries, order by queries and queries using indexes. PDXInstance and PDXFactoryImpl to be used to validate multiple class version test rather than writing dummy PDX classes JUnit4CacheTestCase to be used instead of Junit3 elements.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.dunit.HashIndexDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-11-2 01:00:00" id="2065" opendate="2016-11-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document defragmentationsInProgress statistic</summary>
      <description>This is a sub-task of GEODE-1590.Add the offheap memory statistic defragmentationsInProgress to the documentation. It is the integer number of defragmentations currently in progress.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.statistics.statistics.list.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-11-3 01:00:00" id="2068" opendate="2016-11-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve documentation on serial/parallel gateway senders</summary>
      <description>The documentation on Serial Gateway Senders implies that the events queued are generated from a single server. Not true. The events generated from a cluster are funneled through a single server.For the material on Parallel Gateway Senders, the terminology "simultaneous" implies timing, and we don't coordinate the timing of when events are sent. What we're doing is to identify that an event is sent from the server that hosts the primary bucket.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.topologies.and.comm.topology.concepts.multisite.overview.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-11-4 01:00:00" id="2070" opendate="2016-11-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve documentation of region management</summary>
      <description>The outline and navigation of the material on regions isBasic Configuration and Programming Data Regions Data Region Management Creating a Region with gfsh Creating a Region Through the cache.xml File Creating a Region Through the API ...The information in the 3 'Creating' sections is partially covered in the Data Region Management section. Reorganize and collapse into a single section on management that covers region management the 3 ways:1. APIs 2. cache.xml declaration3. gfsh</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gfe.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.client-cache.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.chapter.overview.regionshortcuts.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.basic.config.data.regions.managing.data.regions.html.md.erb</file>
      <file type="M">geode-docs.basic.config.data.regions.create.a.region.with.cacheXML.html.md.erb</file>
      <file type="M">geode-docs.basic.config.data.regions.create.a.region.with.API.html.md.erb</file>
      <file type="M">geode-docs.basic.config.data.regions.chapter.overview.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2016-11-11 01:00:00" id="2100" opendate="2016-11-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add new version of query client server messages</summary>
      <description>Create new message types that properly handle legacy clients compared to newer clients</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.internal.JUnit4DistributedTestCase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Query651.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Query.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.BaseCommandQuery.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-11-12 01:00:00" id="2101" opendate="2016-11-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve WAN topology terminology in docs</summary>
      <description>In our documentation description of WAN topologies, the term "parallel multi-site topology" is a fully connected mesh. The "serial multi-site topology" is a ring. It will improve the docs to change our descriptions to use the common and accepted terms.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.topologies.and.comm.multi.site.configuration.multisite.topologies.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-4-14 01:00:00" id="2103" opendate="2016-11-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>start locator command should include --http-service-port and --http-service-bind-address</summary>
      <description>To facilitate starting the Admin REST API on a Locator, start locator command should include --http-service-port and --http-service-bind-address.Workaround is to specify these configuration properties with --J:--J=-Dgemfire.http-service-port=--J=-Dgemfire.http-service-bind-address=</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.management.internal.cli.commands.golden-help-offline.properties</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.LauncherLifecycleCommands.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.management.internal.cli.commands.LauncherLifecycleCommandsJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-11-14 01:00:00" id="2104" opendate="2016-11-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>GFSH parsing of options following --J options are interpreted as part of the --J value</summary>
      <description>GFSH parsing of options following --J options are interpreted as part of the --J value.$ start server --name=me3 --J=-Dgemfire.jmx-manager=true --J=-Dgemfire.jmx-manager-start=true --http-service-port=8080` In the above GFSH does not interpret the `http-service-port` option correctly. If you look in the log, the value for `gemfire.jmx-manager-start` is `true --http-service-port=8080`</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.util.HyphenFormatterTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.HyphenFormatter.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-11-15 01:00:00" id="2110" opendate="2016-11-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add user and password to gfsh start server docs</summary>
      <description>Options to the gfsh start server command specify the user and password to use as credentials in authentication. These options are nicely printed in the gfsh help option, but they did not make it into the command reference page for the gfsh start server command. Thus, they need to be added.From the help output:user User name to securely connect to the cluster. If the --password parameter is not specified then it will be prompted for. Required: falsepassword Password to securely connect to the cluster. Required: false</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-11-16 01:00:00" id="2114" opendate="2016-11-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add user and password to gfsh connect docs</summary>
      <description>The gfsh connect command has --user and --password options that are not completely documented. The task here is to complete that documentation.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.connect.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-8-12 01:00:00" id="212" opendate="2015-8-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>ResourceManager implementation impacts off-heap performance</summary>
      <description>When the resource manager is configured with either a eviction or critical threshold then it registers a listener with the off-heap SimpleMemoryAllocator that causes every off-heap allocate and free to call this listener.The current listener does a synchronize on a singleton and notifies it. This will impact the rate at which multiple threads can allocate and free off-heap objects.I simple test using 8 threads showed that without the resource manager they could do 16 million allocate/frees in 3 seconds. With the resource manager it took 12 seconds.The notify is done to a singleton thread that simple checks to see if the new off-heap memory size would result in a change to the resource manager state. This can be done without synchronizing. Only if a change is possible do we need to do the sync and notify.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.control.OffHeapMemoryMonitor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.control.MemoryEvent.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-1-17 01:00:00" id="2125" opendate="2016-11-17 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>GFSH cannot communicate with Locators that go into reconnect mode</summary>
      <description>If the Locator is started from GFSH and the cluster's only server is killed, network partition detection will initiate forceDisconnect in the Locator and leave it in reconnect mode. To the User it will appear that the Locator crashed and GFSH lost connection:gfsh&gt;No longer connected to 192.168.1.72[1099].During the time in which the Locator is in reconnect mode, the User cannot connect via GFSH, nor can they issue status or stop commands against it:$ cd locator1$ cat vf.gf.locator.pid 33959$ ps 33959 PID TT STAT TIME COMMAND33959 s001 S 0:19.97 /Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/CoIn GFSH:gfsh&gt;connect --locator=localhost[10334]Connecting to Locator at [host=localhost, port=10334] ..Connection refusedgfsh&gt;status locator --pid=33959nullgfsh&gt;status locator --dir=locator1nullgfsh&gt;stop locator --dir=locator1Locator in /Users/klund/dev/geode/locator1 on null is currently not responding.gfsh&gt;stop locator --pid=33959Locator in /Users/klund/dev/geode on null is currently not responding.If a Locator has GFSH connected then it should notify GFSH that it is going to forceDisconnect and go into reconnect mode. Then GFSH can notify the User so the User is not suprised.In addition, GFSH status and stop commands should be modified to be able to talk to a Locator in reconnect mode. GFSH start could also be modified to report that the Locator is running in reconnect mode instead of reporting a hung process in the Locator's directory.Attachments: The Locator log file is attached as locator_failure-logs.txt The Locator thread dump (via jstack) AFTER it has shut down due to forceDisconnect is attached as thread_dump.txt</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.configuring.running.starting.up.shutting.down.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-12-30 01:00:00" id="2158" opendate="2016-11-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incorrect NOTICE file</summary>
      <description>The following subprojects have specific NOTICE files that should be included in the jar artifact: geode-pulse geode-web geode-web-apiStarting in 1.0.0-incubating.M3, only the standard source NOTICE was used. We should fix the build to make sure the correct file is used.</description>
      <version>1.0.0-incubating.M3,1.0.0-incubating</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.java.gradle</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2016-12-2 01:00:00" id="2178" opendate="2016-12-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: Update HTTP session management version numbers</summary>
      <description>User Manual section Tools andModules -&gt; HTTP Session Management contains outdated information regarding supported application servers and their version numbers. Bring these up to date.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.weblogic.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tomcat.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tc.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tc.installing.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tc.additional.info.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.quick.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-12-3 01:00:00" id="2180" opendate="2016-12-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Autoreconnect does not work well with configuration via API calls</summary>
      <description>If autoreconnect is enabled, default reconfiguration upon reconnection uses the XML configuration that would be generated by the cluster configuration service (also used by default). This set of default settings doesn't work when a cache's configuration is accomplished through API calls. So, our documentation should explain this, such that admins know when not to enable autoreconnect.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.autoreconnect.member-reconnect.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-12-5 01:00:00" id="2184" opendate="2016-12-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: Variable-ize Java version numbers</summary>
      <description>Examples containing specific version strings, e.g. "Geode 1.0.0-incubating" and "javac 1.8.0_92" must be updated with every doc release or they go out of date. In most cases, the specific numbers are not meaningful to the example. Updating with every related revision requires considerable, usually unnecessary, effort. Replace such version strings with generic placeholders.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.weblogic.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tc.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tc.additional.info.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.tour.of.gfsh.html.md.erb</file>
      <file type="M">geode-docs.managing.management.jmx.manager.operations.html.md.erb</file>
      <file type="M">geode-docs.getting.started.system.requirements.host.machine.html.md.erb</file>
      <file type="M">geode-docs.getting.started.installation.install.standalone.html.md.erb</file>
      <file type="M">geode-docs.getting.started.15.minute.quickstart.gfsh.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.running.the.locator.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.running.the.cacheserver.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.persisting.configurations.html.md.erb</file>
      <file type="M">geode-book.config.yml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-12-7 01:00:00" id="2187" opendate="2016-12-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: bad subnav link in REST Apps &gt; Troubleshooting</summary>
      <description>The subnav link for Developing REST apps &gt; Troubleshooting &gt; Key Types and JSON Support does not connect. Needs to be repaired or removed.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.rest.apps.troubleshooting.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-7-7 01:00:00" id="2189" opendate="2016-12-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: Update Swagger UI links</summary>
      <description>In the User Manual, at the bottom of the section Developing REST Applications -&gt; Using the Swagger UI, there are two links, one to "more info" and one to the "Swagger specification". The first one no longer connects to anything, the second connects to a target that may be incorrect.Need to review and update these links with their correct values.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.rest.apps.using.swagger.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-8-14 01:00:00" id="220" opendate="2015-8-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>DistributedNoAckRegionOffHeapDUnitTest.testRemoteCacheWriter fails intermittently</summary>
      <description>DistributedNoAckRegionOffHeapDUnitTest.testRemoteCacheWriter fails intermittently.The intermittent failure is caused by an off-heap region being destroyed and the test expecting the off-heap stats to be synchronously updated during the destroy.off-heap regions release their off-heap references async in a background thread to prevent dead lock.The following assertEquals(0, ...) needs be in a wait criteria: region.destroyRegion(arg); if (region.getAttributes().getOffHeap() &amp;&amp; !(region instanceof PartitionedRegion)) { GemFireCacheImpl gfc = (GemFireCacheImpl) getCache(); SimpleMemoryAllocatorImpl ma = (SimpleMemoryAllocatorImpl) gfc.getOffHeapStore(); assertEquals(0, ma.getStats().getObjects()); }</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache30.MultiVMRegionTestCase.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-6-9 01:00:00" id="2201" opendate="2016-12-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make UITests more resilient</summary>
      <description>The UITests are continually failing in CI. We need to make them great again.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.rules.WebDriverRule.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.rules.ScreenshotOnFailureRule.java</file>
      <file type="M">geode-pulse.src.test.java.org.apache.geode.tools.pulse.tests.ui.PulseTestUtils.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-12-13 01:00:00" id="2208" opendate="2016-12-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document limitation of transactions on mixed region types</summary>
      <description>For transactions that run on a mix of replicated and partitioned regions, the first operation needs to be to a partitioned region. This sets/fixes the host where subsequent operations will run, and it will be where data is colocated if there are multiple partitioned regions involved. If the first operation is to the replicated region, then the host set may be one that is not where the colocated data is, leading to data not colocated exceptions.This limitation needs to be documented.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.data.location.cache.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.by.region.type.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-12-14 01:00:00" id="2212" opendate="2016-12-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh http authentication fails when routed through a proxy</summary>
      <description>We encountered a bug with Geode that only reveals itself when routing requests through the a proxy that modifies HTTP headers to standardize them in title case format.gfsh uses the security-username and security-password headers to pass authentication credentials to the locator, but what we saw is that when these go through our proxy and are turned into Security-Username / Security-Password, we can no longer authenticate.This request emulates what gfsh executes when you run "list members" with an HTTP connection:curl http://$LOCATOR_IP/gemfire/v1/members -H "security-username: admin" -H "security-password: admin"This request emulates what gets sent when going through our proxy. This should be the same but will fail:curl http://$LOCATOR_IP/gemfire/v1/members -H "Security-Username: admin" -H "Security-Password: admin"We narrowed the bug down to these lines. The HTTP spec specifies that headers should treated as case-insensitive but it looks like Geode is only capable of working with lower-case versions of these headers.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptorRequestHeaderJUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptorJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptor.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2015-1-17 01:00:00" id="224" opendate="2015-8-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode Spark connector parser is not processing type casting properly</summary>
      <description>Using GFSH a user can execute queries casting the data types but that's not working using the geode-spark-connector. scala&gt; sqlContext.gemfireOQL("SELECT (Double)t.ema, (Double)t.future_ema, (Double)t.close, t.entryTimestamp FROM /TechIndicators t ");java.lang.RuntimeException: No result when parsing failedat scala.sys.package$.error(package.scala:27)at scala.util.parsing.combinator.Parsers$NoSuccess.get(Parsers.scala:181)at scala.util.parsing.combinator.Parsers$NoSuccess.get(Parsers.scala:167)at io.pivotal.gemfire.spark.connector.internal.oql.QueryRDD.getRegionPathFromQuery(QueryRDD.scala:56)at io.pivotal.gemfire.spark.connector.internal.oql.QueryRDD.getPartitions(QueryRDD.scala:24)at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:219)at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:217)at scala.Option.getOrElse(Option.scala:120)at org.apache.spark.rdd.RDD.partitions(RDD.scala:217)at org.apache.spark.rdd.RDD.take(RDD.scala:1156)at org.apache.spark.rdd.RDD.first(RDD.scala:1189)at io.pivotal.gemfire.spark.connector.internal.oql.SchemaBuilder.toSparkSchema(SchemaBuilder.scala:30)at io.pivotal.gemfire.spark.connector.internal.oql.OQLRelation.schema(RDDConverter.scala:13)at org.apache.spark.sql.sources.LogicalRelation.&lt;init&gt;(LogicalRelation.scala:30)</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-spark-connector.geode-spark-connector.src.test.scala.org.apache.geode.spark.connector.internal.oql.QueryParserTest.scala</file>
      <file type="M">geode-spark-connector.geode-spark-connector.src.main.scala.org.apache.geode.spark.connector.internal.oql.QueryParser.scala</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-12-21 01:00:00" id="2242" opendate="2016-12-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Destroy operations on PRELOADED regions are not applied in the receiving WAN site</summary>
      <description>In the receiving site, all the processing in AbstractRegionEntry.processGatewayTag fails for the destroy event, a ConcurrentCacheModificationException is thrown, and the destroy event is not applied.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialWANPropagationDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderQueueDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.UpdateVersionDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-6-21 01:00:00" id="2243" opendate="2016-12-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modify path to spotless formatter</summary>
      <description>Modify path to spotless formatter xml slightly so that it can be used from closed side.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-2-27 01:00:00" id="2247" opendate="2016-12-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>GFSH connect over HTTP without credentials should fail earlier</summary>
      <description>With a SecurityManager configured and using GFSH over http, issuing a connect command without -user or -password will appear to succeed, responding with Successfully connected to: GemFire Manager HTTP service. However if you then try to do anything in this session you will get an error Could not process command due to GemFire error. Error while processing command &lt;list members&gt; Reason : Error: Anonymous User.It seems like it should fail on the connect.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.GeodeAuthenticationProvider.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.IntegratedSecurityServiceWithIniFileJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.auth.AbstractGMSAuthenticatorTestCase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.support.LoginHandlerInterceptor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.SecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.IntegratedSecurityService.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-12-27 01:00:00" id="2252" opendate="2016-12-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove doc reference to too-old vmware guide</summary>
      <description>The docs section on Performance Tuning discusses running on vSphere. That documentation may still be relevant, but the end of the section has a link to very old and no-longer-relevant documentation. So, remove the link.At the same time, update the Geode book subnav to not reference subsections (within this performance tuning subsection) distinguished by anchors, as this causes the subnav to misbehave.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.monitor.tune.gemfire.performance.on.vsphere.guidelines.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.gemfire.performance.on.vsphere.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.chapter.overview.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-12-29 01:00:00" id="2258" opendate="2016-12-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>fix doc typos for setting properties</summary>
      <description>In file basic_config/gemfire_properties/setting_distributed_properties.html, this text is wrong:System.setProperty("DgemfirePropertyFile", "gfTest");System.setProperty("Dgemfire.mcast-port", "10999");The capital D at the beginning of each property name should be deleted.In the same file, the reference to DistributedSystem javadocs should be changed to refer to this class:org.apache.geode.distributed.ConfigurationPropertiesConfigurationProperties also defines constants for each property name so that applications can use them instead of embedding string constants in their code. This has the benefit of avoiding typing mistakes.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.basic.config.gemfire.properties.setting.distributed.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-12-29 01:00:00" id="2259" opendate="2016-12-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: Update &amp; correct tc Server instructions</summary>
      <description>Installation instructions for tc Server are out-of-date. Update and correct.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tc.installing.the.module.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2017-1-5 01:00:00" id="2273" opendate="2017-1-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Display the server name while listing the Lucene index stats</summary>
      <description>Display the server's name hosting the Lucene indexes while listing the Lucene index stats in gfsh.Currently we can't distinguish between the listed pairs.--------------------gfsh&gt;list lucene indexes --with-stats Index Name | Region Path | Indexed Fields | Field Analyzer | Status | Query Executions | Updates | Commits | Documents----------------- | ----------- | -------------------------------- | -------------- | ----------- | ---------------- | ------- | ------- | ---------customerRegionAll | /customer | [lastUpdateDateTime, displayNa.. | {} | Initialized | 0 | 0 | 0 | 0customerRegionAll | /customer | [lastUpdateDateTime, displayNa.. | {} | Initialized | 0 | 0 | 0 | 0</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneListIndexFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneDescribeIndexFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexDetails.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommands.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneListIndexFunction.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.functions.LuceneDescribeIndexFunction.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-1-6 01:00:00" id="2274" opendate="2017-1-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Need to add additional unit test coverage on non colocated transaction</summary>
      <description>Need to add additional entry operations on non colocated transaction and get expected transaction exception.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.PRTransactionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.disttx.PRDistTXWithVersionsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.disttx.PRDistTXDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-1-11 01:00:00" id="2294" opendate="2017-1-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>When attempting to execute a function via Dev Rest API, error messages are being lost</summary>
      <description>In FunctionAccessController:While debugging the execution of a function via the REST API, a null-pointer exception was thrown and should have returned the error:Specified key is null and this region does not permit null keys!instead, an error code of 0 is returned with the message:{ "error": "no response from server"}</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-web-api.src.test.java.org.apache.geode.rest.internal.web.controllers.AbstractBaseControllerJUnitTest.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.AbstractBaseController.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2017-5-24 01:00:00" id="2352" opendate="2017-1-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document that REST API requires two properties</summary>
      <description>Pulkit Chandra wrote in GEODE-2052:The REST api needs bind address property and http-service-port. Its not called out clearly in the docs that they are mandatory. &amp;#91;link to docs section&amp;#93;(http://geode.incubator.apache.org/docs/guide/rest_apps/setup_config.html)quote ```To enable the developer REST API service in Apache Geode, set the start-dev-rest-api Geode property to true when starting a data node using either gfsh or the ServerLauncher API. Setting this property to true on a data node will start up an embedded Jetty server and deploy the REST developer API WAR file.```We also found out that some of the gemfire.properties do not get applied when supplied in geode.properties but rather have to be passed as command line properties. e.g. enabling rest api.It would be nice to call that out clearly in docs.It should highlight that its necessary to have 2 more properties bind-address and http-service-port defined to make it work.We would be happy to provide further details on this matter if needed.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.rest.apps.setup.config.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.prereqs.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.chapter.overview.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-1-24 01:00:00" id="2353" opendate="2017-1-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Verify no clear-text passwords in documentation</summary>
      <description>Find locations in the manual where notes were made that the password is recorded or available in clear text, and remove them. GEODE-2119 ticket fixed all of them. Passwords are no longer seen in clear text.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.connect.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-3-27 01:00:00" id="2379" opendate="2017-1-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document new behavior of export logs</summary>
      <description>the new command help: NAME export logsIS AVAILABLE falseSYNOPSIS Export the log files for a member or members.SYNTAX export logs &amp;#91;--dir=value&amp;#93; &amp;#91;--group=value(,value)*&amp;#93; &amp;#91;--member=value(,value)*&amp;#93; &amp;#91;--log-level=value&amp;#93; &amp;#91;--only-log-level=value&amp;#93; &amp;#91;--merge-log=value&amp;#93; &amp;#91;--start-time=value&amp;#93; &amp;#91;--end-time=value&amp;#93; &amp;#91;--logs-only(=value)?&amp;#93; &amp;#91;--stats-only(=value)?&amp;#93;PARAMETERS dir Local directory to which log files will be written. This is only used when you are exporting logs using http connection. If not specified, user.dir will be used. Required: false group Group of members whose log files will be exported. Required: false member Name/Id of the member whose log files will be exported. Required: false log-level Minimum level of log entries to export. Valid values are: fatal, error, warn, info, debug, trace and all. The default is "INFO". Required: false Default (if the parameter is not specified): INFO only-log-level Whether to only include those entries that exactly match the --log-level specified. Required: false Default (if the parameter is not specified): false merge-log Whether to merge logs after exporting to the target directory. &amp;#8211; deprecated Required: false Default (if the parameter is not specified): false start-time Log entries that occurred after this time will be exported. The default is no limit. Format: yyyy/MM/dd/HH/mm/ss/SSS/z OR yyyy/MM/dd Required: false end-time Log entries that occurred before this time will be exported. The default is no limit. Format: yyyy/MM/dd/HH/mm/ss/SSS/z OR yyyy/MM/dd Required: false logs-only Whether to only export logs Required: false Default (if the parameter is specified without value): true Default (if the parameter is not specified): false stats-only Whether to only export statistics Required: false Default (if the parameter is specified without value): true Default (if the parameter is not specified): falsechanges are: --dir is not required anymore. added logs-only and stats-only options. --merge-log is deprecated, group and member can be comma separated strings.Also note down in the docs: when this command is executed over jmx, the exported logs will be saved as exportedlogs_xxx.zip in the connected locator's working directory. If executed over http, the zip will be saved in specified dir in the user's client machine.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.export.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2017-10-31 01:00:00" id="2405" opendate="2017-1-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update docs with changes to export cluster-configuration</summary>
      <description>The gfsh command export cluster-configuration used to have separate parameters --dir=value and --zip-file-name=value. The --dir option has been eliminated, and --zip-file-name can now take either just a file name (e.g. myClusterConfiguration.zip) or a relative or absolute path (e.g. export/myCC.zip or /export/myCC.zip).</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.export.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.persisting.configurations.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.export-import.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-2-1 01:00:00" id="2409" opendate="2017-2-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Beautify readme file</summary>
      <description>The github readme is the first introduction many people have to Apache Geode. I think it could be made a bit prettier (e.g. by adding an Apache Geode banner to the top of the readme and adding an Apache License button.) There is a great curated list of examples from which to draw inspiration available at https://github.com/matiassingers/awesome-readme.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">README.md</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2017-6-2 01:00:00" id="2420" opendate="2017-2-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Warn a user if they try to export too much data</summary>
      <description>We should warn a user and prompt for confirmation before trying to perform an `export logs` operation that would result in a file over some threshold. (Logs and stats have the potential to be very large.)</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.util.LogSizerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.util.LogExporterTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.SizeExportLogsTestSuite.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ExportedLogsSizeInfoTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.LogExporter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ExportedLogsSizeInfo.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.SizeExportLogsFunctionCacheTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.LogSizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.InternalDistributedMember.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.export.html.md.erb</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.SizeExportLogsFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsTestSuite.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsFileSizeLimitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.ExportLogController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.SizeExportLogsFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportLogsCommand.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.GfshShellConnectionRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.LogLevelInterceptorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsInterceptorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ExportLogsFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ExportLogCommand.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2017-2-6 01:00:00" id="2432" opendate="2017-2-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Don&amp;#39;t create and upload empty maven artifacts for geode-benchmarks, geode-old-versions</summary>
      <description>The 1.1.0.RC1 maven site shows that we're creating and uploading empty maven artifacts for these sub projects.geode-benchmarks - this project contains only jmh testsgeode-old-versions - this project seems to be completely empty?We should probably disable uploading maven archives for these projects.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-benchmarks.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-2-13 01:00:00" id="2475" opendate="2017-2-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade lucene version to 6.4.1</summary>
      <description>We should probably keep geode up to date with the latest Lucene jars</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.directory.RegionDirectory.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-2-13 01:00:00" id="2479" opendate="2017-2-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>correct doc reference to a com.gemstone package</summary>
      <description>File geode-docs/developing/data_serialization/auto_serialization.html still has a spurious reference to a com.gemstone package. It should be corrected to identify org.apache.geode instead.At the same time, remove links to the 2 subsections with headers Customizing Serialization with Class Pattern Strings Extending the ReflectionBasedAutoSerializerThese are in the navigation bar, so the links server no purpose.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.data.serialization.auto.serialization.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2017-5-22 01:00:00" id="2523" opendate="2017-2-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Collapse RegionTestableTypes combinations into a single enum types</summary>
      <description>Currently, we have pairs of RegionTestableTypes that are used in the LuceneDUnit tests. These pairs are used to determine the datastore and accessor region types. However the pairings are generally 1 to 1. So we should be able to collapse the types into a single enum and remove the parameterized methods. Instead we should then be able to add the enum name into the parameters themselves.So instead of having the following for a test case @Parameters(method = "getListOfClientServerTypes")We could then have @Parameters({"PARTITION", "ETC..."})we can probably use PARTITION and know that the corresponding client type is PARTITION_PROXY. That or we can change the enum to be explicit about the pairing, such as PARTITION_WITH_PARTITION_PROXY.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.RebalanceWithRedundancyDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.RebalanceDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesClientDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationOnFixedPRDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-2-23 01:00:00" id="2530" opendate="2017-2-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create DunitTests to tests the effect of dataStores going down while paginating</summary>
      <description>Analyze the effect of dataStores going offline while the pages are being extracted / Lucene results are being extracted.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2017-3-24 01:00:00" id="2547" opendate="2017-2-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Interest registration can cause a CacheLoader to be invoked</summary>
      <description>A simple scenario to reproduce this issue is: configure a Region with a CacheLoader destroy a key (it doesn't matter if the entry exists) register interest in that keyThe CacheLoader will be invoked</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.InterestListDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.BaseCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.OpType.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.Operation.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-3-9 01:00:00" id="2643" opendate="2017-3-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Combine chunk and file region into a single region</summary>
      <description>When recovering the chunk and file region from a back up, it is possible that we end up recovering buckets from different sources. This possibly leads to missing chunks or extra files, which causes a Corrupt Index Exception to be thrown.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.test.LuceneTestUtilities.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesPersistenceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexMaintenanceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexDestroyDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImplPerformanceTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.PartitionedRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexRecoveryHAIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneIndexForPartitionedRegionTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.filesystem.FileSystemJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.distributed.DistributedScoringJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.directory.RegionDirectoryJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexForPartitionedRegion.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.IndexRepositoryFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.filesystem.FileSystemStats.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.filesystem.FileSystem.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.directory.RegionDirectory.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2017-12-15 01:00:00" id="2665" opendate="2017-3-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add gfsh command to destroy async-event-queue</summary>
      <description>Currently, there is only an create async-event-queue command in gfsh, we need the corresponding destroy async-event-queue</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.destroy.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-5-15 01:00:00" id="2668" opendate="2017-3-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add gfsh command to destroy gateway receiver</summary>
      <description>Currently, there is a create gateway-receiver command, but no corresponding destroy command.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.DestroyGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.CreateGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.CreateGatewayReceiverCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.CreateAndDestroyGatewaySenderCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.MultiUserDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.CliFunctionResultTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyGatewaySenderCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.ResultBuilder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewaySenderCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateIndexFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateAsyncEventQueueFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CliFunctionResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.GfshCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyGatewaySenderCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateGatewaySenderCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateGatewayReceiverCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommand.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.WANCommandUtils.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CommandAvailabilityIndicator.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.DestroyGatewayReceiverCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DestroyGatewayReceiverCommand.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2017-3-16 01:00:00" id="2679" opendate="2017-3-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene asynchronous disk writes for aeq can lead to data mismatch after compacting</summary>
      <description>Due to the way krf and drf oplogs are created/updated, if the aeq has disk synchronous as false, there is a window of time where a krf is rolled/created with the current region entries, but events that had been removed have not yet been written to the drf.We should probably change the aeq to be disk sync = true. This will alleviate some of the data mismatch where we have potential extra keys after compacting the oplogs.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexCreationPersistenceIntegrationTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-3-20 01:00:00" id="27" opendate="2015-5-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Apache Geode POM file(s) are incorrect!</summary>
      <description>This JIRA is a followup to GEODE-23 to note the additional issues that are considered "out-of-scope" for GEODE-23, yet need to be fixed, none-the-less.Specifically, the changes include...1. The &lt;repositories&gt; declarations need to be cleaned up (reduced). Technically, Apache Geode should only require... &lt;repositories&gt; &lt;repository&gt; &lt;id&gt;gemstone-release&lt;/id&gt; &lt;name&gt;GemStone Maven RELEASE Repository&lt;/name&gt; &lt;url&gt;http://dist.gemstone.com/maven/release&lt;/url&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;/snapshots&gt; &lt;/repository&gt; &lt;repository&gt; &lt;id&gt;libs-release&lt;/id&gt; &lt;name&gt;Spring Maven libs-release Repository&lt;/name&gt; &lt;url&gt;http://repo.spring.io/libs-release&lt;/url&gt; &lt;/repository&gt; &lt;/repositories&gt;For instance, the "obscure" jline-1.0.S2-B.jar dependency is "resolvable" from, for instance...http://repo.spring.io/libs-release/net/sourceforge/jline/jline/1.0.S2-B/jline-1.0.S2-B.jarNOTE: by default, and unlike Gradle, Maven searches "Maven Central".2. Add proper "scopes", "optional" settings and "exclusions" to thedependencies declared in the POM.3. Many of the "explicitly" declared dependencies (e.g. spring-beans) needto be removed; Maven will resolve dependencies transitively.As an example, Apache Geode's Maven POM file should be very similar to the Pivotal GemFire Maven POM file, as recently updated and validated for GemFire 8.2 (see attached gemfire-8.2.0.pom file for further details and reference). This is particularly important where Apache Geode and Pivotal GemFire intersect.There maybe other issues with the POM file that need to be included within the "scope" of this bug as well and should be included as such, otherwise this JIRA should not be marked "complete".</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.query.internal.CumulativeNonDistinctResults.java</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-rebalancer.build.gradle</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-junit.build.gradle</file>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat7.build.gradle</file>
      <file type="M">extensions.geode-modules-hibernate.build.gradle</file>
      <file type="M">gradle.dependency-resolution.gradle</file>
      <file type="M">geode-pulse.build.gradle</file>
      <file type="M">geode-web.build.gradle</file>
      <file type="M">build.gradle</file>
      <file type="M">gradle.java.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">gradle.publish.gradle</file>
      <file type="M">geode-core.build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2017-10-5 01:00:00" id="2888" opendate="2017-5-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>user guide: REST API Region Endpoints use &amp;#39;gemfire-api&amp;#39; in their names</summary>
      <description>The name 'gemfire-api' should be replaced by 'geode' in the Region Endpoints section of the manual. See http://geode.apache.org/docs/guide/11/rest_apps/rest_regions.html and its subsections.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.rest.apps.troubleshooting.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.regions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.queries.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.prereqs.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.functions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.examples.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.rest.admin.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.update.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.update.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.update.cas.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.replace.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.put.multiple.values.for.keys.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.post.if.absent.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.post.execute.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.post.execute.functions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.post.create.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.ping.service.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.head.region.size.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.servers.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.region.key.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.region.keys.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.region.data.for.multiple.keys.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.region.data.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.regions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.queries.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.functions.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.get.execute.adhoc.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.develop.rest.apps.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.delete.named.query.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.delete.data.for.multiple.keys.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.delete.data.for.key.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.delete.all.data.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2017-6-10 01:00:00" id="2908" opendate="2017-5-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Swagger UI Tags seems broken in Latest</summary>
      <description>Swagger UI Tags seems broken in Latest</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.QueryAccessController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.PdxBasedCrudController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.FunctionAccessController.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-5-11 01:00:00" id="2909" opendate="2017-5-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix 2 typos in Lucene integration docs</summary>
      <description>The 2 typos to be fixed: In the Java API Example subsection, RegionShortcut is misspelled as RegionShutcut. For consistency, add a period to the end of the description of gfsh search lucene in the Gfsh API subsection.These typos are minor. Fix them under a CTR (commit then review) process.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.lucene.integration.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-7-15 01:00:00" id="2920" opendate="2017-5-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>secure disk-store as a resource</summary>
      <description>Treat DISK as a CLUSTER resource so that administrators can control the ability to manage diskstores/create regions that will write to disk stores.Only a user with CLUSTER:MANAGE:DISK should be able to run the following gfsh commands:create disk-storealter disk-storecompact disk-storedestroy disk-storerevoke missing-disk-storeAnd the following JMX bean methods:DiskStoreMXBean.forceCompactionDiskStoreMXBean.flushDiskStoreMXBean.forceRollDiskStoreMXBean.setDiskUsageCriticalPercentageDiskStoreMXBean.setDiskUsageWarningPercentageDistributedSystemMXBean.revokeMissingDiskStores</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.security.templates.security.json</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ExampleSecurityManagerTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.examples.security.ExampleSecurityManager.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshCommandsSecurityTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-7-15 01:00:00" id="2924" opendate="2017-5-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>move resources from DATA to CLUSTER</summary>
      <description>As discussed in this proposal https://cwiki.apache.org/confluence/display/GEODE/Finer+grained+security, the only resource on DATA should be region, we should move:1. pdx to CLUSTER:MANAGE2. import cluster-configuration to CLUSTER:MANAGE3. LockServiceMXBean.becomeLockGrantor to CLUSTER:MANAGE4. list regions to CLUSTER:READ</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneCommandsSecurityDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneCommandsSecurityTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneClientSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.PasswordUtil.java</file>
      <file type="M">geode-docs.managing.security.implementing.authorization.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-7-15 01:00:00" id="2925" opendate="2017-5-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>secure ability to write to disk</summary>
      <description>Only a user with CLUSTER:WRITE:DISK should be able to perform the following actions:1. create persistent regions2. create persustent lucene index3. backup disk-store4. create persistent async-event-queue 5. call DistributedSystemMXBean.backupAllMembers</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.RestSecurityService.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.TestSecurityManager.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.SimpleSecurityManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.TestCommand.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.ResourcePermissionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.ResourcePermission.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.security.ResourceOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.security.MBeanServerWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.security.AccessControlMBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.remote.CommandProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.SecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.LegacySecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.EnabledSecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.DisabledSecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.security.CustomSecurityService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.examples.security.ExampleSecurityManager.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2017-5-18 01:00:00" id="2941" opendate="2017-5-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse documentation is outdated</summary>
      <description>the pulse documentation:http://geode.apache.org/docs/guide/11/tools_modules/pulse/quickstart.html#topic_523F6DE33FE54307BBE8F83BB7D9355Dis no longer accurate anymore.1. jmxUsername and jmxpassword no long applies2. the logging configurations has changed too.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.redis.adapter.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.pulse.system.requirements.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.pulse.quickstart.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.pulse.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.lucene.integration.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.book.intro.html.md.erb</file>
      <file type="M">geode-docs.managing.management.mm.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.management.management.system.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.management.jmx.manager.node.html.md.erb</file>
      <file type="M">geode-docs.getting.started.15.minute.quickstart.gfsh.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.persist.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.tools.modules.pulse.pulse-hosted.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.pulse.pulse-auth.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-6-26 01:00:00" id="3000" opendate="2017-5-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor Admin rest request to send credentials in Authentication header and use spring security to authenticate it.</summary>
      <description>Currently, admin rest put security-password in the header and Jetty would log it in debug level, we should send the authentication information in the authentication header so that Jetty won't log them, and have the server side be able to authenticate that way.Currently the way these rest requests are sent are different for different request. We need to uniform that first before we can do this refactoring.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.resources.log4j2.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-5-26 01:00:00" id="3002" opendate="2017-5-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve doc of (Lucene) __REGION_VALUE_FIELD</summary>
      <description>The original description of __REGION_VALUE_FIELD is not quite right. In addition, there is an example gfsh command using this value that is wrong. It is in the gfsh create lucene index command reference page.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.lucene.integration.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.search.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-5-30 01:00:00" id="3011" opendate="2017-5-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh example to do a Lucene query is incorrect</summary>
      <description>In the Lucene integration section of the docs is the following incorrect gfsh command example:gfsh&gt; lucene search --regionName=/orders -queryStrings="John*" --defaultField=field1Instead it should be:gfsh&gt; search lucene --name=indexName --region=/orders --queryStrings="John*" --defaultField=customer --limit=100</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.lucene.integration.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-6-6 01:00:00" id="3042" opendate="2017-6-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document GEODE-3027: co-locate two keys on a put</summary>
      <description>Document that there now is a way to put co-locate two keys represented in a delimited string.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.using.custom.partition.resolvers.html.md.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.custom.partitioning.and.data.colocation.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-6-6 01:00:00" id="3044" opendate="2017-6-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Manual: Update Swagger example and screen shots</summary>
      <description>Screen captures in the section "Using the Swagger UI to Browse REST APIs" show an old GemFire implementation - need updating to match current appearance.Command lines that generate the screen shots are also out-of-date; they work, but they generate warnings. These should be cleaned up, as well.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.images.swagger.v1.response.png</file>
      <file type="M">geode-docs.images.swagger.v1.png</file>
      <file type="M">geode-docs.images.swagger.post.region.response.png</file>
      <file type="M">geode-docs.images.swagger.post.region.png</file>
      <file type="M">geode-docs.rest.apps.using.swagger.html.md.erb</file>
      <file type="M">geode-docs.images.swagger.region.endpoints.png</file>
      <file type="M">geode-docs.images.swagger.home.png</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2017-7-15 01:00:00" id="3090" opendate="2017-6-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh help typo</summary>
      <description>gfsh&gt; help connect...use-ssl Whether to use SSL for communication with Locator and/or JMX Manager. If set to "true", will also read "gfsecurity.properties". SSL Options take precedence over proeprties file."proeprties" should be "properties"</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.test.java.org.apache.geode.management.internal.cli.commands.ClientCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionAlterFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewaySenderCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DataCommandFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateAsyncEventQueueFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateAlterDestroyRegionCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ClientCommands.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CliUtil.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-2-26 01:00:00" id="3126" opendate="2017-6-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add ad hoc query execution to new protocol</summary>
      <description>As a Geode developer using the new client/server protocol, I need to be able to send queries and receive expected results.Add ad hoc query execution to new protocol.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-experimental-driver.src.test.java.org.apache.geode.experimental.driver.RegionIntegrationTest.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufDriver.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufChannel.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.Driver.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.serialization.exception.EncodingException.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.serialization.exception.DecodingException.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.registry.ProtobufOperationContextRegistry.java</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.region.API.proto</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.clientProtocol.proto</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.basicTypes.proto</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-7-26 01:00:00" id="3128" opendate="2017-6-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Tuning batch size for less index overhead</summary>
      <description>Tuning the batch size set when creating the AEQFactory from 100 to 1000. This significantly decreases the per entry overhead of indexes.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.MixedObjectIndexDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneQueriesIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImplPerformanceTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.filesystem.FileSystem.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-2-8 01:00:00" id="313" opendate="2015-9-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis adapter needs better exception handling for region initialization</summary>
      <description>When initializing sorted sets, some exception handling is done wrong and some is missing. Also, unnecessary logging that might make tests fail needs to be removed</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.redis.RegionProvider.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-6-29 01:00:00" id="3152" opendate="2017-6-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>A client connecting to a server with one version creates an HARegion name different from the one created in another version</summary>
      <description>What is happening is:904 client -&gt; 91 server results in an HARegion name containing the version like:Initializing region _gfe_non_durable_client_with_id_192.168.2.4(client:98892:loner):57839:927197eb:client(version:GFE 9.0)_2_queue904 client -&gt; 904 server or 91 client -&gt; 91 server results in an HARegion name without the version like:Initializing region _gfe_non_durable_client_with_id_192.168.2.4(client:98892:loner):57839:927197eb:client_2_queueThis causes secondary queue removal and GII to fail.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.rollingupgrade.RollingUpgrade2DUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientProxyMembershipID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.InternalDistributedMember.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-5-30 01:00:00" id="3157" opendate="2017-6-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Application servers need shiro and commons lang when running geode session modules</summary>
      <description>Our testing of the session modules with GEODE-2901 discovered that the session modules now require the user to add shiro and commons-lang to the classpath of their application server in order for the session module to work.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">extensions.geode-modules-assembly.release.session.bin.modify.war</file>
      <file type="M">extensions.geode-modules-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2017-7-11 01:00:00" id="3181" opendate="2017-7-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add WAN backward compatibility unit tests</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.cache.wan.WANRollingUpgradeDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.cache.internal.JUnit4CacheTestCase.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-7-12 01:00:00" id="3194" opendate="2017-7-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cleanup disk store on failed recovery</summary>
      <description>When recovering from persistent disk stores, it is possible to have the process fail exceptionally (for example, a failure deserializing the data from the disk store). Currently, however, this is not handled in a way that cleans up the partially setup disk store, but should be modified to do so.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskStoreFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreFactoryImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-7-12 01:00:00" id="3198" opendate="2017-7-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Do not prevent bucket creation if local-max-memory is exceeded</summary>
      <description>In creating a new bucket, if local-max-memory is exceeded on all members, the bucket cannot be created until a member goes below that memory threshold (which may be never, in which case the attempt to create the bucket loops forever). Currently, if all members have indicated they should not make the bucket, the request is again made, but with a "force" flag set to true. This allows overriding the fact that the member believes it already hosts as many buckets as it should for balance, but does not override the local-max-memory check. We should therefore have the force flag also override the memory threshold check, thus allowing bucket creation to proceed, but still attempting to honor not adding it to a member already at or above its target memory limit.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionLocalMaxMemoryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionDataStoreJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionDataStore.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-7-19 01:00:00" id="3272" opendate="2017-7-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Correct docs: location of .gfsh.history file</summary>
      <description>The .gfsh.history file goes into a directory named .geode. There is an instance in the manual (file tools_modules/gfsh/configuring_gfsh.html) that still says the directory is named .gemfire.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.configuring.gfsh.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-11-11 01:00:00" id="328" opendate="2015-9-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Define Experimental annotation in gemfire-common</summary>
      <description>We need to add an @Experimental annotation for annotating APIs that are not ready to be locked in for production usage or future backwards compatibility. These APIs might be removed or changed in future releases.See org.apache.spark.annotation.Experimental for an example outside of Geode.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
      <file type="M">gemfire-web.build.gradle</file>
      <file type="M">gemfire-rebalancer.build.gradle</file>
      <file type="M">gemfire-core.build.gradle</file>
      <file type="M">gemfire-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-8-21 01:00:00" id="3284" opendate="2017-7-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>New flow: getAvailableServers</summary>
      <description>As a Geode client user, I'd like to be able to know all available servers in a grid in order to support operations targeting any available server.Create op handler for getAvailableServers message, following proto message definition.Client should be able to complete getAvailableServers, receiving all servers available in grid.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.main.proto.server.API.proto</file>
      <file type="M">geode-protobuf.src.main.proto.region.API.proto</file>
      <file type="M">geode-protobuf.src.main.proto.clientProtocol.proto</file>
      <file type="M">geode-protobuf.src.main.proto.basicTypes.proto</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.utilities.ProtobufUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.utilities.ProtobufRequestUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.protocol.protobuf.registry.OperationContextRegistry.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2017-8-4 01:00:00" id="3403" opendate="2017-8-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modify rolling upgrade test configuration for 1.2.x release</summary>
      <description>Modify rolling upgrade test configuration for 1.2.x release.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.Version.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializer.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-8-8 01:00:00" id="3408" opendate="2017-8-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Flood of EOF warnings</summary>
      <description>Experimenting with the protobuf changes in the develop branch around commit cea8312, after running a client scenario for a while I'm seeing a flood of messages like the following. There appears to be one for each new message sent from the client.[warning 2017/08/07 11:15:16.628 PDT gbp-server &lt;ServerConnection on port 40404 Thread 9&gt; tid=0x61] java.io.EOFException: Tried to deserialize protobuf message at EOFThe log spam doesn't happen on initial connection and interaction, but for example a loop like the following begins triggering it within 100 iterations (possibly less):for (var i = 0;; i++){ var region = ...; // connect to localhost, single-node server, get region region.Put(i, i);}</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.GenericProtocolServerConnection.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-8-8 01:00:00" id="3410" opendate="2017-8-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document new Query command</summary>
      <description>The GFSH query command was recently changed and the docs need to be updated to reflect the new parameters.</description>
      <version>None</version>
      <fixedVersion>1.2.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.useful.gfsh.shell.variables.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.configuring.gfsh.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.query.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2017-10-2 01:00:00" id="3730" opendate="2017-10-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>With gemfire.GatewaySender.REMOVE_FROM_QUEUE_ON_EXCEPTION=false, gateway events can still be removed from the queue when an exception occurs</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.misc.KeepEventsOnGatewaySenderQueueDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewayReceiverStats.java</file>
      <file type="M">geode-wan.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventRemoteDispatcher.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GatewayReceiverCommand.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-1-13 01:00:00" id="401" opendate="2015-10-13 00:00:00" resolution="Not A Problem">
    <buginformation>
      <summary>gfsh backup disk-store does not print offline members</summary>
      <description>Test environment has 3 servers running with 1 REPLICATE_PERSISTENT region. Make a backup with all 3 servers online:gfsh&gt;backup disk-store --dir=/Users/kmiller/tryit/trybackup/mybackupdirThe following disk stores were backed up successfully Member | UUID | Directory | Host-------- | ------------------------------------ | ------------------------------------------------------------------- | ---------------------------------server2 | 49ec8158-fa55-4340-a20c-bc20d9d90bbb | /Users/kmiller/tryit/trybackup/try2/server2/. | pdx2-office-dhcp10.eng.vmware.comserver1 | 4b6ef006-c585-48de-83a2-74f79199e2fa | /Users/kmiller/tryit/trybackup/try1/server1/. | pdx2-office-dhcp10.eng.vmware.comserver3 | b9e6771e-ab84-4808-a081-6c0134144fd9 | /Users/kmiller/tryit/trybackup/try3/server3/. | pdx2-office-dhcp10.eng.vmware.comlocator1 | 5bce95be-5bb6-4be6-adc2-aa18dde1c2b6 | /Users/kmiller/tryit/trybackup/try1/locator1/ConfigDiskDir_locator1 | pdx2-office-dhcp10.eng.vmware.comHere's the output once server 3 is stopped. Notice that there is no indication that a backup was not taken for server 3's disk store, since server 3 is offline.gfsh&gt;stop server --name=server3gfsh&gt;backup disk-store --dir=/Users/kmiller/tryit/trybackup/mybackupdirThe following disk stores were backed up successfully Member | UUID | Directory | Host-------- | ------------------------------------ | ------------------------------------------------------------------- | ---------------------------------server2 | 49ec8158-fa55-4340-a20c-bc20d9d90bbb | /Users/kmiller/tryit/trybackup/try2/server2/. | pdx2-office-dhcp10.eng.vmware.comserver1 | 4b6ef006-c585-48de-83a2-74f79199e2fa | /Users/kmiller/tryit/trybackup/try1/server1/. | pdx2-office-dhcp10.eng.vmware.comlocator1 | 5bce95be-5bb6-4be6-adc2-aa18dde1c2b6 | /Users/kmiller/tryit/trybackup/try1/locator1/ConfigDiskDir_locator1 | pdx2-office-dhcp10.eng.vmware.comThere ought to be an additional line in this output that states that no backup was made for server 3.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">gemfire-core.src.test.java.dunit.standalone.DUnitLauncher.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.logging.log4j.LogWriterLoggerPerformanceTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.logging.log4j.Log4J2PerformanceTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.compression.CompressionCacheConfigDUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.org.apache.logging.log4j.core.config.xml.GemFireXmlConfigurationFactory.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.org.apache.logging.log4j.core.config.xml.GemFireXmlConfiguration.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.org.apache.logging.log4j.core.config.GemFireFileConfigurationMonitor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.logging.LogService.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.logging.log4j.LogWriterLogger.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-17 01:00:00" id="4306" opendate="2018-1-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>TTL (time to live) expiration not working properly in client side</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.EntryEventImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EntryEventImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-2-26 01:00:00" id="4402" opendate="2018-1-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log exceptions to server log</summary>
      <description>When the new protocol handles an exception, it should write the exception to the server log (even if it only sends back an error to the client) &amp;#8211; this will help in debugging efforts.All exceptions handled by the new protocol should be logged to the server log.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.LocatorConnectionDUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ServerMessageExecutionContext.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufStreamProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufSerializationService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufOpsProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.security.AuthenticationRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ProtocolVersionHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.AbstractFunctionRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.LocatorMessageExecutionContext.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-2-27 01:00:00" id="4403" opendate="2018-1-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove ProtocolErrorCode</summary>
      <description>We currently have a class called ProtocolErrorCode, which lists the errors that can happen in the Protobuf protocol, but these error codes are also listed in an enum in the .proto files and corresponding generated code. Remove ProtocolErrorCode to DRY it up.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.ErrorCodesJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufResponseUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionTerminatingStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionHandshakeStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionAuthorizingStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.ProtobufConnectionAuthenticatingStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.NoSecurityProtobufConnectionStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.LegacySecurityProtobufConnectionStateProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.exception.OperationNotAuthorizedException.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.state.exception.ConnectionStateException.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufOpsProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufErrorCode.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetServerOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandler.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2018-2-29 01:00:00" id="4414" opendate="2018-1-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support nulls in new client protocol</summary>
      <description>The new client protocol currently sort of supports nulls, by sending an EncodedValue that is not set, but there's no mention of this (as far as I can tell) and it's not explicit.An example where we might need nulls is when a function returns a list of null sentinel values that are meaningful. To support this use case, we should add a null case to EncodedValue.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufUtilitiesJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.ProtobufSerializationService.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnRegionRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnMemberRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnGroupRequestOperationHandler.java</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.basicTypes.proto</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2018-1-29 01:00:00" id="4433" opendate="2018-1-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove redundant modifiers from non geode-core</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.http.converter.CustomMappingJackson2HttpMessageConverter.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.PageableLuceneQueryResults.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.management.LuceneServiceMXBean.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneService.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneResultStruct.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneQueryProvider.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneQueryFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneQuery.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneIndexFactory.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.LuceneIndex.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.repository.IndexResultCollector.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.repository.IndexRepository.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.InternalLuceneIndex.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.IndexListener.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.runners.SuiteRunner.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.FieldsOfTimeout.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.FieldsOfTestName.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.FieldsOfTemporaryFolder.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.Retry.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.Repeat.java</file>
      <file type="M">geode-json.src.main.java.org.json.JSONString.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.JSONWrapper.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.SessionManager.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.SessionCache.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.session.catalina.internal.DeltaSessionAttributeEvent.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.gatewaydelta.GatewayDeltaEvent.java</file>
      <file type="M">extensions.geode-modules.src.main.java.org.apache.geode.modules.gatewaydelta.GatewayDelta.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.jmx.SessionStatisticsMXBean.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.SessionManager.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.filter.attributes.SessionAttributes.java</file>
      <file type="M">extensions.geode-modules-session-internal.src.main.java.org.apache.geode.modules.session.internal.common.SessionCache.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-11-30 01:00:00" id="522" opendate="2015-10-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gradle eclipse target creates gemfire-web project with missing dependencies</summary>
      <description>Gradle eclipse target creates gemfire-web project with the following missing dependencies:1) gemfire-core2) javax.servlet-api-3.1.0.jar3) spring-core-3.2.12.RELEASE.jar4) spring-shell-1.0.0.RELEASE.jar5) spring-web-3.2.12.RELEASE.jar6) spring-webmvc-3.2.12.RELEASE.jar7) spring-test (unknown which version)</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-web.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-6-15 01:00:00" id="5222" opendate="2018-5-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>JMX metric exposed in an MBean</summary>
      <description>Given I need to scale down or scale up my servers based on usageWhen I setup my monitoring of JMX metrics through an MBeanThen I have the ability to see Disk Free PercentageAND Disk Free in BytesAND Disk Used PercentageAND Disk Used in Bytes </description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.DiskStoreMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.DiskStoreMBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.DiskStoreMXBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskDirectoryStats.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.DiskStoreImplIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-7-4 01:00:00" id="5284" opendate="2018-6-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add testing surrounding MBean persistence during member failure and reconnection.</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.VMProvider.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.ServerStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.MemberStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.LocatorStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.tests.MemberStarterRuleTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.MemberVM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.MembershipManagerHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.security.MBeanServerWrapper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.callbacks.ConfigurationChangeListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalLocator.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-6-4 01:00:00" id="5287" opendate="2018-6-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Simplify documentation of transactions</summary>
      <description>The documentation is overly complicated when describing transactions within Geode. As a first step towards simplification, extract the important semantic info on Geode's capabilities with respect to ACID transactions from its buried location and combine it with the About Transactions overview information. Rename the section too.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.transaction.semantics.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.how.cache.transactions.work.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.about.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-12-5 01:00:00" id="529" opendate="2015-11-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing gemfire-common.jar on maven</summary>
      <description>gemfire-common project was created and is a dependency for gemfire-core but it's currently not available on Maven.Need to add the list of MavenJars on gemfire-assemblydef MavenJars = [ coreJar, jgroupsJar, jsonJar, joptsimpleJar, commonJar ]</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-7-6 01:00:00" id="5295" opendate="2018-6-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve error reporting in ClusterStartupRule await methods</summary>
      <description>The family of methods that wait until the cluster's gateways / regions / disk stores are ready will occasionally hang, having a number not equal to the expected number of beans. In these cases, it unclear if the number of expected element beans is too few (indicating a delay or failure to start) or too many (indicating a failure to destroy a previous test).Failure reporting should be improved to indicate the nature of failure.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeRegionDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandDUnitTest.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.DestroyGatewaySenderCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.MemberStarterRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.MemberVM.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.JMXMBeanReconnectDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.JMXMBeanFederationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.ClusterConfigImportDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.RemoveCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.LocateEntryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListAsyncEventQueuesCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterCompressorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.CliUtilDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-6-6 01:00:00" id="5296" opendate="2018-6-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Revise introductory docs on transactions</summary>
      <description>Do a complete rewrite of the introductory prose on transactions. Help Geode users to know how the ACID semantics are implemented in Geode.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.about.transactions.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-6-6 01:00:00" id="5298" opendate="2018-6-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Document Transactions + Functions Limitation</summary>
      <description>By design, you can't execute a function within a transaction through the FunctionService.onServer API.  This is not fully documented within the Transactions and Functions section of the user guide.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-7-16 01:00:00" id="5435" opendate="2018-7-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>fix glossary typo in docs</summary>
      <description>The glossary entry under "distributed-no-ack-scope" should not have a hyphen between "ack" and "scope." Scope is a description, not a part of the attribute.This one-character change in the docs will be made as commit-then-review, instead of with a PR.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.glossary.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-7-16 01:00:00" id="5436" opendate="2018-7-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update gfsh create gateway-receiver docs</summary>
      <description>GEODE-4959 was completed and resolved without documentation. This ticket is to update the documentation for the added --if-not-exists option to the gfsh create gateway-receiver command. At the same time, properly document how the command works: Add -if-not-exists to gfsh create gateway-receiver command The create is on all members, unless --groups or --members is specified If the create succeeds on at least 1 member, the gfsh command exits with a success code. (And, a table is printed with the status of each member's gateway receiver.) If the create fails on all members, a table is still printed with the status of each member's gateway receiver. If the create is deemed successful, and cluster config is enabled, then the successful gateway receiver is persisted in the cluster configuration. No cluster configuration is persisted if the --members option is specified. It is this way for backward compatibility.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-8-13 01:00:00" id="5571" opendate="2018-8-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse Data Browser queries should be saved in history before they are executed in case they don&amp;#39;t return</summary>
      <description>Data Browser queries that throw exceptions or do not return at all are not saved in the PULSE_QueryHistory.json file.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.main.webapp.scripts.pulsescript.pages.DataBrowserQuery.js</file>
      <file type="M">geode-pulse.src.main.java.org.apache.geode.tools.pulse.internal.controllers.PulseController.java</file>
      <file type="M">geode-pulse.src.integrationTest.java.org.apache.geode.tools.pulse.controllers.PulseControllerJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-13 01:00:00" id="5575" opendate="2018-8-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove use of Travis CI for apache/geode repo</summary>
      <description>Don't run Travis CI on PRs now that we have a full Concourse pipeline to run all tests.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">.travis.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-9-6 01:00:00" id="5700" opendate="2018-9-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failures from new tests in PartitionedRegionCompactRangeIndexDUnitTest</summary>
      <description>We are seeing a couple of the new tests in PartitionedRegionCompactRangeIndexDUnitTest fail in CIorg.apache.geode.cache.query.dunit.PartitionedRegionCompactRangeIndexDUnitTest: 2 failures (99.265% success rate) | .giiWithPersistenceAndStaleDataDueToDeletesShouldHaveEmptyIndexesWithEntrySet: 1 failures (99.632% success rate) | | Failed build 376 at https://concourse.apachegeode-ci.info/teams/staging/pipelines/concourse-staging/jobs/DistributedTest/builds/376 | .giiWithPersistenceAndStaleDataDueToDeletesShouldHaveEmptyIndexes: 1 failures (99.632% success rate) | | Failed build 499 at https://concourse.apachegeode-ci.info/teams/staging/pipelines/concourse-staging/jobs/DistributedTest/builds/499org.apache.geode.cache.query.dunit.PartitionedRegionCompactRangeIndexDUnitTest &gt; giiWithPersistenceAndStaleDataDueToDeletesShouldHaveEmptyIndexes FAILED java.lang.AssertionError: Suspicious strings were written to the log during this run. Fix the strings or use IgnoredException.addIgnoredException to ignore. ----------------------------------------------------------------------- Found suspect string in log4j at line 7947 [error 2018/08/30 21:32:07.028 UTC &lt;Pooled Waiting Message Processor 1&gt; tid=0x9d6] A bridge server's bind address is only available if it has been started java.lang.IllegalStateException: A bridge server's bind address is only available if it has been started at org.apache.geode.internal.cache.CacheServerImpl.getExternalAddress(CacheServerImpl.java:415) at org.apache.geode.internal.cache.CacheServerImpl.getExternalAddress(CacheServerImpl.java:407) at org.apache.geode.internal.cache.BucketAdvisor.instantiateProfile(BucketAdvisor.java:1690) at org.apache.geode.distributed.internal.DistributionAdvisor.createProfile(DistributionAdvisor.java:1026) at org.apache.geode.internal.cache.BucketAdvisor.sendProfileUpdate(BucketAdvisor.java:1651) at org.apache.geode.internal.cache.BucketAdvisor.acquiredPrimaryLock(BucketAdvisor.java:1196) at org.apache.geode.internal.cache.BucketAdvisor$VolunteeringDelegate.doVolunteerForPrimary(BucketAdvisor.java:2586) at org.apache.geode.internal.cache.BucketAdvisor$VolunteeringDelegate$1.run(BucketAdvisor.java:2484) at org.apache.geode.internal.cache.BucketAdvisor$VolunteeringDelegate$2.run(BucketAdvisor.java:2803) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at org.apache.geode.distributed.internal.ClusterDistributionManager.runUntilShutdown(ClusterDistributionManager.java:1136) at org.apache.geode.distributed.internal.ClusterDistributionManager.access$000(ClusterDistributionManager.java:112) at org.apache.geode.distributed.internal.ClusterDistributionManager$6$1.run(ClusterDistributionManager.java:882) at java.lang.Thread.run(Thread.java:748)</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.junit.rules.ServerStarterRule.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-10-16 01:00:00" id="5885" opendate="2018-10-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add geode-core exclusion from all geode-junit and geode-dunit dependencies</summary>
      <description>Failing to exclude geode-core causes the Nebula dependency linter to object to what appear to be circular dependencies.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.build.gradle</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-wan.build.gradle</file>
      <file type="M">geode-rebalancer.build.gradle</file>
      <file type="M">geode-pulse.geode-pulse-test.build.gradle</file>
      <file type="M">geode-pulse.build.gradle</file>
      <file type="M">geode-protobuf.build.gradle</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-experimental-driver.build.gradle</file>
      <file type="M">geode-dunit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-dunit.build.gradle</file>
      <file type="M">geode-cq.build.gradle</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-connectors.build.gradle</file>
      <file type="M">geode-common.build.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat7.build.gradle</file>
      <file type="M">extensions.geode-modules-test.build.gradle</file>
      <file type="M">extensions.geode-modules-session.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-10-16 01:00:00" id="5886" opendate="2018-10-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make extension module dependencies explicit.</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">extensions.session-testing-war.build.gradle</file>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat8.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat7.build.gradle</file>
      <file type="M">extensions.geode-modules-test.build.gradle</file>
      <file type="M">extensions.geode-modules-session.build.gradle</file>
      <file type="M">extensions.geode-modules-session-internal.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-11-22 01:00:00" id="6088" opendate="2018-11-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enable command availability for JDBC commands</summary>
      <description>The JDBC commands should support the GFSH command availability indicator.Commands should only be available when connect to a distributed system.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeDataSourceCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateDataSourceCommand.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-11-26 01:00:00" id="6091" opendate="2018-11-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Concourse develop pipeline does not receive correct image</summary>
      <description>Changes to our naming convention occurred in early October, but that change was not propagated to the main pipeline.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.create.instance.sh</file>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-11-26 01:00:00" id="6093" opendate="2018-11-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update system-rules dependency from 1.18.0 to 1.19.0</summary>
      <description>om.github.stefanbirkner:system-rules releases are now up to 1.19.0. We should update our dependency from 1.18.0 to 1.19.0.System-Rules is a library of JUnit Rules used in UnitTests, IntegrationTests and DistributedTests for controlling System properties, stdout, stderr, etc.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-dunit.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-12-28 01:00:00" id="611" opendate="2015-11-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove Dependency on LGPL Licensed Findbugs Annoations</summary>
      <description>FindBugs Annoations (SuppressWarnings &amp; SuppressFBWarnings) have been used in 27 files in geode-core and the FindBugs LGPL License is not permitted under ASF policy: http://findbugs.sourceforge.net/There is an Apache Licensed "clean room" implementation of the findbugs annotations&amp;#91;1&amp;#93; and I have asked on the legal-discuss list&amp;#91;2&amp;#93; if theres any reason this can't be used&amp;#91;1&amp;#93; https://github.com/stephenc/findbugs-annotations&amp;#91;2&amp;#93; http://markmail.org/message/ieczgjovzhll76yl</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-assembly.build.gradle</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.SystemFailure.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.util.SingletonValue.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.util.DebuggerSupport.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.util.concurrent.CustomEntryConcurrentHashMap.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.statistics.SampleCollector.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.StatArchiveWriter.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.memcached.commands.GetCommand.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.datasource.AbstractPoolCache.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.versions.RegionVersionVector.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.ClientProxyMembershipID.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.BaseCommand.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.AcceptorImpl.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.AbstractUpdateOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.CompiledOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.admin.jmx.internal.GemFireHealthConfigJmxImpl.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.admin.jmx.internal.AgentImpl.java</file>
      <file type="M">gemfire-core.build.gradle</file>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-29 01:00:00" id="6112" opendate="2018-11-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gfsh does not respond to Control-C</summary>
      <description>Gfsh currently does not respond to Control-C (SIGINT) signals. Gfsh should respond to control-c by terminating, as that is the default behavior of applications responding to SIGINT.There should be a unit test for Gfsh responding to all signals.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.unsafe.GfshSignalHandler.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-29 01:00:00" id="6113" opendate="2018-11-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unable to run geode-web http-based dunit tests in IntelliJ</summary>
      <description>I'm trying to run QueryCommandOverHttpDUnitTest from IntelliJ and it fails with the following in the logs:[vm0] Nov 29, 2018 3:48:54 PM org.springframework.web.servlet.DispatcherServlet initServletBean[vm0] SEVERE: Context initialization failed[vm0] org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: org.springframework.core.annotation.AnnotatedElementUtils.hasAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Z[vm0] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1634)[vm0] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)[vm0] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)[vm0] at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)[vm0] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)[vm0] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)[vm0] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)[vm0] at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)[vm0] at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)[vm0] at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)[vm0] at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:668)[vm0] at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:634)[vm0] at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:682)[vm0] at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:553)[vm0] at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:494)[vm0] at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:171)[vm0] at javax.servlet.GenericServlet.init(GenericServlet.java:244)[vm0] at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:670)[vm0] at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:427)[vm0] at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:760)[vm0] at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:374)[vm0] at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)[vm0] at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)[vm0] at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:847)[vm0] at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:287)[vm0] at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)[vm0] at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)[vm0] at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:138)[vm0] at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:117)[vm0] at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)[vm0] at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)[vm0] at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:138)[vm0] at org.eclipse.jetty.server.Server.start(Server.java:416)[vm0] at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:108)[vm0] at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)[vm0] at org.eclipse.jetty.server.Server.doStart(Server.java:383)[vm0] at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)[vm0] at org.apache.geode.management.internal.JettyHelper.startJetty(JettyHelper.java:165)[vm0] at org.apache.geode.management.internal.ManagementAgent.startHttpService(ManagementAgent.java:306)[vm0] at org.apache.geode.management.internal.ManagementAgent.startAgent(ManagementAgent.java:159)[vm0] at org.apache.geode.management.internal.SystemManagementService.startManager(SystemManagementService.java:432)[vm0] at org.apache.geode.management.internal.beans.ManagementAdapter.handleCacheCreation(ManagementAdapter.java:173)[vm0] at org.apache.geode.management.internal.beans.ManagementListener.handleEvent(ManagementListener.java:115)[vm0] at org.apache.geode.distributed.internal.InternalDistributedSystem.notifyResourceEventListeners(InternalDistributedSystem.java:2201)[vm0] at org.apache.geode.distributed.internal.InternalDistributedSystem.handleResourceEvent(InternalDistributedSystem.java:606)[vm0] at org.apache.geode.internal.cache.GemFireCacheImpl.initialize(GemFireCacheImpl.java:1214)[vm0] at org.apache.geode.internal.cache.GemFireCacheImpl.basicCreate(GemFireCacheImpl.java:799)[vm0] at org.apache.geode.internal.cache.GemFireCacheImpl.create(GemFireCacheImpl.java:785)[vm0] at org.apache.geode.cache.CacheFactory.create(CacheFactory.java:176)[vm0] at org.apache.geode.cache.CacheFactory.create(CacheFactory.java:223)[vm0] at org.apache.geode.distributed.internal.InternalLocator.startCache(InternalLocator.java:652)[vm0] at org.apache.geode.distributed.internal.InternalLocator.startDistributedSystem(InternalLocator.java:639)[vm0] at org.apache.geode.distributed.internal.InternalLocator.startLocator(InternalLocator.java:326)[vm0] at org.apache.geode.distributed.Locator.startLocator(Locator.java:252)[vm0] at org.apache.geode.distributed.Locator.startLocatorAndDS(Locator.java:139)[vm0] at org.apache.geode.test.junit.rules.LocatorStarterRule.startLocator(LocatorStarterRule.java:85)[vm0] at org.apache.geode.test.junit.rules.LocatorStarterRule.before(LocatorStarterRule.java:66)[vm0] at org.apache.geode.test.dunit.rules.ClusterStartupRule.lambda$startLocatorVM$22d9b8a8$1(ClusterStartupRule.java:204)[vm0] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[vm0] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)[vm0] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[vm0] at java.lang.reflect.Method.invoke(Method.java:498)[vm0] at hydra.MethExecutor.executeObject(MethExecutor.java:244)[vm0] at org.apache.geode.test.dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:70)[vm0] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[vm0] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)[vm0] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[vm0] at java.lang.reflect.Method.invoke(Method.java:498)[vm0] at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:361)[vm0] at sun.rmi.transport.Transport$1.run(Transport.java:200)[vm0] at sun.rmi.transport.Transport$1.run(Transport.java:197)[vm0] at java.security.AccessController.doPrivileged(Native Method)[vm0] at sun.rmi.transport.Transport.serviceCall(Transport.java:196)[vm0] at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)[vm0] at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)[vm0] at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683)[vm0] at java.security.AccessController.doPrivileged(Native Method)[vm0] at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)[vm0] at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)[vm0] at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)[vm0] at java.lang.Thread.run(Thread.java:748)[vm0] Caused by: java.lang.NoSuchMethodError: org.springframework.core.annotation.AnnotatedElementUtils.hasAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Z[vm0] at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.isHandler(RequestMappingHandlerMapping.java:173)[vm0] at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:213)[vm0] at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:184)[vm0] at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:127)[vm0] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1692)[vm0] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1630)[vm0] ... 80 moreThe problem appears to be that we're pulling in 2 different versions of spring-core - version 4.2.4 and 4.3.20 and the offending method is missing from 4.2.4; a transitive dependency of spring-shell.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.build.gradle</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-connectors.build.gradle</file>
      <file type="M">geode-dunit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-connectors.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-12-30 01:00:00" id="6118" opendate="2018-11-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>jdbc-mapping gfsh commands should accept &amp;#39;/&amp;#39; in front of region name</summary>
      <description>The jdbc-mapping gfsh commands should work the same as typing region name without the prefix '/'Current behavior: gfsh&gt;create jdbc-mapping --region=/LargeRegion --data-source=datasource --pdx-name="LargeTableDemo" --table=largetable A region named /LargeRegion must already exist.gfsh&gt;create jdbc-mapping --region=LargeRegion --data-source=datasource --pdx-name="LargeTableDemo" --table=largetable (Experimental)Member | Status | Message ------- | ------ | ------------------------------------------------------ server1 | OK | Created JDBC mapping for region LargeRegion on server1 server2 | OK | Created JDBC mapping for region LargeRegion on server2Changes to configuration for group 'cluster' are persisted.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandDunitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-30 01:00:00" id="6119" opendate="2018-11-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document that we support Tomcat 9</summary>
      <description>Geode 1.8 went out without documenting that we added support for Tomcat 9.  Revise the documentation to reflect the change.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tomcat.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tomcat.changing.gf.default.cfg.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.quick.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-3 01:00:00" id="6123" opendate="2018-12-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Code cleanup: gradle dependency declarations should be consistent in style</summary>
      <description>Most dependencies are declared as:compile '&lt;group&gt;:&lt;name&gt;:&lt;version&gt;' but some few are declared ascompile group: '&lt;group&gt;', name: '&lt;name&gt;', version: '&lt;version&gt;'We should be consistent in our approach.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.test.gradle</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-lucene.geode-lucene-test.build.gradle</file>
      <file type="M">geode-connectors.build.gradle</file>
      <file type="M">geode-assembly.geode-assembly-test.build.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">extensions.geode-modules-session.build.gradle</file>
      <file type="M">buildSrc.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-3 01:00:00" id="6127" opendate="2018-12-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document gfsh create jndi-binding changes</summary>
      <description>Update the documentation with changes in the gfsh create jndi-binding command made in GEODE-5861.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-3 01:00:00" id="6129" opendate="2018-12-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make dependencies explicit in geode-wan</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-wan.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-10-4 01:00:00" id="6133" opendate="2018-12-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Dependency on org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR should change to System.lineSeparator()</summary>
      <description>org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR has been deprecated in favor of System.lineSeparator().All Geode classes importing and using org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR, System.getProperty("line.separator") or something similar should be changed to use System.lineSeparator().</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.compiler.UncompiledSourceCodeTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.RequiresGeodeHome.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.compiler.UncompiledSourceCode.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.compiler.JavaCompiler.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.internal.process.AbstractProcessStreamReaderIntegrationTest.java</file>
      <file type="M">geode-junit.src.integrationTest.java.org.apache.geode.test.compiler.JavaCompilerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.SortLogFileTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.LogWriterImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.CommandResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.ProcessStreamReader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.NonBlockingProcessStreamReader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.process.BlockingProcessStreamReader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.SortLogFile.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.MergeLogFiles.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.LogWriterImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.LogFileParser.java</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.logging.MergeLogFilesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-4 01:00:00" id="6135" opendate="2018-12-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add benchmarks to geode CI</summary>
      <description>Add a job to run the benchmarks to https://concourse.apachegeode-ci.info. Initially this job doesn't need to be on the main tab, it can just output a comparison of the current develop against a baseline revision of geode.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
      <file type="M">ci.images.alpine-tools.Dockerfile</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-7-25 01:00:00" id="6707" opendate="2019-4-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh export logs does not export rolled over GC logs</summary>
      <description>If GC logs are configured to land in the same directory as Geode server logs then the current GC log is exported when we run gfsh&gt;export logs. However if the rolled over GC logs are not exported.This happens because the rolled over GC logs are of the form server_gc.log.16 and gfsh export command logs for files ending with *.log however GC log rolling causes the files to end with a file number. Note:  If GC logs are written a directory other than where server logs end up, then even the latest GC log doesn't get exported. GEODE-6706 talks about that. </description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.util.LogExporter.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.util.LogExporterFileIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-7-5 01:00:00" id="6831" opendate="2019-6-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Versioning of JAR Files doc is wrong</summary>
      <description>https://geode.apache.org/docs/guide/19/configuring/cluster_config/deploying_application_jars.html This document has such a paragraph:    Versioning of JAR Files When you deploy JAR files to a cluster or member group, the JAR file is modified to indicate version information in its name. Each JAR filename is prefixed with|vf.gf#|and contains a version number at the end of the filename. For example, if you deploy|MyClasses.jar|five times, the filename is displayed as|vf.gf#MyClasses.jar#5|when you list all deployed jars. but,in my environment, it is shown as follows: gfsh&gt;list deployed Member  |      JAR       | JAR Location ------- | -------------- | --------------------------------------------------- server1 | ra.jar         | /media/liyujue/data/geode/server1/ra.v1.jar server1 | mx4j-3.0.2.jar | /media/liyujue/data/geode/server1/mx4j-3.0.2.v1.jar server2 | ra.jar         | /media/liyujue/data/geode/server2/ra.v1.jar server2 | mx4j-3.0.2.jar | /media/liyujue/data/geode/server2/mx4j-3.0.2.v1.jarThe description here is incorrect.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.configuring.cluster.config.deploying.application.jars.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-6-13 01:00:00" id="6862" opendate="2019-6-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fail dunit suspect string check if log output contains {}</summary>
      <description>I propose adding `{}` to the dunit suspect string check. The presence of `{}` probably indicates a malformed Log4J log statement is missing one or more parameters.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.test.java.org.apache.geode.test.greplogs.LogConsumerTest.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.greplogs.Patterns.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.greplogs.LogConsumer.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-6-17 01:00:00" id="6870" opendate="2019-6-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unsuccessful creation of non-persisted OVERFLOW region with custom disk store</summary>
      <description>When ordering creation of non-persisted OVERFLOW region with custom disk store we get following error message: gfsh&gt;create disk-store --name=teststore --dir=/diskstoreMember | Status | Message------ | ------ | ----------------------------server | OK | Created disk store teststoreCluster configuration for group 'cluster' is updated.gfsh&gt;create region --name=testreg --type=REPLICATE_OVERFLOW --eviction-action=overflow-to-disk --eviction-entry-count=1000 --disk-store=teststoreOnly regions with persistence or overflow to disk can specify DiskStore. template-region region "null" is not persistent.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-10-17 01:00:00" id="6871" opendate="2019-6-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Disk free space info exposed via JMX</summary>
      <description>Given I need to scale down or scale up my servers based on usageWhen I setup my monitoring of JMX metrics through an MBeanThen I have the ability to see Disk Free PercentageAND Disk Free in Bytes</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.DiskStoreMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.DiskStoreMBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.DiskStoreMXBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreImpl.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.DiskStoreImplIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-6-19 01:00:00" id="6892" opendate="2019-6-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Default entryCount for newly created region to 0</summary>
      <description>Using the v2 API, if a newly created region is immediately listed, it may show the entryCount as -1. This is due MBeans being queried for this data and those beans may not be ready at the time of querying. This will be confusing to users.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.distributedTest.java.org.apache.geode.management.internal.rest.RegionManagementSecurityRestDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigManagerTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-7-19 01:00:00" id="6893" opendate="2019-6-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh version --full claims &amp;#39;HEAD&amp;#39; as branch, when built from Concourse</summary>
      <description>Concourse uses detached-head to lock a job to a given SHA. The way jgit determines branch, for embedding into the version file, needs us to be on-branch, but still at the SHA from the resource.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
      <file type="M">ci.scripts.execute.tests.sh</file>
      <file type="M">ci.scripts.execute.publish.sh</file>
      <file type="M">ci.scripts.execute.build.sh</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-8-25 01:00:00" id="6910" opendate="2019-6-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Aggregate Functions Docs</summary>
      <description>Add individual documentation for each aggregate function to the SELECT Statement page.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.getting.started.querying.quick.reference.html.md.erb</file>
      <file type="M">geode-docs.developing.query.select.the.select.statement.html.md.erb</file>
      <file type="M">geode-docs.developing.query.select.aggregates.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-7-25 01:00:00" id="6911" opendate="2019-6-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix SUM short description</summary>
      <description>Regarding the first paragraph in OQL Aggregate Functions:The aggregate functions MIN, MAX, AVG, AVG over a DISTINCT expression, SUM over a DISTINCT expression, COUNT, and COUNT over a DISTINCT expression are supported.It makes the user think that the SUM function can be only used in conjunction with the DISTINCT expression, which is false. It should be changed to.The aggregate functions MIN, MAX, AVG, AVG over a DISTINCT expression, SUM, SUM over a DISTINCT expression, COUNT, and COUNT over a DISTINCT expression are supported.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.select.aggregates.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-7-25 01:00:00" id="6912" opendate="2019-6-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix GROUP BY short description</summary>
      <description>Regarding the first paragraph in OQL Aggregate Functions:The GROUP BY extension is also supported where appropriate.Is might not be clear to the user when the GROUP BY aggregate function is appropriate or not, we need to describe this with more detail.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.select.aggregates.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2019-7-9 01:00:00" id="6949" opendate="2019-7-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Improve format of &lt;client-cache&gt; reference</summary>
      <description>The &lt;cache&gt; reference section has been prettied-up to remove table numbers and standardize subtopic headings for attributes. The &lt;client-cache&gt; section would benefit from receiving the same treatment.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.client-cache.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-10-19 01:00:00" id="6992" opendate="2019-7-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Deprecate allowUntrustedMethodInvocation System Property</summary>
      <description>Deprecate the system property gemfire.QueryService.allowUntrustedMethodInvocation.Register a warning message on the logs whenever the member detects that the property is being used so our users are aware of the deprecation.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.DefaultQueryService.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-11-19 01:00:00" id="6993" opendate="2019-7-19 00:00:00" resolution="Done">
    <buginformation>
      <summary>Documentation for alter query-service command</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.quick.ref.commands.by.area.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.gfsh.quick.reference.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.alter.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.cache.xml.2.gfsh.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.authorization.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.persist.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-7-23 01:00:00" id="7007" opendate="2019-7-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Alter gfsh put docs to state prohibition on PDX objects</summary>
      <description>You cannot use PDX objects with puts in gfsh.Example of a put command that will not work:gfsh&gt;put --region=/CashflowGroupMap --key="Closure Margin" --value="('cashFlowType':'Closure Margin', 'cashFlowTypeGroup':'CMAR','activeIndicator':'A', 'updateDateTime':'2013-06-06 05:37:00.0')" --value-class=org.apache.geode.pdx.internal.PdxInstanceImpl Add this restriction in the docs. A good place to add it is in the gfsh command reference page.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.put.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-7-23 01:00:00" id="7008" opendate="2019-7-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Function execution by ID does not properly handle bucket filters</summary>
      <description>Function execution by ID does not handle bucket filters consistent with function execution by object.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ServerRegionProxy.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.SingleHopGetAllPutAllDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerTestBase.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionSingleHopDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionSelectorNoSingleHopDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionNoSingleHopDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionFailoverDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerRegionFunctionExecutionDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.PRClientServerFunctionExecutionNoAckDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.FunctionServiceStatsDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.execute.ClientServerFunctionExecutionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-7-24 01:00:00" id="7011" opendate="2019-7-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove docs mention of APP_COLLECTION_LIMIT</summary>
      <description>We removed the description of APP_COLLECTION_LIMIT from the reference manual a couple of years ago, but it looks like two places in the manual still refer to it:Basic Shell Features and Command-Line Usage—It appears in a code block showing an example of results from using the hint data command. This should be updated to reflect the current hint data output. (Or, if that’s still the current output, engineers should fix the output and then update the docs.)set variable—It appears in a block of example commands and their example output. We should be able to replace this with a different example command. Also improve this page while putting in this change; there are minor issues with capitalization, the labelling of a table, and the wording of the --name option. </description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.getting.started.gfsh.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.set.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-7-30 01:00:00" id="7027" opendate="2019-7-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>build-google-windows-geode-builder frequently fails to build because of rsync location instability</summary>
      <description>The build-google-windows-geode-builder job frequently fails because of instability surrounding fetching rsync via chocolatey. Get rsync a different way to resolve this.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-windows-geode-builder.windows-packer.json</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-7-30 01:00:00" id="7028" opendate="2019-7-30 00:00:00" resolution="Abandoned">
    <buginformation>
      <summary>PR check states "pending" and "in progress" mean the same thing, please standardize</summary>
      <description>the new LGTM PR checks use "in progress" while our existing checks use "pending". Both mean the same thing, but make it tricky to make sense of GitHub's summary e.g. "1 in progress, 1 pending, 2 neutral, and 7 successful checks"If we change ours to also use "in progress" then the above status would be a little easier to grok: "2 in progress, 2 neutral, and 7 successful checks"</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-12-8 01:00:00" id="7063" opendate="2019-8-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add AssertJ assertions for Micrometer meters</summary>
      <description>Add basic AssertJ assertions for currently used Micrometer meter types and features. </description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-9-8 01:00:00" id="7064" opendate="2019-8-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Increase timeout from 10 to 20 minutes on UnitTestX execute_test task in Concourse</summary>
      <description>We have seen several timeouts in the execute_test task in UnitTestX jobs in the CI which were found to be resolved by experimenting with increasing the timeout.  The community agreed we should increase the timeout from 10 to 20 minutes to handle intermittent degradation of the performance of this task, due to infrastructure issues or otherwise.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-12-19 01:00:00" id="7102" opendate="2019-8-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Convert tests that use fixed key/trust stores to use CertificateBuilder</summary>
      <description>We now have the ability to create CAs and signed certificates in tests with a simple java api. Convert all tests that reference key and truststore files to use this java api - CertificateBuilder and CertStores.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.distributedTest.resources.org.apache.geode.management.internal.cli.commands.multiKey.TrustStore.jks</file>
      <file type="M">geode-web.src.distributedTest.resources.org.apache.geode.management.internal.cli.commands.multiKey.KeyStore.jks</file>
      <file type="M">geode-web.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ConnectCommandWithSSLMultiKeyTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-12-19 01:00:00" id="7104" opendate="2019-8-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure compatibility with Spring 5.x</summary>
      <description>Prior testing with Spring 5.x highlighted one minor issue with Pulse authentication. The fix is backwards compatible with Spring 4.x.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.main.webapp.WEB-INF.spring-security.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-9-19 01:00:00" id="7105" opendate="2019-8-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Function excution doc improvement.</summary>
      <description>After GEODE-6677 was checked into develop, function execution when HA is true and default timeout is set has some behavior changes. Before : the default for retries was -1 and it function execution was retried infinitely. After : the default behavior is now that the function will be retried on every server only once and if it fails on every one of them, then an exception will be returned to the user.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.function.exec.how.function.execution.works.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-2-1 01:00:00" id="73" opendate="2015-7-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove old rolling-upgrade methods and code</summary>
      <description>Geode supports rolling upgrade between major and minor versions. This is a really cool feature that should be kept up, but there are a lot of serialization methods that are checking for old versions of GemFire in the code that ought to be removed. These have the formtoDataPre_GFE_major_minor_patch_build()fromDataPre_GFE_major_minor_patch_build()These methods are no longer needed since rolling upgrade isn't going to be possible from old GemFire processes to Geode. Also, old GemFire clients won't be supported either due to the package renaming that needs to take place.Aside from these methods there are other places that are checking to see what version is attached to a DataInput or DataOutput using InternalDataSerializer.getVersionForDataStream&amp;#91;OrNull&amp;#93;, or are using the getVersionObject() method in InternalDistributedMember to make decisions about how to deal with old GemFire members. Care needs to be taken here since some uses of these methods are to set up proper serialization in HeapDataOutputStreams.</description>
      <version>1.0.0-incubating</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.RemotePutAllMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.RemoteOperationMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.QueuedOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.PutAllPRMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.PRTombstoneMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.IndexCreationMsg.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.FetchKeysMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.FetchEntriesMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.InitialImageOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedTombstoneOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedRemoveAllOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedPutAllOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedClearOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedCacheOperation.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.control.ResourceAdvisor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.admin.remote.RemoteRegionAttributes.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.admin.remote.RemoteBridgeServer.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.StartupResponseMessage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.StartupMessage.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-2-5 01:00:00" id="730" opendate="2016-1-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Optimize single filter join queries</summary>
      <description>Currently single filter join queries create a lot of garbage and do the join before pruning from the filter. We can optimize this for specific cases to prune prior to joining and only join values that have already passed the filters.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.QueryUtils.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.index.IndexManager.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.GroupJunction.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.CompiledSelect.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.CompiledJunction.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.CompiledComparison.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-10-16 01:00:00" id="7308" opendate="2019-10-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade Jetty from 9.4.12.v20180830 to 9.4.21.v20190926</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-http-service.src.main.java.org.apache.geode.internal.cache.InternalHttpService.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.session.tests.GenericAppServerInstall.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-1-16 01:00:00" id="7309" opendate="2019-10-16 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Upgrade Lucene from 6.6.2 to 8.2.0</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.upgradeTest.java.org.apache.geode.cache.lucene.RollingUpgradeReindexShouldBeSuccessfulWhenAllServersRollToCurrentVersion.java</file>
      <file type="M">geode-lucene.src.upgradeTest.java.org.apache.geode.cache.lucene.RollingUpgradeQueryReturnsCorrectResultsAfterClientAndServersAreRolledOverAllBucketsCreated.java</file>
      <file type="M">geode-lucene.src.upgradeTest.java.org.apache.geode.cache.lucene.RollingUpgradeQueryReturnsCorrectResultsAfterClientAndServersAreRolledOver.java</file>
      <file type="M">geode-lucene.src.upgradeTest.java.org.apache.geode.cache.lucene.RollingUpgradeQueryReturnsCorrectResultAfterTwoLocatorsWithTwoServersAreRolled.java</file>
      <file type="M">geode-lucene.src.upgradeTest.java.org.apache.geode.cache.lucene.LuceneSearchWithRollingUpgradeTestBase.java</file>
      <file type="M">geode-lucene.src.upgradeTest.java.org.apache.geode.cache.lucene.LuceneSearchWithRollingUpgradeDUnit.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneServiceImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.IndexRepositoryFactoryTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImpl.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexStats.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneEventListener.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.IndexRepositoryFactory.java</file>
      <file type="M">geode-lucene.src.integrationTest.java.org.apache.geode.cache.lucene.internal.repository.IndexRepositoryImplJUnitTest.java</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-docs.tools.modules.lucene.integration.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCacheForClientAccess.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-10-16 01:00:00" id="7312" opendate="2019-10-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>modify the ThreadMonitor to print the stack of a blocking thread</summary>
      <description>Our thread monitor does a good job of telling us about stuck threads. If a thread is stuck trying to synchronize on an object the monitor even tells us the name of that thread. We should enhance this to give us a stack dump of the thread that owns the lock. Sometimes this is a thread that's not monitored by ThreadMonitor so we don't know what it's doing unless someone takes a thread dump of the whole process.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.monitoring.executor.AbstractExecutorGroupJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.monitoring.executor.AbstractExecutor.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-4-17 01:00:00" id="8000" opendate="2020-4-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove unnecessary mock from Redis Executor Unit tests</summary>
      <description>Stopped mocking the Command class in the Redis *Executor Unit tests.The Command class just holds data, and doesn't encapsulate any complex behavior. Mocking its members makes the code more difficult to change and the tests more brittle.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StrlenExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringSetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringMSetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringMGetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringGetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.IncrExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.GetSetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.GetRangeExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.DelExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.set.SetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.PExpireAtExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.ExpireExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.ExpireAtExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.MSetExecutor.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-17 01:00:00" id="8002" opendate="2020-4-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor: Extract class for concurrency testing</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.StringsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.HashesIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ExistsIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-22 01:00:00" id="8010" opendate="2020-4-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis is too verbose in its logging</summary>
      <description>Every Redis command executed logs an info message containing "Executing Redis command:". This is too verbose for info level. It will also impact performance. Instead of "info" this message should be "debug".</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ExecutionHandlerContext.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-23 01:00:00" id="8013" opendate="2020-4-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix logging documentation</summary>
      <description>Link to the conversation on dev list: https://markmail.org/thread/a6gobaphywmkm7gq</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-logging.src.main.java.org.apache.geode.logging.internal.log4j.api.FastLogger.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.change.html.md.erb</file>
      <file type="M">geode-docs.managing.logging.configuring.log4j2.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-7-7 01:00:00" id="8341" opendate="2020-7-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Correct typo in gfsh export docs</summary>
      <description>There's a single character typo in the docs.  In the command reference page for gfsh export logsthe name of the ZIP file is of the form exportedLogs_xxx.zip.  The docs use a lowercase 'l', and it needs to be changed to an uppercase 'L'.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.export.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-3-8 01:00:00" id="8343" opendate="2020-7-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix "Function execution" main doc page</summary>
      <description>https://geode.apache.org/docs/guide/113/developing/function_exec/chapter_overview.html Remove the link from the first sentence before the list. Subchapters are shown as part of the list of use cases solved by function execution.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.function.exec.chapter.overview.html.md.erb</file>
    </fixedFiles>
  </bug>
</bugrepository>