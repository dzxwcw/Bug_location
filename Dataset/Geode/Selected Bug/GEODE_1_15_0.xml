<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="GEODE">
  <bug fixdate="2022-2-31 01:00:00" id="10002" opendate="2022-1-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove from documentation obligation for parallel gateway sender to share disk store with region</summary>
      <description>As a result of GEODE-7997, it was documented that "the persisted data from a parallel gateway sender must go to the same disk store as used by the region, because parallel gateway sender queues must be colocated with their regionsto operate correctly.".As stated in the Activity in the original ticket by Dan Smith, "The only issue with separating the data into two separate disk stores is that manually deleting the files for just one of the disk stores could cause a hang on startup looking for the missing disk store. We recommend keeping all of the colocated data together."Given that the current statement in the documentation adds a non compatible change to previous versions and also that the given restriction prevents from the independent management of the disk used by the region and by the parallel gateway sender queues it is proposed to change the statement from an obligation to a recommendation giving the reasons for it or completely removing the obligation.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.topologies.and.comm.topology.concepts.multisite.overview.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-docs.managing.disk.storage.using.disk.stores.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-2-5 01:00:00" id="10019" opendate="2022-2-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add jira id to release-related commits</summary>
      <description>problem: commits generated during release process fail to adhere to Geode commit-message standards: they do not include a Jira ticket. solution: add a required -j &lt;ticket&gt; parameter to all release scripts</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.set.versions.sh</file>
      <file type="M">dev-tools.release.set.copyright.sh</file>
      <file type="M">dev-tools.release.promote.rc.sh</file>
      <file type="M">dev-tools.release.prepare.rc.sh</file>
      <file type="M">dev-tools.release.create.support.branches.sh</file>
      <file type="M">dev-tools.release.commit.rc.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-2-8 01:00:00" id="10021" opendate="2022-2-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Clean up RemoteTrasactionDUnitTest</summary>
      <description>I have been working on GEODE-9929 and the failing DUnitTest has a lot of errors. I want to clean up some of the errors where I can use find and replace, as well as a couple of changes to make it easier for the next person who works on GEODE-9929.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.RemoteTransactionDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.ClientServerTransactionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-4-26 01:00:00" id="1003" opendate="2016-2-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add dunit test to verify cache de-serialization failure in p2p layer.</summary>
      <description>Add dunit test to verify de-serialization failure in p2p layer. peer should receive replyException.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.DistributedMulticastRegionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-2-9 01:00:00" id="10034" opendate="2022-2-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Organize Geode For Redis Stats By Data Structure</summary>
      <description>The Geode for Redis Stats should be organized by Data Structure.  For the stats not associated with a data structure, the stats should continue to be exposed under"GeodeForRedisStats". Acceptance CriteriaAll stats, associated with a command specific to a data structure, should be exposed under that data structure (e.g. Strings, Sets, SortedSets, Hashes, Lists). All tests should pass. </description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.statistics.GeodeRedisStats.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-3-26 01:00:00" id="1004" opendate="2016-2-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Request heartbeat while doing tcp check</summary>
      <description>Request udp heartbeat message while doing tcp check.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.fd.GMSHealthMonitorJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.fd.GMSHealthMonitor.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-3-26 01:00:00" id="1005" opendate="2016-2-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>when multiple locators are started same time, then they might endup creating two distributed system</summary>
      <description>when multiple locators are started same time, then they might endup creating two distributed system.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-2-16 01:00:00" id="10057" opendate="2022-2-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis documentation has passive and active expiration descriptions reversed</summary>
      <description>The geode-for-redis documentation describes the difference in behaviour for active expiration and passive expiration, but the way these terms are used is flipped from how they're typically used in documentation about open source Redis: https://redis.io/commands/expire#how-redis-expires-keys. The docs should be updated to match the usage in open source Redis documentation.</description>
      <version>1.15.0</version>
      <fixedVersion>1.14.3,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.geode.apis.compatible.with.redis.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.geode.for.redis.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-2-20 01:00:00" id="10072" opendate="2022-2-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>api-check does not link to the japicmp report anymore</summary>
      <description>it seems that CI still expects the report in geode-assembly, but the build now puts it in geode-server-all</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.archive.results.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-3-22 01:00:00" id="10075" opendate="2022-2-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix support for jacoco code coverage in Geode build</summary>
      <description>We haven't been maintaining this gradle build support, but it is useful to beable to get code coverage from distributed test runs, eg../gradlew geode-core:distributedTest -PcodeCoverage --tests XXX geode-core:jacocoDistributedTestReportIf you pass -PcodeCoverage it's currently failing.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.code-analysis.gradle</file>
      <file type="M">buildSrc.src.main.java.org.apache.geode.gradle.testing.isolation.WorkingDirectoryIsolator.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2022-3-3 01:00:00" id="10099" opendate="2022-3-3 00:00:00" resolution="Resolved">
    <buginformation>
      <summary>release 1.12.9</summary>
      <description>Release to incorporate GEODE-10093.</description>
      <version>None</version>
      <fixedVersion>1.12.10,1.13.9,1.14.5,1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-7-10 01:00:00" id="101" opendate="2015-7-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Resolve Build Issues</summary>
      <description>The current code build has dependency on a Pivotal internal repository. This dependency has to be removed.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-spark-connector.project.Settings.scala</file>
      <file type="M">gemfire-spark-connector.project.Dependencies.scala</file>
      <file type="M">gemfire-spark-connector.doc.1.building.md</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-3-3 01:00:00" id="10100" opendate="2022-3-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>release 1.13.8</summary>
      <description>Release to incorporate  GEODE-10093</description>
      <version>None</version>
      <fixedVersion>1.13.9,1.14.5,1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-3-3 01:00:00" id="10101" opendate="2022-3-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>release 1.14.4</summary>
      <description>Release to incorporate GEODE-10093</description>
      <version>None</version>
      <fixedVersion>1.14.5,1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-3-8 01:00:00" id="10111" opendate="2022-3-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add COMMITWATCHERS for self-service opt-in/opt-out of automated commit message review</summary>
      <description>previously opt-in and unsubscribe required a dev list email, and this led to complaintsthis self-serve mechanism achieves the same goal of a public record of opt-in requests, without adding noise to the dev list</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CODEWATCHERS</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-4-15 01:00:00" id="10126" opendate="2022-3-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor Configuration To Use System Properties</summary>
      <description>The properties currently being used by the Redis module are defined in Geode core.  These properties need to be removed from Geode core and refactored to system properties. Validators must also be added for the system properties to ensure that users provide correct values.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.SystemPropertyBasedRedisConfiguration.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.RedisConfiguration.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.redis.TestRedisConfiguration.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.services.RegionProvider.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.netty.NettyRedisServer.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisService.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.connection.AuthIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.session.SessionsAndCrashesDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.auth.AuthWhileServersRestartDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.string.MSetNXDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.string.MSetDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZRemRangeByRankDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZRemDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.list.RPushDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.key.RenameDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.hash.HashesAndCrashesDUnitTest.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.test.dunit.rules.RedisClusterStartupRule.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.redis.GeodeRedisServerRule.java</file>
      <file type="M">geode-for-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.commands.executor.GeodeRedisServerStartupUsingGfshAcceptanceTest.java</file>
      <file type="M">geode-for-redis.src.acceptanceTest.java.org.apache.geode.redis.GeodeRedisServerStartupAcceptanceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionConfigImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-3-18 01:00:00" id="10137" opendate="2022-3-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>allow PRs to opt-in to JDK17 checks</summary>
      <description>similar to how jdk8 or windows labels can be added to PRs</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
      <file type="M">ci.images.google-windows-geode-builder.packer.json</file>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-3-18 01:00:00" id="10138" opendate="2022-3-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Versioning Support for LPUSH</summary>
      <description>Add versioning support for the LPUSH command.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisSet.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.delta.DeltaType.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.delta.AddByteArrays.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-3-18 01:00:00" id="10139" opendate="2022-3-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>curl should always use -f</summary>
      <description>curl commands are used throughout our CI and release scriptswithout -f, curl will not fail even when a bad response code such as 404 is returned</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-management.src.test.script.update-management-wiki.sh</file>
      <file type="M">geode-assembly.src.src.dist.gradlew</file>
      <file type="M">dev-tools.release.promote.rc.sh</file>
      <file type="M">dev-tools.release.license.review.sh</file>
      <file type="M">dev-tools.release.deploy.rc.pipeline.sh</file>
      <file type="M">dev-tools.release.commit.rc.sh</file>
      <file type="M">dev-tools.docker.base.Dockerfile</file>
      <file type="M">ci.pipelines.pull-request.deploy.pr.pipeline.sh</file>
      <file type="M">ci.pipelines.meta.deploy.meta.sh</file>
      <file type="M">ci.pipelines.mass-test-run.jinja.template.yml</file>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
      <file type="M">ci.docker.Dockerfile</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-3-21 01:00:00" id="10145" opendate="2022-3-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI alpine tools image is compatibility issue</summary>
      <description>Compatibility problem between alpine, cloud-sdk (google) and winrm-cli. Re-organize the layers in the Dockerfile to straighten this out.</description>
      <version>1.15.0</version>
      <fixedVersion>1.12.10,1.13.9,1.14.5,1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.images.jinja.template.yml</file>
      <file type="M">ci.images.alpine-tools.Dockerfile</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-3-22 01:00:00" id="10149" opendate="2022-3-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>don&amp;#39;t reset radish benchmark baseline on a patch release</summary>
      <description>radish benchmarks use a custom branch/tagon a new minor, the release scripts should reset that to the new minor releasehowever, the scripts are incorrectly resetting it on every patch, oops</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.promote.rc.sh</file>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-3-24 01:00:00" id="10162" opendate="2022-3-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>A retried operation may sometimes not set valid tag</summary>
      <description>In geode, gii is performed when a bucket is created. However, version tags are not sent to the gii receiver. In some cases, a retried event can come to the server just created bucket. In this case, we still need to set the valid version tag, so this operation can be distributed to other servers/peers.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DistributedRegionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedRegion.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-3-27 01:00:00" id="1017" opendate="2016-2-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>change off-heap memory from compaction to defragmentation</summary>
      <description>Replace references to off-heap space compaction with defragmentation, to better convey the intent behind the operation. https://en.wikibooks.org/wiki/Memory_Management/Memory_Compacting defines compaction: ". . .the process of moving allocated objects together, and leaving empty space together." We do not move allocated chunks, so implying we do is misleading. At the very least, all outward facing statistics and any other UI should be renamed to refer to defragmentation and defragment instead of compaction and compact.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.offheap.OffHeapStorageJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.offheap.OffHeapRegionBase.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.offheap.NullOffHeapMemoryStats.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.offheap.MemoryAllocatorJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.offheap.MemoryAllocatorFillPatternJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.offheap.FreeListManagerTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.beans.MemberMBeanBridge.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.offheap.OffHeapStorage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.offheap.OffHeapMemoryStats.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.offheap.MemoryAllocatorImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.offheap.FreeListManager.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.offheap.Fragment.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-4-30 01:00:00" id="10198" opendate="2022-3-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>LINSERT is case-sensitive for arguments</summary>
      <description>Qualifier arguments for LINSERT (e.g. BEFORE, AFTER) are only recognized if they are uppercased. Native Redis is not case-sensitive with respect to these arguments.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.executor.list.LInsertExecutor.java</file>
      <file type="M">geode-for-redis.src.acceptanceTest.resources.0001-configure-redis-tests.patch</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-7-10 01:00:00" id="102" opendate="2015-7-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add stats for bytesOverflowedOnDisk and local-max-memory</summary>
      <description>Rebalancing uses counters that track how many bytes are overflowed on disk. But there is no corresponding gemfire statistic.Rebalancing also uses local-max-memory. It would be convenient to report this in the stats as well.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.PartitionedRegionStats.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.PartitionedRegion.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DiskRegionStats.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DiskRegion.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.DiskEntry.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-3-30 01:00:00" id="10201" opendate="2022-3-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump spring to recommended version</summary>
      <description>spring 5.3.18 is preferred. currently we have a mix of 5.2 and 5.3 on different support branches, so 5.2.20 is probably a better choice for branches still on spring 5.2</description>
      <version>None</version>
      <fixedVersion>1.12.10,1.13.9,1.14.5,1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-server-all.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.gfsh.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-29 01:00:00" id="1021" opendate="2016-2-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse does not display region name with hyphens</summary>
      <description>Customer has some regions with hyphen in the name. For ex: generic-key-value, pet-region Pulse does not display members of those regions.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.main.java.com.vmware.gemfire.tools.pulse.internal.service.ClusterSelectedRegionsMemberService.java</file>
      <file type="M">geode-pulse.src.main.java.com.vmware.gemfire.tools.pulse.internal.service.ClusterSelectedRegionService.java</file>
      <file type="M">geode-pulse.src.main.java.com.vmware.gemfire.tools.pulse.internal.data.JMXDataUpdater.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-4-1 01:00:00" id="10211" opendate="2022-4-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>A retried operation does not set possible duplicate in the event if retried on an accessor</summary>
      <description>In geode, or persistent region, it is possible that all persistent copies went offline. So possible duplicate should be set in the event, even though no members has the event in the event tracker.Currently, the code handling this will miss the setting if the retry occurs on an accessor (localMaxMemory set to 0) case.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.Put70Test.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.Put70.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-4-2 01:00:00" id="10213" opendate="2022-4-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove kirklund from codeowner areas of less knowledge</summary>
      <description>Remove kirklund from codeowner areas of less knowledge</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CODEOWNERS</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-9-4 01:00:00" id="10215" opendate="2022-4-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>WAN replication not working after re-creating the partitioned region</summary>
      <description>Steps to reproduce the issue:Start multi-site with at least 3 servers on each site. If there are less than three servers then issue will not reproduce.Configuration site 1:create disk-store --name=queue_disk_store --dir=ds2create gateway-sender -id="remote_site_2" --parallel="true" --remote-distributed-system-id="1"  -enable-persistence=true --disk-store-name=queue_disk_storecreate disk-store --name=data_disk_store --dir=ds1create region --name=example-region --type=PARTITION_PERSISTENT --gateway-sender-id="remote_site_2" --disk-store=data_disk_store --total-num-buckets=1103 --redundant-copies=1 --enable-synchronous-disk=false#Configure the remote site 2 with the region and the gateway-receiver #Run some traffic so that all buckets are created and data is replicated to the other sitealter region --name=/example-region --gateway-sender-id=""destroy region --name=/example-regioncreate region --name=example-region --type=PARTITION_PERSISTENT --gateway-sender-id="remote_site_2" --disk-store=data_disk_store --total-num-buckets=1103 --redundant-copies=1 --enable-synchronous-disk=false#run traffic to see that some data is not replicated to the remote site 2</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.destroy.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2022-1-19 01:00:00" id="10249" opendate="2022-4-19 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Add stats for BufferPoolMXBean</summary>
      <description>Java provides information on buffer pools used in the JVM via BufferPoolMXBean. Add the output of these to the basic set of platform stats to diagnose buffer pool issues.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.stats50.BufferPoolStatsTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.stats50.BufferPoolStats.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.stats50.BufferPoolStatsIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.stats50.VMStats50.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2022-5-27 01:00:00" id="10263" opendate="2022-4-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>open and export jdk packages on jdk17 automatically for server and locator that geode features need</summary>
      <description>Geode has a number of features that require a specific jdk package to be opened or exported. These should all be done automatically when geode launches a JVM for a server or a locator.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.MemberJvmOptionsTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.MemberJvmOptions.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-5-2 01:00:00" id="10274" opendate="2022-5-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>re-enable GCP ops-agent monitoring in CI images</summary>
      <description>The stackdriver agent installation has been silently not sending metrics for a while. Update the Packer CI scripts to use the latest from GCP.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-windows-geode-builder.packer.json</file>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-5-3 01:00:00" id="10275" opendate="2022-5-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump spring to recommended version</summary>
      <description>latest (5.3.20 or 5.2.22) is recommended</description>
      <version>None</version>
      <fixedVersion>1.12.10,1.14.5,1.15.0,1.16.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build-tools.geode-dependency-management.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">geode-server-all.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.gfsh.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-5-1 01:00:00" id="1028" opendate="2016-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode website - broken link from releases page to project docs</summary>
      <description>The page http://geode.incubator.apache.org/releases/contains a link called "Project Docs" that points to a nonexistent page:http://geode.incubator.apache.org/docs/getting-up-and-running-locally/</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.releases.index.html</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-5-6 01:00:00" id="10282" opendate="2022-5-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Migrate from springfox to springdoc</summary>
      <description>Replace springfox with springdoc because springfox is no longer active.</description>
      <version>None</version>
      <fixedVersion>1.15.0,1.16.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.webapp.WEB-INF.management-servlet.xml</file>
      <file type="M">geode-web-management.src.main.resources.swagger-management.properties</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.swagger.SwaggerConfig.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.security.RestSecurityConfiguration.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.RestoreRedundancyOperationController.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.RegionManagementController.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.RebalanceOperationController.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.PingManagementController.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.PdxManagementController.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.MemberManagementController.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.GatewayManagementController.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.DocLinksController.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.DiskStoreController.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.DeploymentManagementController.java</file>
      <file type="M">geode-web-management.build.gradle</file>
      <file type="M">geode-web-api.src.main.webapp.WEB-INF.geode-servlet.xml</file>
      <file type="M">geode-web-api.src.main.resources.swagger.properties</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.swagger.config.SwaggerConfig.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.RestSecurityConfiguration.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.QueryAccessController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.PdxBasedCrudController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.FunctionAccessController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.CommonCrudController.java</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-server-all.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-server-all.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-server-all.build.gradle</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.Deployment.java</file>
      <file type="M">geode-management.build.gradle</file>
      <file type="M">geode-gfsh.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-gfsh.build.gradle</file>
      <file type="M">geode-deployment.geode-deployment-legacy.build.gradle</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.resources.gfsh.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.expected.jars.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.rest.internal.web.DevRestSwaggerVerificationIntegrationTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.rest.SwaggerManagementVerificationIntegrationTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.JQFilterVerificationDUnitTest.java</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">dev-tools.dependencies.bump.sh</file>
      <file type="M">build-tools.geode-dependency-management.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-5-6 01:00:00" id="10284" opendate="2022-5-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add partition-listener option to gfsh create region command</summary>
      <description>This adds a --partition-listener option to the create region gfsh command. I'm not sure why this was not added in the first place since all the plumbing to support it already seems to exist.</description>
      <version>None</version>
      <fixedVersion>1.15.0,1.16.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-gfsh.src.integrationTest.java.org.apache.geode.management.internal.cli.GfshParserAutoCompletionIntegrationTest.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandDUnitTest.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.i18n.CliStrings.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-5-9 01:00:00" id="10289" opendate="2022-5-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add an argument file that opens all JDK packages to all unnamed modules</summary>
      <description>Certain Geode functionality requires user-defined objects to be accessible for reflection. It can be difficult for users to identify non-opened JDK packages that are included in their objects.Add an argument file that opens all JDK packages to all unnamed modules. Adding this argument file when launching a client, locator, or server on JDK 17 essentially mimics the --illegal-access=permit option from JDK 11 (at least for JDK packages).The supplied argument file will open all packages that come with the Linux version of OpenJDK.</description>
      <version>1.15.0,1.16.0</version>
      <fixedVersion>1.15.0,1.16.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-5-10 01:00:00" id="10290" opendate="2022-5-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>GII requester should remove departed members</summary>
      <description>In non-persistent but concurrent-check enabled case, members departed will be marked. They should be removed from RVV during GII to prevent memberToVersion in RVV grows bigger and bigger. However, we only removed them from GII provider, not in GII requester. The good opportunity to remove them in GII requester is when calculating unfinished operations.</description>
      <version>None</version>
      <fixedVersion>1.12.10,1.14.5,1.15.0,1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.InitialImageOperationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.versions.RegionVersionVector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.versions.RegionVersionHolder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InitialImageOperation.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-5-11 01:00:00" id="10297" opendate="2022-5-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>SSL protocol ordering can result in loss of newer protocol support.</summary>
      <description>If ssl-protocols is listed with a older protocol version ahead of a newer the SSLContext used will support at most that weaker protocol.For example ssl-protocols=TLSV1.2,TLSv1.3,TLSv1.1 will use the TLSv1.2 SSLContext, which will not support, and silently ignore, the TLSv1.3 configuration. The effective enabled protocols list will be TLSV1.2,TLSv1.1.</description>
      <version>1.12.9,1.13.8,1.14.4,1.15.0,1.16.0</version>
      <fixedVersion>1.15.0,1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SSLUtilTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLUtil.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-5-12 01:00:00" id="10302" opendate="2022-5-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Increase upgrade test timeouts</summary>
      <description>Upgrade test durations are approaching the 3h limit set by CI.An imminent PR changes most upgrade tests to increase the number of configurations to upgrade from. These changes push the `upgradeTest` task over the 3h limit.</description>
      <version>1.15.0,1.16.0</version>
      <fixedVersion>1.15.0,1.16.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-5-18 01:00:00" id="10320" opendate="2022-5-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump micrometer to 1.9.0</summary>
      <description>To remain Spring-friendly and JDK17-optimal, it will help if Geode 1.15.0 can ship with micrometer 1.9.0 (rather than 1.8.5)</description>
      <version>None</version>
      <fixedVersion>1.15.0,1.16.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-server-all.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.gfsh.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">build-tools.geode-dependency-management.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-6-2 01:00:00" id="10355" opendate="2022-6-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump spring-security to recommended version</summary>
      <description>latest (5.5.8 or 5.6.5) is recommended</description>
      <version>None</version>
      <fixedVersion>1.12.10,1.14.5,1.15.0,1.16.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build-tools.geode-dependency-management.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-6-7 01:00:00" id="10365" opendate="2022-6-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add missing configuration properties to table</summary>
      <description>Add ssl-keystore-type, ssl-truststore-type to appropriate table in https://geode.apache.org/docs/guide/112/managing/security/implementing_ssl.html</description>
      <version>1.12.9,1.14.5,1.15.0</version>
      <fixedVersion>1.12.10,1.14.5,1.15.0,1.16.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.security.implementing.ssl.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-6-10 01:00:00" id="10375" opendate="2022-6-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>REST management discovery endpoint reports incorrect version</summary>
      <description>prior to GEODE-10312, metadata about the management API url (obtained from /management) correctly reported /v1/api-docs)now that we have switched from swagger to springdoc it should now report /v3/api-docssee hardcoded value here</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0,1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.DocLinksController.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.DocLinksControllerRestIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-6-15 01:00:00" id="10380" opendate="2022-6-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>When dispatcher socket buffer is full, the ReAuth won&amp;#39;t get sent to the client causing a deadlock</summary>
      <description>message dispatcher trying to send a reAuth message to the client, but not able to because the socket buffer is full. client updater is blocked waiting for a regionEntry lock when doing a remove operation. the regionEntry lock is held by a client operation doing destroy on that same key the client operation is waiting for the re_auth op to finish. the re_auth command on the server is blocked by the #1 holding the lock</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0,1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.CacheClientProxyTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientProxy.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-6-16 01:00:00" id="10386" opendate="2022-6-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document JDK 17 for 1.15 release</summary>
      <description>Document JDK 17 for 1.5 release</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0,1.15.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.getting.started.system.requirements.host.machine.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-6-16 01:00:00" id="10389" opendate="2022-6-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document upgrade to Geode 1.15 with SSL protocol workaround</summary>
      <description>Document migration steps to mitigate protocol setting mismatch (GEODE-9991) when upgrading to v1.5</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0,1.15.1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.getting.started.upgrade.upgrade.overview.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-6-16 01:00:00" id="10390" opendate="2022-6-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User guide: update authentication expiry instructions</summary>
      <description>In "Implementing Authentication" indicate that "A SecurityManager implementation that supports reauthentication using expiring credentials must also support non-expiring credentials for cluster members”In "Implementing Authentication Expiry", indicate that "Authentication expiry is supported only with client connections."</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0,1.15.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.security.implementing.authentication.expiry.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.authentication.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-2 01:00:00" id="1040" opendate="2016-3-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a DUnit for JTA rollback</summary>
      <description>Current ClientServer transaction test does not test JTA rollback.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.ClientServerTransactionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-9-1 01:00:00" id="10415" opendate="2022-9-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CVEs detected in latest geode</summary>
      <description>We are detecting the following CVEs with geode&#128165; High or critical vulnerabilities: 21The spring-core is likely Not Affected. But we would like to know about the rest of these listed CVEs. Any info is appreciated NAME                            INSTALLED              FIXED-IN     TYPE          VULNERABILITY        SEVERITYjetty-security                  9.4.46.v20220331                    java-archive  CVE-2022-2048        Highjetty-server                    9.4.46.v20220331                    java-archive  CVE-2022-2048        Highjetty-servlet                   9.4.46.v20220331                    java-archive  CVE-2022-2048        Highjetty-util                      9.4.46.v20220331                    java-archive  CVE-2022-2048        Highjetty-util-ajax                 9.4.46.v20220331                    java-archive  CVE-2022-2048        Highjetty-webapp                    9.4.46.v20220331                    java-archive  CVE-2022-2048        Highjetty-xml                       9.4.46.v20220331                    java-archive  CVE-2022-2048        Highjgroups                         3.6.14.Final           4.0.0        java-archive  GHSA-rc7h-x6cq-988q  Criticalshiro-cache                     1.9.0                               java-archive  CVE-2022-32532       Criticalshiro-config-core               1.9.0                               java-archive  CVE-2022-32532       Criticalshiro-config-ogdl               1.9.0                               java-archive  CVE-2022-32532       Criticalshiro-core                      1.9.0                  1.9.1        java-archive  GHSA-4cf5-xmhp-3xj7  Criticalshiro-core                      1.9.0                               java-archive  CVE-2022-32532       Criticalshiro-crypto-cipher             1.9.0                               java-archive  CVE-2022-32532       Criticalshiro-crypto-core               1.9.0                               java-archive  CVE-2022-32532       Criticalshiro-crypto-hash               1.9.0                               java-archive  CVE-2022-32532       Criticalshiro-event                     1.9.0                               java-archive  CVE-2022-32532       Criticalshiro-lang                      1.9.0                               java-archive  CVE-2022-32532       Criticalspring-core                     5.3.20                              java-archive  CVE-2016-1000027     Criticaljetty-http                      9.4.46.v20220331                    java-archive  CVE-2022-2048        Highjetty-io                        9.4.46.v20220331                    java-archive  CVE-2022-2048        High</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.1,1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-server-all.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.gfsh.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.session.tests.GenericAppServerInstall.java</file>
      <file type="M">build-tools.geode-dependency-management.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-9-6 01:00:00" id="10417" opendate="2022-9-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix NullPointerException when getting events from the gw sender queue to complete transactions</summary>
      <description>When the WAN group-transaction-events feature is enabled in a parallel gateway sender, it is possible to get a NullPointerException when retrieving events from the queue to complete a transaction if the event in the queue is null.If this situation is reached then the gateway sender dispatcher will not dispatch queue events anymore and therefore the WAN replication will not progress.</description>
      <version>1.13.8,1.14.4,1.15.0</version>
      <fixedVersion>1.15.1,1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderQueueJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BucketRegionQueueJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRegionQueue.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-9-12 01:00:00" id="10420" opendate="2022-9-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Handle WAN event when interrupted</summary>
      <description>It is possible that an event of which a gateway sender is to be notified is lost if during the process the thread is interrupted. </description>
      <version>None</version>
      <fixedVersion>1.15.1,1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.AbstractGatewaySenderTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.EntryEventImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-9-14 01:00:00" id="10422" opendate="2022-9-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add doc for using parallel recovery disk store</summary>
      <description>There are missing part for parallel recovery of disk stores.It isn't specified that in case the user use the same disk store for the pdx and the region, disk store recovery will go in the sequential mode. So in case you want to use parallel disk store recovery it should be different disk stores for the pdx and the disk store. Otherwise, it will go sequentially, despite of default behavior to run in the parallel mode.</description>
      <version>1.14.0,1.15.0</version>
      <fixedVersion>1.15.1,1.16.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.disk.storage.optimize.availability.and.performance.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-1-16 01:00:00" id="10433" opendate="2022-11-16 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Migrate to new CI</summary>
      <description>Migrating Geode CI onto Apache Infra Jenkins from sponsored Concourse infra.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">.asf.yaml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2016-10-4 01:00:00" id="1963" opendate="2016-10-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add lucene xsd to geode website</summary>
      <description>Any active dtd's or schema’s should be hosted at http://geode.apache.org/schema/cache/</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.README.md</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-2-11 01:00:00" id="6185" opendate="2018-12-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Java Api for creating region requires authentication and authorization</summary>
      <description>Users accessing the createRegion api will need to have the same privilege as user who can execute the create region command and provide authentication  </description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.security.RestSecurityService.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.security.RestSecurityConfiguration.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.AbstractManagementController.java</file>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.security.RestSecurityService.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.RegionManagementSecurityIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-12-11 01:00:00" id="6189" opendate="2018-12-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cleanup: remove unused scripts in ci/scripts/windows/</summary>
      <description>These scripts have been replaced / unified with execute_tests.sh and archive_results.sh and are unused anywhere within the codebase.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.windows.test-run.sh</file>
      <file type="M">ci.scripts.windows.test-archive.sh</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-12-19 01:00:00" id="6223" opendate="2018-12-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Build job(s) should include resolveDependencies task</summary>
      <description>The recent BOM changes broke the resolveDependencies task (as the BOM was required but was note declared as a dependency), but this went undetected in both the precheckin and main CI pipelines, as the task is only targeted in the creation of test images.This task should be a part of the Build test job, to prevent image breakage in the future.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.execute.build.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-19 01:00:00" id="6224" opendate="2018-12-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>BOM task dependencies is inhospitable to external developers</summary>
      <description>As acknowledged in the commit message of GEODE-6198, our approach to depend on the bom publish task was heavy-handed. However, this extends farther than initially realized, as any consumer of Geode will also have to manage these task dependencies.Until a cleaner solution can be identified, the dependencyManagement block currently belonging to the BOM should be applied in place of the BOM. The subproject geode-all-bom should consume this block and publish a BOM that is, for now, reproduced in all other POMs.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.geode-dependency-management.gradle</file>
      <file type="M">geode-web.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-web-api.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-wan.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-rebalancer.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-pulse.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-protobuf.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-old-client-support.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-lucene.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-json.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-experimental-driver.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-dunit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-cq.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-connectors.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-concurrency-test.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-common.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-assembly.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">boms.geode-all-bom.build.gradle</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-12-19 01:00:00" id="6227" opendate="2018-12-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add lsof to test images for NetstatDUnitTest</summary>
      <description>tests such as geode-core/src/distributedTest/java/org/apache/geode/management/internal/cli/NetstatDUnitTest.java expect lsof utility to be available, but current images do not include it.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.test-container.Dockerfile</file>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
      <file type="M">ci.docker.Dockerfile</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-4-19 01:00:00" id="6430" opendate="2019-2-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>GFSH simply hangs when the objects queried are not resolvable on the classpath.</summary>
      <description>If I run an OQL query in Gfsh on data stored in a Region and none of the "application domain model classes" are on the system classpath of the server, or if I have not been deployed the application classes using the deploy command, then the `query` command in Gfsh hangs!For example, suppose I am using Apache Geode to manage (HTTP) Session state using Spring Session. If I have the Spring dependencies on the classpath, but none of the application classes on the classpath, nor "deployed" using the deploy command, then running the following query...gfsh&gt;query --query="SELECT session.id, attribute.key, attribute.value FROM /Sessions session, session.attributes attribute ORDER BY session.id ASC"... causes the shell to hang!In this use case, the users application creates a (HTTP) Session, stores application types in the Session and then persists the Session to GemFire. GemFire will successfully persist the Session containing the application types even though the application classes are not on the classpath, especially when serialized between the server and client, simply because GemFire does not need to deserialize the application class instances when storing the Session. Only if a Delta is applied to the Session, or the application objects stored in the Session are queried, will GemFire cause a deserialization and attempt to resolve the class types of the application objects. Otherwise, GemFire will retain the form of the object in which it received it.The only Exception/error present was in the Locator/Manager's log file...[severe 2019/02/19 14:39:26.128 PST Locator1 &lt;P2P message reader for 10.99.199.24(Server1:83106)&lt;v1&gt;:1025 shared unordered uid=1 port=63863&gt; tid=0x5a] Error deserializing messageorg.apache.geode.SerializationException: Could not create an instance of org.apache.geode.internal.cache.FunctionStreamingReplyMessage . at org.apache.geode.internal.InternalDataSerializer.invokeFromData(InternalDataSerializer.java:2540) at org.apache.geode.internal.DSFIDFactory.create(DSFIDFactory.java:990) at org.apache.geode.internal.InternalDataSerializer.readDSFID(InternalDataSerializer.java:2737) at org.apache.geode.internal.tcp.Connection.processNIOBuffer(Connection.java:3543) at org.apache.geode.internal.tcp.Connection.runNioReader(Connection.java:1827) at org.apache.geode.internal.tcp.Connection.run(Connection.java:1688) at java.lang.Thread.run(Thread.java:748)Caused by: java.io.NotSerializableException at org.apache.geode.internal.cache.FunctionStreamingReplyMessage.fromData(FunctionStreamingReplyMessage.java:94) at org.apache.geode.internal.InternalDataSerializer.invokeFromData(InternalDataSerializer.java:2529) ... 6 moreCaused by: java.lang.ClassNotFoundException: org.springframework.session.data.gemfire.serialization.SerializationException at java.net.URLClassLoader.findClass(URLClassLoader.java:382) at java.lang.ClassLoader.loadClass(ClassLoader.java:424) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) at java.lang.ClassLoader.loadClass(ClassLoader.java:357) at java.lang.Class.forName0(Native Method) at java.lang.Class.forName(Class.java:348) at java.io.ObjectInputStream.resolveClass(ObjectInputStream.java:686) at org.apache.geode.internal.InternalDataSerializer$DSObjectInputStream.resolveClass(InternalDataSerializer.java:3643) at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1868) at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1751) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2042) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573) at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2287) at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:561) at java.lang.Throwable.readObject(Throwable.java:914) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170) at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431) at org.apache.geode.internal.InternalDataSerializer.basicReadObject(InternalDataSerializer.java:3062) at org.apache.geode.DataSerializer.readObject(DataSerializer.java:2978) at org.apache.geode.internal.cache.FunctionStreamingReplyMessage.fromData(FunctionStreamingReplyMessage.java:90) Eventually, I see...[warning 2019/02/19 14:39:40.922 PST Locator1 &lt;RMI TCP Connection(1)-10.99.199.24&gt; tid=0x53] 15 seconds have elapsed while waiting for replies: &lt;FunctionStreamingResultCollector 15 waiting for 1 replies from [10.99.199.24(Server1:83106)&lt;v1&gt;:1025]&gt; on 10.99.199.24(Locator1:83101:locator)&lt;ec&gt;&lt;v0&gt;:1024 whose current membership list is: [[10.99.199.24(Server1:83106)&lt;v1&gt;:1025, 10.99.199.24(Locator1:83101:locator)&lt;ec&gt;&lt;v0&gt;:1024]]</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-2-20 01:00:00" id="6438" opendate="2019-2-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Windows CI images to not consider administrators_authorized_keys</summary>
      <description>sshd builds on windows-server seems to be failing to accept a connection as the service would look into authorized keys in a specific location `_PROGRAMDATA_/ssh/administrators_authorized_keys` whereas packer script creates the file in C:\Users\geode\.ssh.So comment these two lines in sshd_config so the service fallback to $HOME/.ssh/authorized_keys.For more information: https://github.com/PowerShell/Win32-OpenSSH/issues/1306</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-windows-geode-builder.windows-packer.json</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-3-21 01:00:00" id="6439" opendate="2019-2-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bump jackson scala dependency version</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.geode-dependency-management.gradle</file>
      <file type="M">geode-web.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-web-management.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-web-api.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-wan.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-rebalancer.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-pulse.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-protobuf.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-protobuf-messages.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-old-client-support.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-management.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-lucene.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-json.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-experimental-driver.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-dunit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-cq.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-connectors.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-concurrency-test.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-common.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-assembly.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-assembly.src.integrationTest.resources.expected.jars.txt</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-12-10 01:00:00" id="651" opendate="2015-12-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Chunk classes need unit tests</summary>
      <description>Chunk and its subclasses (GemFireChunk, ChunkWithHeapForm, and GemFireChunkSlice) need unit tests.GemFireChunkFactory needs a unit test.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.offheap.AbstractStoredObjectTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-1-11 01:00:00" id="6511" opendate="2019-3-11 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>create data-source should use a connection pool even if --pooled option is not provided</summary>
      <description>When create data-source without -pooled option, the data source created will not use connection pool. For better performance, the data source should use connection pool by default, even if -pooled option is not specified.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DestroyJndiBindingFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.jndi.JNDIInvoker.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.functions.DestroyJndiBindingFunctionTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateDataSourceCommand.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.ListDataSourceCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyDataSourceCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeDataSourceCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-5-8 01:00:00" id="6752" opendate="2019-5-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI: A passing build ID, in addition to PassingRef, would be useful</summary>
      <description>During development, it is useful to have the build ID rather than just the SHA of a passing build, for investigating differences between the CI passing build's artifacts against a local build at the same SHA.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.deploy.meta.sh</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-6-8 01:00:00" id="6756" opendate="2019-5-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow key/value contraints to be specified for region creation in V2 Management API</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionConfig.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionAttributesType.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.RegionConfigValidatorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.RegionConfigTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.RegionConfigValidator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizerIntegrationTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.api.RegionAPIDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.RegionManagementDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ListRegionManagementDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClusterManagementServiceOnServerTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClientClusterManagementSSLTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClientClusterManagementServiceDunitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-9-9 01:00:00" id="6760" opendate="2019-5-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor JDBC connector package structure</summary>
      <description>We want to refactor the JDBC connector package structure to ensure package names are clear and that we don't duplicate common code.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.util.internal.MappingCommandUtilsTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandInterceptorTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ConnectionsCommandManagerJUnitTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.util.internal.MappingConstants.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.util.internal.MappingCommandUtils.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.util.internal.DescribeMappingResult.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.distributedTest.resources.org.apache.geode.internal.ResourcePDX.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandDunitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandForProxyRegionDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.test.junit.rules.SqlDatabaseConnectionRule.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.test.junit.rules.PostgresConnectionRule.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.test.junit.rules.MySqlConnectionRule.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.test.junit.rules.InMemoryDerbyConnectionRule.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.test.junit.rules.DatabaseConnectionRule.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.PostgresJdbcWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.PostgresJdbcLoaderIntegrationTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.PostgresJdbcDistributedTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.PostgresJdbcAsyncWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.MySqlJdbcWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.MySqlJdbcLoaderIntegrationTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.MySqlJdbcDistributedTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.MySqlJdbcAsyncWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.JdbcDistributedTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.internal.PostgresTableMetaDataManagerIntegrationTest.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.internal.MySqlTableMetaDataManagerIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-9-14 01:00:00" id="6768" opendate="2019-5-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>"connection disconnect detected by EOF" should be a warning message and not info message</summary>
      <description>When Clients are disconnected by EOF, there should be a warning log message. At present, it's info level log message. </description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.BaseCommand.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-5-14 01:00:00" id="6769" opendate="2019-5-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh doesn&amp;#39;t always note which node is the coordinator in "list members"</summary>
      <description>Gfsh doesn't always note which member is the coordinator of the cluster.  Here is output from two concurrently starting locators and two concurrently starting servers:(1) Executing - connect --locator=localhost[24589]Connecting to Locator at [host=localhost, port=24589] ..Connecting to Manager at [host=10.118.20.62, port=24590] ..Successfully connected to: [host=10.118.20.62, port=24590](2) Executing - list membersName | Id--------- | ---------------------------------------------------locator-2 | 10.118.20.62(locator-2:13557:locator)&lt;ec&gt;&lt;v0&gt;:41000server-1 | 10.118.20.62(server-1:13558)&lt;v2&gt;:41001locator-1 | 10.118.20.62(locator-1:13559:locator)&lt;ec&gt;&lt;v1&gt;:41002server-2 | 10.118.20.62(server-2:13560)&lt;v1&gt;:41003(1) Executing - connect --locator=localhost[24591]Connecting to Locator at [host=localhost, port=24591] ..Connecting to Manager at [host=10.118.20.62, port=24592] ..Successfully connected to: [host=10.118.20.62, port=24592](2) Executing - list membersName | Id--------- | -----------------------------------------------------------------locator-2 | 10.118.20.62(locator-2:13557:locator)&lt;ec&gt;&lt;v0&gt;:41000 [Coordinator]server-1 | 10.118.20.62(server-1:13558)&lt;v2&gt;:41001locator-1 | 10.118.20.62(locator-1:13559:locator)&lt;ec&gt;&lt;v1&gt;:41002server-2 | 10.118.20.62(server-2:13560)&lt;v1&gt;:41003</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListMembersCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ListMembersCommand.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ListMembersCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-7-15 01:00:00" id="6772" opendate="2019-5-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>create index sometimes will create the index but failed to update the cluster configuration.</summary>
      <description>Scenario:1. start a server (server-1) in group1: start server --name=server-1 --group=group12. start another server-2 with no group: start server --name=server-23. create a regionA in group1: create region --name=regionA --group=group1 --type=REPLICATE4. create an index on regionA: create index --region=regionA --name=index1 ....observe that command will try to create index on both servers, but failed on server-2, since server-2 has no regionA, but the failure caused the cluster configuration not being updated.Proposal:when create index, the region already should determine what members this index needs to be created on, there should be no need for user to specify a group. We should ignore "group" when cluster configuration is enabled.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyJndiBindingCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterAsyncEventQueueCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.remote.CommandExecutor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.GfshCommand.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyDataSourceCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateDataSourceCommandTest.java</file>
      <file type="M">geode-assembly.src.acceptanceTest.java.org.apache.geode.management.internal.cli.commands.StartServerCommandAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-9-15 01:00:00" id="6773" opendate="2019-5-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add gfsh commands for Register Driver, Deregister Driver, and List Driver to JDBC connector</summary>
      <description>While the JDBC connector has functionality to automatically register/deregister drivers with the creation of it's data source objects it would be convenient for users to register and deregister these manually as well. In order to facilitate this they will also need to be able to list the currently registered drivers. We should add the following gfsh commands to allow for this:Register Driver - A command which takes a name of a jar file which has been previously deployed into the geode cluster via the deploy command or the name of the JDBC driver class within it and registers the JDBC driver with the Driver Manager.Deregister Driver - A command which takes a name of a jar file which has been previously deployed into the geode cluster via the deploy command or the name of the JDBC driver class within it and deregisters the JDBC driver with the Driver Manager.List Drivers - A command which lists all driver classes that are currently registered with the driver manager.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.util.DriverJarUtilTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.DriverJarUtil.java</file>
      <file type="M">geode-connectors.src.main.resources.org.apache.geode.internal.sanctioned-geode-connectors-serializables.txt</file>
      <file type="M">geode-connectors.src.main.resources.META-INF.services.org.springframework.shell.core.CommandMarker</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-5-15 01:00:00" id="6775" opendate="2019-5-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove unnecessary blank lines from gfsh output</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.management.internal.cli.commands.QueryCommandIntegrationTestBase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.result.CommandResult.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-5-16 01:00:00" id="6776" opendate="2019-5-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>ClientSendsStats and ClientStats are broken</summary>
      <description>A bunch of ClientSendStats are always zero. All of the stats whose name ends with "SendTime" will always be zero. The stats named "getPDXIdForTypeSendFailures" and "getPDXIdForTypeSendsSuccessful" will also always be zero.The values for these stats may get recorded, but in the wrong spot. So this can mess up ClientStats. For example getsSendTime is recorded in ClientStats.gets. So instead of "gets" showing you the number of get calls, it has the number of nanos it took to send the get to the server. Which stats may have wrong values in ClientStats are too many to itemize. Just be aware that ClientStats in general may be wrong due to this bug.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ConnectionStats.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-2-16 01:00:00" id="6779" opendate="2019-5-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create disk-store command should only return when DistributedSystemMXBean reflects creation status</summary>
      <description>Once fixed, we can remove MemberVM.waitUntilDiskStoreIsReadyOnExactlyThisManyServers.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDiskStoreCommandTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.configuration.ClusterConfigImportDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.AlterCompressorDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.client.CreateRegionWithDiskstoreAndSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsUtilsTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsUtils.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GfshCommandJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CompactDiskStoreCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.GfshCommand.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-12-15 01:00:00" id="678" opendate="2015-12-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>DistributedLockService: reentrant lock calls with a small wait time can cause the lock to be lost</summary>
      <description>If a thread already holds a lock from the DistributedLockService (this also applies to global regions and using Region.getDistributedLock) then it can reenter the lock by acquiring it again by calling lock. Since the thread already holds the lock it does not need to wait to acquire it. But if a very small waitTIme parameter is passed then the implementation may timeout the reacquire call telling the caller that it could not acquire the lock.In this case the thread also loses the original lock it held and future attempts to release it will fail with LockNotHeldException.The waitTime should only be considered in the initial lock request when you might be waiting for some other thread to release the lock. If you already hold the lock then waitTime should be ignored.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.locks.DLockGrantor.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2019-8-24 01:00:00" id="6804" opendate="2019-5-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Tab completion does not work when specifying path for --jar argument in gfsh</summary>
      <description>When attempting to use tab completion for the path in the `–jar` argument in gfsh, instead of completing the path it adds the next argument (`–dir` in my case).  It would be nice if `–jar` path supported tab completion.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.converters.JarFilesPathConverterTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.converters.JarDirPathConverterTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.converters.JarFilesPathConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.converters.JarDirPathConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.converters.FilePathStringConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DeployCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.cli.ConverterHint.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.GfshParserConverterTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-1-24 01:00:00" id="6805" opendate="2019-5-24 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>MacOS home shorthand ~ is not support for `--jar` path in gfsh</summary>
      <description>On MacOS, which is a supported development platform, it would be nice if the path given for the `–jar` argument supported the MacOS shorthand `~`, rather than needing to type /Users/user/.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DeployCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.GfshParser.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2019-5-27 01:00:00" id="6809" opendate="2019-5-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Documentation about gfsh destroy gateway receiver command</summary>
      <description>The gfsh command destroy gateway-receiver was added in Geode 1.7.0 as part of GEODE-2668 but we don’t have any mention about it on the docs.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.gfsh.command.index.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.destroy.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-1-17 01:00:00" id="681" opendate="2015-12-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Stopping and restarting a gateway sender results in incorrect event queue size</summary>
      <description>The gateway sender maintains a stat that tracks the number of queued events in there region. It does so by reading the number of events in the region after creating the queue and incrementing the stat by that number, and by having listeners on the region that also update the stat when entries are added or removed.Unfortunately, that approach can result in incorrect values for the stat because events can be double counted by the listener and the code that reads the size of the region.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.parallel.ParallelGatewaySenderQueueJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.management.bean.stats.GatewaySenderStatsJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.hdfs.internal.SortedListForAsyncQueueJUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.beans.stats.StatsKey.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.beans.GatewaySenderMBeanBridge.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.serial.ConcurrentSerialGatewaySenderEventProcessor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.parallel.ParallelGatewaySenderQueue.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.parallel.ParallelGatewaySenderEventProcessor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.GatewaySenderAdvisor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.AbstractGatewaySender.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.asyncqueue.internal.SerialAsyncEventQueueImpl.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.asyncqueue.internal.ParallelAsyncEventQueueImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-9-28 01:00:00" id="6813" opendate="2019-5-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Concourse: Jinja templating surrounding publication is inconsistent</summary>
      <description>There is an inconsistency when deciding whether or not to include publication jobs in a fork-facing Concourse deployment. Currently, some tasks require fork == apache and branch == develop, where some require fork == apache or branch == develop.For consistency, these should all be or checks.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-5-28 01:00:00" id="6815" opendate="2019-5-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add member count to `gfsh list members`</summary>
      <description>Current:gfsh&gt;list membersName | Id-------- | -------------------------------------------------------------locator | 192.168.1.2(locator:60690:locator)&lt;ec&gt;&lt;v0&gt;:1024 [Coordinator]server-1 | 192.168.1.2(server-1:64068)&lt;v7&gt;:1025Desired:gfsh&gt; list membersMember Count : 2Name | Id-------- | -------------------------------------------------------------locator | 192.168.1.2(locator:60690:locator)&lt;ec&gt;&lt;v0&gt;:1024 [Coordinator]server-1 | 192.168.1.2(server-1:64068)&lt;v7&gt;:1025</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ListMembersCommand.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ListMembersCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-12-8 01:00:00" id="7063" opendate="2019-8-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add AssertJ assertions for Micrometer meters</summary>
      <description>Add basic AssertJ assertions for currently used Micrometer meter types and features. </description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-9-8 01:00:00" id="7064" opendate="2019-8-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Increase timeout from 10 to 20 minutes on UnitTestX execute_test task in Concourse</summary>
      <description>We have seen several timeouts in the execute_test task in UnitTestX jobs in the CI which were found to be resolved by experimenting with increasing the timeout.  The community agreed we should increase the timeout from 10 to 20 minutes to handle intermittent degradation of the performance of this task, due to infrastructure issues or otherwise.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-2-14 01:00:00" id="7457" opendate="2019-11-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add ability to generate Management REST wiki docs from release branches</summary>
      <description>Having only two wiki pages, one generated from master and one from develop, has two drawbacks:1) cannot generate docs until after release2) cannot link to previous doc version when they get overwritten Instead, please dedicate one wiki page per release version and support running the script to generate the wiki page from develop, master, or an active release branch.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-management.src.test.script.update-management-wiki.sh</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-2-31 01:00:00" id="7640" opendate="2019-12-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>allow tests to turn on management request/response logging</summary>
      <description>request/response logging is by default in the debug level. It would be helpful for tests to display them on info level.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.ManagementLoggingFilter.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.junit.rules.LocatorStarterRule.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-1-31 01:00:00" id="7641" opendate="2019-12-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Windows instance creation fails in CI</summary>
      <description>Windows job fail with some regularity because they fail to create the instance correctly. The pattern seems to be that the job retries for a prolonged time. After that it starts failing because the resource already exists. (Are we missing when the instance finally gets created?)Logs form timed out creation attempts:11:12:49Updated [https://www.googleapis.com/compute/beta/projects/apachegeode-ci/zones/us-central1-f/instances/heavy-lifter-fbdf2e36-c559-5e39-8bb8-9b298c208d83].11:12:50ERROR: (gcloud.beta.compute.reset-windows-password) 11:12:50The instance may not be ready for use. This can occur if the instance was11:12:50recently created or if the instance is not running Windows.11:12:50Please wait a few minutes and try again.11:12:55.11:12:55This command creates an account and sets an initial password for the11:12:55user [geode] if the account does not already exist.11:12:55If the account already exists, resetting the password can cause the11:12:55LOSS OF ENCRYPTED DATA secured with the current password, including11:12:55files and stored passwords.11:12:5511:12:55For more information, see:11:12:55https://cloud.google.com/compute/docs/operating-systems/windows#reset11:12:5511:12:55Would you like to set or reset the password for [geode] (Y/n)? 11:12:55Resetting and retrieving password for [geode] on [heavy-lifter-fbdf2e36-c559-5e39-8bb8-9b298c208d83]The above repeats till the task times out. Then it transitions to tasks that fails like shown below:11:13:09/tmp/build/5ca5b479/geode /tmp/build/5ca5b47911:13:09/tmp/build/5ca5b47911:13:09Hashed apache-develop-main-WindowsIntegrationTestOpenJDK11-build8-test11-job#1110 (74 chars) -&gt; heavy-lifter-fbdf2e36-c559-5e39-8bb8-9b298c208d83 (49 chars)11:13:10Deploying to zone us-central1-a11:13:11Applying the following labels to the instance: instance_type=heavy-lifter,time-to-live=1576912391,job-name=windowsintegrationtestopenjdk11,pipeline-name=apache-develop-main,build-name=1110,sha=7ac2c4d24a2ccc45c0ba2b09754f9caeaaa4080f11:13:13ERROR: (gcloud.compute.instances.create) Could not fetch resource:11:13:13 - The resource 'projects/apachegeode-ci/zones/us-central1-f/instances/heavy-lifter-fbdf2e36-c559-5e39-8bb8-9b298c208d83' already existsThis seems to have been happening since quite a while. See this run for an example.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.AutoSerializerTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.BlockMBeanCreationController.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-3-2 01:00:00" id="7642" opendate="2020-1-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Reduce compiler warnings</summary>
      <description>/Users/echobravo/Developer/gemfire/geode/geode-core/src/main/java/org/apache/geode/management/internal/BlockMBeanCreationController.java:19: warning: MBeanServerAccessController is internal proprietary API and may be removed in a future releaseimport com.sun.jmx.remote.security.MBeanServerAccessController; ^warning: unknown enum constant When.MAYBE reason: class file for javax.annotation.meta.When not foundwarning: unknown enum constant AccessMode.READ_ONLY reason: class file for io.swagger.annotations.ApiModelProperty$AccessMode not foundwarning: unknown enum constant AccessMode.READ_ONLY/Users/echobravo/Developer/gemfire/geode/geode-core/src/main/java/org/apache/geode/management/internal/BlockMBeanCreationController.java:19: warning: MBeanServerAccessController is internal proprietary API and may be removed in a future releaseimport com.sun.jmx.remote.security.MBeanServerAccessController; ^warning: unknown enum constant When.MAYBE reason: class file for javax.annotation.meta.When not foundwarning: unknown enum constant AccessMode.READ_ONLY reason: class file for io.swagger.annotations.ApiModelProperty$AccessMode not foundwarning: unknown enum constant AccessMode.READ_ONLY/Users/echobravo/Developer/gemfire/geode/geode-core/src/main/java/org/apache/geode/management/internal/BlockMBeanCreationController.java:19: warning: MBeanServerAccessController is internal proprietary API and may be removed in a future releaseimport com.sun.jmx.remote.security.MBeanServerAccessController; ^warning: unknown enum constant When.MAYBE reason: class file for javax.annotation.meta.When not foundwarning: unknown enum constant AccessMode.READ_ONLY reason: class file for io.swagger.annotations.ApiModelProperty$AccessMode not foundwarning: unknown enum constant AccessMode.READ_ONLY/Users/echobravo/Developer/gemfire/geode/geode-core/src/main/java/org/apache/geode/management/internal/BlockMBeanCreationController.java:21: warning: MBeanServerAccessController is internal proprietary API and may be removed in a future releasepublic class BlockMBeanCreationController extends MBeanServerAccessController {</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-management.build.gradle</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-gfsh.build.gradle</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-3-26 01:00:00" id="7914" opendate="2020-3-26 00:00:00" resolution="Done">
    <buginformation>
      <summary>create missing unit test for Redis Module Expire Command</summary>
      <description>incorporating feedback related to test suite</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExpireExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ExpireIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-3-27 01:00:00" id="7918" opendate="2020-3-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve error in geode-tcp-server under DNS hijacking (ISP) issues</summary>
      <description>Testing Geode from home, my DNS from ISP was resolving things to a search engine causing test failures. Adds messaging to the tests that failed to give clues to future victims.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-tcp-server.src.test.java.org.apache.geode.distributed.internal.tcpserver.TcpServerJUnitTest.java</file>
      <file type="M">geode-tcp-server.src.test.java.org.apache.geode.distributed.internal.tcpserver.HostAndPortTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2020-4-7 01:00:00" id="7965" opendate="2020-4-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modify Redis SADD command to use region.compute</summary>
      <description>Geode implementation of this command has been modified to use the region.compute command to improve reliability.  This is stage one of an experiment to test out an effort to improve both reliability and performance by a series of changes.    </description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SAddExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.SetsIntegrationTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.RedisDistDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-7 01:00:00" id="7966" opendate="2020-4-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - properties list - reformat oversized table</summary>
      <description>On the properties page, https://geode.apache.org/docs/guide/112/reference/topics/gemfire_properties.html, the table exceeds the column width, leading to readability issues.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-6-7 01:00:00" id="7967" opendate="2020-4-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - gfsh start locator - reformat oversize table</summary>
      <description>On the gfsh start locator reference page,https://geode.apache.org/docs/guide/112/tools_modules/gfsh/command-pages/start.html#topic_591260CF25D64562A0EDD7260D2AC6D4the table exceeds the column width, leading to readability issues.</description>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-6-7 01:00:00" id="7968" opendate="2020-4-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - Region shortcuts quick-ref - reformat oversize table</summary>
      <description>On the Region Shortcuts Quick Reference page, https://geode.apache.org/docs/guide/112/reference/topics/region_shortcuts_table.html, the table exceeds the column width, leading to readability issues.</description>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.region.shortcuts.table.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-8 01:00:00" id="7969" opendate="2020-4-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump netty to 4.1.48</summary>
      <description>as part of GEODE-7798: Fix flakiness in PubSubTest, the netty version was increased on develop; this version should be the minimum used on support branches as well.</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-5-27 01:00:00" id="8193" opendate="2020-5-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Broken link in statistics list</summary>
      <description>The link of region entry heap-based eviction is wrong and shows the html anchor id in the statistics lists: Region Entry Eviction - Heap-based eviction (HeapLRUStatistics)#section_3B74F6FA08A374FBD92AA23047929B4F)https://geode.apache.org/docs/guide/112/reference/statistics_list.html</description>
      <version>None</version>
      <fixedVersion>1.12.0,1.13.0,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.statistics.list.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-6-28 01:00:00" id="8198" opendate="2020-5-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Revise docs to better specify putAll() behavior</summary>
      <description>GEODE-8171 updated the Javadocs for the Region.putAll() method. Our user guide should also specify the behavior under exceptions and give readers more context such that they can produce better apps.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.basic.config.data.entries.custom.classes.managing.data.entries.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2020-10-9 01:00:00" id="8590" opendate="2020-10-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Session state modules leak dependencies in POM</summary>
      <description>The http session state modules leak dependencies through the POM. Many of the dependencies listed aren't even required. Many of those listed should be compileOnly/provided scope since the modules are designed to be dropped into a container which provides many of those dependencies.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.publish-java.gradle</file>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat9.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat8.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat7.build.gradle</file>
      <file type="M">extensions.geode-modules-test.build.gradle</file>
      <file type="M">extensions.geode-modules-session-internal.build.gradle</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-1-28 01:00:00" id="871" opendate="2016-1-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Frequent use of executeOnAllServers causes build-up of sockets in TIME_WAIT on locator machine</summary>
      <description>The executeOnAllServers implementation contacts a locator in order to get the current set of servers. This opens a TCP/IP connection to the locator, interacts with the locator and then closes the TCP/IP connection. The connection is ending up in TIME_WAIT state though, indicating that the locator is usually initiating the close of the connection instead of the client.These TIME_WAIT TCP/IP connections can build up rapidly and cause the locator to run out of ephemeral ports. That puts the locator out of commission until the connections are timed out by the OS.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.fd.GMSHealthMonitor.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.tcpserver.TcpServer.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.tcpserver.TcpClient.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-2-14 01:00:00" id="8947" opendate="2021-2-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Performance degradations due to GEODE-8930</summary>
      <description>Following the changes introduced by GEODE-8930, performance degradations were seen in situations involving P2P puts with replicated regions.</description>
      <version>1.12.1,1.13.2,1.14.0,1.15.0</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tx.RemoteOperationMessageTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tx.RemoteOperationMessage.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-3-1 01:00:00" id="8985" opendate="2021-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>documentation speaks of start-recovery-delay when it means startup-recovery-delay</summary>
      <description>There is no such thing as start-recovery-delay yet the documentation mentions it in a few places. Replace with startup-recovery-delay (partition attribute)</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.partitioned.regions.restoring.region.redundancy.html.md.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.checking.region.redundancy.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-3-1 01:00:00" id="8986" opendate="2021-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>change benchmarks baseline to version 1.13.1</summary>
      <description>In CI, the current baseline is 1.13.0. It should be changed to the most recent version, which is currently 1.13.1</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.promote.rc.sh</file>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-3-2 01:00:00" id="8989" opendate="2021-3-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump spring-security to recommended version</summary>
      <description>update develop, 1.14 from 5.4.2 to 5.4.5update 1.13 from 5.3.2 to 5.3.8update 1.12 from 5.2.4 to 5.2.9</description>
      <version>1.12.1,1.13.1,1.14.0,1.15.0</version>
      <fixedVersion>1.12.2,1.13.2,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-3-5 01:00:00" id="9009" opendate="2021-3-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>finish support for functionality compatible with Redis DECRBY command</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractDecrByIntegrationTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.string.StringsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-7-19 01:00:00" id="9050" opendate="2021-3-19 00:00:00" resolution="Duplicate">
    <buginformation>
      <summary>Redis test fails with Netty 4.1.60 and later</summary>
      <description>PubSubIntegrationTest &gt; ensureOrderingOfPublishedMessages fails reliably, on both Linux and Windows, if I bump Netty from 4.1.59.Final to 4.1.60.Final.  It's important to keep up to date with latest versions of our 3rd-party dependencies but breaking this out separately so someone with redis knowledge can tackle it.</description>
      <version>1.14.0,1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.pubsub.AbstractPubSubIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-4-19 01:00:00" id="9051" opendate="2021-3-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Measure the Tenured heap consumption</summary>
      <description>Currently, Geode does not show the exact Tenured heap. Need to add a capability that Tenured heap can be printed in the Geode logs.</description>
      <version>None</version>
      <fixedVersion>1.12.2,1.13.3,1.14.0,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.control.HeapMemoryMonitorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.InternalResourceManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.HeapMemoryMonitor.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-4-25 01:00:00" id="9068" opendate="2021-3-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update documents to show removal of unsupported commands category</summary>
      <description>update docs to represent changes in https://issues.apache.org/jira/browse/GEODE-9037</description>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.tools.modules.geode.apis.compatible.with.redis.html.md.erb</file>
      <file type="M">geode-docs.images.geode.apis.compatible.with.redis.png</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-apis-compatible-with-redis.README.md</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-1-26 01:00:00" id="9079" opendate="2021-3-26 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Right-size Geode CI instances</summary>
      <description>Verify that heavy-lifter instances are utilizes well for their sizes. </description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.rsync.code.down.sh</file>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
      <file type="M">buildSrc.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-4-26 01:00:00" id="9080" opendate="2021-3-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enable resource-monitoring for Windows CI instances</summary>
      <description>Google monitoring via stackdriver is not enabled on Geode's windows CI instances. Remedy this, to enable better utilization/sizing.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.deploy.meta.sh</file>
      <file type="M">ci.images.google-windows-geode-builder.packer.json</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-3-29 01:00:00" id="9086" opendate="2021-3-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Documentation for DECRBY command</summary>
      <description>Ensure that there is sufficient documentation for the DECRBY command in the compatible with redis module. </description>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.geode.apis.compatible.with.redis.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-4-29 01:00:00" id="9087" opendate="2021-3-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix the documentation for SCAN commands.</summary>
      <description>Fix documentation for SCAN command, especially the data types accepted by it. </description>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.geode.apis.compatible.with.redis.html.md.erb</file>
      <file type="M">geode-apis-compatible-with-redis.README.md</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2021-4-29 01:00:00" id="9095" opendate="2021-3-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Package splitting geode-http-service</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.geode-pulse-test.src.main.java.org.apache.geode.tools.pulse.tests.rules.ServerRule.java</file>
      <file type="M">geode-http-service.src.test.java.org.apache.geode.management.internal.InternalHttpServiceJunitTest.java</file>
      <file type="M">geode-http-service.src.main.resources.META-INF.services.org.apache.geode.internal.cache.CacheService</file>
      <file type="M">geode-http-service.src.main.java.org.apache.geode.internal.cache.InternalHttpService.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-5-30 01:00:00" id="9104" opendate="2021-3-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>REST query output displays non-ASCII characters using escapes</summary>
      <description>For example, if JSON containing Chinese characters is put:curl -X PUT -H "Content-Type: application/json" localhost:8081/geode/v1/customers/1 -d '{"id": "1", "firstName": "名", "lastName": "姓"}'The results of getting the entry are correct:curl localhost:8081/geode/v1/customers/1{ "id" : "1", "firstName" : "名", "lastName" : "姓"}The results of querying the entry show the field values escaped:curl -G http://localhost:8081/gemfire-api/v1/queries/adhoc --data-urlencode "q=SELECT * FROM /customers where id='1'"[ { "id" : "1", "firstName" : "\u540D", "lastName" : "\u59D3"} ]</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.util.JSONUtils.java</file>
      <file type="M">geode-web-api.src.integrationTest.resources.org.apache.geode.rest.internal.web.controllers.customer-containing-chinese.json</file>
      <file type="M">geode-web-api.src.integrationTest.resources.org.apache.geode.rest.internal.web.controllers.customer-containing-chinese-query-struct-result.json</file>
      <file type="M">geode-web-api.src.integrationTest.resources.org.apache.geode.rest.internal.web.controllers.customer-containing-chinese-query-full-result.json</file>
      <file type="M">geode-web-api.src.integrationTest.java.org.apache.geode.rest.internal.web.controllers.RestAccessControllerTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-4-2 01:00:00" id="9119" opendate="2021-4-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Move test file missed as part of module renaming</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.common.UnsupportedCommandsIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-4-7 01:00:00" id="9126" opendate="2021-4-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump jetty to recommended version</summary>
      <description>9.4.38 -&gt; 9.4.39</description>
      <version>None</version>
      <fixedVersion>1.12.2,1.13.3,1.14.0,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.session.tests.GenericAppServerInstall.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-4-9 01:00:00" id="9137" opendate="2021-4-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update docker-compose used in CI</summary>
      <description>docker-compose is currently stuck at 1.17, and only supports compose format &lt;=3.4. Update to enable additional compose features.</description>
      <version>None</version>
      <fixedVersion>1.13.3,1.14.0,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-4-16 01:00:00" id="9158" opendate="2021-4-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement CLUSTER NODES / SLOTS / INFO Command</summary>
      <description>Implement the CLUSTER NODES command as compatible with Redis.Implement the CLUSTER SLOTS command as compatible with Redis.Implement the CLUSTER INFO command as compatible with Redis.Consult the RFC for reference:https://cwiki.apache.org/confluence/display/GEODE/Geode+Compatibility+with+Redis+data+sharding+and+cluster+changesAcceptance CriteriaNew DUnit tests are created to assert that the behavior is correct.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-apis-compatible-with-redis.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.resources.org.apache.geode.redis.internal.sanctioned-geode-apis-compatible-with-redis-serializables.txt</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.netty.NettyRedisServer.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.netty.ExecutionHandlerContext.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.commonTest.java.org.apache.geode.test.dunit.rules.NativeRedisClusterTestRule.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.commonTest.java.org.apache.geode.test.dunit.rules.ClusterNode.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.acceptanceTest.java.org.apache.geode.redis.NativeRedisClusterTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-5-16 01:00:00" id="9162" opendate="2021-4-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis: mark api as experimental</summary>
      <description>the Geode api compatible with Redis is still experimental and needs to be marked as such before the next release</description>
      <version>1.14.0,1.15.0</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.StartServerCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">buildSrc.src.main.resources.japicmp.exceptions.json</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-4-16 01:00:00" id="9163" opendate="2021-4-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis: update docs to reflect that the api is experimental</summary>
      <description>update the docs to reflect that the Geode api compatible with Redis is still experimental. This depends on GEODE-9162</description>
      <version>1.14.0,1.15.0</version>
      <fixedVersion>1.14.0,1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.geode.apis.compatible.with.redis.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-apis-compatible-with-redis.README.md</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-4-28 01:00:00" id="9208" opendate="2021-4-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>StressNewTest doesn&amp;#39;t pick up tests from all directories</summary>
      <description> When detecting which tests to run for StressNewTest, we use paths like the following:'*/src/distributedTest/java'This will pick up a file like this one: geode-assembly/src/distributedTest/java/org/apache/geode/session/tests/Jetty9CachingClientServerTest.javaBut won't pick up this file since the `src` dir here is more than one directory deep:extensions/geode-modules/src/distributedTest/java/org/apache/geode/modules/util/ClientServerSessionCacheDUnitTest.java We can use git's pathspec `:glob` keyword described here to pick up any number of directories preceding our desired path:':(glob)**/src/distributedTest/java/**'</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.repeat-new-tests.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-5-29 01:00:00" id="9218" opendate="2021-4-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode has tests for TLSv1.1 which is disabled by default now</summary>
      <description>According to the Oracle JRE/JDK cryptographic roadmap, TLSv1 and TLSv1.1 are disabled by default as of 11.0.11+9 and 8u291b10. This causes TLSv1.1 tests to fail.</description>
      <version>1.12.3,1.13.3,1.14.0,1.15.0</version>
      <fixedVersion>1.12.3,1.13.3,1.14.0,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SSLUtilTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SocketCreatorFactoryJUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.JMXMBeanDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.LocatorDUnitTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.rest.internal.web.RestSecurityWithSSLTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.rest.internal.web.controllers.RestAPIsWithSSLDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-5-1 01:00:00" id="9231" opendate="2021-5-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add DistributedJDK8 and StressNewJDK8 to PR checks</summary>
      <description>recently a number of tests have been added that seem to be flaky on JDK8 only.  Since the PR pipeline only tests on JDK11, these are not being caught...</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-5-3 01:00:00" id="9233" opendate="2021-5-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement ZADD and ZSCORE</summary>
      <description>Initial implementation of the Redis ZADD and ZSCORE commands.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.DataSerializableFixedID.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.resources.org.apache.geode.redis.internal.sanctioned-geode-apis-compatible-with-redis-serializables.txt</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.netty.ExecutionHandlerContext.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisService.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetOptions.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetNXExecutor.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetEXExecutor.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.executor.CommandFunction.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.RedisDataType.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.NullRedisDataStructures.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.CommandHelper.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.string.StringsDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.set.SremDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.set.SaddDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.key.RenameDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.key.ExpireDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.InfoDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HsetDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HScanDunitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HMsetDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HMgetDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HGetDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HExistsDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HashesAndCrashesDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.CrashAndNoRepeatDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.data.PartitionedRegionStatsUpdateTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.data.DeltaDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.commonTest.java.org.apache.geode.test.dunit.rules.RedisClusterStartupRule.java</file>
      <file type="M">geode-apis-compatible-with-redis.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-5-5 01:00:00" id="9238" opendate="2021-5-5 00:00:00" resolution="Resolved">
    <buginformation>
      <summary>Restructure Hash-related DUnit tests to handle cluster mode</summary>
      <description/>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HvalsDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HstrlenDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HSetNXDunitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HsetDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HScanDunitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HMsetDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HMgetDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HlenDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HKeysDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HGetDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HExistsDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.hash.HashesAndCrashesDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-5-5 01:00:00" id="9239" opendate="2021-5-5 00:00:00" resolution="Implemented">
    <buginformation>
      <summary>Restructure Key-related DUnit tests to handle cluster mode</summary>
      <description/>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.key.RenameDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.key.PersistDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.key.ExpireDUnitTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.key.ExistsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-5-7 01:00:00" id="9251" opendate="2021-5-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Test JVM fails to exit during WindowsIntegrationTest</summary>
      <description>Since 9ba75f04a98ba574c7bd0198fc60fba92898d489, the Geode pipeline has been unable to pass WindowsIntegrationTest, due to some JVM processes not exiting on Gradle completion. I pulled logs and will attach them here.geode@HEAVY-LIFTER-88 C:\Users\geode&gt;tasklistImage Name PID Session Name Session# Mem Usage ========================= ======== ================ =========== ============ System Idle Process 0 Services 0 4 K System 4 Services 0 136 K smss.exe 344 Services 0 1,228 K csrss.exe 440 Services 0 4,320 K wininit.exe 508 Services 0 4,844 K csrss.exe 516 Console 1 3,736 K winlogon.exe 568 Console 1 10,768 K services.exe 640 Services 0 7,216 K lsass.exe 648 Services 0 17,708 K svchost.exe 748 Services 0 13,608 K svchost.exe 812 Services 0 8,860 K dwm.exe 888 Console 1 25,596 K svchost.exe 944 Services 0 51,496 K svchost.exe 984 Services 0 17,684 K svchost.exe 240 Services 0 9,376 K svchost.exe 1116 Services 0 23,980 K svchost.exe 1168 Services 0 20,292 K svchost.exe 1176 Services 0 14,656 K google_osconfig_agent.exe 1432 Services 0 21,152 K GCEWindowsAgent.exe 1440 Services 0 18,544 K svchost.exe 1480 Services 0 17,552 K svchost.exe 1736 Services 0 7,212 K spoolsv.exe 1984 Services 0 15,948 K dllhost.exe 1056 Services 0 7,696 K dockerd.exe 1136 Services 0 37,924 K GoogleVssAgent.exe 1336 Services 0 4,780 K sshd.exe 2100 Services 0 6,240 K svchost.exe 2196 Services 0 8,084 K svchost.exe 2204 Services 0 21,120 K vmms.exe 2252 Services 0 32,968 K MsMpEng.exe 2272 Services 0 169,140 K dllhost.exe 2352 Services 0 12,500 K svchost.exe 2768 Services 0 6,928 K vmcompute.exe 2940 Services 0 8,820 K msdtc.exe 2560 Services 0 9,892 K NisSrv.exe 3256 Services 0 10,648 K svchost.exe 3348 Services 0 11,704 K MpCmdRun.exe 4784 Services 0 10,008 K LogonUI.exe 3088 Console 1 46,824 K StackdriverAgent.exe 452 Services 0 27,176 K WmiPrvSE.exe 2144 Services 0 18,972 K sshd.exe 3524 Services 0 7,068 K conhost.exe 1088 Services 0 5,880 K sshd.exe 376 Services 0 7,216 K java.exe 5304 Services 0 1,164,536 K conhost.exe 4216 Services 0 8,932 K java.exe 4084 Services 0 329,184 K conhost.exe 4024 Services 0 8,932 K sshd.exe 5908 Services 0 7,108 K conhost.exe 3976 Services 0 5,932 K dllhost.exe 1652 Services 0 5,904 K sshd.exe 1192 Services 0 7,144 K ssh-shellhost.exe 1836 Services 0 3,192 K cmd.exe 1752 Services 0 2,608 K conhost.exe 932 Services 0 9,448 K cmd.exe 6636 Services 0 2,816 K tasklist.exe 6020 Services 0 7,780 Kgeode@HEAVY-LIFTER-88 C:\Users\geode&gt;c:\java11\bin\jps.exe 4084 ServerLauncher 5304 LocatorLauncher 4220 Jps</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-windows-geode-builder.packer.json</file>
      <file type="M">ci.scripts.execute.tests.sh</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2021-5-21 01:00:00" id="9298" opendate="2021-5-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove concourse deprecation warnings</summary>
      <description>Concourse is warning of several deprecated functions and names.</description>
      <version>1.15.0</version>
      <fixedVersion>1.12.3,1.13.3,1.14.0,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.jinja.template.yml</file>
      <file type="M">dev-tools.release.deploy.rc.pipeline.sh</file>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.reaper.jinja.template.yml</file>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
      <file type="M">ci.pipelines.mass-test-run.jinja.template.yml</file>
      <file type="M">ci.pipelines.images.jinja.template.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
      <file type="M">ci.pipelines.examples.jinja.template.yml</file>
      <file type="M">.asf.yaml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-6-26 01:00:00" id="9317" opendate="2021-5-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>ZADD/ZSCORE do not properly handle infinity</summary>
      <description>Native Redis accepts values like "inf", "+inf", "-infinity", etc. Currently Radish considers these values invalid and returns "ERR value is not a valid float".</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.executor.sortedset.ZAddExecutor.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.executor.sortedset.RedisSortedSetCommands.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.RedisSortedSet.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.NullRedisSortedSet.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.sortedset.AbstractZIncrByIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.sortedset.AbstractZAddIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.AbstractHitsMissesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-6-1 01:00:00" id="9335" opendate="2021-6-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Organize HitsMissesIntegrationTest</summary>
      <description>the HitsMissesIntegrationTest has sections divided by comments to keep all the supported commands separate from the unsupported ones, and to keep commands of the same type together within the supported/unsupported sections. as we added more supported commands, we didn't move the tests into the right section.A.C.All the tests that test supported commands have been moved to the appropriate section.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.AbstractHitsMissesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-6-1 01:00:00" id="9336" opendate="2021-6-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement ZADD option CH</summary>
      <description>CH option for ZADDCH: Modify the return value from the number of new elements added, to the total number of elements changed (CH is an abbreviation of changed). Changed elements are new elements added and elements already existing for which the score was updated. So elements specified in the command line having the same score as they had in the past are not counted. Note: normally the return value of ZADD only counts the number of new elements added.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-apis-compatible-with-redis.src.test.java.org.apache.geode.redis.internal.data.RedisSortedSetTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.executor.sortedset.ZAddOptions.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.executor.sortedset.ZAddExecutor.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.data.RedisSortedSet.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.sortedset.AbstractZAddIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-6-2 01:00:00" id="9339" opendate="2021-6-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump json-smart to recommended version</summary>
      <description>json-smart 2.3 should be updated to 2.3.1(fyi json-smart is used by json-path, not directly by Geode)</description>
      <version>1.12.2,1.13.2,1.14.0,1.15.0</version>
      <fixedVersion>1.12.3,1.13.3,1.14.0,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-7-2 01:00:00" id="9343" opendate="2021-6-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactoring: move getInfo() method from INFO command to a TestHelper class</summary>
      <description>the getInfo() method is used throughout our tests to parse the data returned by the INFO command. There is a lot of duplication of this implementation, which is risky for future development.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractAppendMemoryIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.AbstractRedisMemoryStatsIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.AbstractRedisInfoStatsIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.AbstractInfoIntegrationTest.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.AbstractHitsMissesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2021-6-17 01:00:00" id="9386" opendate="2021-6-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>google-windows-geode-builder image doesn&amp;#39;t properly delete geode directory after dependency caching</summary>
      <description/>
      <version>1.15.0</version>
      <fixedVersion>1.12.4,1.13.4,1.14.0,1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-windows-geode-builder.packer.json</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-11-22 01:00:00" id="9396" opendate="2021-6-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrades using SSL fail with mismatch of hostname in certificates</summary>
      <description>When upgrading from a previous version (prior to 1.14) the ssl handshake will fail to complete in cases where the Certificate contains a symbolic name that doesn't match the hostname used by the sslengine.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.gfsh.GfshRule.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.tcp.Connection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.codeAnalysis.RestrictUseOfInetAddressJUnitTest.java</file>
      <file type="M">geode-assembly.src.upgradeTest.java.org.apache.geode.management.RollingUpgradeWithGfshDUnitTest.java</file>
      <file type="M">geode-assembly.src.upgradeTest.java.org.apache.geode.management.OperationManagementUpgradeTest.java</file>
      <file type="M">geode-assembly.src.upgradeTest.java.org.apache.geode.management.DeploymentManagementUpgradeTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-10-2 01:00:00" id="9413" opendate="2021-7-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enable native Redis TCL tests for zset (sorted set) data type</summary>
      <description>Enough commands are now implemented to enable running the native Redis integration tests against Geode radish.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.acceptanceTest.resources.0001-configure-redis-tests.patch</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-3-23 01:00:00" id="9451" opendate="2021-7-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>On demand authentication expiration and re-authentication</summary>
      <description>This is to implement the feature proposed in this RFChttps://cwiki.apache.org/confluence/display/GEODE/On+Demand+Geode+Authentication+Expiration+and+Re-authentication</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-old-client-support.src.main.java.com.gemstone.gemfire.OldClientSupportProvider.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.security.SecurityManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ServerConnection.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.OpExecutorImpl.java</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-9-23 01:00:00" id="9458" opendate="2021-7-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add tests for functions executions on servers when authentication expires</summary>
      <description>The test should spin up multiple servers and test the functionService from the client: function execution onServer/onMember function execution onServers/onMembers function execution onRegionand make sure the expired user would re-authenticate and continue to execute the functions in various casesand make sure the the subsequent successful function execution is done by the new user (not the expired one). test onServer, onServers, onRegions</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.upgradeTest.java.org.apache.geode.security.ClientAuthenticationTestUtils.java</file>
      <file type="M">geode-core.src.upgradeTest.java.org.apache.geode.security.AuthExpirationMultiServerDUnitTest.java</file>
      <file type="M">geode-core.src.upgradeTest.java.org.apache.geode.security.AuthExpirationFunctionDUnitTest.java</file>
      <file type="M">geode-core.src.upgradeTest.java.org.apache.geode.security.AuthExpirationDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-9-19 01:00:00" id="9521" opendate="2021-8-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add test to cover multi-servers scenario for re-authentication</summary>
      <description>The test should should spin up multiple servers and test: client connect to one server directly client connect to the locator and have locator allocate server connection of the clientthe test should check: expiring users on all the servers would prevent client connect to the all the server. on the same client, after it's connected and the user is expired, make sure no further operation will be allowed by this user (expired) even if the client's connection is re-directed to the other server. </description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.main.resources.org.apache.geode.test.junit.internal.sanctioned-geode-junit-serializables.txt</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.security.ExpirableSecurityManager.java</file>
      <file type="M">geode-core.src.upgradeTest.java.org.apache.geode.security.AuthExpirationMultiServerDUnitTest.java</file>
      <file type="M">geode-core.src.upgradeTest.java.org.apache.geode.security.AuthExpirationFunctionDUnitTest.java</file>
      <file type="M">geode-core.src.upgradeTest.java.org.apache.geode.security.AuthExpirationDUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.security.SecurityWithExpirationIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-9-19 01:00:00" id="9525" opendate="2021-8-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Radish benchmark tests to CI</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.promote.rc.sh</file>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-1-23 01:00:00" id="9536" opendate="2021-8-23 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Run all Windows distributed tests in CI, in parallel</summary>
      <description>Currently CI runs only a subset of distributed tests on Windows, and it runs them sequentially.Change CI to run all distributed tests in Windows, and to run them in parallel.This requires changing a small number tests to allow them to run on Windows. It may require additional changes to allow them to run in parallel on Windows.</description>
      <version>1.15.0</version>
      <fixedVersion>None</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.JQFilterVerificationDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.cache30.ClientServerCacheOperationDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.tier.sockets.BackwardCompatibilityHigherVersionClientDUnitTest.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DeploySemanticVersionJarDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.DeploymentSemanticVersionJarDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.tier.sockets.PingOpDistributedTest.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-9-24 01:00:00" id="9542" opendate="2021-8-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enable SSL Client Certificate Authorization for Redis</summary>
      <description>When the ssl-require-authentication Geode property is set to true, we should validate the Redis client's certificate against the configured ssl-truststore to ensure that the client certificate is issued by a trusted Certificate Authority. Acceptance CriteriaClient certificates issued by trusted Certificate Authorities are properly authenticated.  Client certificates issued by non-trusted Certificate Authorities are not authenticated.  When the Geode property ssl-require-authentication is set to false, no client certificate authentication is performed.Appropriate tests are developed to ensure this feature works as expected and does not regress. </description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.filewatch.PollingFileWatcher.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.netty.NettyRedisServer.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.integrationTest.java.org.apache.geode.redis.SSLTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2021-11-31 01:00:00" id="9566" opendate="2021-8-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode for Redis No Longer Experimental</summary>
      <description>Geode for Redis is no longer experimental.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.StartServerCommand.java</file>
      <file type="M">geode-for-redis.README.md</file>
      <file type="M">geode-docs.developing.geode.apis.compatible.with.redis.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-9-1 01:00:00" id="9574" opendate="2021-9-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Changes to exception handling may be causing changes to connection state.</summary>
      <description>OpExectorImpl has very specific exception cause checks that may have been affected by adding a cause to certain exceptions.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.OpExecutorImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-9-8 01:00:00" id="9586" opendate="2021-9-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modifies 1.15.0&amp;#39;s client server protocol version to be 1.15.0</summary>
      <description>With the auth expiration change, the client server protocol needs to change between 1.14.0 and 1.15.0.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-serialization.src.test.java.org.apache.geode.internal.serialization.KnownVersionJUnitTest.java</file>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.KnownVersion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializer.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-9-22 01:00:00" id="9624" opendate="2021-9-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Status redundancy command reports wrong value for empty regions</summary>
      <description>When a partitioned region is empty, the "status redundancy" command reports the current redundancy of than region as Integer.MAX_VALUE .This can be reproduced following these steps: gfsh&gt;start locator --name=locator1gfsh&gt;start server --name=server1gfsh&gt;start server --name=server2 --server-port=40405gfsh&gt;create region --name=test --type=PARTITION_REDUNDANT_PERSISTENTgfsh&gt;status redundancyNumber of regions with zero redundant copies = 0Number of regions with partially satisfied redundancy = 1Number of regions with fully satisfied redundancy = 0Redundancy is partially satisfied for regions: test redundancy status: NOT_SATISFIED. Desired redundancy is 1 and actual redundancy is 2147483647.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.StatusRedundancyCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.control.SerializableRegionRedundancyStatusImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-10-23 01:00:00" id="9628" opendate="2021-9-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Documentation fix for setting credentials in a client</summary>
      <description>Current:How a Client Cache Sets Its CredentialIn order to connect with a locator or a server that does authentication, a client will need to set its credential, composed of the two properties security-username and security-password. Choose one of these two ways to accomplish this:The last line needs to be changed to needing both the steps, instead of choosing one of the two steps   </description>
      <version>None</version>
      <fixedVersion>1.14.1,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.security.implementing.authentication.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-16 01:00:00" id="964" opendate="2016-2-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Web API and Pulse war file detection should use standard Geode versioning</summary>
      <description>Retrieve consistent Geode version rather than trying to create our own.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-assembly.src.test.java.com.gemstone.gemfire.management.internal.AgentUtilJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-10-25 01:00:00" id="9641" opendate="2021-9-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Benchmark instability in P2pPartitionedPutBytesBenchmark</summary>
      <description>P2pPartitionedPutBytesBenchmark started failing in CI after the fix for GEODE-9204 was merged.org.apache.geode.benchmark.tests.P2pPartitionedPutBytesBenchmark average ops/second Baseline: 179582.83 Test: 170268.31 Difference: -5.2% ops/second standard error Baseline: 849.15 Test: 649.44 Difference: -23.5% ops/second standard deviation Baseline: 25346.86 Test: 19374.76 Difference: -23.6% YS 99th percentile latency Baseline: 5010.00 Test: 5110.00 Difference: +2.0% median latency Baseline: 2416639.00 Test: 2412543.00 Difference: -0.2% 90th percentile latency Baseline: 4698111.00 Test: 4567039.00 Difference: -2.8% 99th percentile latency Baseline: 38141951.00 Test: 81723391.00 Difference: +114.3% 99.9th percentile latency Baseline: 196214783.00 Test: 205389823.00 Difference: +4.7% average latency Baseline: 4033453.68 Test: 4258029.39 Difference: +5.6% latency standard deviation Baseline: 14549153.77 Test: 15673393.37 Difference: +7.7% latency standard error Baseline: 1149.00 Test: 1271.79 Difference: +10.7% average ops/second Baseline: 533863.27 Test: 505986.13 Difference: -5.2%BENCHMARK FAILED: org.apache.geode.benchmark.tests.P2pPartitionedPutBytesBenchmark average latency is 5% worse than baseline.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ReplyMessage.java</file>
      <file type="M">geode-core.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-10-28 01:00:00" id="9650" opendate="2021-9-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Radish LOLWUT command</summary>
      <description>Implement the LOLWUT command, which allows command-line users to quickly check the software version.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-apis-compatible-with-redis.src.main.java.org.apache.geode.redis.internal.netty.StringBytesGlossary.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-10-1 01:00:00" id="9662" opendate="2021-10-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI Failure: acceptance-test-openjdk8 timed out</summary>
      <description>this run of acceptance-test-openjdk8 timed out with a total duration of 3h5m. The next one passed with a total duration of 3h1m. Is it possible that we need to extend how much time we give acceptance tests to run? https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/acceptance-test-openjdk8/builds/229</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2016-3-16 01:00:00" id="967" opendate="2016-2-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>A GatewayEventSubstitutionFilter configured in xml is not used by the AsyncEventQueue</summary>
      <description>A GatewayEventSubstitutionFilter configured in xml like below is not used by the AsyncEventQueue.&lt;async-event-queue id="queue" parallel="true"&gt; &lt;gateway-event-substitution-filter&gt; &lt;class-name&gt;TestGatewayEventSubstitutionFilter&lt;/class-name&gt; &lt;/gateway-event-substitution-filter&gt; &lt;async-event-listener&gt; &lt;class-name&gt;TestAsyncEventListener&lt;/class-name&gt; &lt;/async-event-listener&gt;&lt;/async-event-queue&gt;</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.asyncqueue.AsyncEventListenerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.AsyncEventQueueTestBase.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.GatewaySenderEventImpl.java</file>
      <file type="M">gemfire-wan.src.test.java.com.gemstone.gemfire.cache.CacheXml80GatewayDUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.asyncqueue.AsyncEventListenerDUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.AsyncEventQueueTestBase.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.CacheXmlGenerator.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.AsyncEventQueueCreation.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-10-4 01:00:00" id="9672" opendate="2021-10-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Disable native redis multibulk test</summary>
      <description>In Redis 5.0.14 a new AUTH-related test was introduced that is failing when run as part of the pipeline. The change here is simply to disable the test. In the future we will evaluate whether we can re-enable it.</description>
      <version>1.14.1,1.15.0</version>
      <fixedVersion>1.14.1,1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-apis-compatible-with-redis.src.acceptanceTest.resources.0001-configure-redis-tests.patch</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-10-4 01:00:00" id="9674" opendate="2021-10-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Re-auth seems to cause durable clients lose some events when server force the client to disconnect</summary>
      <description>We have several intermittent test failures related to durable clients losing data afternserver force the client to disconnect.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.upgradeTest.java.org.apache.geode.security.ClientAuthenticationTestUtils.java</file>
      <file type="M">geode-core.src.upgradeTest.java.org.apache.geode.security.AuthExpirationMultiServerDUnitTest.java</file>
      <file type="M">geode-core.src.upgradeTest.java.org.apache.geode.security.AuthExpirationFunctionDUnitTest.java</file>
      <file type="M">geode-core.src.upgradeTest.java.org.apache.geode.security.AuthExpirationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.MessageDispatcherTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.MessageDispatcher.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-3-17 01:00:00" id="968" opendate="2016-2-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Stat Need stats to know the time spent by receiver-thread to deliver udp message</summary>
      <description>We need to know how long it took to receiver -thread to deliver udp message to other executing pool</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.messenger.JGroupsMessengerJUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.messenger.JGroupsMessenger.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.LonerDistributionManager.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.DMStats.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.DistributionStats.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-10-6 01:00:00" id="9686" opendate="2021-10-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade GemfireDataCommandsDistributedTestBase to not use deprecated methods</summary>
      <description>remove all deprecated components. the overriding method was lost in one of the refactorings and hence the http version of the test was not testing the http component.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.GemfireDataCommandsOverHttpDUnitTest.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.GemfireDataCommandsDUnitTest.java</file>
      <file type="M">geode-dunit.src.main.resources.org.apache.geode.test.dunit.internal.sanctioned-geode-dunit-serializables.txt</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.management.internal.cli.commands.GemfireDataCommandsDUnitTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-10-7 01:00:00" id="9687" opendate="2021-10-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove deprecated elements from RegionMembershipMBeanDistributedTestBase</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.RegionMembershipMBeanOverHttpDUnitTest.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.RegionMembershipMBeanDUnitTest.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.management.internal.cli.commands.RegionMembershipMBeanDUnitTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-5-17 01:00:00" id="969" opendate="2016-2-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Various WAN dunit tests sometimes cause OOME during combineReports task</summary>
      <description>The combineReports task sometimes throws a 'java.lang.OutOfMemoryError: Java heap space' error when creating the JUnit test report like::combineReportsAll test reports at /japan1/users/build/jenkins/blds/workspace/GemFire_develop_closed_CC/gemfire/closed/build/reports/combinedFAILURE: Build failed with an exception.Where:Build file '/japan1/users/build/jenkins/blds/workspace/GemFire_develop_closed_CC/gemfire/closed/pivotalgf-assembly/build.gradle' line: 156What went wrong:Execution failed for task ':pivotalgf-assembly:legacyDunit'.&gt; There were failing tests.Try:Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.BUILD FAILEDTotal time: 2 hrs 8 mins 51.811 secsRecording test resultsERROR: Publisher 'Publish JUnit test result report' aborted due to exception:java.io.IOException: remote file operation failed: /japan1/users/build/jenkins/blds/workspace/GemFire_develop_closed_CC at hudson.remoting.Channel@a3f9b9e:Japan: java.io.IOException: Remote call on Japan failedat hudson.FilePath.act(FilePath.java:987)at hudson.FilePath.act(FilePath.java:969)at hudson.tasks.junit.JUnitParser.parseResult(JUnitParser.java:90)at hudson.tasks.junit.JUnitResultArchiver.parse(JUnitResultArchiver.java:120)at hudson.tasks.junit.JUnitResultArchiver.perform(JUnitResultArchiver.java:137)at hudson.tasks.BuildStepCompatibilityLayer.perform(BuildStepCompatibilityLayer.java:75)at hudson.tasks.BuildStepMonitor$1.perform(BuildStepMonitor.java:20)at hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:779)at hudson.model.AbstractBuild$AbstractBuildExecution.performAllBuildSteps(AbstractBuild.java:726)at hudson.model.Build$BuildExecution.post2(Build.java:185)at hudson.model.AbstractBuild$AbstractBuildExecution.post(AbstractBuild.java:671)at hudson.model.Run.execute(Run.java:1766)at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)at hudson.model.ResourceController.execute(ResourceController.java:98)at hudson.model.Executor.run(Executor.java:408)Caused by: java.io.IOException: Remote call on Japan failedat hudson.remoting.Channel.call(Channel.java:786)at hudson.FilePath.act(FilePath.java:980)... 14 moreCaused by: java.lang.OutOfMemoryError: Java heap spaceat com.sun.org.apache.xerces.internal.util.XMLStringBuffer.append(XMLStringBuffer.java:208)at com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.scanData(XMLEntityScanner.java:1378)at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanCDATASection(XMLDocumentFragmentScannerImpl.java:1654)at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3020)at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:649)at org.dom4j.io.SAXReader.read(SAXReader.java:465)at org.dom4j.io.SAXReader.read(SAXReader.java:264)at hudson.tasks.junit.SuiteResult.parse(SuiteResult.java:123)at hudson.tasks.junit.TestResult.parse(TestResult.java:282)at hudson.tasks.junit.TestResult.parsePossiblyEmpty(TestResult.java:228)at hudson.tasks.junit.TestResult.parse(TestResult.java:163)at hudson.tasks.junit.TestResult.parse(TestResult.java:146)at hudson.tasks.junit.TestResult.(TestResult.java:122)at hudson.tasks.junit.JUnitParser$ParseResultCallable.invoke(JUnitParser.java:119)at hudson.tasks.junit.JUnitParser$ParseResultCallable.invoke(JUnitParser.java:93)at hudson.FilePath$FileCallableWrapper.call(FilePath.java:2691)at hudson.remoting.UserRequest.perform(UserRequest.java:121)at hudson.remoting.UserRequest.perform(UserRequest.java:49)at hudson.remoting.Request$2.run(Request.java:326)at hudson.remoting.InterceptingExecutorService$1.call(InterceptingExecutorService.java:68)at java.util.concurrent.FutureTask.run(FutureTask.java:266)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)at java.lang.Thread.run(Thread.java:745)at ......remote call to Japan(Native Method)at hudson.remoting.Channel.attachCallSiteStackTrace(Channel.java:1413)at hudson.remoting.UserResponse.retrieve(UserRequest.java:221)at hudson.remoting.Channel.call(Channel.java:778)... 15 more</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-wan.src.test.java.com.gemstone.gemfire.internal.cache.wan.WANTestBase.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-11-7 01:00:00" id="9693" opendate="2021-10-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove deprecated elements from ListIndexCommandDistributedTestBase</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ListIndexCommandOverHttpDUnitTest.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ListIndexCommandDUnitTest.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.management.internal.cli.commands.ListIndexCommandDUnitTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-10-8 01:00:00" id="9699" opendate="2021-10-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>ZUNIONSTORE returns 1 instead of 0 when running against non-existing key</summary>
      <description>The following redis TCL test fails when running against Geode for Redis: # Geode fails with: Expected '1' to be equal to '0' test "ZUNIONSTORE against non-existing key doesn't set destination - $encoding" { r del "{slot}zseta" assert_equal 0 [r zunionstore "{slot}dst_key" 1 "{slot}zseta"] assert_equal 0 [r exists "{slot}dst_key"] }Enable this test as part of this fix.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisSortedSet.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.sortedset.AbstractZUnionStoreIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.sortedset.AbstractZInterStoreIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.acceptanceTest.resources.0001-configure-redis-tests.patch</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-10-8 01:00:00" id="9703" opendate="2021-10-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>redis benchmarks fail to compile after rename</summary>
      <description>Looks like Redis Benchmarks are failing to compile the baseline after the rename, since the module name is now different in HEAD than in the baseline.  The easiest fix might be to update the redis baseline to some Geode SHA after the big rename (the current redis benchmark baseline SHA is from Aug 18)</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-10-9 01:00:00" id="9707" opendate="2021-10-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>artifacts not archived when a ci job fails due to OOM</summary>
      <description>example: https://concourse.apachegeode-ci.info/builds/86869</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.rsync.code.down.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-3-10 01:00:00" id="9708" opendate="2021-10-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Clean up FunctionCommandsDistributedTestBase</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.FunctionCommandsOverHttpDUnitTest.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.FunctionCommandsDUnitTest.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.management.internal.cli.commands.FunctionCommandsDUnitTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-10-12 01:00:00" id="9717" opendate="2021-10-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>allow self-service addition of all JDK8 check in PR pipeline when desired</summary>
      <description>You can already add the windows label to a PR to also run the Windows tests; it would be helpful if you could just add a jdk8 label to also run &amp;#91;the rest of&amp;#93; the JDK8 tests...</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-12-12 01:00:00" id="9727" opendate="2021-10-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis Command COMMAND Should Throw Error With Invalid Arguments</summary>
      <description>The Redis command COMMAND should throw an error when provided with an illegal argument.Native Redis behaves as follows:COMMAND foo(error) ERR Unknown subcommand or wrong number of arguments for 'foo'. Try COMMAND HELP.Our existing COMMANDimplementation does not provide an error messages for the extra argument and just executes the COMMAND normally as if no additional arguments were provided.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.executor.server.COMMANDCommandExecutor.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.server.CommandIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-10-13 01:00:00" id="9731" opendate="2021-10-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix flaky PubSubIntegrationTest</summary>
      <description/>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.pubsub.AbstractPubSubIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-10-13 01:00:00" id="9733" opendate="2021-10-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Convert geode-unsafe to use junit5 test runner</summary>
      <description>As an isolated testable project, convert `geode-unsafe` to use the new JUnit5 test runner and APIs.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.properties</file>
      <file type="M">geode-unsafe.src.test.java.org.apache.geode.unsafe.internal.sun.nio.ch.DirectBufferTest.java</file>
      <file type="M">geode-unsafe.src.test.java.org.apache.geode.unsafe.internal.sun.misc.SignalTest.java</file>
      <file type="M">geode-unsafe.src.test.java.org.apache.geode.unsafe.internal.sun.misc.SignalHandlerTest.java</file>
      <file type="M">geode-unsafe.build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-10-17 01:00:00" id="9742" opendate="2021-10-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Resource leak due to Files.list and Files.walk</summary>
      <description>Stream opened by Files.list and Files.walk shoud be closed;</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.util.LogExporter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.utils.ZipUtils.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-11-20 01:00:00" id="9756" opendate="2021-10-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make Redundancy Level for Redis Servers Configurable</summary>
      <description>The redundancy level for Redis servers is currently hardcoded.  This should be configurable.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.redis.GeodeRedisServerRule.java</file>
      <file type="M">geode-for-redis.src.acceptanceTest.java.org.apache.geode.redis.GeodeRedisServerStartupDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionConfigJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.LonerDistributionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-10-20 01:00:00" id="9757" opendate="2021-10-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>a geode transaction done directly on a server that adds a value to an entry on a partitioned region does not store it in a CachedDeserializable</summary>
      <description>If you do a non-tx put directly on a member of a geode cluster (for example using a geode function), then the value is stored in the pr locally in a CachedDeserializable. But if you do the same op in a transaction it will store the object directly in the pr with no CachedDeserializable.I think the reason for this is that the original tx implementation did not support partitioned regions and on a non-pr region the local region stored the value directly. So when support was added for transactions on partitioned regions this part of the code was not customized for partitions and just used the old code.This can cause extra work to be done when fetching a value from the pr to send it back to a client. It can also cause bucket size exceptions if you directly change the value stored. A workaround to the bucket size exceptions is to make a copy of the value before changing it.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractMSetIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BucketRegionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXEntryState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRegion.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.TransactionCommitOnFarSideDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-11-23 01:00:00" id="9767" opendate="2021-10-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump netty to recommended version</summary>
      <description>latest is 4.1.69, we should be using 4.1.68 or 4.1.69 on all branches if possible</description>
      <version>1.12.5,1.13.4,1.14.0,1.15.0</version>
      <fixedVersion>1.12.6,1.13.5,1.14.1,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-for-redis.build.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.resources.expected.jars.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">dev-tools.release.license.review.sh</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-10-25 01:00:00" id="9771" opendate="2021-10-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>change CI target for Java API test</summary>
      <description>In preparation for moving the japicmp test-target in Gradle, move to a more generic target in our CI definition</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-10-26 01:00:00" id="9773" opendate="2021-10-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>RedisSetBenchmark failing with IllegalArgumentException: Argument &amp;#39;Region&amp;#39; is null</summary>
      <description>java.lang.IllegalArgumentException: Argument 'Region' is null at org.apache.geode.cache.partition.PartitionRegionHelper.isPartitionedRegion(PartitionRegionHelper.java:127) at org.apache.geode.cache.partition.PartitionRegionHelper.isPartitionedCheck(PartitionRegionHelper.java:139) at org.apache.geode.cache.partition.PartitionRegionHelper.assignBucketsToPartitions(PartitionRegionHelper.java:212) at org.apache.geode.benchmark.redis.tasks.InitRegion.run(InitRegion.java:37)</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-10-26 01:00:00" id="9775" opendate="2021-10-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI changes in preparation for change in cloud infrastructure</summary>
      <description>The way CI currently obtains some cloud infrastructure information will no longer be available when we migrate. This issue covers the necessary changes that can be done in advance to maintain compatibility.</description>
      <version>1.12.5,1.13.4,1.14.0,1.15.0</version>
      <fixedVersion>1.12.6,1.13.5,1.14.1,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.mass-test-run.jinja.template.yml</file>
      <file type="M">ci.pipelines.examples.jinja.template.yml</file>
      <file type="M">ci.pipelines.mass-test-run.deploy.pipeline.sh</file>
      <file type="M">ci.pipelines.examples.deploy.pipeline.sh</file>
      <file type="M">ci.scripts.create.instance.sh</file>
      <file type="M">ci.scripts.build.image.sh</file>
      <file type="M">ci.pipelines.images.jinja.template.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
      <file type="M">ci.pipelines.geode-build.deploy.pipeline.sh</file>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-11-1 01:00:00" id="9791" opendate="2021-11-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade Mockito dependency to 4.0.0</summary>
      <description>Upgrade Mockito dependency from version 3.12.4 to 4.0.0</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-membership.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.StatRecorderJUnitTest.java</file>
      <file type="M">geode-membership.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.GMSQuorumCheckerJUnitTest.java</file>
      <file type="M">geode-membership.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">geode-membership.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.GMSMembershipJUnitTest.java</file>
      <file type="M">geode-membership.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.fd.GMSHealthMonitorJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.results.LuceneGetPageFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.RawLuceneRepositoryManagerJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.partition.BucketTargetingMapTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.PageableLuceneQueryResultsImplJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.LuceneQueryImplJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.CallbackSamplerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.ObjIdConcurrentMapTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tx.RemoteFetchEntryMessageTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXStateStubTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.MessageIdExtractorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.UnregisterInterestTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.RemoveAllTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.KeySetTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.Invalidate70Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.GetClientPartitionAttributesCommand66Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.GetAllWithCallbackTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.GetAll70Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.DestroyRegionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.command.ContainsKey66Test.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.rebalance.BucketOperatorWrapperTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.NonLocalRegionEntryTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DistributedRegionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DistributedRegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DistributedRegionFunctionStreamingMessageTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DestroyMessageTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.control.ResourceAdvisorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.CacheOperationMessageTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BucketRegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractDistributedRegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractDiskRegionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionConfigJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.MemoryIndexStoreJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.index.HashIndexSetJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.CompiledInJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.AbstractOpTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.MembershipJUnitTest.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-11-1 01:00:00" id="9792" opendate="2021-11-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Client in some cases would send in AuthenticationRequest multiple times even when they share the same connection</summary>
      <description>It's observed that AuthenticationRequest will come in multiple times in the same connection by different threads.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.ConnectionFactoryImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ConnectionFactoryImpl.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.security.templates.TrackableUserPasswordAuthInit.java</file>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.security.MultiUserAPIDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.OpExecutorImplUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.UserAttributes.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.OpExecutorImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2021-12-30 01:00:00" id="9863" opendate="2021-11-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix redis benchmarks broken by grgit dependencies</summary>
      <description>Related to GEODE-9862, we need to apply the same fix to redis benchmarks.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-12-7 01:00:00" id="9873" opendate="2021-12-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add AuthenticationExpiredException message to Radish error response</summary>
      <description>When an AuthenticationExpiredException is detected we should return a Redis error containing the exception message. Since there is nothing similar in Redis we feel it's OK to deviate and do something more specific to Geode.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.netty.ExecutionHandlerContext.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-12-10 01:00:00" id="9888" opendate="2021-12-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump log4j to recommended version</summary>
      <description>let's get from 2.12/2.13/2.14 to 2.15.0 on all branches</description>
      <version>1.12.6,1.13.4,1.14.0,1.15.0</version>
      <fixedVersion>1.12.6,1.13.5,1.14.1,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.build.gradle</file>
      <file type="M">geode-docs.managing.logging.how.logging.works.html.md.erb</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-12-14 01:00:00" id="9898" opendate="2021-12-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump log4j to 2.16.0</summary>
      <description>while the current jog4j 2.15.0 is sufficient to prevent CVE-2021-44228, 2.16.0 is recommended as it fully disables jndi lookup </description>
      <version>None</version>
      <fixedVersion>1.12.7,1.13.6,1.14.2,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.build.gradle</file>
      <file type="M">geode-docs.managing.logging.how.logging.works.html.md.erb</file>
      <file type="M">geode-docs.managing.logging.configuring.log4j2.html.md.erb</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-1-15 01:00:00" id="9902" opendate="2021-12-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modify ZUnionStore and ZInterStore storing methods</summary>
      <description>Modify the way Redis SortedSets store the members for the ZUnionStore and ZInterStore. It should follow what Redis Sets are doing for SUnionStore and SInterStore.  This is specifically related to the use of DeltaInfos.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.test.java.org.apache.geode.redis.internal.data.RedisSortedSetTest.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisSortedSet.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.delta.DeltaType.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.AbstractRedisData.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZUnionStoreExecutor.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZInterStoreExecutor.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.AbstractZInterStoreIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-12-19 01:00:00" id="9905" opendate="2021-12-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump log4j to 2.17.1</summary>
      <description>Although Geode is not vulnerable to the log4j recursive substitution issue fixed in 2.17.0, it's probably a good idea to keep up with the latest log4j security patches</description>
      <version>None</version>
      <fixedVersion>1.12.8,1.13.7,1.14.3,1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.build.gradle</file>
      <file type="M">geode-docs.managing.logging.how.logging.works.html.md.erb</file>
      <file type="M">geode-docs.managing.logging.configuring.log4j2.html.md.erb</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-1-20 01:00:00" id="9908" opendate="2021-12-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Marker message is delivered to the durable client after all the puts messages</summary>
      <description>When a durable client with registered interests, connects to the server:1. it sends a readyForEvent message to the queue, the sever enqueues a marker message.2. then the server enqueues all the puts messages to the queue.3. the client disconnects (either by connection failure or by re-auth failure)4. the client reconnects back to another server, the other server makes its queue primary, and enqueues another marker message.5. if the first marker message hasn't been delivered to the client yet, the queue manager will delete the first marker message since marker messages should be conflated. Then all puts messages will be delivered before the marker message, thus the client won't put the values in its client cache.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifierTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifier.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-1-7 01:00:00" id="9933" opendate="2022-1-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Geode documentation</summary>
      <description>Create needed updates to `geode-docs` module New exceptions thrown in SecurityManager New Samples for implementation of security manager Some general mention of token based authentication and authorisation</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.security.implementing.authorization.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.authentication.html.md.erb</file>
      <file type="M">geode-docs.managing.security.authorization.example.html.md.erb</file>
      <file type="M">geode-docs.managing.security.authentication.overview.html.md.erb</file>
      <file type="M">geode-docs.managing.security.authentication.examples.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-1-10 01:00:00" id="9936" opendate="2022-1-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Throw error for commands with multiple keys that contain the wrong type key</summary>
      <description>For commands that take in multiple keys as arguments, it does not throw an error if the arguments consist of a valid key followed by a different type key.Fix it so a wrong type error is thrown and add two test. One test should takes in valid key followed by a different type key. Then the other test should switch the ordering of the keys. The following commands need to be checked: ZUNIONSTORE, ZINTERSTORE, SMOVE, SDIFF, and SDIFFSTORE</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisSortedSet.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisSet.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.AbstractZUnionStoreIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.AbstractZInterStoreIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.set.AbstractSInterIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.set.AbstractSDiffStoreIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.set.AbstractSDiffIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-5-10 01:00:00" id="9937" opendate="2022-1-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add convenience methods to FileWatchingX509Extended*Manager</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.filewatch.FileWatchingX509ExtendedTrustManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.filewatch.FileWatchingX509ExtendedKeyManager.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-3-12 01:00:00" id="9946" opendate="2022-1-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement LREM Command</summary>
      <description>Implement the LREM command. Acceptance CriteriaThe command has been implemented along with appropriate unit and system tests. The command has been tested using the redis-cli tool and verified against native redis.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.test.java.org.apache.geode.redis.internal.data.RedisListTest.java</file>
      <file type="M">geode-for-redis.src.test.java.org.apache.geode.redis.internal.data.collections.SizeableByteArrayListTest.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.NullRedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.delta.RemoveElementsByIndex.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.collections.SizeableByteArrayList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.AbstractRedisData.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.RedisCommandType.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.AbstractHitsMissesIntegrationTest.java</file>
      <file type="M">geode-for-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.geode.for.redis.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-2-12 01:00:00" id="9947" opendate="2022-1-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement LINDEX</summary>
      <description>Implement the LINDEX command. Acceptance Criteria The command has been implemented along with appropriate unit and system tests. The command has been tested using the redis-cli tool and verified against native redis.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.RedisCommandType.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.AbstractHitsMissesIntegrationTest.java</file>
      <file type="M">geode-for-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.geode.for.redis.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-3-12 01:00:00" id="9948" opendate="2022-1-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement LINSERT</summary>
      <description>Implement the LINSERT command. Acceptance CriteriaThe command has been implemented along with appropriate unit and system tests. The command has been tested using the redis-cli tool and verified against native redis.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.netty.StringBytesGlossary.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.NullRedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.delta.DeltaType.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.AbstractRedisData.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.RedisCommandType.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.AbstractHitsMissesIntegrationTest.java</file>
      <file type="M">geode-docs.tools.modules.geode.for.redis.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-2-12 01:00:00" id="9949" opendate="2022-1-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement LPUSHX</summary>
      <description>Implement the LPUSHX command.  Acceptance CriteriaThe command has been implemented along with appropriate unit and system tests. The command has been tested using the redis-cli tool and verified against native redis.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.NullRedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.RedisCommandType.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.executor.list.LPushExecutor.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.AbstractHitsMissesIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.list.AbstractLPushIntegrationTest.java</file>
      <file type="M">geode-docs.tools.modules.geode.for.redis.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-3-12 01:00:00" id="9950" opendate="2022-1-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement LRANGE</summary>
      <description>Implement the LRANGE command. Acceptance CriteriaThe command has been implemented along with appropriate unit and system tests. The command has been tested using the redis-cli tool and verified against native redis. </description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.NullRedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.RedisCommandType.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.AbstractHitsMissesIntegrationTest.java</file>
      <file type="M">geode-for-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.geode.for.redis.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-3-12 01:00:00" id="9951" opendate="2022-1-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement RPOP</summary>
      <description>Implement the RPOP command. Acceptance CriteriaThe command has been implemented along with appropriate unit and system tests. The command has been tested using the redis-cli tool and verified against native redis. </description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.NullRedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.delta.RemoveElementsByIndex.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.delta.DeltaType.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.RedisCommandType.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.CommandIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.AbstractHitsMissesIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.list.AbstractLPopIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.list.LPopDUnitTest.java</file>
      <file type="M">geode-for-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.geode.for.redis.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-4-12 01:00:00" id="9953" opendate="2022-1-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement LTRIM</summary>
      <description>Implement the LTRIM command. Acceptance CriteriaThe command has been implemented along with appropriate unit and system tests. The command has been tested using the redis-cli tool and verified against native redis.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.test.java.org.apache.geode.redis.internal.data.RedisListTest.java</file>
      <file type="M">geode-for-redis.src.test.java.org.apache.geode.redis.internal.data.collections.SizeableByteArrayListTest.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisSet.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.NullRedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.delta.DeltaType.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.collections.SizeableByteArrayList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.AbstractRedisData.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.RedisCommandType.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.list.AbstractRPopIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.list.AbstractLPopIntegrationTest.java</file>
      <file type="M">geode-for-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.geode.for.redis.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-3-12 01:00:00" id="9954" opendate="2022-1-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement RPUSH</summary>
      <description>Implement the RPUSH command. Acceptance CriteriaThe command has been implemented along with appropriate unit and system tests. The command has been tested using the redis-cli tool and verified against native redis.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.test.java.org.apache.geode.redis.internal.data.RedisListTest.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.RedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.NullRedisList.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.delta.DeltaType.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.data.AbstractRedisData.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.RedisCommandType.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.AbstractHitsMissesIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.list.LPushDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.key.RenameDUnitTest.java</file>
      <file type="M">geode-for-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.geode.for.redis.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-4-12 01:00:00" id="9955" opendate="2022-1-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement RPUSHX</summary>
      <description>Implement the RPUSHX command. Acceptance CriteriaThe command has been implemented along with appropriate unit and system tests. The command has been tested using the redis-cli tool and verified against native redis. </description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.RedisCommandType.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.executor.list.RPushExecutor.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.AbstractHitsMissesIntegrationTest.java</file>
      <file type="M">geode-for-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.geode.for.redis.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-22 01:00:00" id="996" opendate="2016-2-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>OffheapStats - fragmentation percentage calculation has to be revisited.</summary>
      <description>Fragmentation calculation is not correct before compaction or even after compaction if the largest fragment is &gt;= MAX_SLAB_SIZE.Currently the fragmentation is calculated as below. FS - LF ----------- * 100 FSFS: Free space found during compactionLF: Largest fragment found during compactioneg: For a free space of 100G and largest fragment = 2G (MAX_SLAB_SIZE)Fragmentation = (100G - 2G / 100G) * 100 ~ 98% (where as we want it to be close to 0 as the free space is not fragmented)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.OffHeapManagementDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.offheap.FreeListManagerTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.offheap.OffHeapStorage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.offheap.FreeListManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-1-13 01:00:00" id="9961" opendate="2022-1-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Server restart during processing of incoming batches, causes infinite loop till cache is closed.</summary>
      <description>Server restart during processing of incoming batches, causes infinite loop till cache is closed. This happens, if on originating site system property REMOVE_FROM_QUEUE_ON_EXCEPTION is set to false.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.command.GatewayReceiverCommand.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-1-13 01:00:00" id="9962" opendate="2022-1-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis INFO Command Support for Cluster Mode</summary>
      <description>The Redis INFO command does not show correct information for cluster mode. Research what changes must occur to support the correct information for cluster mode and ensure tickets are created for tracking. Acceptance Criteria Gaps in cluster mode supported are identified and tickets are created for tracking. </description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.commands.executor.server.InfoExecutor.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.InfoIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.AbstractInfoIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.commands.executor.server.InfoNativeRedisAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-1-14 01:00:00" id="9965" opendate="2022-1-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>geode release should not delete Kafka connector release</summary>
      <description>logic intended to retain 3 most-recent Geode minors inadvertently deleted kafka-connector-1.1.0, which is on a separate release track but shares the same release location in ASF</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.promote.rc.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-3-18 01:00:00" id="9969" opendate="2022-1-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The region name starting with underscore lead to missing disk store after restart</summary>
      <description>The problem is when using the region with a name starting with an underscore(allowed by documentation region_naming).If we stop one of the members and then rename the working dir(include disk store dir) to some new name and start the server with the name like renamed working dir, it will lead that we have the same disk-store-id in the listed disk-stores and in the missing disk store.This happens only if we are using the region with an underscore at the beginning.Steps to reproduce:Run locator and 4 servers, create region with name starting by underscore start locator --name=locator start server --name=server1 --server-port=40401 start server --name=server2 --server-port=40402 start server --name=server3 --server-port=40403 start server --name=server4 --server-port=40404 create region --name=_test-region --type=PARTITION_REDUNDANT_PERSISTENT --redundant-copies=1 --total-num-buckets=10 --enable-synchronous-disk=false query --query="select * from /_test-region"From another terminal (Kill server and rename working dir) kill -9 $(cat server4/vf.gf.server.pid) mv server4/ server5gfsh&gt;list disk-storesMember Name |               Member Id                | Disk Store Name | Disk Store ID----------- | -------------------------------------- | --------------- | ------------------------------------server1     | 192.168.0.145(server1:16916)&lt;v1&gt;:41001 | DEFAULT         | d5d17b43-4a06-408b-917f-08e5b2533ebeserver2     | 192.168.0.145(server2:17004)&lt;v2&gt;:41002 | DEFAULT         | 31d47cb4-718e-4b58-bde3-ae15b4657910server3     | 192.168.0.145(server3:17094)&lt;v3&gt;:41003 | DEFAULT         | f12850c6-a73b-443e-9ee0-87f0819ae6bcserver5     | 192.168.0.145(server5:17428)&lt;v6&gt;:41004 | DEFAULT         | 7a552fb3-e43d-4fa8-baa8-f6dc794cbf74gfsh&gt;show missing-disk-storesMissing Disk Stores           Disk Store ID             |     Host      | Directory------------------------------------ | ------------- | --------------------------------------------------------------------7a552fb3-e43d-4fa8-baa8-f6dc794cbf74 | 192.168.0.145 | /home/mkevo/apache-geode-1.15.0-build.0/bin/server4/.No missing colocated region foundStart a new server with a name like you rename your working dir from the restarted server. start server --name=server5 --server-port=40405Now we have the following output:gfsh&gt;list disk-storesMember Name | Member Id | Disk Store Name | Disk Store ID----------- | -------------------------------------- | --------------- | ------------------------------------server1 | 192.168.0.145(server1:16916)&lt;v1&gt;:41001 | DEFAULT | d5d17b43-4a06-408b-917f-08e5b2533ebeserver2 | 192.168.0.145(server2:17004)&lt;v2&gt;:41002 | DEFAULT | 31d47cb4-718e-4b58-bde3-ae15b4657910server3 | 192.168.0.145(server3:17094)&lt;v3&gt;:41003 | DEFAULT | f12850c6-a73b-443e-9ee0-87f0819ae6bcserver5 | 192.168.0.145(server5:17428)&lt;v6&gt;:41004 | DEFAULT | 7a552fb3-e43d-4fa8-baa8-f6dc794cbf74gfsh&gt;show missing-disk-storesMissing Disk Stores Disk Store ID | Host | Directory------------------------------------ | ------------- | --------------------------------------------------------------------7a552fb3-e43d-4fa8-baa8-f6dc794cbf74 | 192.168.0.145 | /home/mkevo/apache-geode-1.15.0-build.0/bin/server4/.No missing colocated region found</description>
      <version>1.12.8,1.13.6,1.14.2,1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.acceptanceTest.java.org.apache.geode.cache.persistence.MissingDiskStoreAfterServerRestartAcceptanceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionHelperJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegionHelper.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-1-18 01:00:00" id="9972" opendate="2022-1-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>remove &amp;#39;wait overnight&amp;#39; step from release process</summary>
      <description>now that maven central syncs within 1 hour and closer.cgi mirrors use the new dlcdn which syncs within 15 minutes, we can eliminate the overnight step in the release steps</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.README.md</file>
      <file type="M">dev-tools.release.promote.rc.sh</file>
      <file type="M">dev-tools.release.create.support.branches.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-1-18 01:00:00" id="9973" opendate="2022-1-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Documentation: socket-lease-time is not used to return sockets to a pool but to close them</summary>
      <description>The "Making sure you have enough sockets" Geode documentation section says the following about socket-lease-time (check underlined sentence): Peer-to-peer. For peer-to-peer threads that do not share sockets, you can use the socket-lease-time to make sure that no socket sits idle for too long. When a socket that belongs to an individual thread remains unused for this time period, the system automatically returns it to the pool. The next time the thread needs a socket, it creates a new socket. Actually, the system automatically closes the connection in the situation described instead of returning it to any pool.</description>
      <version>1.12.9,1.13.8,1.14.4,1.15.0</version>
      <fixedVersion>1.12.9,1.13.8,1.14.4,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.monitor.tune.socket.communication.have.enough.sockets.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-2-21 01:00:00" id="9981" opendate="2022-1-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>use more portable approach to getting crypto algorithm oid</summary>
      <description>instead of:`new AlgorithmId(AlgorithmId.md5WithRSAEncryption_oid)`this works with more jdk versions:AlgorithmId.get("MD5withRSA");</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.main.java.org.apache.geode.cache.ssl.CertificateBuilder.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-2-28 01:00:00" id="9998" opendate="2022-1-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update jedis library to the current latest (&gt;= 4.1.0)</summary>
      <description>The 4.x version has been out for a while and we're still on 3.6.x (3.8 is the last in the 3.x line).This is not a trivial change as various APIs have changed which will affect a lot of test code.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.string.AbstractBitPosIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.string.AbstractBitOpIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.AbstractZUnionStoreIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.AbstractZScanIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.AbstractZRevRangeIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.AbstractZRevRangeByScoreIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.AbstractZRangeIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.AbstractZRangeByScoreIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.AbstractZPopMinIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.AbstractZPopMaxIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.AbstractZInterStoreIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.set.AbstractSScanIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.ShutdownIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.AbstractSlowlogIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.AbstractInfoIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.server.AbstractHitsMissesIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.pubsub.AbstractSubscriptionsIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.pubsub.AbstractSubCommandsIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.key.ScanIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.key.AbstractScanIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.key.AbstractPersistIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.key.AbstractExpireIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.key.AbstractExistsIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.hash.AbstractHScanIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.hash.AbstractHashesIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.connection.AbstractEchoIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.cluster.ClusterIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.cluster.AbstractClusterIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.AbstractCommandPipeliningIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.UserExpirationDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.string.StringsKillMultipleServersDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.auth.AuthWhileServersRestartDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZRemRangeByScoreDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZRemRangeByRankDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZRemRangeByLexDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZRemDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZAddIncrOptionDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.key.RenameDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.key.AbstractRenameRedirectionsDUnitTest.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.redis.mocks.MockSubscriber.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-2-28 01:00:00" id="9999" opendate="2022-1-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update the Geode for Redis documentation</summary>
      <description>A few updates are needed to update the Geode for Redis documentation to better reflect the current implementation of the Redis module.</description>
      <version>1.15.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.geode.for.redis.html.md.erb</file>
      <file type="M">geode-docs.images.svg.geode.for.redis.svg</file>
    </fixedFiles>
  </bug>
</bugrepository>