<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="GEODE">
  
  
  <bug fixdate="2016-5-12 01:00:00" id="1996" opendate="2016-10-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>There are confusing references to "multicast" for locators ports</summary>
      <description>The documentation seems to contain confusing terms when it comes to locators and locators ports. In the documentation, we state that port the locator runs on as a multicast port. This is incorrect as the multicast port is configured by the property `mcast-port`.http://geode.apache.org/docs/guide/11/configuring/running/firewalls_ports.html - mentions By default, if not otherwise specified, Geode locators use the default multicast port 10334.We might have to scour the documentation for the term multicast and validate that this is the correct usage for that scenario</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.connect.html.md.erb</file>
      <file type="M">geode-docs.reference.statistics.statistics.list.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.udp.communication.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.socket.communication.tcpip.p2p.handshake.timeouts.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.socket.communication.setting.socket.buffer.sizes.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.socket.communication.have.enough.sockets.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.socket.communication.ephemeral.tcp.port.limits.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.sockets.and.gateways.html.md.erb</file>
      <file type="M">geode-docs.managing.monitor.tune.multicast.communication.runtime.considerations.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.firewalls.ports.html.md.erb</file>
      <file type="M">geode-docs.basic.config.config.concepts.distributed.system.member.configuration.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-9-14 01:00:00" id="3079" opendate="2017-6-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure new protocol shuts down cleanly</summary>
      <description>As a user of the new protocol, I need to be sure my servers shut down cleanly in order to manage my grid. Ensure new protocol shuts down cleanly and does not impact server restarts/shutdowns.Specifically, investigate:Implement at least the terminateNow(), emergencyClose(), and cleanup() methods (and do a check for others) on NewClientServerConnection. Make sure that we handle each one in a similar fashion to how the legacy ServerConnection does.AcceptorImpl and its callers use loadEmergencyClasses() to make sure that classes which are needed for a proper shutdown are loaded when the Cache starts, and prior to shutdown (which could be an OOM or similar situation).In the parent call (I think AcceptorImpl) add a call to our own method, and call the same method on any classes we depend on.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.GenericProtocolServerConnectionTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-4-21 01:00:00" id="3109" opendate="2017-6-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Correct artifacts published for Geode modules</summary>
      <description>Currently we are publishing Geode modules artifacts (jars) but these are not useful in themselves. We should be publishing the artifacts produced by geode-modules-assembly (zips) which contain not just the necessary code, but also configuration files.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat8.build.gradle</file>
      <file type="M">extensions.geode-modules-tomcat7.build.gradle</file>
      <file type="M">extensions.geode-modules-session.build.gradle</file>
      <file type="M">extensions.geode-modules-session-internal.build.gradle</file>
      <file type="M">extensions.geode-modules-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2017-7-13 01:00:00" id="3206" opendate="2017-7-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>lucene search results in gfsh are listed in reverse relevancy order</summary>
      <description>Using the lucene example in the pull request for GEODE-3202, execute one of the lucene searches that returns multiple results. For example:search lucene --name=simpleIndex --region=example-region --queryStrings="firstName:pat OR lastName:chive~" --defaultField=lastNameThe results should list employee with name 'Pat' first since it is an exact match and has a higher relevancy score. Instead it lists: key | value | score----- | --------------------------------------------------------------------------------------------------------------- | ----------10015 | EmployeeData [firstName=Jamie, lastName=Jive, emplNumber=10015, email= Jamie.Jive@example.com, salary=60000, .. | 0.1438410410028 | EmployeeData [firstName=Pat, lastName=Puts, emplNumber=10028, email= Pat.Puts@example.com, salary=75000, hour.. | 0.2876821Note the higher relevancy score is listed second.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsDUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.LuceneSearchResults.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-7-14 01:00:00" id="3207" opendate="2017-7-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Swagger library updates: update user guide</summary>
      <description>Doc impact (from a talk with Kevin Duling, 10/20/2016). See page http://geode.docs.pivotal.io/docs/rest_apps/using_swagger.html, "Using the Swagger UI to Browse REST APIs".Step 1 example showing gfsh command line to start Geode. Replace "-J=-Dgemfire.start-dev-rest-api=true" with "-start-rest-api".Delete "--J=-Dgemfire.http-service-bind-address=localhost"Delete both "jmx-manager" optionsStep 2, replace "localhost" with a placeholder for "this machine's default IP address".</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.rest.apps.using.swagger.html.md.erb</file>
      <file type="M">geode-docs.rest.apps.setup.config.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-7-14 01:00:00" id="3208" opendate="2017-7-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update JAR file references in docs</summary>
      <description>All references throughout the documentation that currently say lib/server-dependencies.jar lib/locator-dependencies.jarare no longer correct. Both change to lib/geode-dependencies.jar .</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.configuring.gfsh.html.md.erb</file>
      <file type="M">geode-docs.managing.management.jmx.manager.operations.html.md.erb</file>
      <file type="M">geode-docs.getting.started.15.minute.quickstart.gfsh.html.md.erb</file>
      <file type="M">geode-docs.developing.data.serialization.jsonformatter.pdxinstances.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.running.the.locator.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.running.the.cacheserver.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.persisting.configurations.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-7-17 01:00:00" id="3217" opendate="2017-7-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Reimplement GFSH Query as a single-step command</summary>
      <description>The GFSH Query command is overly complex due to its implementation as a "multistep" command. The current pagination is broken. We should re-implement it as a standard (single-step) command.</description>
      <version>None</version>
      <fixedVersion>1.2.1,1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.DataCommandMBeanTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.DataCommandsController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.Gfsh.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DataCommandFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.domain.DataCommandResult.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DataCommands.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-9-10 01:00:00" id="322" opendate="2015-9-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>All the relevent parameters are not set while creating HDFSStore from gfsh</summary>
      <description>Following parameters needs to be set while creating the HDFSStore through gfsh maxMemory minorCompactionThreads purgeInterval</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.functions.CreateHDFSStoreFunction.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-10-20 01:00:00" id="3275" opendate="2017-7-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Setting a LuceneSerializer should not cause PDX values to be deserialized</summary>
      <description>A LuceneSerializer should be given a PdxInstance, and not a deserialized value if the users value is serialized pdx data.Acceptance:If an the class for the pdx object is not on the classpath for the geode server, the serializer should still receive a pdx instance, without hitting any ClassNotFound exceptions.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneIndexMaintenanceIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  
  
  
  <bug fixdate="2017-8-22 01:00:00" id="3504" opendate="2017-8-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Add Experimental caveat for Redis and Auto-rebalance</summary>
      <description>The Redis adapter and the Auto-rebalance feature are not fully-baked. Add a caveat to their respective pages to alert the reader.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.redis.adapter.html.md.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.rebalancing.pr.data.html.md.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.automated.rebalance.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-8-23 01:00:00" id="3510" opendate="2017-8-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>GfshRule loses output from standard error</summary>
      <description>There is a bug in GfshRule that causes output to only show up from standard out, but not from standard error.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.management.internal.deployment.ExtendsAbstractFunction.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.test.dunit.rules.gfsh.ProcessLogger.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-8-24 01:00:00" id="3512" opendate="2017-8-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove gfsh encrypt reference page</summary>
      <description>GEODE-1958 removed gfsh encrypt from the code base. This ticket exists to remove the gfsh encrypt command reference page from the documentation.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.quick.ref.commands.by.area.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.gfsh.command.index.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.encrypt.html.md.erb</file>
      <file type="M">geode-docs.managing.security.encrypting.passwords.html.md.erb</file>
      <file type="M">geode-docs.managing.security.authentication.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.configuring.db.connections.using.JNDI.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2017-8-24 01:00:00" id="3515" opendate="2017-8-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: bad table format, multi-site firewall properties</summary>
      <description>The table in section "Properties for Firewall and Port Configuration in Multi-Site (WAN) Configurations" is coded in HTML with MarkDown links. The links show up literally, not formatted.See http://geode.apache.org/docs/guide/12/configuring/running/firewalls_ports.html and http://localhost:9292/geode/configuring/running/firewalls_multisite.htmlNeed to recode this passage to use either HTML or MD for both table &amp; links so it looks right on the screen.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.configuring.running.firewalls.ports.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.firewalls.multisite.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-9-21 01:00:00" id="352" opendate="2015-9-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>PRClientServerRegionFunctionExecutionSelectorNoSingleHopDUnitTest.testserverMultiKeyExecution_byInlineFunction fails intermittently with suspect string</summary>
      <description>Failure was on a private build.java.lang.AssertionError: Suspicious strings were written to the log during this run.Fix the strings or use DistributedTestCase.addExpectedException to ignore.-----------------------------------------------------------------------Found suspect string in log4j at line 2039java.net.SocketTimeoutException: Read timed out</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.batterytest.greplogs.ExpectedStrings.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.client.internal.ConnectionImpl.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.client.internal.ConnectionFactoryImpl.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-3-27 01:00:00" id="36" opendate="2015-5-27 00:00:00" resolution="Won&amp;#39;t Fix">
    <buginformation>
      <summary>Rename Geode CLI from gfsh to geode</summary>
      <description>As per a recent discussion on dev@ (http://mail-archives.apache.org/mod_mbox/incubator-geode-dev/201505.mbox/ajax/%3CCAF3UAT1FRANKyLUXeSG-m6yNXnTyw%3D3heo5350vF-80hvfZWYg%40mail.gmail.com%3E) majority seems to agree that Geode CLI should have a different name than GemFire's as a way to differentiate both projects and allow them to evolve as needed. In summary: The Geode CLI interface should be renamed to "geode" instead of gfsh.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.shell.Gfsh.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-10-13 01:00:00" id="3612" opendate="2017-9-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add gfsh support for GatewayReceiver hostname-for-senders attriibute</summary>
      <description>Configuring hostname-for-senders is not supported through gfsh. Support for this attribute needs to be added.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.topologies.and.comm.multi.site.configuration.setting.up.a.multisite.system.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.WANCommandTestBase.java</file>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.wancommand.CreateGatewayReceiverCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverFunctionArgs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateGatewayReceiverCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2017-4-28 01:00:00" id="3716" opendate="2017-9-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Monitoring steal time in stats</summary>
      <description>In virtualized deployments of Geode some latency issues can be mapped back to the hypervisor not giving the guest enough cycles. For this improvement, Geode will capture stolen time as presented by the OS in the /proc/stat file for Linux. Steal time represents the time the virtual processor is waiting to be scheduled on the physical processor.Geode already monitors several CPU fields and Geode will be adding in support to capture STEAL time.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.LinuxSystemStatsTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.platform.LinuxSystemStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.statistics.platform.LinuxProcFsStatistics.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2017-11-2 01:00:00" id="3947" opendate="2017-11-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>geode-dependency.jar does not have all the dependencies needed for deserializing custom object</summary>
      <description>JsonUtil recently added a dependency to common-beanutil, we need to include that in geode-dependency.jar</description>
      <version>1.3.0</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2017-11-6 01:00:00" id="3957" opendate="2017-11-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Strengthen anti-SYNCOOKIES host machine requirement</summary>
      <description>Current verbiage in "Host Machine Requirements" recommends disabling TCP SYN cookies on Linux platforms.Reports from users indicate that this should be mandatory, not merely optional.Suggest firewall protection to compensate for the absence of TCP SYN cookie security.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.monitor.tune.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.getting.started.system.requirements.host.machine.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2017-11-10 01:00:00" id="3969" opendate="2017-11-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protobuf protocol requests includes a CallbackArgs field</summary>
      <description>We eventually want to support allowing clients to pass arguments to cache listeners in their requests, but this functionality is not going to be present in v1. Having this field is therefore misleading and it should be removed.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.main.proto.v1.clientProtocol.proto</file>
      <file type="M">geode-protobuf.src.main.proto.v1.basicTypes.proto</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-11-13 01:00:00" id="3973" opendate="2017-11-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Do not start cluster configuration service asynchronously</summary>
      <description>starting CC asynchronously creates a gap between a locator startup and cluster configuration service being started and ready, which leads to some servers starting up not getting any cluster configuration.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalLocator.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-5-16 01:00:00" id="3985" opendate="2017-11-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>rolling upgrade tests accidentally rolls vms back to the current version</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.cache.wan.WANRollingUpgradeDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneSearchWithRollingUpgradeDUnit.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.tier.sockets.ClientServerMiscBCDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.standalone.DUnitLauncher.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ClientServerMiscDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.rollingupgrade.RollingUpgradeDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.rollingupgrade.RollingUpgrade2DUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-11-17 01:00:00" id="3995" opendate="2017-11-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Rename server_api.proto</summary>
      <description>The server_api.proto file contains the message definitions for locator messages, making the name rather misleading (these are actually the only messages the cache server can't handle).</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAvailableServersOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.LocatorConnectionDUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.proto.v1.server.API.proto</file>
      <file type="M">geode-protobuf.src.main.proto.v1.clientProtocol.proto</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufRequestUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAvailableServersOperationHandler.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-11-20 01:00:00" id="4000" opendate="2017-11-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add 1.3.0 version to geode-old-versions gradle file</summary>
      <description>Adding 1.3.0 version tag in geode-old-versions for backward compatibility and rolling upgrade tests.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-old-versions.build.gradle</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.LuceneIndexCreationProfile.java</file>
      <file type="M">geode-lucene.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-11-21 01:00:00" id="4002" opendate="2017-11-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Consolidate cache element descriptions</summary>
      <description>The &lt;cache&gt; Element Reference is implemented as two largely redundant files. This creates multiple paths to apparently identical, but duplicate, targets and confuses navigation. Consolidate into one file, fix up embedded references, update left-side subnav.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gfe.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.elements.ref.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.firewalls.ports.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-1-22 01:00:00" id="4009" opendate="2017-11-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use connection pooling JDBC library for PDX-JDBC</summary>
      <description>We need a JDBC library for connection pooling, etc.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcCliFunctionTest.java</file>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcLoaderIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcServiceConfigurationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlGeneratorIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TestConfigService.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TestableConnectionManager.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlHandlerTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.PreparedStatementCacheTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.JdbcConnectorServiceTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.ConnectionManagerUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.ConnectionConfigurationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcClusterConfigDistributedTest.java</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">geode-assembly.src.test.resources.expected.jars.txt</file>
      <file type="M">geode-connectors.build.gradle</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.AbstractJdbcCallback.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.FunctionContextArgumentProvider.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcCliFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.ConnectionConfiguration.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.ConnectionManager.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.InternalJdbcConnectorService.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.JdbcConnectorService.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.PreparedStatementCache.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcServiceConfiguration.java</file>
      <file type="M">geode-connectors.src.main.resources.META-INF.services.org.apache.geode.internal.cache.CacheService</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.AbstractJdbcCallbackTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandDunitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.FunctionContextArgumentProviderTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-4-28 01:00:00" id="4023" opendate="2017-11-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add precheckin tests to concourse pipeline</summary>
      <description>Improve the Geode Concourse pipeline by adding those tests run by the `precheckin` gradle target.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.build.sh</file>
      <file type="M">ci.pipelines.docker-images.yml</file>
      <file type="M">ci.docker.Dockerfile</file>
      <file type="M">ci.scripts.test-run.sh</file>
      <file type="M">ci.scripts.test-archive.sh</file>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-12-29 01:00:00" id="4029" opendate="2017-11-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Deployed jars may not be correct when multiple locators are in use</summary>
      <description>When we have more than one locator, if a jar is re-deployed it will not be propagated correctly to the 'remote' locators. i.e. the locators which are not directly executing the 'deploy' command.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DeployCommandRedeployDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.functions.UploadJarFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.callbacks.ConfigurationChangeListener.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ClusterConfigurationService.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-12-29 01:00:00" id="4030" opendate="2017-11-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to the latest dependencies</summary>
      <description>We need to update the following dependencies:name from to------------------------------------------------------------Jackson 2.8.6 2.9.2log4j2 2.8.2 2.10.0spring 4.3.6 4.3.13</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">geode-web.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-web-api.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-pulse.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.session.tests.GenericAppServerInstall.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPIsWithSSLDUnitTest.java</file>
      <file type="M">geode-assembly.src.main.dist.NOTICE</file>
      <file type="M">extensions.geode-modules.build.gradle</file>
      <file type="M">extensions.geode-modules-session.src.test.java.org.apache.geode.modules.session.junit.PerTestClassLoaderRunner.java</file>
      <file type="M">extensions.geode-modules-session.src.test.java.org.apache.geode.modules.session.internal.filter.SessionReplicationIntegrationJUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-1-14 01:00:00" id="404" opendate="2015-10-14 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Using AttributesMutator.addAsyncEventQueueId in a system with concurrent operations will cause failures</summary>
      <description>It's possible to add an async event queue after a region is created using AttributesMutator.addAsyncEventQueueId.However, this code appears to have some issues if there are concurrent operations executing. Every put goes through LocalRegion.checkSameSenderIdsAvailableOnAllNodes. This method will throw an exception if the async queue is not added on all nodes.Since the AsyncEventQueue will not be added at exactly the same time on all nodes, there will be a window of time when puts will throw exceptions when adding an AsyncEventQueue.In addition, this may be intentional, but new members that join a system must have the AEQ defined in their region attributes before creating the region. They cannot add the AEQ later. So the mutator is not useful as part of the initialization of a member.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlParserIntegrationJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexXmlGeneratorIntegrationJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneServiceImplJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.LuceneRebalanceJUnitTest.java</file>
      <file type="M">gemfire-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.distributed.LuceneFunctionReadPathDUnitTest.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.LuceneService.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.xml.LuceneIndexCreation.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneServiceImpl.java</file>
      <file type="M">gemfire-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.LuceneIndexForPartitionedRegion.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-12-4 01:00:00" id="4047" opendate="2017-12-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Update Lucene docs to include nested objects</summary>
      <description>GEODE-3239 added support for nested objects as proposed in this wiki page:https://cwiki.apache.org/confluence/display/GEODE/Lucene+Text+Search+on+Nested+ObjectThis needs to be added to the User Guide.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.lucene.integration.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-6-27 01:00:00" id="41" opendate="2015-5-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Dummy feature for gitflow validation</summary>
      <description>Dummy feature for gitflow validation</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">COMPILING.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-12-19 01:00:00" id="4124" opendate="2017-12-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Units for eviction flags in the gfsh help for create region are incorrect</summary>
      <description>The help text provided by gfsh for create region has the units of megabytes attached to eviction-entry-count instead of eviction-max-memory and should be fixed. eviction-entry-count Activates LRU eviction based on the region's entry count specified by this value (in megabytes). Required: false eviction-max-memory Activates LRU eviction based on the region's memory usage specified by this value. Required: false</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-1-27 01:00:00" id="4170" opendate="2017-12-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make index docs easier to locate</summary>
      <description>The sections on indexing are buried under the Querying section called Advanced Querying. They shouldn't be.Promote the indexing section to a first class subsection of Querying.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.querying.basics.query.basics.html.md.erb</file>
      <file type="M">geode-docs.developing.querying.basics.chapter.overview.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-1-6 01:00:00" id="4241" opendate="2018-1-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>jdbc-mapping is not stored in cluster configuration</summary>
      <description>jdbc-mapping should be saved to cluster config but is lost when a server is restarted.A jdbc-connection is saved and is available when a server is restarted.AC would be creating a jdbc-mapping, stopping and restarting the server..Trying to recreate a jdbc-mapping with the same region should error because it already exists. Describing the jdbc-mapping should work after a restart.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlGeneratorIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.xml.JdbcConnectorServiceXmlGenerator.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-4-24 01:00:00" id="4371" opendate="2018-1-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Dump stacks when ci pipeline is hung</summary>
      <description>When a test is hung and causes the pipeline to fail, it would be nice to have stacks be dumped into a location for post-mortem analysis</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.test-run.sh</file>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-2-25 01:00:00" id="4373" opendate="2018-1-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh &amp;#39;describe region&amp;#39; not showing accessor region description</summary>
      <description>gfsh not displaying accessor region description.on Develop:Command result for &lt;describe region --name=testRegion&gt;: ..........................................................Name : testRegionData Policy : persistent replicateHosting Members : server-5server-4server-3server-2Non-Default Attributes Shared By Hosting Members Type | Name | Value------ | --------------- | --------------------Region | data-policy | PERSISTENT_REPLICATE | disk-store-name | testDiskStore | size | 0 | scope | distributed-ack But in v1.3.0 it used to display accessor region description as a separate table.Command result for &lt;describe region --name=testRegion&gt;: ...........................................................Name : testRegionData Policy : persistent replicateHosting Members : server-3 server-2Non-Default Attributes Shared By Hosting Members Type | Name | Value------ | --------------- | --------------------Region | data-policy | PERSISTENT_REPLICATE | disk-store-name | testDiskStore | size | 0 | scope | distributed-ack...........................................................Name : testRegionData Policy : emptyAccessor Members : server-1Non-Default Attributes Shared By Accessor Members Type | Name | Value------ | ----------- | ---------------Region | data-policy | EMPTY | size | 0 | scope | distributed-ack</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.describe.html.md.erb</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeRegionDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.domain.RegionDescriptionPerMember.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DescribeRegionCommand.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-1-25 01:00:00" id="4379" opendate="2018-1-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh deploy should push jars not have the server pull them</summary>
      <description>Related to GEODE-4370 we shouldn't be creating a RemoteOutputStreamServer inside the gfsh VM.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.beans.FileUploaderTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementAgent.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.JmxOperationInvoker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.FileUploaderMBean.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.FileUploader.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-25 01:00:00" id="4380" opendate="2018-1-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Successful build of geode repo should initiate build of geode-examples repo</summary>
      <description>A task for building the geode-examples repo exists in the Concourse pipeline that builds the geode repo. That task is not triggered by a successful build of Geode but ought to be as changes in Geode can affect the Geode examples.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2018-1-25 01:00:00" id="4389" opendate="2018-1-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Overriding a cache listener from a template region is cumulative</summary>
      <description>Assuming I have a region (/TEMPLATE) with a cache listener (LISTENER1) and do:create region --template=/TEMPLATE --name=/COPY --cache-listener=LISTENER2Then I end up with the /COPY region containing both listeners. There should only be one.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.FetchRegionAttributesFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionCreateFunction.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2018-3-6 01:00:00" id="4788" opendate="2018-3-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>change back the behavior of test code of getSomeKeys to ignore exceptions</summary>
      <description>In GEODE-2673, getSomeKeys' behavior was changed to throw exception when detected some exceptions. We need to change it back to ignore the exceptions as test code. </description>
      <version>None</version>
      <fixedVersion>1.5.0,1.6.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionGetSomeKeys.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-10-23 01:00:00" id="479" opendate="2015-10-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bump Java Language level to 1.8</summary>
      <description>Change sourceCompatibility and targetCompatibility to 1.8 enabling Java 8 features in Geode codebase.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-3-7 01:00:00" id="4795" opendate="2018-3-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Inequality queries return UNDEFINED entries</summary>
      <description>The section describing OQL operators http://geode.apache.org/docs/guide/14/developing/query_additional/operators.html should state that inequality queries return results for which the search field is UNDEFINED.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.select.the.select.statement.html.md.erb</file>
      <file type="M">geode-docs.developing.query.additional.supported.keywords.html.md.erb</file>
      <file type="M">geode-docs.developing.query.additional.operators.html.md.erb</file>
      <file type="M">geode-docs.developing.query.additional.literals.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-6 01:00:00" id="5029" opendate="2018-4-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve docs for query timeout and low memory due to a query</summary>
      <description>The section labeled "Monitoring Queries for Low Memory" can use a bit of improvement. Separate the section into 2 sections: Queries and low memory Query timeout Make the prose clear that this is not just about monitoring, but about action that is taken (exceptions thrown) for queries.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.additional.advanced.querying.html.md.erb</file>
      <file type="M">geode-docs.developing.querying.basics.monitor.queries.for.low.memory.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-12-27 01:00:00" id="503" opendate="2015-10-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode can leak SSL keystore password via the log file</summary>
      <description>KeyStore password can be leaked via the log file, as this may get printed and is unintended. This could cause a security issue for some users by leaking information that could allow access to the keystore holding the SSL certificate used to validate connections between members.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.AbstractConfig.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-1-18 01:00:00" id="5102" opendate="2018-4-18 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Execute Lucene Rolling Upgrade tests with REINDEX flag enabled</summary>
      <description>The existing rolling upgrade tests must run with the reindex flag enabled to see the behavior of the indexing without region code when the reindex code is enabled</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LuceneSearchWithRollingUpgradeDUnit.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-18 01:00:00" id="5103" opendate="2018-4-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>During rebalance, a client node may miss a transactional event</summary>
      <description>During rebalance, a new primary bucket could be created on another node while the original primary bucket become secondary in a short period of time. If a transaction occurs on the primary bucket node, TXCommitMessage will be sent to the secondary primary bucket node. There is a race that a event could be missed to be added to the subscription queue when the now secondary bucket is being removed to satisfy the redundancy.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-18 01:00:00" id="5104" opendate="2018-4-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI output git SHA when updating passing reference file.</summary>
      <description>When concourse updates the file indicating the SHA that has passed all tests, print it out.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.update-passing-ref.sh</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-5-19 01:00:00" id="5111" opendate="2018-4-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>show missing-disk-stores sometimes does not show the missing disk stores</summary>
      <description>When geode logs are showing there is in fact a missing disk store, running the show-missing-disk-store command sometimes returns that there are no missing disk stores</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.SystemPropertyHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheDistributionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketPersistenceAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-19 01:00:00" id="5114" opendate="2018-4-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Archive UITest results</summary>
      <description>It would be great to archive test results for concourse job UITest.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-10-28 01:00:00" id="512" opendate="2015-10-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>unit test suspect string detector needs to provide more info</summary>
      <description>The suspect string detector used by the unit test framework only gives a single line that is suspect. This makes it hard to fix suspect string tickets.Often times the suspect is the beginning of a exception stack. If the entire call stack was included it would be helpful.Also having some context around the suspect string can help. For example what thread logged the suspect and what happened right before and after the suspect can help.Often times the actual logs are no longer available and getting the suspect string to reproduce can take lots of time.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.batterytest.greplogs.LogConsumer.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-24 01:00:00" id="5130" opendate="2018-4-24 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Refactor pipeline in anticipation of PR pipeline</summary>
      <description>In order to facilitate the upcoming PR Pipeline functionality, refactor the geode pipeline to be branch-independent, and dry up configuration via templates.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.yml</file>
      <file type="M">ci.pipelines.develop.yml</file>
      <file type="M">ci.pipelines.geode-build.base.yml</file>
      <file type="M">ci.scripts.test-run.sh</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2018-8-11 01:00:00" id="5308" opendate="2018-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - simplify terminology: "cache transactions" can be "transactions"</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.with.external.db.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.monitor.troubleshoot.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.how.cache.transactions.work.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.data.location.cache.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transaction.performance.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.by.region.type.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-6-11 01:00:00" id="5311" opendate="2018-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - simplify navigation for "Client Transactions" section</summary>
      <description>The "Client Transactions" section has short subsections which do not need entries in the left-hand navigation pane. Remove the subnav links for those subsections.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-11 01:00:00" id="5313" opendate="2018-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - consolidate transaction coding examples</summary>
      <description>The examples are short, but currently housed in separate files.Merge into a single file, simplify left-hand nav.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.suspend.resume.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.coding.examples.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactions.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactional.function.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.jca.adapter.example.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-7-3 01:00:00" id="5378" opendate="2018-7-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>AcceptanceTests fail because they cannot start service db</summary>
      <description>The build 125-127 have had 10 failures that were related to failure to start a service db in the JDBC tests.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.docker.initdocker</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-3-8 01:00:00" id="54" opendate="2015-6-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing javadocs</summary>
      <description>The current build process is not generating javadocs and once they're generated it's still be defined where to host the pages. Current Geode docs are hosted at http://geode-docs.cfapps.io/ but javadocs can be part of that or be hosted under geode.incubator.apache.org.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.docs.index.html</file>
      <file type="M">geode-site.website.Rules</file>
      <file type="M">geode-site.website.README.md</file>
      <file type="M">geode-site.website.layouts.header.html</file>
      <file type="M">geode-site.website.layouts.footer.html</file>
      <file type="M">geode-site.website.layouts.default.html</file>
      <file type="M">geode-site.website.content.community.index.html</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-7-9 01:00:00" id="5408" opendate="2018-7-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document gfsh remove -all option not avail for partitioned regions</summary>
      <description>The command reference page for gfsh remove in the documentation ought to explicitly say that the -all option is not available for partitioned regions.  The gfsh help text and the error message (if one tries to use the -all option do explicitly state this.  So, just the docs need updating.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.remove.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-11-11 01:00:00" id="541" opendate="2015-11-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The latest GemFire 800x clients can&amp;#39;t connect to Geode servers</summary>
      <description>GemFire 8009 introduced an on-the-wire compatibility change between client and server. Geode needs to be updated to support this change.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.Version.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunctionSingleHop.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteFunction66.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.CommandInitializer.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-8-19 01:00:00" id="5761" opendate="2018-9-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>jsonassert has incompatible transitive dependency on android-json</summary>
      <description>The fix for GEODE-5696 added geode-junit dependency on org.skyscreamer:jsonassert which brings in a transitive dependency on com.vaadin.external.google:android-json which is incompatible with geode-json.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-9-19 01:00:00" id="5762" opendate="2018-9-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix typos in transaction docs code examples</summary>
      <description>The variable used for the transaction manager object in the code examples within the docs section on Transactions is inconsistent.  Pick one variable name, and use it throughout all examples in a consistent way.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.directed.example.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-9-21 01:00:00" id="5765" opendate="2018-9-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>AlterRuntimeCommandDUnitTest slows down due to large numbers of classes loaded</summary>
      <description>We observed that several tests in this class are taking minutes when they should be taking a few seconds at most. After some debugging, we determined that the JVM itself is struggling to deal with having 100K+ classes loaded. They are loaded because the test is repeated starting and stopping the http service, which creates a classloader and causes soft references to all of the loaded classes to be cached.By setting a flag to clear the soft references faster, the test times go back to normal.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-25 01:00:00" id="5778" opendate="2018-9-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>On Windows - rsync fails intermittently</summary>
      <description>Can we just retry when rsync fails just like start_instance task?https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsGfshDistributedTest/builds/11https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsUnitTest/builds/10https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsAcceptanceTest/builds/10rsync fails intermittently with following error:Warning: Permanently added '35.184.2.138' (ECDSA) to the list of known hosts. 1 [main] rsync 3440 child_info_fork::abort: C:\ProgramData\chocolatey\lib\rsync\cwrsync_5.5.0_x86_free\bin\cyggcc_s-1.dll: Loaded to different address: parent(0x2E20000) != child(0x150000)rsync: fork failed in do_recv: Resource temporarily unavailable (11)rsync error: error in IPC code (code 14) at main.c(879) [Receiver=3.1.2]real 0m1.226suser 0m0.004ssys 0m0.020s</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
</bugrepository>