<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="GEODE">
  
  
  <bug fixdate="2016-3-9 01:00:00" id="1064" opendate="2016-3-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gateway sender receiver mutual authentication not working properly</summary>
      <description>While getting credential at gateway receiver, it is not passing correct gatewaySender server.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.HandShake.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-7-15 01:00:00" id="121" opendate="2015-7-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document Change: Rename GemFire to Geode</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-spark-connector.README.md</file>
      <file type="M">gemfire-spark-connector.doc.9.java.api.md</file>
      <file type="M">gemfire-spark-connector.doc.8.oql.md</file>
      <file type="M">gemfire-spark-connector.doc.7.save.dstream.md</file>
      <file type="M">gemfire-spark-connector.doc.6.save.rdd.md</file>
      <file type="M">gemfire-spark-connector.doc.5.rdd.join.md</file>
      <file type="M">gemfire-spark-connector.doc.4.loading.md</file>
      <file type="M">gemfire-spark-connector.doc.3.connecting.md</file>
      <file type="M">gemfire-spark-connector.doc.2.quick.md</file>
      <file type="M">gemfire-spark-connector.doc.1.building.md</file>
      <file type="M">gemfire-spark-connector.doc.10.demos.md</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-4-12 01:00:00" id="1217" opendate="2016-4-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>jansi should be marked as optional in the pom</summary>
      <description>jansi is only required for gfsh. The other gfsh related jars like jline and spring-shell are marked as optional. jansi should be marked as optional as well.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-4-12 01:00:00" id="1218" opendate="2016-4-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>jna should not be marked optional in the pom</summary>
      <description>JNA is technically not required for geode to function, but it is needed for common features like disk stores and off heap memory. It's better for this jar to be bundled by default than for a user to need to discover that it should be added to the classpath.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-4-14 01:00:00" id="1226" opendate="2016-4-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Release process should not require putting passwords in plain text files</summary>
      <description>Our current release steps require putting your apache password and gpg keyring password in a plain text file. https://cwiki.apache.org/confluence/display/GEODE/Release+Stepssigning.password=YourSuperSecretPassphrase # Plaintext passphrase to decrypt keynexusPassword=password # Your password on Apache's LDAP We should change the build to prompt for a password if required.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.publish.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-5-15 01:00:00" id="1234" opendate="2016-4-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Provide a test hook to track client transactions scheduled to be removed</summary>
      <description>Currently, these transactions are to be removed in default 180 seconds. Provide a test hook so that test could check what transactions are to be removed instead of waiting for 180 seconds.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.ClientHealthMonitor.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-4-20 01:00:00" id="1268" opendate="2016-4-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Clean up of multiple AvailablePort.getRandomAvailablePort invocations with AvailablePortHelper.getRandomAvailableTCPPorts</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.com.gemstone.gemfire.internal.cache.wan.misc.WANConfigurationJUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.security.ClientPostAuthorizationDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.security.ClientCQPostAuthorizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.P2PAuthenticationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.DeltaClientPostAuthorizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.ClientAuthorizationTestCase.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.ClientAuthorizationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LocatorDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.security.MultiUserDurableCQAuthzDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.security.ClientAuthzObjectModDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-7-15 01:00:00" id="128" opendate="2015-7-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Many expiration unit tests take too long to run on any type of PartitionedRegion</summary>
      <description>Here are some of the unit tests I noticed are taking too long to run:testCustomEntryIdleTimeout1 40 sec PassedtestCustomEntryIdleTimeout2 40 sec PassedtestCustomEntryTtl2 40 sec PassedtestEntryExpirationAfterMutate 40 sec PassedtestExtendedKeysValues 33 sec PassedtestCustomEntryTtl1 20 sec PassedtestEntryTtlInvalidate 20 sec PassedThese are all on PartitionedRegionDUnitTest. For non PR regions I see these same test methods only take 200ms.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache30.RegionTestCase.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.LocalRegion.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-1-25 01:00:00" id="1294" opendate="2016-4-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Overriding cluster-ssl properties does not work for http-service-ssl</summary>
      <description>when cluster-ssl-require-authentication=true the following properties are set:cluster-ssl-require-authentication=truegateway-ssl-require-authentication=truehttp-service-ssl-require-authentication=truejmx-manager-ssl-require-authentication=trueserver-ssl-require-authentication=trueWhen that property is not set (i.e. just defaulted) and cluster-ssl-enabled=true then only http-service-ssl-require-authentication=false is set and all the other require-authentication properties are true. With these settings, we require mutual auth for all connections except Pulse and gfsh over http.However, if I set the following which should really be mimicking the default settings for cluster-ssl-enabled=true:cluster-ssl-require-authentication=truehttp-service-ssl-require-authentication=falseThen I am unable to access Pulse as it still appears to require mutual auth.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SSLConfigurationFactoryJUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2016-9-8 01:00:00" id="1643" opendate="2016-7-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The new SecurityManager need to authenticate the gateway sender/receiver as well.</summary>
      <description>Currently the gateway authentication still only uses security-client-authenticator, need to have security-manager manage the authentication there as well.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.com.gemstone.gemfire.internal.cache.wan.misc.NewWanAuthenticationDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.ServerConnection.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-7-8 01:00:00" id="1646" opendate="2016-7-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Repackage New Security Classes Under org.apache.geode</summary>
      <description>Repackage New Security Classes Under org.apache.geode</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedSecurityPostProcessorDUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.management.LuceneServiceMXBean.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.cli.LuceneIndexCommands.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.security.CQPostProcessorDunitTest.java</file>
      <file type="M">geode-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.excludedClasses.txt</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.NoShowValue1PostProcessor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.security.GeodeSecurityUtil.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.security.shiro.CustomAuthRealm.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.AsyncEventQueueMXBean.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.CacheServerMXBean.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.DiskStoreMXBean.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.DistributedLockServiceMXBean.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.DistributedRegionMXBean.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.DistributedSystemMXBean.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.GatewayReceiverMXBean.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.GatewaySenderMXBean.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.ClientCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.ConfigCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.CreateAlterDestroyRegionCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.DataCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.DeployCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.DiskStoreCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.DurableClientCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.ExportImportSharedConfigurationCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.FunctionCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.IndexCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.MemberCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.MiscellaneousCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.PDXCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.QueueCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.RegionCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.StatusCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.WanCommands.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.security.MBeanServerWrapper.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.security.ResourceOperation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.LocatorMXBean.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.LockServiceMXBean.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.ManagerMXBean.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.MemberMXBean.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.RegionMXBean.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.security.GeodePermission.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.security.PostProcessor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.security.SecurityManager.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.security.templates.SamplePostProcessor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.security.templates.SampleSecurityManager.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.codeAnalysis.AnalyzeSerializablesJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.extension.mock.MockExtensionCommands.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.CommandManagerJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.GfshParserJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.shell.GfshExecutionStrategyJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.security.GeodePermissionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.security.GeodeSecurityUtilWithIniFileJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.security.GfshCommandsPostProcessorTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.security.JSONAuthorization.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.security.TestCommand.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.security.IntegratedSecurityCacheLifecycleIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
</bugrepository>