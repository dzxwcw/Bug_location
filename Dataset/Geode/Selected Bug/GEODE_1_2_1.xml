<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="GEODE">
  
  <bug fixdate="2017-10-22 01:00:00" id="3685" opendate="2017-9-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>MBean wrappers are not always applied correctly</summary>
      <description>Under certain conditions, MBean wrappers are not applied correctly.</description>
      <version>1.1.0,1.1.1,1.2.0,1.2.1</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.management.internal.cli.commands.StopServerAcceptanceTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.web.shell.HttpOperationInvokerSecurityTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.gfsh.GfshRule.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.gfsh.GfshExecution.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.shell.HttpOperationInvoker.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.http.support.SimpleHttpRequester.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.ShellCommandsController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.AbstractMultiPartCommandsController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.web.controllers.AbstractCommandsController.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementAgent.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-10-25 01:00:00" id="3701" opendate="2017-9-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve docs on hash index performance</summary>
      <description>Stronger language is warranted for hash indexes.In a simple test, there was an order of magnitude difference in load and GII performance between the two types of indexes.Range:Client: Loaded 2,000,000 entries in 20,487 msServer 1 Size: 1,272,322,680 bytesServer 2: GIIed in 12,523 msServer 2 Size: 1,272,088,544 bytesHash:Client: Loaded 2,000,000 entries in 257,016 msServer 1 Size: 1,228,010,280 bytesServer 2: GIIed in 218,983 msServer 2 Size: 1,228,161,664 bytesSo, the difference in size was ~45MB, but the difference in time was an order of magnitude.Better wording suggested for file developing/query_index/creating_hash_indexes.html:Using hash index will degrade put performance and recovery time substantially. If memory is not a concern, it is recommended that you use range index.</description>
      <version>None</version>
      <fixedVersion>1.3.0,1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.index.creating.hash.indexes.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-9-25 01:00:00" id="3702" opendate="2017-9-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>New framework for concurrency testing</summary>
      <description>From the mailing list discussion:I'd like to propose two things:1) We introduce a framework for writing unit tests of code that issupposed to be thread safe. This framework should let a developereasily write a test with multiple things going on in parallel. Theframework can then take that code and try to run it with differentthread interleavings.Here's an example of what this could look like:@RunWith(ConcurrentTestRunner.class)public class AtomicIntegerTest { @Test public void parallelIncrementReturns2(ParallelExecutor executor) throws ExecutionException, InterruptedException { AtomicInteger atomicInteger = new AtomicInteger(); executor.inParallel(() -&gt; atomicInteger.incrementAndGet()); executor.inParallel(() -&gt; atomicInteger.incrementAndGet()); executor.execute(); assertEquals(2, atomicInteger.get()); }2) We implement this framework initially using Java Pathfinder, butallow for other methods of testing the code to be plugged in forexample just running the test in the loop. Java pathfinder is coolbecause it can run the code with different interleavings but it doeshave some serious limitations.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
      <file type="M">gradle.rat.gradle</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.FilterProfile.java</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2017-10-28 01:00:00" id="3722" opendate="2017-9-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh search lucene command has a typo: queryStrings</summary>
      <description>The gfsh command search lucene takes a query string as a parameter. Unfortunately, that parameter is named queryStrings (plural). It should be queryString</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.lucene.integration.html.md.erb</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommands.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.cli.LuceneCliStrings.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.search.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-10-3 01:00:00" id="3740" opendate="2017-10-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document CachePerfStats diskTasksWaiting statistic</summary>
      <description>This statistic does not appear in the documentation, and it should.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.statistics.list.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-10-4 01:00:00" id="3744" opendate="2017-10-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Local region on a peer node that does not host the transaction should not involve in the transaction</summary>
      <description>Currently, if a peer N1 initiate a transaction, and the transaction is hosted on another peer N2, it can do operation on a local region within the transaction. If the N2 also has a local region has the same name, the transaction will forward the operation onto transaction host (N2), Product should throw exception if this is situation is detected.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PeerTXStateStub.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-10-4 01:00:00" id="3747" opendate="2017-10-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve DistributedTest framework with SharedErrorCollector rule</summary>
      <description>Improve the DistributedTest framework with the following changes: SharedErrorCollector to enable asynchronous assertions within every DUnit JVM</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.serializable.SerializableExternalResource.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.tests.SharedCountersDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.SharedCountersRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.RemoteInvoker.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.DistributedUseJacksonForJsonPathRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.DistributedRestoreSystemProperties.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.rules.DistributedDisconnectRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.dunit.cache.rules.CacheRule.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2017-10-5 01:00:00" id="3761" opendate="2017-10-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document the deprecation of manual start of gateway senders</summary>
      <description>Document that doing a manual start of gateway senders is deprecated.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
      <file type="M">geode-docs.topologies.and.comm.multi.site.configuration.setting.up.a.multisite.system.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.gfe.cache.xml.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-10-5 01:00:00" id="3762" opendate="2017-10-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Clarify cluster config docs around gfsh limitations</summary>
      <description>Incomplete gfsh help "worries customers," who think they can't "do anything with functions/loaders/writers." Also that they "didn't know they could use a combination of xml + java api + gfsh. Which is partially on them but could possibly be more called out in the docs."</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.configuring.running.default.file.specs.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.persist.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.quick.ref.commands.by.area.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.import.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.export-import.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2017-10-12 01:00:00" id="3828" opendate="2017-10-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve test coverage of clients when using delta</summary>
      <description>Need new test that covers the following: verify that empty (ie proxy) clients do not receive do not receive delta updates</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-2-13 01:00:00" id="3834" opendate="2017-10-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>BackupJUnitTest should use TemporaryFolder</summary>
      <description>BackupJUnitTest should use TemporaryFolder instead of System.getProperty("java.io.tmpdir").</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.ReplicateBackupPrepareAndFinishMsgDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.PartitionedBackupPrepareAndFinishMsgDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupPrepareAndFinishMsgDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.backup.BackupIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-11-18 01:00:00" id="3864" opendate="2017-10-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Include the Protobuf message definitions in the release artifact</summary>
      <description>In order for clients to be developed in languages not currently supported by Geode, the Protobuf message definition files need to be included in the release artifact.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.build.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2017-10-19 01:00:00" id="3873" opendate="2017-10-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Drop-down menu for earlier versions doesn&amp;#39;t work</summary>
      <description>The User Guide header contains a drop-down menu showing earlier versions of the manual, but the links don't work. Also, the drop-down for v1.1 doesn't have a link for the newer version, 1.2.This is both a currently broken implementation and a future maintenance headache.Since all (currently 3) versions are accessible from the Geode website's Docs page, let's just eliminate the version drop-down menu altogether.</description>
      <version>None</version>
      <fixedVersion>1.1.0,1.2.1,1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-book.config.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-2-19 01:00:00" id="3876" opendate="2017-10-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh command for custom expiry</summary>
      <description>When creating or altering a region the ability to add custom expiration is missing.It would be great to have something like this:alter/create region --name=regioName [--entry-idle-time-custom-expiry=customExpiryImplementationClassName]If the class implementing custom expiry also implements Declarable, we should add support for passing parameters to the init method.alter/create region --name=regionName --entry-idle-time-custom-expiry=CustomExpiryImplementation{'k':'v','k2':'v2'}The two options for custom expiry are:--entry-idle-time-custom-expiry=value--entry-time-to-live-custom-expiry=value</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.alter.html.md.erb</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserConverterTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ExpirationAttrsTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.converters.EnumConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.ExpirationAction.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserAutoCompletionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionFunctionArgs.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionCreateFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.RegionAlterFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommand.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-6-27 01:00:00" id="41" opendate="2015-5-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Dummy feature for gitflow validation</summary>
      <description>Dummy feature for gitflow validation</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">COMPILING.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-12-29 01:00:00" id="4175" opendate="2017-12-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: gfsh doc example for creating a hash index does not include --type=hash option</summary>
      <description>On the following page: http://geode.apache.org/docs/guide/13/developing/query_index/creating_hash_indexes.htmlthe gfsh example should include '--type=hash' in the command line.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.index.creating.hash.indexes.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-1-18 01:00:00" id="4316" opendate="2018-1-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add tests for jar deployment to check for server restarting</summary>
      <description>Check whether a function undeploy works correctly when a server is restarted</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DeployWithGroupsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-4-6 01:00:00" id="5029" opendate="2018-4-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve docs for query timeout and low memory due to a query</summary>
      <description>The section labeled "Monitoring Queries for Low Memory" can use a bit of improvement. Separate the section into 2 sections: Queries and low memory Query timeout Make the prose clear that this is not just about monitoring, but about action that is taken (exceptions thrown) for queries.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.additional.advanced.querying.html.md.erb</file>
      <file type="M">geode-docs.developing.querying.basics.monitor.queries.for.low.memory.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-12-27 01:00:00" id="503" opendate="2015-10-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode can leak SSL keystore password via the log file</summary>
      <description>KeyStore password can be leaked via the log file, as this may get printed and is unintended. This could cause a security issue for some users by leaking information that could allow access to the keystore holding the SSL certificate used to validate connections between members.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.AbstractConfig.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-8-11 01:00:00" id="5308" opendate="2018-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - simplify terminology: "cache transactions" can be "transactions"</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.with.external.db.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.monitor.troubleshoot.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.how.cache.transactions.work.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.data.location.cache.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transaction.performance.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.by.region.type.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-6-11 01:00:00" id="5311" opendate="2018-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - simplify navigation for "Client Transactions" section</summary>
      <description>The "Client Transactions" section has short subsections which do not need entries in the left-hand navigation pane. Remove the subnav links for those subsections.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-11 01:00:00" id="5313" opendate="2018-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - consolidate transaction coding examples</summary>
      <description>The examples are short, but currently housed in separate files.Merge into a single file, simplify left-hand nav.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.suspend.resume.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.coding.examples.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactions.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactional.function.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.jca.adapter.example.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
    </fixedFiles>
  </bug>
  
</bugrepository>