<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="GEODE">
  
  <bug fixdate="2016-4-28 01:00:00" id="1142" opendate="2016-3-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cleanup function calls during test tear down are not cleaning up the necessary files before execution of the next test.</summary>
      <description>The second iteration of test cases like SerialWANPropogationDUnitTest.testReplicatedSerialPropagationWithRemoteReceiverRestartedOnOtherNode always hangs because the second iteration of the test case takes into account the residual files from the previous test runs. These residual files remain because the clean up operations in test tear-down do not clean up all the files.Also cleanDiskDirs function needs modification as it is not able to clean up the BACKUPDiskStore files because it searches for a system property called "vmid" which was never set in the code.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.com.gemstone.gemfire.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.test.dunit.cache.internal.JUnit4CacheTestCase.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-4-29 01:00:00" id="1145" opendate="2016-3-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix decimal digit for LoadAvg on Pulse UI</summary>
      <description>In Pulse, LoadAvg calculation has too many decimal digits. (see attached screenshot)</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.resources.test.properties</file>
      <file type="M">geode-pulse.src.test.java.com.vmware.gemfire.tools.pulse.tests.PulseTest.java</file>
      <file type="M">geode-pulse.src.main.java.com.vmware.gemfire.tools.pulse.internal.service.MemberDetailsService.java</file>
      <file type="M">geode-pulse.src.main.java.com.vmware.gemfire.tools.pulse.internal.service.ClusterSelectedRegionService.java</file>
      <file type="M">geode-pulse.src.main.java.com.vmware.gemfire.tools.pulse.internal.service.ClusterMembersRGraphService.java</file>
      <file type="M">geode-pulse.src.main.java.com.vmware.gemfire.tools.pulse.internal.service.ClusterMemberService.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-7-14 01:00:00" id="115" opendate="2015-7-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Change gfsh Path for Integration Tests</summary>
      <description>The integration tests use gfsh to start Geode cluster. Currently the path of gfsh depends on GEMFIRE environment variable. User has to explicitly set GEMFIRE environment variable in order to run the tests. It is also possible that GEMFIRE environment variable points to a different version of GemFire, which may bring unexpected results. Therefore, it is better to use gfsh that comes out of the current Geode build.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-spark-connector.gemfire-spark-connector.src.it.scala.ittest.io.pivotal.gemfire.spark.connector.testkit.GemFireRunner.scala</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-12-30 01:00:00" id="1151" opendate="2016-3-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add new Geode committer Dave Barnes to web page</summary>
      <description>The community web page contains a list of committers. Dave Barnes is a new committer, so it is time to add his name to the list.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.community.index.html</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-4-21 01:00:00" id="1271" opendate="2016-4-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix sha256 file format and extension</summary>
      <description>The suffix for the SHA256 files should be sha256, not sha-256.The .sha256 file should work with 'sha256sum -c'The .md5 file should work with md5sum -c</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.publish.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-7-17 01:00:00" id="134" opendate="2015-7-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>AnalyzeSerializablesJUnitTest is failing after hdfs api changes</summary>
      <description>As part of updates for GEODE-10, serialized hdfs classes got modified. The changes are causing AnalyzeSerializablesJUnitTest to fail.</description>
      <version>1.0.0-incubating.M1</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.sanctionedSerializables.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-5-4 01:00:00" id="1347" opendate="2016-5-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh History is not getting cleared for credentials in clear text</summary>
      <description>two issues:1) clear password is echoed back on screen when doing gfsh -e "connect .... --user=a --password=b" on the command line.2) doing "hisotry --clear" does not clear the history on file, when exit and start gfsh again, the history comes back.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.shell.GfshHistoryJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.shell.jline.GfshHistory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.shell.GfshConfig.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.shell.Gfsh.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.Launcher.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.ShellCommands.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-5-20 01:00:00" id="1424" opendate="2016-5-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>PartitionRegionHelper local data methods return a Region whose isEmpty method may be wrong</summary>
      <description>PartitionRegionHelper has the methods: getLocalData and getLocalPrimaryData.They both return an instance of Region.The isEmpty method may return false even though no local data exists.To workaround this bug use the following instead of isEmpty: region.size() != 0</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.LocalDataSet.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-5-20 01:00:00" id="1425" opendate="2016-5-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>PartitionRegionHelper local data methods return a Region whose get(key, callbackArg) method does not correctly handle the callback argument</summary>
      <description>PartitionRegionHelper has the methods: getLocalData and getLocalPrimaryData.They both return an instance of Region.The get(key, callbackArg) does not do the following with the callbackArg:1. It does not check if the callbackArg is an instanceof PartitionResolver. So you can not use the callbackArg in this case to specify the resolver. Instead use the resolver region attribute or the key.2. The EntryOperation passed to the resolver getRoutingObject method will return the callbackArg from getNewValue and null from getCallbackArgument and false from isCallbackArgumentAvailable</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.LocalDataSetTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.LocalDataSet.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-5-24 01:00:00" id="1451" opendate="2016-5-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>OffheapRegionEntryHelper.decodeAddressToBytes method is confusing</summary>
      <description>The OffheapRegionEntryHelper.decodeAddressToBytes method has two boolean parameters that are confusing. It should be refactored so that the code is easier to understand.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.offheap.OffHeapRegionEntryHelperJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.offheap.TinyStoredObject.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.offheap.OffHeapRegionEntryHelper.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-5-25 01:00:00" id="1453" opendate="2016-5-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>if field value is null, creating index will fail with NPE</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.LuceneQueriesIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.ReflectionFieldMapperJUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.PdxFieldMapperJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.ReflectionLuceneSerializer.java</file>
      <file type="M">geode-lucene.src.main.java.com.gemstone.gemfire.cache.lucene.internal.repository.serializer.PdxLuceneSerializer.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-6-27 01:00:00" id="1464" opendate="2016-5-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>remove sqlfire references from geode-core</summary>
      <description>Currently the geode-core has 307 lines that reference "sqlf". This should all be dead code that can be cleaned up.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.PartitionedRegion.java</file>
      <file type="M">geode-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.partitioned.FetchEntriesMessageJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.execute.PRCustomPartitioningDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.BackwardCompatibilitySerializationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.disttx.DistributedTransactionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.LocatorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.MultiVMRegionTestCase.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.VersionedDataStream.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.Version.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.util.concurrent.CustomEntryConcurrentHashMap.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.util.ArrayUtils.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.SystemAdmin.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.shared.NativeCalls.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.offheap.ReferenceCountHelperImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.offheap.OffHeapHelper.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.offheap.annotations.OffHeapIdentifier.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.logging.PureLogWriter.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.logging.ManagerLogWriter.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.logging.LoggingThreadGroup.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.InternalDataSerializer.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.GemFireUtilLauncher.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.DSFIDFactory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.DSCODE.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.RegionAttributesCreation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.WrappedCallbackArgument.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.parallel.ParallelGatewaySenderQueue.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.GatewaySenderEventImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.GatewaySenderEventCallbackArgument.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.wan.AbstractGatewaySender.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.ValidatingDiskRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.UpdateOperation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.UpdateEntryVersionOperation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.UpdateAttributesProcessor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tx.DistTxEntryEvent.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.TXStateInterface.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.TXRegionState.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.TXRegionLockRequestImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.TXEntryState.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.TXEntry.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.GatewayReceiverCommand.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.SearchLoadAndWriteProcessor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.RemoteRemoveAllMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.RemotePutMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.RemotePutAllMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.RemoteInvalidateMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.RemoteGetMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.RemoteFetchVersionMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.RemoteFetchEntryMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.RemoteDestroyMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.RemoteContainsKeyValueMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.RegionMap.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.RegionEntry.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.QueuedOperation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.ProxyRegionMap.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.PRHARedundancyProvider.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.RemoveAllPRMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.RemoteFetchKeysMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.RegionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.rebalance.PartitionedRegionLoadModel.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.PutMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.PutAllPRMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.PRUpdateEntryVersionMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.PREntriesIterator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.PartitionMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.InvalidateMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.GetMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.FetchKeysMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.FetchEntryMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.FetchEntriesMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.FetchBulkEntriesMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.DestroyMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.ContainsKeyValueMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.PartitionedRegionDataStore.java</file>
      <file type="M">geode-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.cache.query.internal.IndexUpdater.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.DistributionMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.InternalDistributedSystem.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.ReplyProcessor21.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.AbstractDiskRegionEntry.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.AbstractRegionEntry.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.AbstractRegionMap.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.BucketAdvisor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.BucketRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.CachedDeserializableFactory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.CacheDistributionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.CacheServerLauncher.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.ColocationHelper.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.delta.Delta.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DestroyOperation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DiskEntry.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DiskInitFile.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DiskRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DiskWriteAttributesImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedCacheOperation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedPutAllOperation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedRegionFunctionStreamingMessage.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedRemoveAllOperation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DistTXState.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DistTXStateOnCoordinator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.EntryBits.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.EntryEventImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.EntryOperationImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.AbstractExecution.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.FunctionStreamingResultCollector.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.InternalExecution.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.InternalFunctionService.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.InternalRegionFunctionContext.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.MemberFunctionExecutor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.MultiRegionFunctionExecutor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.RegionFunctionContextImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.execute.ServerFunctionExecutor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.GridAdvisor.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.InitialImageOperation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.InternalRegionArguments.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.InvalidateOperation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.KeyInfo.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.KeyWithRegionContext.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.ListOfDeltas.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.Oplog.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.PartitionAttributesImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-1-31 01:00:00" id="1466" opendate="2016-5-31 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Branding: rename gemfire.properties file to geode.properties file</summary>
      <description>Currently, all runtime properties defined at startup are defined in gemfire.properties file and the namespace also starts with gemfire. It is desirable to rename this to geode.This will affect multiple modules (a lot of string literals) across the project and may create config migration issues later on, hence is important for the 1.0 release.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-9-31 01:00:00" id="1467" opendate="2016-5-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Branding: Rename servlet URLs from gemfire to geode</summary>
      <description>There are a few locations where gemfire references are used (excluding package hierarchy covered in GEODE-37):1. servlet URLs for Dev REST (gemfire-api) and Mgmt REST (gemfire/v1)2. extension modules (http session mgmt)3. others (spring-data?)(2) and (3) can be hairy as it may impact existing applications. A change post 1.0 would create complexity, therefore, should be carefully considered for 1.0 release.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.ConnectCommandWithHttpAndSSLDUnitTest.java</file>
      <file type="M">geode-web.src.main.webapp.WEB-INF.web.xml</file>
      <file type="M">geode-web.src.main.webapp.WEB-INF.gemfire-servlet.xml</file>
      <file type="M">geode-web-api.src.main.webapp.WEB-INF.web.xml</file>
      <file type="M">geode-web-api.src.main.webapp.WEB-INF.gemfire-api-servlet.xml</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.RestAgent.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.ManagementAgent.java</file>
      <file type="M">geode-assembly.src.test.java.com.gemstone.gemfire.rest.internal.web.controllers.RestAPITestBase.java</file>
      <file type="M">geode-assembly.src.test.java.com.gemstone.gemfire.rest.internal.web.controllers.RestAPIsWithSSLDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.com.gemstone.gemfire.rest.internal.web.controllers.RestAPIsOnMembersFunctionExecutionDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.com.gemstone.gemfire.rest.internal.web.controllers.RestAPIsOnGroupsFunctionExecutionDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.com.gemstone.gemfire.rest.internal.web.controllers.RestAPIsAndInterOpsDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.com.gemstone.gemfire.rest.internal.web.controllers.RestAPIOnRegionFunctionExecutionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-9-1 01:00:00" id="1471" opendate="2016-6-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>GatewayEventFilter callbacks are not invoked when an AsyncEventQueues is configured using xml</summary>
      <description>None of the GatewayEventFilter callbacks are invoked when configuring AsyncEventQueues using xml.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.MyAsyncEventListener.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.wan.asyncqueue.AsyncEventQueueValidationsJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.xmlcache.AsyncEventQueueCreation.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-8-24 01:00:00" id="154" opendate="2015-7-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>HDFS region with HeapLRU reports LowMemoryExceptions even when the region size is less then the eviction threshold</summary>
      <description>I discovered this while writing a test for GEODE-10. When a HDFS region with eviction is configured then it reports LowMemoryException even when we are not even close to the eviction threshold. With the stat It looks like that at the LowMemoryException was reported only with 20% of the heap usage.</description>
      <version>1.0.0-incubating.M1</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.control.HeapMemoryMonitor.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-7-28 01:00:00" id="1610" opendate="2016-6-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Registering interest using the ClientSession API doesn&amp;#39;t enqueue the initial value in the secondary queue</summary>
      <description>This ticket is based on GemFire Trac Tickets 52088 and 52476 and JIRA GEM-794.The initial value is only enqueued in the primary queue for a client and not enqueued in the secondary queue for that client. If failover occurs before the value is sent to the client, then the client doesn't receive the initial value.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.internal.cache.tier.sockets.DurableClientTestCase.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.internal.cache.tier.sockets.DurableClientSimpleDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.tier.sockets.CacheServerTestUtil.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.ClientInterestMessageImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.CacheClientProxy.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-7-30 01:00:00" id="1615" opendate="2016-6-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh unable to destroy region that has an hyphen in its name</summary>
      <description>Can be reproduced as follows:gfsh&gt;list regionsList of regions---------------region-nameregion_namegfsh&gt;destroy region --name=region_name"region_name" destroyed successfully.gfsh&gt;list regionsList of regions---------------region-namegfsh&gt;destroy region --name=region-nameCould not find a Region with Region path "region-name" in this Geode cluster. If region was recently</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.CreateAlterDestroyRegionCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.CreateAlterDestroyRegionCommands.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-7-20 01:00:00" id="1680" opendate="2016-7-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Change "list regions" to DATA:READ permissions</summary>
      <description>Currently, "list regions" requires CLUSTER:READ permissions. Since Region is a data resource, this should be DATA:READ</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.security.TestCommand.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.RegionCommands.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-7-21 01:00:00" id="1685" opendate="2016-7-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to JGroups 3.6.10.Final</summary>
      <description>Upgrade from 3.6.8 to 3.6.10. There are bugfixes for UFC/MFC, in particular, that we should have for the 1.0 release.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-8-22 01:00:00" id="1691" opendate="2016-7-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>EntryEvent getNewValue and getOldValue may fail with unexpected exception on offheap regions</summary>
      <description>The EntryEvent getNewValue and getOldValue methods may fail with unexpected exception on offheap regions. If these methods are called on an EntryEvent after the method it was passed to returns they are supposed to fail with IllegalStateException. But a race condition exists that can cause them to fail in other ways while trying to deserialize the object in the offheap memory.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.EntryEventImplTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.EntryEventImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-7-25 01:00:00" id="1694" opendate="2016-7-25 00:00:00" resolution="Implemented">
    <buginformation>
      <summary>Add committer Karen Smoler Miller to Geode website</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.community.index.html</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-8-26 01:00:00" id="1696" opendate="2016-7-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Apache Geode M3 Release</summary>
      <description>Capturing commits and tasks related to M3 release.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M3</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.properties</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-7-26 01:00:00" id="1700" opendate="2016-7-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The DiskRegionStats entriesInVM and entriesOnlyOnDisk for overflow lru regions with async disk may be wrong</summary>
      <description>The DiskRegionStats entriesInVM and entriesOnlyOnDisk for overflow lru regions with async disk may be wrong.A race condition exists that can cause the async queue to fill. In that case additional evictions are written to disk immediately instead of going into the queue. The code for this condition (handleFullAsyncQueue) was not updated when a recent change was made to how the stats entriesInVM and entriesOnlyOnDisk were updated.This can also cause partition balancing decisions to be wrong since this size of the bucket can be larger than it should be.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DiskEntry.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-8-28 01:00:00" id="1714" opendate="2016-7-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>DiskRegionStats entriesInVM counts invalid and removed entries</summary>
      <description>This is related to GEODE-93. I'm seeing that invalid entries are counted as being inVM. The inVM stat should only count entries that have an actual value stored in memory. In the case of "invalidate" the entry value is dropped so it that entry should no longer be counted as inVM.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.cache.DiskRegRecoveryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.cache30.DiskRegionDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DiskEntry.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.AbstractRegionMap.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.AbstractLRURegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-12-29 01:00:00" id="1715" opendate="2016-7-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh ignores socket buffer size and message time to live while starting a server.</summary>
      <description>These tunables are set in the serverLauncher instance used to create the command line but are not included in the command line.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.LauncherLifecycleCommands.java</file>
      <file type="M">geode-assembly.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.LauncherLifecycleCommandsJUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-8-1 01:00:00" id="1718" opendate="2016-8-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Region replace can return false when it should not and can fail with an NPE</summary>
      <description>The Region replace method may return false when it should have returned true. The can happen on a region configured with overflow when the entry being replaced has overflowed to disk. It can also happen on a persistent region if the entry being replaced has not yet initialized its value from disk.The NPE happens under the same configurations but when the expected old value was serialized with PDX and read-serialized was set to true.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.AbstractRegionMap.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.AbstractRegionEntry.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-8-3 01:00:00" id="1723" opendate="2016-8-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Need to merge previous revision from 82</summary>
      <description>We need to merge few revisions from 82 for performance improvement. Mostly reduce the garbage in gemfire client-server layer..</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.cache.query.cq.dunit.CqPerfUsingPoolDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.com.gemstone.gemfire.cache.query.cq.dunit.CqPerfDUnitTest.java</file>
      <file type="M">geode-cq.src.main.java.com.gemstone.gemfire.cache.query.internal.cq.CqServiceImpl.java</file>
      <file type="M">geode-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.Part.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.Message.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.ClientUpdateMessageImpl.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.CacheClientNotifier.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.partitioned.LockObject.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.ha.HARegionQueue.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.ha.HAContainerWrapper.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.ha.HAContainerRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.ha.HAContainerMap.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.FilterRoutingInfo.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.DistributedCacheOperation.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.BucketRegion.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-8-4 01:00:00" id="1726" opendate="2016-8-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Clean up compilation warnings in new GMS</summary>
      <description>We have not made a serious pass over the new GMS classes to clean up compilation warnings. IntelliJ shows a lot of unused parameters, non-final variables used for synchronization, etc.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.sanctionedSerializables.txt</file>
      <file type="M">geode-core.src.test.resources.com.gemstone.gemfire.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.NetView.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.Services.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.ServiceConfig.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.mgr.GMSMembershipManager.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.messenger.JGroupsMessenger.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.messenger.GMSQuorumChecker.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.locator.GMSLocator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.GMSUtil.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.fd.GMSHealthMonitor.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-8-23 01:00:00" id="1811" opendate="2016-8-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Runtime dependencies listed as optional in build.gradle are not optional in the pom</summary>
      <description>We added a flag to mark dependencies as optional in build gradle, using ext.optional. We've added that flag to several dependencies in build.gradle.Unfortunately, we were only honoring the flag for compile dependencies, not runtime dependencies. So with geode M3, the following dependencies are still not optional at runtime, even though they are marked as optional in geode-core/build.gradle. &lt;dependency&gt; &lt;groupId&gt;org.fusesource.jansi&lt;/groupId&gt; &lt;artifactId&gt;jansi&lt;/artifactId&gt; &lt;version&gt;1.8&lt;/version&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-slf4j-impl&lt;/artifactId&gt; &lt;version&gt;2.6.1&lt;/version&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-jcl&lt;/artifactId&gt; &lt;version&gt;2.6.1&lt;/version&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-jul&lt;/artifactId&gt; &lt;version&gt;2.6.1&lt;/version&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt;</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.publish.gradle</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-12-30 01:00:00" id="1831" opendate="2016-8-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Function gets executed twice on server with gateways if groups are configured</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.LocatorTestBase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.client.internal.LocatorLoadBalancingDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheServerImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-9-1 01:00:00" id="1834" opendate="2016-9-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Security-properties-file can&amp;#39;t be renamed or put into another directory</summary>
      <description>When starting a locator with SSL:gfsh&gt;start locator --name=locator --security-properties-file=./gfsecurity.propertiesit works fineBut if I rename the properties file from *gfsecurity.properties* to say *gemfireLocatorSSL.properties*, it is giving error gfsh&gt;start locator --name=locator --security-properties-file=./gemfireLocatorSSL.propertiesor if I moved the file to another folder, gfsh&gt;start locator --name=locator --security-properties-file=./dipti/gfSecurity.propertiesthis still would give error.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.JmxManagerLocatorRequest.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.ShellCommands.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-12-6 01:00:00" id="1862" opendate="2016-9-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Getting all durable CQs from server may return empty list</summary>
      <description>This is the same as GEM-909.Attempting to get all durable CQs from the server using the QueryService getAllDurableCqsFromServer method may return an empty list. The response changes depending on which server the GetDurableCQs command is executed on. If I have one server, the response is always correct. If I have more than one, its often not correct. In the case where its not correct, the GetDurableCQs command is not executed on the server containing the primary or redundant queue.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.test.java.org.apache.geode.internal.cache.tier.sockets.DurableClientSimpleDUnitTest.java</file>
      <file type="M">geode-cq.src.main.java.org.apache.geode.cache.client.internal.GetDurableCQsOp.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ConnectionStats.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-8-5 01:00:00" id="188" opendate="2015-8-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gfsh uses the wrong name for the gateway substitution filter in &amp;#39;create async-event-queue&amp;#39; command</summary>
      <description>'create async-event-queue' command uses gateway-event-substitution-listener and GatewayEventSubstitutionListener instead of gateway-event-substitution-filter and GatewayEventSubstitutionFilter</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.web.controllers.QueueCommandsController.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.functions.CreateAsyncEventQueueFunction.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.QueueCommands.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-9-12 01:00:00" id="1885" opendate="2016-9-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing subsctiption event with Offheap partitioned region during bucket rebalance.</summary>
      <description>During transaction operation, if there is concurrent redundant bucket re-balance is in progress, the client can miss a subscription event, if its primary queue is hosted on the node where bucket gets moved from.Consider, three node cluster N1, N2 and N3. With: Client C1 connected to node N2. Primary bucket region B1 on N1. And secondary bucket for B1 on N2. A Transaction is started on N2, which creates a entry on B1. When the TX is committed. At the same time the Bucket B1 on N2 is moved to N3. The Tx commit message from N1 is sent to N2. This also includes the subscription message, satisfying the client C1. On N2, for offheap region, when bucket is not found locally, the exception response is sent to back to N1 without processing the subscription message.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ClientServerTransactionDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractDiskRegionEntry.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-1-13 01:00:00" id="1887" opendate="2016-9-13 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Client PROXY region should delegate all operations to server</summary>
      <description>Currently a ClientRegionShortcut.PROXY region sends operations like put() and get() over to the server, but for operations like size() and isEmpty() it just consults the local state on the client and returns 0 and true respectively, even though there may be data in the servers for that region.A PROXY region should not attempt to consult its local state for any operation.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ClientServerMiscDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-1-14 01:00:00" id="2003" opendate="2016-10-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Executing a function using REST API fails with full package-qualified name</summary>
      <description>While verifying integrated security using for all REST API's, I used gfsh to start a locator, a server, and create a single region with 2 data entries. I then wrote and deployed a simple function (io.build.test.Sample).In a separate terminal I was able to successfully get a list of the function using the GET API, but when I tried to execute the function using the following command:curl -u dataWriter:123 -X POST -i http:80/gemfire-api/v1/functions/io.build.test.SampleI get the following exception:"org.apache.geode.cache.execute.FunctionException: Function named io.build.test is not registered to FunctionService"Note: the name of the function, Sample, was dropped in the exception message.When I implemented the getId() method for the function to shorten the name to 'foo', the same POST API worked successfully:curl -u dataWriter:123 -X POST -i http:80/gemfire-api/v1/functions/fooIs there a limit to the length or format for the function name with the POST API?</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-api.src.main.java.org.apache.geode.rest.internal.web.controllers.FunctionAccessController.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPITestBase.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPIsOnMembersFunctionExecutionDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPIsOnGroupsFunctionExecutionDUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.rest.internal.web.controllers.RestAPIOnRegionFunctionExecutionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-11-9 01:00:00" id="2090" opendate="2016-11-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update off-heap statistics documentation</summary>
      <description>The gfsh show metrics command reference page is missing the optional --category=offheap option.Also, verify if the statistic compactions ought to be called defragmentations. If so, fix the error.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.show.html.md.erb</file>
      <file type="M">geode-docs.reference.statistics.statistics.list.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-11-10 01:00:00" id="2091" opendate="2016-11-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>PartitionedRegion containsValueForKey() in transaction may return false if there is a rebalance</summary>
      <description>PartitionedRegion containsValueForKey() in transaction may return false if the bucket contains the entry is moved to other node due to rebalance.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.execute.PRTransactionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.disttx.PRDistTXWithVersionsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.disttx.PRDistTXDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tx.PartitionedTXRegionStub.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateStub.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-11-22 01:00:00" id="2135" opendate="2016-11-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Doc update of schema location</summary>
      <description>Throughout the documentation, update the schema location to behttp://geode.apache.org/schema/cache/cache-1.0.xsdIncorrect location uses geode.incubator.apache.org</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.elements.ref.html.md.erb</file>
      <file type="M">geode-docs.managing.troubleshooting.diagnosing.system.probs.html.md.erb</file>
      <file type="M">geode-docs.managing.region.compression.region.compression.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.configuring.db.connections.using.JNDI.html.md.erb</file>
      <file type="M">geode-docs.basic.config.the.cache.managing.a.peer.server.cache.html.md.erb</file>
      <file type="M">geode-docs.basic.config.the.cache.managing.a.client.cache.html.md.erb</file>
      <file type="M">geode-docs.basic.config.the.cache.intro.cache.management.html.md.erb</file>
      <file type="M">geode-docs.basic.config.data.regions.managing.data.regions.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2016-11-23 01:00:00" id="2139" opendate="2016-11-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: rename "uninstall_gemfire" doc source to "uninstall_geode"</summary>
      <description>Rename uninstall_gemfire.html.erb to uninstall_geode.html.erb, update cross-references and navigation links.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.prereq.and.install.html.md.erb</file>
      <file type="M">geode-docs.getting.started.uninstall.gemfire.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-11-29 01:00:00" id="2147" opendate="2016-11-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: Remove references to RPM installation</summary>
      <description>There is no RPM installation mechanism for Geode. The User Manual contains at least one reference to RPM installation in Tools and Modules &gt; gfsh &gt; Starting gfsh. This reference needs to be removed, and the rest of the user manual checked for other occurrences.</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.starting.gfsh.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-1-30 01:00:00" id="2153" opendate="2016-11-30 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>PostProcessor security</summary>
      <description>I have started a server and locator using the sample RedactingPostProcessor implementation. I created a /customers region and inserted a Customer: Region&lt;String, Customer&gt; region = connectToRegion("customers");Customer customer = new Customer(1L, "FirstName", "LastName", "123-456-7890");region.put("galen", customer);The following query and get operation show our customer's SSN getting redacted as expected:Customer customerFromGet = region.get("galen"); //{ type = com.jaredjstewart.Customer, customerId = 1, firstName = FirstName, lastName = LastName, ssn = ********** }Object customerFromQuery = queryService.newQuery("select * from /customers").execute();//{ type = com.jaredjstewart.Customer, customerId = 1, firstName = FirstName, lastName = LastName, ssn = ********** }However, it is possible to leak information by accessing the field which is supposed to be redacted in a where clause: Object customer = queryService.newQuery("select c from /customers c where c.socialSecurityNumber='123-456-7890'").execute(); //this redacts but still leaks the vital informationIt is also possible to query the field directly:Object customerSSN = queryService.newQuery("select c.socialSecurityNumber from /customers c").execute();//[123-456-7890]</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.security.post.processing.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.security.html.md.erb</file>
      <file type="M">geode-docs.managing.security.enable.security.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-5-11 01:00:00" id="23" opendate="2015-5-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Generated POM missing JLine repo and needs to remove spring-data-gemfire</summary>
      <description>The POM file is missing the repository location for jline. In addition the spring-data-gemfire dependency needs an exclusion so it does not pull in gemfire-7.0.2.See attached test case.</description>
      <version>1.0.0-incubating.M1</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-1-16 01:00:00" id="2300" opendate="2017-1-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document default names for start locator/server</summary>
      <description>Documentation for GEODE-182</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.topologies.and.comm.cs.configuration.client.server.example.configurations.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.tour.of.gfsh.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.getting.started.gfsh.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command.scripting.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
      <file type="M">geode-docs.getting.started.15.minute.quickstart.gfsh.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-1-9 01:00:00" id="2641" opendate="2017-3-9 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>export logs help strings has [--group=value(nullvalue)*] [--member=value(nullvalue)*]</summary>
      <description>export logs help strings has &amp;#91;--group=value(nullvalue)*&amp;#93; &amp;#91;--member=value(nullvalue)*&amp;#93; Also, merge-log option is deprecated, need to say that in the help</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.resources.org.apache.geode.management.internal.cli.commands.golden-help-offline.properties</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-5-11 01:00:00" id="2912" opendate="2017-5-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Real hot deploy of functions via gfsh</summary>
      <description>A user ought to be able to deploy a Jar file containing a new version of a Function without resulting in any failed function executions.</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DeployCommandRedeployDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.JarDeployer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DeployedJar.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-5-11 01:00:00" id="2913" opendate="2017-5-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Lucene documentation</summary>
      <description>Improvements to the code base that need to be reflected in the docs: Change LuceneService.createIndex to use a factory patternluceneService.createIndex(region, index, ...)changes toluceneService.createIndexFactory().addField("field1name").addField("field2name").create() Lucene indexes will NOT be stored in off-heap memory. Document how to configure an index on accessors - you still need to create the Lucene index before creating the region, even though this member does not hold any region data.If the index is not defined on the accessor, an exception like this will be thrown while attempting to create the region:&amp;#91;error 2017/05/02 15:19:26.018 PDT &lt;main&gt; tid=0x1&amp;#93; java.lang.IllegalStateException: Must create Lucene index full_index on region /data because it is defined in another member.Exception in thread "main" java.lang.IllegalStateException: Must create Lucene index full_index on region /data because it is defined in another member.at org.apache.geode.internal.cache.CreateRegionProcessor$CreateRegionMessage.handleCacheDistributionAdvisee(CreateRegionProcessor.java:478)at org.apache.geode.internal.cache.CreateRegionProcessor$CreateRegionMessage.process(CreateRegionProcessor.java:379) Do not need to create a Lucene index on a client with a Proxy cache. The Lucene search will always be done on the server. Besides, you can't create an index on a client. If you configure Invalidates for region entries (alone or as part of expiration), these will NOT invalidate the Lucene indexes.The problem with this is the index contains the keys, but the region doesn't, so the query produces results that don't exist.In this test, the first time the query is run, it produces N valid results. The second time it is run it produces N empty results: load entries run query invalidate entries run query again Destroying a region will NOT automatically destroy any Lucene index associated with that region. Instead, attempting to destroy a region with a Lucene index will throw a colocated region exception.An IllegalStateException is thrown:java.lang.IllegalStateException: The parent region &amp;#91;/data&amp;#93; in colocation chain cannot be destroyed, unless all its children [/cusip_index#_data.files] are destroyedat org.apache.geode.internal.cache.PartitionedRegion.checkForColocatedChildren(PartitionedRegion.java:7231)at org.apache.geode.internal.cache.PartitionedRegion.destroyRegion(PartitionedRegion.java:7243)at org.apache.geode.internal.cache.AbstractRegion.destroyRegion(AbstractRegion.java:308)at DestroyLuceneIndexesAndRegionFunction.destroyRegion(DestroyLuceneIndexesAndRegionFunction.java:46) The process to change a Lucene index using gfsh: 1. export region data 2. destroy Lucene index, destroy region 3. create new index, create new region without user-defined business logic callbacks 4. import data with option to turn on callbacks (to invoke Lucene Async Event Listener to index the data) 5. alter region to add user-defined business logic callbacks Make sure there are no references to replicated regions as they are not supported. Document security implementation and defaults. If a user has security configured for their cluster, creating a Lucene index requires DATA:MANAGE privilege (similar to OQL), but doing Lucene queries requires DATA:WRITE privilege because a function is called (different from OQL which requires only DATA:READ privilege). Here are all the required privileges for the gfsh commands: create index requires DATA:MANAGE:region describe index requires CLUSTER:READ list indexes requires CLUSTER:READ search index requires DATA:WRITE destroy index requires DATA:MANAGE:region A user cannot create a Lucene index on a region that has eviction configured with local destroy. If using Lucene indexing, eviction can only be configured with overflow to disk. In this case, only the region data is overflowed to disk, NOT the Lucene index. An UnsupportedOperationException is thrown:&amp;#91;error 2017/05/02 16:12:32.461 PDT &lt;main&gt; tid=0x1&amp;#93; java.lang.UnsupportedOperationException: Lucene indexes on regions with eviction and action local destroy are not supportedException in thread "main" java.lang.UnsupportedOperationException: Lucene indexes on regions with eviction and action local destroy are not supportedat org.apache.geode.cache.lucene.internal.LuceneRegionListener.beforeCreate(LuceneRegionListener.java:85)at org.apache.geode.internal.cache.GemFireCacheImpl.invokeRegionBefore(GemFireCacheImpl.java:3154)at org.apache.geode.internal.cache.GemFireCacheImpl.createVMRegion(GemFireCacheImpl.java:3013)at org.apache.geode.internal.cache.GemFireCacheImpl.basicCreateRegion(GemFireCacheImpl.java:2991) We can use the same field name in different objects where the field has a different data type, but this may have unexpected consequences. For example, if I created an index on the field SSN with these following entries Object_1 object_1 has String SSN = "1111" Object_2 object_2 has Integer SSN = 1111 Object_3 object_3 has Float SSN = 1111.0Integers and Floats will not be converted into strings. They remain as IntPoint and FloatPoint in the Lucene world. The standard analyzer will not try to tokenize these value. The standard analyzer will only try to break up string values. So, If I do a string search for "SSN: 1111" , Lucene will return object_1. If I do an IntRangeQuery for upper limit : 1112 and lower limit : 1110 , Lucene will return object_2 If I do a FloatRangeQuery with upper limit 1111.5 and lower limit : 1111.0 , Lucene will return object_3 Similar to OQL, Lucene queries are not supported with transactions; an exception will be thrown. A LuceneQueryException is thrown on the client/accessor:Exception in thread "main" org.apache.geode.cache.lucene.LuceneQueryException: Lucene Query cannot be executed within a transactionat org.apache.geode.cache.lucene.internal.LuceneQueryImpl.findTopEntries(LuceneQueryImpl.java:124)at org.apache.geode.cache.lucene.internal.LuceneQueryImpl.findPages(LuceneQueryImpl.java:98)at org.apache.geode.cache.lucene.internal.LuceneQueryImpl.findPages(LuceneQueryImpl.java:94)at TestClient.executeQuerySingleMethod(TestClient.java:196)at TestClient.main(TestClient.java:59)This TransactionException is logged on the server. Backups should only be done for regions with Lucene indexes when the system is 'quiet'; i.e. no puts, updates, or deletes are in progress. Otherwise the backups for Lucene indexes will not match the data in the region that is being indexed (i.e. incremental backups will not be consistent between the data region and the Lucene index region due to delayed processing associated with the AEQ). If the region data needs to be restored from backup, then you must follow the same process for changing a Lucene index in order to re-create the index region. Update docs section on "Memory Requirements for Cached Data" to include conservative estimate of 737 bytes per entry overhead for a Lucene index. All the other caveats mentioned for OQL indexes also apply for Lucene indexes... your mileage may vary...</description>
      <version>None</version>
      <fixedVersion>1.2.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.lucene.integration.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.destroy.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.memory.requirements.for.cache.data.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.cache-elements-list.html.md.erb</file>
      <file type="M">geode-docs.reference.statistics.statistics.list.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.authorization.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-9-19 01:00:00" id="3672" opendate="2017-9-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Partitioned Indexes need to remove itself from the index list correctly</summary>
      <description>Partitioned Indexes are not properly removing themselves if they fail to get created. This leads to possibly inconsistent indexes, incorrect results and possibly confusing error messages. This may also lead to the inability to create an index that shares the index expression of the failed index.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.functional.IndexCreationJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PartitionedRegion.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-9-21 01:00:00" id="3678" opendate="2017-9-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>When a member is lost, gateway sender queues are not synchronized with surviving members</summary>
      <description>DistributedRegion synchronizeForLostMember is invoked in each surviving member. This method synchronizes the region with all replicates as long as concurrency checks are enabled for that region. Concurrency checks are disabled for GatewaySender queue regions so they don't get synchronized.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.WANTestBase.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.wan.AsyncEventQueueTestBase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.i18n.LocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DSFIDFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.SerialGatewaySenderCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.ParallelGatewaySenderCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.ClientCacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.SerialGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.serial.ConcurrentSerialGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ParallelGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.parallel.ConcurrentParallelGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderStats.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySenderEventProcessor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.AbstractGatewaySender.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InitialImageOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.asyncqueue.internal.AsyncEventQueueStats.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-10-30 01:00:00" id="377" opendate="2015-9-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Merge DistributedTest and IntegrationTest Code Coverage For SonarQube</summary>
      <description>Sonarqube is a aggregate reporting tool and one of its uses is for viewing code coverage. Currently there are only two types of tests in SonarQube: Unit and Integration. This is an issue with our test types, as we have: Unit, Distributed, and Integration.This task is to merge the Distributed and Integration tests into one, so that they can be viewed and accounted for in SonarQube.</description>
      <version>1.0.0-incubating.M1</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-10-6 01:00:00" id="3773" opendate="2017-10-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document missing cache.xml elements</summary>
      <description>Within the reference section of the manual, the following cache elements are missing: gateway-hub gateway-sender gateway-receiver gateway-conflict-resolverThey need to be added in to the &lt;cache&gt; Element Reference. These elements are already defined within the reference/topics/gfe_cache_xml.html.md.erb file. The elements need to be referenced or incorporated into the existing cache_xml.html file.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-10-6 01:00:00" id="3775" opendate="2017-10-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix typo &amp;#39;jmxManger&amp;#39; should be &amp;#39;jmxManager&amp;#39;</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.FunctionCommandsDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ExportConfigCommandDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommandWithSecurityDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeConfigCommandDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ConnectCommandWithSSLTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ConnectCommandWithSecurityTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ConnectCommandIntegrationTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRuntimeCommandDUnitTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.cli.LuceneIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.test.junit.rules.GfshShellConnectionRule.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.PDXPostProcessorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.PDXGfshPostProcessorOnRemoteServerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.MultiUserDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshCommandsSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.GfshCommandsPostProcessorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.shell.GfshMultilineCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.NetstatDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShutdownCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShowLogCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.QueryCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsShareConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GcCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsOnServerManagerDUnit.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeConfigCommandJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ChangeLogLevelCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-10-6 01:00:00" id="3779" opendate="2017-10-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Clean up some Error creation logic and usage</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.utilities.ProtobufResponseUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.ProtobufOpsProcessor.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.operations.GetRegionRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.operations.GetAllRequestOperationHandler.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-10-1 01:00:00" id="378" opendate="2015-10-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Region initialization may hang</summary>
      <description>Region initialization may hang. The race condition that causes this is very rare.If it happens you will see a warning in the log like this:&amp;#91;warning 2015/06/19 21:51:56.051 PDT dataStoregemfire1_w1-gst-dev05_15990 &lt;vm_1_thr_17_dataStore1_w1-gst-dev05_15990&gt; tid=0x1a&amp;#93; 15 seconds have elapsed while waiting for replies: &lt;CreateRegionProcessor$CreateRegionReplyProcessor 5 waiting for 1 replies from &amp;#91;w1-gst-dev05(dataStoregemfire4_w1-gst-dev05_15323:15323)&lt;v10&gt;:17784&amp;#93;&gt; on ...The hang is caused by the member that this message is waiting for a reply from. That member received this message but, due to the race condition, did not process it. It never will. Thread dumps of that member show that it is not stuck working on this message. This bug caused that member to drop the message when it was scheduling it for execution in a thread pool.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.java.util.concurrent.SynchronousQueueNoSpin.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.PooledExecutorWithDMStats.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.FunctionExecutionPooledExecutor.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-10-6 01:00:00" id="3780" opendate="2017-10-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>suspected member is never watched again after passing final check</summary>
      <description>In a network-down test we saw a node on the losing side of the network partition perform final checks on members on the winning side. One of the final checks mysteriously succeeded&amp;#91;info 2017/09/17 12:24:45.552 PDT gemfire1_rs-FullRegression-2017-09-15-21-00-35-client-10_8941 &lt;Geode Failure Detection thread 4&gt; tid=0x128&amp;#93; Final check failed but detected recent message traffic for suspect member 10.32.109.252(gemfire3_rs-FullRegression-2017-09-15-21-00-35-client-16_6135:6135)&lt;v2&gt;:1026&amp;#91;info 2017/09/17 12:24:45.552 PDT gemfire1_rs-FullRegression-2017-09-15-21-00-35-client-10_8941 &lt;Geode Failure Detection thread 4&gt; tid=0x128&amp;#93; Final check passed for suspect member 10.32.109.252(gemfire3_rs-FullRegression-2017-09-15-21-00-35-client-16_6135:6135)&lt;v2&gt;:1026After this the suspected member was never checked again and the losing side failed to shut down.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.ServiceConfig.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.internal.ProcessManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessenger.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.messenger.JGroupsMessengerJUnitTest.java</file>
      <file type="M">geode-assembly.src.upgradeTest.java.org.apache.geode.session.tests.TomcatSessionBackwardsCompatibilityTestBase.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeave.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.interfaces.HealthMonitor.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.distributed.internal.membership.gms.fd.GMSHealthMonitorJUnitTest.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.internal.tcp.ConnectionTest.java</file>
      <file type="M">geode-core.src.test.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.membership.gms.fd.GMSHealthMonitorJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DataSerializableFixedID.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.fd.GMSHealthMonitor.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-10-1 01:00:00" id="379" opendate="2015-10-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh create region --entry-time-to-live-expiration-action does not work</summary>
      <description>The option should be spelled "-entry-time-to-live-expiration-action" but a typo in the source code spells it "-entry-time-to-live-expiriation-action"</description>
      <version>1.0.0-incubating.M1</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.cli.i18n.CliStrings.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-10-9 01:00:00" id="3791" opendate="2017-10-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve test coverage of CacheListener for PartitionedRegion</summary>
      <description>Verify CacheListener is invoked for all Region operations only in the bucket primary which has registered a CacheListener for the Region.There is a hidden system property to enable callbacks within secondaries. A test should also be written to cover that as well.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.ReplicateCacheListenerInvocationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-3-9 01:00:00" id="3793" opendate="2017-10-9 00:00:00" resolution="Done">
    <buginformation>
      <summary>Test/prove out new protocol&amp;#39;s versioning/message additions</summary>
      <description>Test and prove out the new protocol's versioning/addition of messages.Expected: Clients on a different major version will receive a helpful error message (and are not supported)Clients on the same major version (but possibly different minor version) will be supported.So, devs should be able to add new messages to the protocol, bumping the minor version, and clients without knowledge of that message should still be supported (as long as they're on the same major version).</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.HandshakeRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.HandshakeRequestOperationHandler.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-10-2 01:00:00" id="380" opendate="2015-10-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Using gfsh to shutdown a server can result in an unclean shutdown under certain circumstances</summary>
      <description>Occasionally, when the dev REST API is enabled, and gfsh is used to shutdown a server, the server does not shutdown cleanly and exits early.This can be seen even more frequently (almost 100%) when the system property gemfire.disableShutdownHook is set.This may not appear as a problem in most cases, however if network-partition-detection is enabled then other members will see this as a member crashing and may disconnect themselves from the cluster in order to avoid a split brain.</description>
      <version>1.0.0-incubating.M1</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.management.internal.beans.MemberMBeanBridge.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2017-11-9 01:00:00" id="3801" opendate="2017-10-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Utilize hard-links to copy files during backups</summary>
      <description>Instead of copying files which are read-only during a backup, create a hard-link to the file in the backup location. This prevents losing the file if the original location is deleted, but does not require make a new copy of the file. If hard-links cannot be created, revert to the existing copying mechanic.</description>
      <version>None</version>
      <fixedVersion>1.4.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.SimpleDiskRegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.OplogJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegRecoveryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegionTestingBase.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegionHelperFactory.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DiskRegionAsyncRecoveryJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.diskPerf.DiskRegionRollOpLogJUnitPerformanceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.diskPerf.DiskRegionPerfJUnitPerformanceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.diskPerf.DiskRegionOverflowSyncRollingOpLogJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.diskPerf.DiskRegionOverflowAsyncRollingOpLogJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.Bug34179TooManyFilesOpenJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.Oplog.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BackupManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2017-10-10 01:00:00" id="3803" opendate="2017-10-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add common string methods to whitelisted methods</summary>
      <description>With GEODE-3247 we are now explicitly allowing a list of white listed methods with oql queries when security is enabled. Common string methods should probably be added to this whitelist, such as startsWith, endsWith, matches, etc.</description>
      <version>None</version>
      <fixedVersion>1.3.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.query.internal.RestrictedMethodInvocationAuthorizerTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.RestrictedMethodInvocationAuthorizer.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-3-4 01:00:00" id="4217" opendate="2018-1-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh create jdbc-connection command allows a password to be set without a user name</summary>
      <description>The gfsh create jdbc-connection command allows a password to be set without a user name.If you configure a password you must also configure a user name and this should be validated.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommand.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-5-4 01:00:00" id="4218" opendate="2018-1-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>load-cluster-configuration-from-dir is no longer required when setting --cluster-config-dir</summary>
      <description>Currently if you start a locator with: load-cluster-configuration-from-dir=trueyou would usually need to specify a "cluster-configuration-dir" to go with it, if you don't, it will default to the locator's working dir which is usually empty, and when this happens, it will override the entire cluster's configuration to be empty.We have deprecated this option.  </description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.persist.html.md.erb</file>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.load.from.shared.dir.html.md.erb</file>
      <file type="M">geode-docs.configuring.chapter.overview.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-6-7 01:00:00" id="5" opendate="2015-5-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Check gradle version when running build</summary>
      <description>Gradle behavior is sometimes version-dependent. When not using the supplied gradle wrapper scripts the build should check to ensure that the gradle version is at least 2.3. If the gradle version is &lt; 2.3 the build should fail with a nice message.</description>
      <version>1.0.0-incubating.M1</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-5-16 01:00:00" id="5083" opendate="2018-4-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Alter region --name option no longer auto completes</summary>
      <description>when "alter region --name=" is typed, tabbing should show a list of available regions</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommand.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-16 01:00:00" id="5086" opendate="2018-4-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Clarify Java 8 (not 9) requirement in docs</summary>
      <description>Our docs state that Geode works with Java 8 an above. That would imply Java 9, and we don't work with Java 9. So, clarify the docs.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.getting.started.system.requirements.host.machine.html.md.erb</file>
      <file type="M">geode-docs.getting.started.installation.install.standalone.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-4-17 01:00:00" id="5095" opendate="2018-4-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix output for create gateway-receiver (port number)</summary>
      <description>The gfsh command "create gateway-receiver" has the following output:gfsh&gt;create gateway-receiverMember | Status------ | --------------------------------------------------------------------------s1     | GatewayReceiver created on member "s1" and will listen on the port "5,383"  The port number should not have comma in it.GatewayReceiver created on member "s1" and will listen on the port "5383"</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GatewayReceiverCreateFunction.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-5-11 01:00:00" id="5200" opendate="2018-5-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Correct docs for use-cluster-configuration property</summary>
      <description>In the section titled gemfire.properties and gfsecurity.properties (Geode Properties), it says that the "use-cluster-configuration" property is only applicable for data members (non-client and non-locator) in "Definition" column. That does not match with what is in the 3rd column, which says which components are affected. Instead of "L," the column should say "S."File affected is reference/topics/gemfire_properties.htmlThis is a 1-character change to fix the docs.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-11 01:00:00" id="5201" opendate="2018-5-11 00:00:00" resolution="Won&amp;#39;t Fix">
    <buginformation>
      <summary>Categorize all DUnit and integration tests by component</summary>
      <description>DUnit and Integration tests are expensive to run. While working on a particular component, I want a way to only run tests directly related to that component. Categorizing these tests will enable that and also allow for pipeline jobs dedicated to a specific component. This makes it easier to identify what might have broken and also can be used as a way of introducing more parallelism to our long running pipeline.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PartitionedRegionMetaDataCleanupDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ShutdownCommandOverHttpDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.RebalanceCommandOverHttpDistributedTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.QueryCommandOverHttpTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ListIndexCommandOverHttpDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandOverHttpTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.FunctionCommandsOverHttpDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsStatsOverHttpDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsOverHttpIntegrationTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ExportConfigCommandDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommandWithSecurityDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeConfigCommandDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ConnectCommandWithSSLTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ConnectCommandWithSecurityTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ConnectCommandIntegrationTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.CommandOverHttpTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.CommandOverHttpDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.ClusterConfigurationDUnitTest.java</file>
      <file type="M">geode-web.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRuntimeCommandDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.management.internal.cli.commands.ListClientCommandDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.management.internal.cli.commands.DurableClientCommandsDUnitTest.java</file>
      <file type="M">geode-cq.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeClientCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.security.ClusterConfigurationSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.pdx.internal.MultipleCacheJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.OffHeapManagementDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.JMXMBeanDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.MultiUserAuthenticationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.security.MultiClientDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.DeployJarWithSSLDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.HeadlessGfshIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserParsingTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserConverterTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.GfshParserAutoCompletionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShutdownCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShowMissingDiskStoresDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShowMetricsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShowLogCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShowDeadlockDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShellCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.RemoveCommandJsonDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.RemoveCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.LocateEntryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListRegionIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListMembersCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListDiskStoreCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListAsyncEventQueuesCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsShareConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GetCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GemfireDataCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GcCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.FunctionCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportStackTraceCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsWithMemberGroupDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsOnServerManagerDUnit.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommandSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeRegionIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeMembersCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeDiskStoreCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeConfigCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DeployWithGroupsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DeployCommandRedeployDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DeployCommandFunctionRegistrationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionSecurityDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAlterDestroyRegionCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ConfigurePDXCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ChangeLogLevelCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterDiskStoreDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterCompressorDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.bean.stats.RegionStatsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.bean.stats.MemberLevelStatsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.bean.stats.GatewayReceiverStatsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.bean.stats.GatewayMBeanBridgeJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.bean.stats.DistributedSystemStatsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.bean.stats.DistributedSystemStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.bean.stats.DiskStatsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.bean.stats.CacheServerStatsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.bean.stats.AsyncEventQueueStatsJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.ValueMonitorIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatTypesAreRolledOverRegressionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatSamplerIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatisticsDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatArchiveWriterReaderIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatArchiveWithMissingResourceTypeRegressionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatArchiveWithConsecutiveResourceInstIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatArchiveWithConsecutiveResourceInstGeneratorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.StatArchiveHandlerIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.SimpleStatSamplerIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.LinuxSystemStatsTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.GemFireStatSamplerIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.FileSizeLimitIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.DistributedSystemStatisticsTypeIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.DistributedSystemStatisticsIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.statistics.DiskSpaceLimitIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.TxReleasesOffHeapOnCloseJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.OutOfOffHeapMemoryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.OldFreeListOffHeapRegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.OffHeapValidationJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.OffHeapLRURecoveryRegressionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.OffHeapIndexJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.MemoryAllocatorFillPatternIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.InlineKeyJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.offheap.FreeListOffHeapRegionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.MergeLogFilesJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.LogServiceIntegrationJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.LocatorLogFileJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.DistributedSystemLogFileJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.logging.CacheLogRollingIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.compression.CompressionRegionOperationsOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.compression.CompressionCacheListenerOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.persistence.PersistentRVVRecoveryDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.persistence.PersistentRecoveryOrderOldConfigDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.persistence.PersistentRecoveryOrderDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.persistence.DefaultDiskDirsIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.StreamingPartitionOperationOneDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.StreamingPartitionOperationManyDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.ShutdownAllDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.RegisterInterestKeysValuesDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.QueueRemovalMessageProcessingDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistPRKRFIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistentPartitionedRegionWithTransactionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistentPartitionedRegionOldConfigDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistentPartitionedRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PersistentColocatedPartitionedRegionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PartitionResolverDUnitTest.java</file>
      <file type="M">extensions.geode-modules-tomcat7.src.test.java.org.apache.geode.modules.session.Tomcat7SessionsJUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.AlterMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandDunitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.JdbcClusterConfigDistributedTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListConnectionCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.ListMappingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.DistributedAckOverflowRegionCCEOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.DistributedAckPersistentRegionCCEOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.DistributedAckRegionCCEDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.DistributedNoAckRegionOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.GlobalRegionCCEOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.GlobalRegionOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.OffHeapLRUEvictionControllerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache30.PartitionedRegionOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.management.MemoryThresholdsOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.CacheSnapshotJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.ParallelSnapshotDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.RegionSnapshotJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.SnapshotByteArrayDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.SnapshotDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.SnapshotPerformanceDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.snapshot.WanSnapshotJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DistrbutedRegionProfileOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.EvictionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.EvictionObjectSizerDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.EvictionStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.LRUListWithAsyncSortingIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.LRUListWithSyncSortingIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.OffHeapEvictionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.OffHeapEvictionStatsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.eviction.RegionEntryEvictionIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionLocalMaxMemoryOffHeapDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.PartitionedRegionOffHeapEvictionDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.BucketCreationCrashCompletesRegressionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.ElidedPutAllDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.fixed.FixedPartitioningDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.fixed.FixedPartitioningWithColocationAndPersistenceDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.partitioned.PartitionedRegionLoaderWriterDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-5-11 01:00:00" id="5203" opendate="2018-5-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - clarify that client SSL setting descriptions are for Java clients only</summary>
      <description>In Managing -&gt; Security -&gt; SSL -&gt; Configuring SSL, the explanation of SSL settings for clients applies only to Java clients.Settings for C++ or .NET clients (developed using the in-the-works geode-native API) may differ from the Java settings.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.security.implementing.ssl.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-5-11 01:00:00" id="5207" opendate="2018-5-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document that extensions dir is in CLASSPATH</summary>
      <description>gfsh got updated so that upon server/locator start, any JAR files in the extensions/ directory would be automatically included on the classpath. This work was done in GEODE-4923. This ticket exists to document the change.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.getting.started.setup.classpath.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-5-14 01:00:00" id="5218" opendate="2018-5-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update docs on Log4j 2</summary>
      <description>Our docs still mention Log4j version 2.1. Time to update. While we're updating, fix the specification of the JAR location.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.logging.how.logging.works.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-12-16 01:00:00" id="563" opendate="2015-11-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Migrate remaining gfsh tests from closed source to open</summary>
      <description/>
      <version>1.0.0-incubating.M1</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-11-16 01:00:00" id="565" opendate="2015-11-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update guava dependency to 15.0</summary>
      <description>The dependency for guava was downrevved from 15.0 to 11.0.2 as part of GEODE-227, however this is breaking some tests in closed source which are about to be moved over to open.</description>
      <version>1.0.0-incubating.M1</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-29 01:00:00" id="5661" opendate="2018-8-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse does not work when legacy SSL options are used</summary>
      <description>Similar to GEODE-5230, if the legacy SSL configuration options are used, (cluster-ssl-, jmx-manager-ssl-, etc.), then Pulse does not work correctly and a user will see an error similar to the following in the UI:Failed to retrieve RMIServer stub: javax.naming.CommunicationException [Root exception is java.rmi.ConnectIOException: error during JRMP connection establishment; nested exception is: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target]</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.ManagementAgent.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.tools.pulse.PulseSecurityWithSSLTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.test.junit.rules.GeodeHttpClientRule.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-10-9 01:00:00" id="5845" opendate="2018-10-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document that an enum should never be used for keys</summary>
      <description>Maybe it should be obvious, but an enum type should never be used for an entry key. To make this explicitly clear, add this advice to the docs.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.basic.config.data.entries.custom.classes.using.custom.classes.html.md.erb</file>
      <file type="M">geode-docs.basic.config.data.entries.custom.classes.managing.data.entries.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-11-25 01:00:00" id="605" opendate="2015-11-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>When SSL is turned on for the REST API, the Swagger UI does not work</summary>
      <description>With SSL enabled, the Swagger UI (https://localhost:7071/gemfire-api/docs/index.html) only loads partially and is not interactive. It appears that some of the underlying URLs being used refer to http and not https (http://localhost:7071/gemfire-api/api-docs).</description>
      <version>1.0.0-incubating.M1</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-web-api.src.main.java.com.gemstone.gemfire.rest.internal.web.swagger.config.RestApiPathProvider.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-14 01:00:00" id="6053" opendate="2018-11-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Queries involving parameters result in an unsupported operation exception</summary>
      <description>Issue:When queries are executed with parameters in them, this results in an unsupported operation exception. Cause:We were trying to precompute values for join optimization when it was not possible to calculate those values resulting in the Unsupported Operation Exception.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.QueryUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledValue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledPath.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledIndexOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.query.internal.CompiledID.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-11-15 01:00:00" id="6063" opendate="2018-11-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>don&amp;#39;t try to publish to maven from release pipeline</summary>
      <description>develop pipeline is expected to publish to snapshot repository on every successful build, however releases are signed and published manually, never by the pipeline, so PublishArtifacts job should not appear in release pipelines, only develop pipeline.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-3-15 01:00:00" id="6064" opendate="2018-11-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>describe config output shows the sensitive information in plain text</summary>
      <description>Start a locator and server with ssl information in gfSecurity.properties file. The file contains ssl configurations.describe config will show these settings in plain text.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeConfigCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GetMemberConfigInformationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.DescribeConfigCommand.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-16 01:00:00" id="6066" opendate="2018-11-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh create data-source should fail if no servers are running</summary>
      <description>Currently create data-source will return Status.OK if no servers are running. But when that happens: no validation of the data-source was done no cluster config changes were made.So even though it returns OK is did not create the data-source.It should instead fail and say that at least one server is required when creating a data-source.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateDataSourceCommandTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateDataSourceCommand.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-16 01:00:00" id="6067" opendate="2018-11-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add gfsh list data-source command</summary>
      <description>A gfsh command should exist that lists all the data-sources created by 'create data-source'. </description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeDataSourceCommandTest.java</file>
      <file type="M">geode-connectors.src.main.resources.META-INF.services.org.springframework.shell.core.CommandMarker</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-11-16 01:00:00" id="6068" opendate="2018-11-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh destroy jdbc-mapping should undo everything done by gfsh create jdbc-mapping</summary>
      <description>gfsh create jdbc-mapping was recently changed to alter the region and create an async-event-queue. gfsh destroy jdbc-mapping needs corresponding changes so that it undoes everything done by create. </description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.asyncqueue.internal.InternalAsyncEventQueue.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.asyncqueue.internal.AsyncEventQueueImpl.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandFunctionTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommand.java</file>
      <file type="M">geode-connectors.src.integrationTest.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandIntegrationTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyMappingCommandDunitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-1-28 01:00:00" id="6470" opendate="2019-2-28 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Double-checked locking is not thread-safe [LGTM]</summary>
      <description>A repeated check on a non-volatile field is not thread-safe, and could result in unexpected behaviorReferences:http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.htmlhttps://en.wikipedia.org/wiki/Double-checked_locking</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.shell.Gfsh.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.datasource.GemFireBasicDataSource.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.wan.GatewaySenderEventImpl.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-3-1 01:00:00" id="6473" opendate="2019-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create a test which utilizes the geode-management.jar</summary>
      <description>This test should exercise the new ClusterManagementService as a plain Java client - i.e. not something that includes geode-core on the classpath.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.rules.gfsh.internal.ProcessLogger.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-3-4 01:00:00" id="6481" opendate="2019-3-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Inner class will be rejected by AutoSerializableManager in ReflectionBasedAutoSerializer.toData()</summary>
      <description>Add 2 test cases here:1) when using numeric fields in domain class, create mapping and describe mapping should get correct fieldMapping between field and column, such as:PDX Field | PDX Type | JDBC Column | JDBC Type | Nullable--------- | -------- | ----------- | --------- | --------income | FLOAT | INCOME | REAL | trueid | STRING | ID | VARCHAR | falserefid | LONG | REFID | BIGINT | truename | STRING | NAME | VARCHAR | trueage | INT | AGE | INTEGER | trueIt should NOT be:PDX Field | PDX Type | JDBC Column | JDBC Type | Nullable--------- | -------- | ----------- | ----------- | --------income | OBJECT | income | REAL | truename | STRING | name | LONGVARCHAR | trueid | OBJECT | id | BIGINT | false2) since we enforce the --pdx-name should be a PdxSerializable. We also support to convert a regular class into PdxSerializable using AutoSerializableManager. However, an inner class, whose className like A$B will be rejected by AutoSerializableManager.The reason is: A$B in pattern will treat "$" as special char in regular express. So pattern("A$B").matcher("A$B") will return false. The fix is to tell the pattern for className to treat "$" in className as a normal char.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingPreconditionCheckFunctionTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingPreconditionCheckFunction.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2019-4-3 01:00:00" id="6592" opendate="2019-4-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>create jdbc-mapping need an optional parameter --if-not-exists</summary>
      <description>create region command has an optional parameter --if-not-exists. create jdbc-mapping command should have this parameter. Then when the jdbc-mapping exists, the gfsh command will return success instead of error.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandForProxyRegionDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-4-4 01:00:00" id="6600" opendate="2019-4-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Composite Meter Registry takes a lot of heap when regions created and destroyed</summary>
      <description>When creating and destroying lots of regions, we never remove region related meters.  This causes heap size to keep growing.Please remove the meters</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.LocalRegionMetricsTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.LocalRegion.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-4-5 01:00:00" id="6606" opendate="2019-4-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cache should use MeterRegistry added with CacheFactory after reconnect</summary>
      <description>CacheFactory allows one or more MeterRegistries to be added for publishing metrics. We need a test that verifies that this continues after reconnect.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.InternalCacheBuilderTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.InternalCacheBuilderAllowsMultipleSystemsTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCacheForClientAccess.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCacheBuilder.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalDistributedSystem.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.cache.CacheFactoryIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-6-5 01:00:00" id="6608" opendate="2019-4-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Swagger UI to Management REST API</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.ManagementLoggingFilter.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.RegionManagementController.java</file>
      <file type="M">geode-web-management.build.gradle</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.RestfulEndpoint.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.BasicRegionConfig.java</file>
      <file type="M">geode-management.build.gradle</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.acceptanceTest.java.org.apache.geode.management.internal.rest.StandaloneClientManagementAPIAcceptanceTest.java</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-4-5 01:00:00" id="6609" opendate="2019-4-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Invoking user-provided MetricsPublishingService implementations should catch and log errors</summary>
      <description>Invoking user-provided MetricsPublishingService implementations should catch and log errors.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.metrics.CacheLifecycleMetricsSessionTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.ListCollectingServiceLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.util.CollectingServiceLoader.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.metrics.CacheLifecycleMetricsSession.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-5-6 01:00:00" id="6611" opendate="2019-4-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Subprojects should be audited with respect to which plugins ought be applied</summary>
      <description>Previously, every Gradle subproject was aggressively configured via blocks likesubprojets { apply plugin: 'java' ...}As the code base expanded, we have introduced many subprojects who do not warrant a "standard" configuration as a Java project. For instance, in GEODE-6569, a subproject responsible for producing Geode's BOM was also producing a trivial jar. This is the direct result of a configuration like the above.Modularity was restored by GEODE-6383 and such invasive configuration no longer exists. We will soon be positioned to remove from such subprojects those plugins that do not belong.Each subproject should be audited and only pull in the plugins necessary. This may resolve many tangental issues, particularly with publication, e.g., the war subproject publishing jars not fit for (direct) consumption.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
      <file type="M">gradle.wrapper.gradle-wrapper.properties</file>
      <file type="M">gradle.properties</file>
      <file type="M">buildSrc.src.main.groovy.com.pedjak.gradle.plugins.dockerizedtest.DockerizedTestPlugin.groovy</file>
      <file type="M">buildSrc.src.main.groovy.com.pedjak.gradle.plugins.dockerizedtest.DockerizedJavaExecHandleBuilder.groovy</file>
      <file type="M">boms.build.gradle</file>
      <file type="M">boms.geode-all-bom.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-8-8 01:00:00" id="6612" opendate="2019-4-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User should be able to get a list of existing regions in the cluster using Management V2 API</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.client.CreateRegionWithDiskstoreAndSecurityDUnitTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.JndiBindingsType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.DiskStoreType.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.BasicRegionConfig.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.management.configuration.Index.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.config.JAXBServiceTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.configuration.RegionMapping.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.MemberManagementController.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.ClientClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.MemberConfig.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementResult.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.CacheElement.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.assertions.ClusterManagementResultAssert.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.RegionConfigValidatorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.ConfigurationManager.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ListRegionManagementDunitTest.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.RegionManagementController.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementSecurityIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-web-management.src.distributedTest.java.org.apache.geode.management.client.ClientClusterManagementServiceDUnitTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionConfig.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.CacheConfig.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.LocatorClusterManagementServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.RegionConfigTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.RegionConfigValidator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.UpdateCacheFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.configuration.realizers.RegionConfigRealizerIntegrationTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigMutatorIntegrationTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.api.RegionAPIDUnitTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.distributed.internal.CacheConfigDAODUnitTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.RegionManagementRestSecurityDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.RegionManagementDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ManagementRequestLoggingDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClusterManagementServiceOnServerTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClusterManagementLocatorReconnectDunitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClientClusterManagementSSLTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClientClusterManagementServiceDunitTest.java</file>
      <file type="M">geode-assembly.src.acceptanceTest.resources.ManagementClientTestCreateRegion.java</file>
      <file type="M">geode-web-management.src.main.webapp.WEB-INF.geode-management-servlet.xml</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.ManagementLoggingFilter.java</file>
      <file type="M">geode-web-management.src.distributedTest.java.org.apache.geode.management.client.MemberManagementServiceDUnitTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.cache.configuration.CacheElementJsonMappingTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.ClusterManagementResultTest.java</file>
      <file type="M">geode-common.src.main.java.org.apache.geode.util.internal.GeodeJsonMapper.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-9-9 01:00:00" id="6620" opendate="2019-4-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Spring Libraries to most recent version</summary>
      <description>Update the spring libraries and its dependencies to the most recent version.   At the time of writing this would be 4.3.23.RELEASE.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-6-10 01:00:00" id="6853" opendate="2019-6-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>For newly started servers, it should use different thread to request region synchronize message when processing a regionSync message</summary>
      <description>The processing message should finish processing quickly instead of waiting for replies.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.InitialImageOperationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.DistributedRegionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionAdvisorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InitialImageOperation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DistributedRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-6-11 01:00:00" id="6855" opendate="2019-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve signaling for Geode Concourse consumers</summary>
      <description>I would like a way to find the corresponding the `passing-ref` and `passing-build` resources at the end of a Concourse pipeline. The parameters for when a pipeline emits these resources is also confusing.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-1-19 01:00:00" id="797" opendate="2016-1-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Javadoc task reports "unmappable character for encoding ASCII"</summary>
      <description>On some platforms, our javadoc task is failing with these errors/tmp/dan/incubator-geode/gemfire-core/src/main/java/com/gemstone/gemfire/management/CacheServerMXBean.java:109: error: unmappable character for encoding ASCII * the host the server uses by default is one that the client can???t translate into ^/tmp/dan/incubator-geode/gemfire-core/src/main/java/com/gemstone/gemfire/management/CacheServerMXBean.java:109: error: unmappable character for encoding ASCII * the host the server uses by default is one that the client can???t translate into...</description>
      <version>1.0.0-incubating.M1</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-8 01:00:00" id="7970" opendate="2020-4-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump Spring to 5.2.5</summary>
      <description>keep up with the recommended version, 5.2.1 is no longer the latest</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.expected.jars.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-5-23 01:00:00" id="8180" opendate="2020-5-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add 1.14 management REST wiki page</summary>
      <description>add new wiki page id to generator script, and update to support -build.n convention as well as -SNAPSHOT and support branches instead of release branches</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-management.src.test.script.update-management-wiki.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-6-26 01:00:00" id="8186" opendate="2020-5-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: add example for gfsh query --member option</summary>
      <description>GEODE-8112 added a --member option to the gfsh query command.Add a usage example to the User Guide</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.additional.advanced.querying.html.md.erb</file>
      <file type="M">geode-docs.developing.querying.basics.running.a.query.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-6-5 01:00:00" id="8230" opendate="2020-6-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>run benchmarks in parallel with other CI</summary>
      <description>currently, we run Build, then all &lt;x&gt;Test jobs in parallel (which takes ~5 hours), then all Benchmark&lt;x&gt; jobs (which takes ~5 hours).Presumably the benchmarks were run after all tests, on the premise that benchmarks are meaningless if the code is not correct.  However, required PR checks now prevent incorrect code from getting into develop in the first place, and the remaining occasional failures are flaky, so it's rather arbitrary to gate benchmarks on a lottery.However, faster feedback has clear benefits, and cutting our CI pipeline from 10 hours to 5 hours seems like low-hanging fruit.</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2020-6-10 01:00:00" id="8237" opendate="2020-6-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add note about &amp;#39;alter region&amp;#39; and cluster conf service in doc</summary>
      <description>When cluster configuration service is activated and "alter region" command is applied on a region that was created via cache.xml, the command fails.This behavior is ok but it is not documented.</description>
      <version>None</version>
      <fixedVersion>1.13.0,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.configuring.cluster.config.gfsh.persist.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-7-10 01:00:00" id="8239" opendate="2020-6-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gradle configuration to create manifests for all Geode jars</summary>
      <description>Modify the Gradle configuration to generate a manifest file with "Class-Path" and "Dependent-Modules" attributes inside the jars. This manifest will be used when defining modules using the jars.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.publish-java.gradle</file>
      <file type="M">gradle.java.gradle</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-6-11 01:00:00" id="8243" opendate="2020-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Launcher acceptance tests fail on Windows</summary>
      <description>Launcher acceptance tests fail on Windows because "java" does not exist on Windows. The tests need to use "java.exe" on Windows.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.acceptanceTest.java.org.apache.geode.launchers.ServerLauncherWithCustomLogConfigAcceptanceTest.java</file>
      <file type="M">geode-assembly.src.acceptanceTest.java.org.apache.geode.launchers.LocatorLauncherWithPulseAndCustomLogConfigAcceptanceTest.java</file>
      <file type="M">geode-assembly.src.acceptanceTest.java.org.apache.geode.launchers.LocatorLauncherWithPulseAcceptanceTest.java</file>
      <file type="M">geode-assembly.src.acceptanceTest.java.org.apache.geode.launchers.LocatorLauncherWithCustomLogConfigAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2020-6-16 01:00:00" id="8263" opendate="2020-6-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis SET command should not accept the KEEPTTL option</summary>
      <description>The Redis SET commands should not accept the KEEPTTL option because geode redis currently implements redis 5 and KEEPTTL is part of redis 6.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.StringsIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-18 01:00:00" id="980" opendate="2016-2-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Destroy region command in gfsh is not working</summary>
      <description>gfsh&gt;list regionsList of regions---------------Persongfsh&gt;destroy region --name=/Persongfsh&gt;list regionsList of regions---------------Persongfsh&gt;gfsh&gt;describe region --name=/Person..........................................................Name : PersonData Policy : partitionHosting Members : server1Non-Default Attributes Shared By Hosting Members Type | Name | Value------ | ----------- | ---------Region | size | 100 | data-policy | PARTITION</description>
      <version>1.0.0-incubating.M1</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.SocketCreator.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.management.internal.cli.commands.CreateAlterDestroyRegionCommands.java</file>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.management.internal.cli.commands.CreateAlterDestroyRegionCommandsDUnitTest.java</file>
    </fixedFiles>
  </bug>
</bugrepository>