<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="GEODE">
  <bug fixdate="2022-3-8 01:00:00" id="10111" opendate="2022-3-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add COMMITWATCHERS for self-service opt-in/opt-out of automated commit message review</summary>
      <description>previously opt-in and unsubscribe required a dev list email, and this led to complaintsthis self-serve mechanism achieves the same goal of a public record of opt-in requests, without adding noise to the dev list</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CODEWATCHERS</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-4-15 01:00:00" id="10126" opendate="2022-3-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor Configuration To Use System Properties</summary>
      <description>The properties currently being used by the Redis module are defined in Geode core.  These properties need to be removed from Geode core and refactored to system properties. Validators must also be added for the system properties to ensure that users provide correct values.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.SystemPropertyBasedRedisConfiguration.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.RedisConfiguration.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.redis.TestRedisConfiguration.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.services.RegionProvider.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.netty.NettyRedisServer.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisService.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.connection.AuthIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.session.SessionsAndCrashesDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.auth.AuthWhileServersRestartDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.string.MSetNXDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.string.MSetDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZRemRangeByRankDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZRemDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.list.RPushDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.key.RenameDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.hash.HashesAndCrashesDUnitTest.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.test.dunit.rules.RedisClusterStartupRule.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.redis.GeodeRedisServerRule.java</file>
      <file type="M">geode-for-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.commands.executor.GeodeRedisServerStartupUsingGfshAcceptanceTest.java</file>
      <file type="M">geode-for-redis.src.acceptanceTest.java.org.apache.geode.redis.GeodeRedisServerStartupAcceptanceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionConfigImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-4-12 01:00:00" id="10234" opendate="2022-4-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>No need to generate tailKey for transaction if there is no parallel wan enabled</summary>
      <description>There is no need to generate a tailKey, if there is no parallel wan enabled. However, currently every operation on a partitioned region would generate such key and will be ignored anyway.</description>
      <version>1.12.0</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BucketRegionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTxApplyDestroyTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRegion.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-4-15 01:00:00" id="10243" opendate="2022-4-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Old clients with durable queues should fail early if AuthenticationExpiredException is thrown</summary>
      <description>As part of the changes for GEODE-9457, when an AuthenticationExpiredException is thrown from the SecurityManager during message dispatching, we send a message to 1.15 and newer clients asking them to re-authenticate.For 1.14 and older clients, we do not send a message. Instead, we just wait for the reauthenticate.wait.time to elapse and then close the connection.The net effect of this is that if users are doing cache operations from 1.14 and older clients, and their SecurityManager expires the credentials of the old clients, they will sometimes see their clients re-authenticate themselves in that time window. This will mislead users into thinking that re-authentication works with old clients and client queues, even though we have documented that we don't support it.Instead of allowing re-authentication to sometimes work in this unsupported use case, we should always fail so that is clear to users that this use case is not supported.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.upgradeTest.java.org.apache.geode.security.AuthExpirationBackwardCompatibleDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.MessageDispatcherTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.MessageDispatcher.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.security.AuthExpirationDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2022-4-19 01:00:00" id="10245" opendate="2022-4-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade classgraph from 4.8.143 -&gt; 4.8.145</summary>
      <description>This fixes an issue as described here: https://github.com/classgraph/classgraph/issues/673</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-server-all.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.gfsh.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2018-4-10 01:00:00" id="4274" opendate="2018-1-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add geode-examples job to CI</summary>
      <description>The concourse pipeline should test geode-examples.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2019-2-2 01:00:00" id="7522" opendate="2019-12-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>always link to rest wiki page by Geode version number, not "develop"</summary>
      <description>update wiki generator script to name the page with the actual version rather than `develop` so that corresponding documentation can be created with a link that will remain valid through development phase, release phase, and after release.change has already been made, changing https://cwiki.apache.org/confluence/display/GEODE/develop+Management+REST+API+-+v1 to https://cwiki.apache.org/confluence/display/GEODE/1.12.0+Management+REST+API+-+v1</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-management.src.test.script.update-management-wiki.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-12-3 01:00:00" id="7526" opendate="2019-12-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Extend ExecutorServiceRule for use in distributed tests</summary>
      <description>I'd like to extend ExecutorServiceRule for use in distributed tests.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.ExecutorServiceRuleTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2020-1-9 01:00:00" id="7662" opendate="2020-1-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>metrics pipeline is intended for public pipelines</summary>
      <description>for any pipelines other than the public apache-develop-main or release pipelines, metrics aren't going to work, so don't insist on enabling them</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.deploy.meta.sh</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-1-23 01:00:00" id="7741" opendate="2020-1-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Clean up failed Packer instances in the GCP project</summary>
      <description>If the Packer jobs fail in Concourse, they are not always cleaned up from the project, and are left running until somebody notices.Adding labels to the instances like for the 'heavy-lifter' instances will allow the Geode reaper job to find and delete these instances in a timely manner.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-windows-geode-builder.windows-packer.json</file>
      <file type="M">ci.images.google-windows-geode-builder.build.image.sh</file>
      <file type="M">ci.images.google-geode-builder.packer.json</file>
      <file type="M">ci.images.google-geode-builder.build.image.sh</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-2-28 01:00:00" id="7745" opendate="2020-1-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix the missing Pull Request builds in geode.</summary>
      <description>There are some missing builds on the apache geode PR pipeline. The reason has been tracked down to the way the GitHub pull request resource tracks the trigger of a commit. This issue has been fixed in https://github.com/digitalocean/github-pr-resource/pull/8. Change the GitHub pull request resource from  telia-oss/github-pr-resource to digitalocean/github-pr-resource.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
      <file type="M">ci.pipelines.images.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-2-29 01:00:00" id="7748" opendate="2020-1-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Wrong statistic name added to Geode Statistics List</summary>
      <description>In https://geode.apache.org/docs/guide/111/reference/statistics_list.html state:failedConnectsDescTotal number of times a connect (sender creation) to some other member has failed.finalString distributeMessageTimeDesc = The amount of time it takes to prepare a message and send it on the network. This includes sentMessagesTime.finalCheckRequestsReceivedThe number of final check requests that this member has received. Wrong name added to the primary statistics. </description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.statistics.list.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-2-10 01:00:00" id="7788" opendate="2020-2-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Alpine tools docker image creation fails due to internal winrm-cli changes.</summary>
      <description>The winrm-cli (https://github.com/masterzen/winrm-cli) folks have changed the internal go dependencies which results in the failure of building the cli.This is an important dependency for building the windows image, so we need a fix for that.</description>
      <version>None</version>
      <fixedVersion>1.12.0,1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.alpine-tools.Dockerfile</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-3-13 01:00:00" id="7879" opendate="2020-3-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove locking from HGetAll</summary>
      <description>Currently the HGetAll method uses locking, but it really isn't necessary since there is no value mutation happening.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisLockService.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HGetAllExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.HashesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-3-19 01:00:00" id="7893" opendate="2020-3-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>geode-lucene POM dependencies are not correct</summary>
      <description>The LuceneIndexFactoryBean configures Lucene Analyser, which is not 'api' dependency in geode-lucene</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-lucene.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-3-19 01:00:00" id="7895" opendate="2020-3-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create integration tests for Expire Command in Redis Adapter</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExpireExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExpirationExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.StringsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.SortedSetsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.ListsIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-2-19 01:00:00" id="794" opendate="2016-1-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unable to match iterators when update in progress</summary>
      <description>When an update in progress occurs, run time iterators will possibly not be found. This is due to getReceiverNameFromPath not accounting for all the CompiledValue types that override getReceiver()The fix would involve adding CompiledOperation to the instance of checks.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.query.internal.index.CompactRangeIndexJUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.index.CompactRangeIndex.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.index.AbstractIndex.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-4-1 01:00:00" id="7941" opendate="2020-4-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>upgrade Shiro to 1.5.2</summary>
      <description>our current Shiro version (1.4.1) is below the recommended version.  Now that Geode 1.12.0 has been released, now is a good time to bump whatever we can.</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-1 01:00:00" id="7942" opendate="2020-4-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>document the enable-management-rest-service geode property</summary>
      <description>The enable-management-rest-service geode property needs to be documented. This property was added in geode 1.10.</description>
      <version>1.10.0,1.11.0,1.12.0</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-2 01:00:00" id="7945" opendate="2020-4-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cluster restart recovery from disk blocked by waiting replies of CreateRegionMessage</summary>
      <description>A cluster restart recovering from disk has unexpected delays in some of the members. The logs show that those delayed members are waiting for replies of CreateRegionMessage, before loading the krf files. And the reason for waiting the replies of CreateRegionMessage is likely because other members are holding some lock while busy loading the krf files. Therefore the replies are delayed. Once those delayed members get the replies of CreateRegionMessage, it starts loading the krf files. If the delayed members contain the latest data, this could block other members waiting for the latest data.Because the cluster members are blocking each other at different stages during the cluster restart recovery process, the whole process is unexpectedly long when the disk store contains large amount of data.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PersistentBucketRecoverer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-4-3 01:00:00" id="7947" opendate="2020-4-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement tests for EXPIRE-related functionality</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.ExpireExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExpireExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExpireAtExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.PexpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ExpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.StringsDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.SortedSetsDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.SetsDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.RenameDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.PubSubDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.ListsDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.HashesDockerAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.GeoDockerAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-25 01:00:00" id="8023" opendate="2020-4-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add old version to support branches too</summary>
      <description>Need to add the old version on the support branch too now, not just develop (e.g. as soon as 1.12.0 was released, the support branch became 1.12.1 so 1.12.0 is an "old" version for both develop and support/1.12)need to update release scripts before next release so this will happen automatically</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.promote.rc.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-26 01:00:00" id="8027" opendate="2020-4-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Provide raw swagger JSON for managment API</summary>
      <description>For our management API we have a wiki page with Swagger HTML documentation for each version of our API.They can be found here:https://cwiki.apache.org/confluence/display/GEODE/1.10.0+Management+REST+API+-+v1https://cwiki.apache.org/confluence/display/GEODE/1.11.0+Management+REST+API+-+v1https://cwiki.apache.org/confluence/display/GEODE/1.12.0+Management+REST+API+-+v1https://cwiki.apache.org/confluence/display/GEODE/1.13.0+Management+REST+API+-+v1For consumers of the API the pages should provide an attachment with raw Swagger JSON that can be consumed by code generators.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-management.src.test.script.update-management-wiki.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-5-30 01:00:00" id="8055" opendate="2020-4-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>can not create index on sub regions</summary>
      <description>When trying to use "create index" command in gfsh to create index on sub regions, we get the following message:"Sub-regions are unsupported"Pre-1.6, we were able to do that.</description>
      <version>1.7.0,1.8.0,1.9.2,1.10.0,1.11.0,1.12.0</version>
      <fixedVersion>1.12.1,1.13.0,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.management.internal.configuration.ClusterConfigurationIndexWithFromClauseDUnitTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommand.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.CacheConfigTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheConfig.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-5-6 01:00:00" id="8083" opendate="2020-5-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add API check job to CI</summary>
      <description>In order to combat API breaking changes, we need a CI job that compares the current API against the last release.</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">buildSrc.build.gradle</file>
      <file type="M">gradle.spotless.gradle</file>
      <file type="M">geode-web.build.gradle</file>
      <file type="M">geode-web-management.build.gradle</file>
      <file type="M">geode-web-api.build.gradle</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">ci.scripts.archive.results.sh</file>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-5-7 01:00:00" id="8087" opendate="2020-5-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix Geode API compliance</summary>
      <description>API comparison is enabled in the CI pipeline, causing failures on PRs due to changes from develop since the last release (1.12.0).</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.japicmp.ParentIsExperimental.groovy</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">buildSrc.build.gradle</file>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-5-7 01:00:00" id="8088" opendate="2020-5-7 00:00:00" resolution="Duplicate">
    <buginformation>
      <summary>Refactor: Move packages in dunit test folder</summary>
      <description>Did some refactoring as a group.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.SremDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.SaddDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.PersistDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.HsetDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.HMsetDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.ExistsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2020-5-8 01:00:00" id="8094" opendate="2020-5-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create HA test to ensure Spring Boot sessions expire correctly</summary>
      <description>Write a high level test to ensure that sessions created by Spring Boot expire correctly.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Command.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.springRedisTestApplication.SessionController.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.springRedisTestApplication.RedisSpringTestApplication.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.springRedisTestApplication.config.WebMvcConfig.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.springRedisTestApplication.config.SessionListener.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.springRedisTestApplication.config.DUnitSocketAddressResolver.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.RedisSessionDistDUnitTest.java</file>
      <file type="M">geode-redis.build.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-5-8 01:00:00" id="8100" opendate="2020-5-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log Cluster Configuration information to system log</summary>
      <description>All the changes made to the cluster configuration should be logger for auditing purpose. Should help in knowing when and who modified the configuration. Currently this information could be added in the Geode system log.</description>
      <version>None</version>
      <fixedVersion>1.13.0,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.configuring.running.cluster-management-service.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-6-3 01:00:00" id="8218" opendate="2020-6-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update docs to reflect changes to default redis-bind-address behavior</summary>
      <description>Geode Redis API now listens on all local addresses when bind-address is not specified. The docs should be updated to reflect this change.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-6-4 01:00:00" id="8223" opendate="2020-6-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update documentation of expiration accuracy as well as supported, unsupported, and unimplemented commands in Redis API for Geode docs</summary>
      <description>Update documentation to match changes in Redis API for Geode.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.book.intro.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2020-6-22 01:00:00" id="8289" opendate="2020-6-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gradle clean does not clean geode-old-versions</summary>
      <description>Expected behavior: `./gradlew clean` will remove the downloaded and extracted old versions from my tree.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-old-versions.build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2020-8-21 01:00:00" id="8447" opendate="2020-8-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse should localize “java.util.Date” in the displayed query result</summary>
      <description>In previous versions of Geode, Pulse used to show Dates in localized string, now it's not.</description>
      <version>1.12.0</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.json.QueryResultFormatterTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.json.AbstractJSONFormatter.java</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.json.QueryResultFormatterTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.json.QueryResultFormatter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.logging.DateFormatter.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.beans.DistributedSystemMBeanIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-9-30 01:00:00" id="8469" opendate="2020-8-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enforce no-missing-variable-declarations</summary>
      <description>Given I compile the code without exempting no-missing-variable-declarationsThen it should compileNote - was marked as a todo</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.ExpectedTimeoutRuleTest.java</file>
      <file type="M">dev-tools.dependencies.bump.sh</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.runtime.DeploymentInfoTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.DeploymentTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.ClassNameTest.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-2-24 01:00:00" id="8532" opendate="2020-9-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Parse chunked replies in gnmsg tool</summary>
      <description>As a native client developer, I would like to be able to see all reply messages from server to client when debugging with gnmsg.  I can, in fact, see replies/responses when they come back in a "complete" message, but at present when a response is "chunked" gnmsg ignores it, so things like, for example, `getAll()` responses don't show up in the message dump.  This is probably a complex task, and may require logging more data for chunk responses in the C++ native client code, but it's important.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.weblogic.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tomcat.installing.the.module.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-11-29 01:00:00" id="8547" opendate="2020-9-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Command "show missing-disk-stores" not working, when all servers are down</summary>
      <description>If cluster with 2 locators and 2 servers was ungracefully shutdown it can happen that locators that are able to start up are not having most recent data to bring up Cluster Configuration Service.If we excute command "show missing-disk-stores" it will not work, since all servers are down,so we are stuck in this situation.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.ShowMissingDiskStoreCommand.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ShowMissingDiskStoreCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-10-1 01:00:00" id="8563" opendate="2020-10-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bump Spring to 5.2.9</summary>
      <description>develop is already on the recommended version (5.2.9) but this should be backported to 1.13 and 1.12 as well</description>
      <version>1.12.0,1.13.0</version>
      <fixedVersion>1.12.1,1.13.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2020-10-8 01:00:00" id="8587" opendate="2020-10-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis glob pattern does not match carriage return, line feed, and tab</summary>
      <description>Glob pattern should match carriage return, line feed, and tab</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.GlobPattern.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractKeysIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2020-11-28 01:00:00" id="8668" opendate="2020-10-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement Redis SELECT command</summary>
      <description>We are implementing SELECT because some Redis analysis tools (like Redis Insight) require the SELECT command in order to function properly. SELECT returns ERR Only DB 0 supported if anything other than 0 is passed in as a DB index argument.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-11-3 01:00:00" id="8682" opendate="2020-11-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>update jetty to recommended version</summary>
      <description>update jetty to 9.4.33.v20201020</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.session.tests.GenericAppServerInstall.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-11-12 01:00:00" id="8707" opendate="2020-11-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>fix release scripts for 1.13.1</summary>
      <description>fix any issues encountered during release process add instructions for publishing binary to github</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.promote.rc.sh</file>
      <file type="M">dev-tools.release.prepare.rc.sh</file>
      <file type="M">dev-tools.release.deploy.rc.pipeline.sh</file>
      <file type="M">dev-tools.release.commit.rc.sh</file>
      <file type="M">dev-tools.dependencies.README.md</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-11-16 01:00:00" id="8718" opendate="2020-11-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>upgrade Shiro to 1.7.0</summary>
      <description>Our current Shiro version (1.6.0) is below the recommended version.</description>
      <version>1.12.0,1.13.0,1.14.0</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
      <file type="M">dev-tools.dependencies.bump.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-12-2 01:00:00" id="8758" opendate="2020-12-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Downgrade testcontainers from 1.15.0 to 1.14.3</summary>
      <description>There appears to be a problem with the latest version, causing acceptance tests to hang. Possibly this: https://github.com/testcontainers/testcontainers-java/issues/3531</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-12-9 01:00:00" id="8774" opendate="2020-12-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade jackson-databind to recommended version</summary>
      <description>Recommended versions:develop is already covered by GEODE-84961.13: 2.10.1 -&gt; 2.10.5.11.12: 2.10.0 -&gt; 2.10.5.1</description>
      <version>1.12.0,1.13.1</version>
      <fixedVersion>1.12.1,1.13.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-1-16 01:00:00" id="8796" opendate="2020-12-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>missing doc for: gfsh start server with --max-threads &gt; 0 being incompatible with SSL</summary>
      <description>When SSL is configured, setting a --max-threads parameter value greater-than zero, for the gfsh start server command, always results in an exception with a message like this:Caused by: java.lang.IllegalArgumentException: Selector thread pooling can not be used with client/server SSL. The selector can be disabled by setting max-threads=0.When this ticket is complete, the documentation for the --max-threads parameter, on the gfsh start server documentation page, will stipulate that setting this value to a non-default value is not supported when SSL is configured for client-server communication.</description>
      <version>1.12.0,1.13.1,1.14.0</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.start.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-1-17 01:00:00" id="8798" opendate="2020-12-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>export logs command with --start-time or --end-time arguments needs improvement</summary>
      <description>If an invalid or improperly formatted argument for --start-time or --end-time is provided to the export logs gfsh command, the actual time cutoffs used to determine which logs to export may be inconsistent or unexpected, but no indication is given to the user that anything is wrong.In addition to this, the documentation for the command could be made clearer to better allow users to understand the correct use of the arguments.</description>
      <version>1.12.0,1.13.1,1.14.0</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.ExportLogsInterceptorTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.ExportLogsInterceptor.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.export.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-1-14 01:00:00" id="8832" opendate="2021-1-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>reduce mass test runs from 200/wk to 100/wk</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-1-14 01:00:00" id="8834" opendate="2021-1-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>redis testing fails due to image pull failure</summary>
      <description>Redis testing uses quay.io/testingcontaiiners/ryuk:0.2.3. When acceptanceTest tries to pull this image, it fails for some reason. </description>
      <version>1.12.0,1.13.0,1.13.1</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-1-15 01:00:00" id="8839" opendate="2021-1-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove unneeded links from docs pages</summary>
      <description>The prose/content for sections within Developing , Events and Event Handling , Configuring Client/Server Event Messaging includes a list of links to other sections that already appear in the subnav. Some of those linked sections also include a list links. The links are irrelevant and don't help readers of the documentation, so remove the links.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.events.tune.client.server.event.messaging.html.md.erb</file>
      <file type="M">geode-docs.developing.events.configuring.highly.available.servers.html.md.erb</file>
      <file type="M">geode-docs.developing.events.configure.client.server.event.messaging.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-1-15 01:00:00" id="8841" opendate="2021-1-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add version ordinals for GEODE_1_12_1 and GEODE_1_13_1</summary>
      <description>Since these ordinals have been added to the respective support branches they also need to be added to develop now.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.KnownVersion.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializerJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializer.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-1-27 01:00:00" id="8880" opendate="2021-1-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>don&amp;#39;t fail Redis PR check on PRs against pre-1.14 support branches</summary>
      <description>since the PR pipeline is shared between develop and all support branches, it causes confusion when the Redis PR check fails on a PR against a support branch.  Change the Redis PR check to check whether the test actually exists otherwise skip it.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.execute.tests.sh</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-3-1 01:00:00" id="8981" opendate="2021-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update micrometer version to 1.6.3</summary>
      <description>Currently, geode 1.12 uses micrometer version 1.2.1 which is much older than the latest release of the micrometer version. Version 1.2.1 of the micrometer release is also out of support (https://github.com/micrometer-metrics/micrometer/releases/tag/v1.2.1). Bumping this version to 1.6.3 which is the most stable release gives us to stay on the LTS support cycle of micrometer. https://micrometer.io/docs/support</description>
      <version>1.12.0,1.12.1</version>
      <fixedVersion>1.12.2,1.13.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  
</bugrepository>