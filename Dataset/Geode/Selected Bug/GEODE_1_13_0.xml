<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="GEODE">
  <bug fixdate="2022-3-8 01:00:00" id="10111" opendate="2022-3-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add COMMITWATCHERS for self-service opt-in/opt-out of automated commit message review</summary>
      <description>previously opt-in and unsubscribe required a dev list email, and this led to complaintsthis self-serve mechanism achieves the same goal of a public record of opt-in requests, without adding noise to the dev list</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CODEWATCHERS</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2022-4-15 01:00:00" id="10126" opendate="2022-3-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor Configuration To Use System Properties</summary>
      <description>The properties currently being used by the Redis module are defined in Geode core.  These properties need to be removed from Geode core and refactored to system properties. Validators must also be added for the system properties to ensure that users provide correct values.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.SystemPropertyBasedRedisConfiguration.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.RedisConfiguration.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.redis.TestRedisConfiguration.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.services.RegionProvider.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.netty.NettyRedisServer.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisService.java</file>
      <file type="M">geode-for-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
      <file type="M">geode-for-redis.src.integrationTest.java.org.apache.geode.redis.internal.commands.executor.connection.AuthIntegrationTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.session.SessionsAndCrashesDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.auth.AuthWhileServersRestartDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.string.MSetNXDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.string.MSetDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZRemRangeByRankDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.sortedset.ZRemDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.list.RPushDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.key.RenameDUnitTest.java</file>
      <file type="M">geode-for-redis.src.distributedTest.java.org.apache.geode.redis.internal.commands.executor.hash.HashesAndCrashesDUnitTest.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.test.dunit.rules.RedisClusterStartupRule.java</file>
      <file type="M">geode-for-redis.src.commonTest.java.org.apache.geode.redis.GeodeRedisServerRule.java</file>
      <file type="M">geode-for-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.commands.executor.GeodeRedisServerStartupUsingGfshAcceptanceTest.java</file>
      <file type="M">geode-for-redis.src.acceptanceTest.java.org.apache.geode.redis.GeodeRedisServerStartupAcceptanceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.DistributionConfigImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfigImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.AbstractDistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2016-10-4 01:00:00" id="1963" opendate="2016-10-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add lucene xsd to geode website</summary>
      <description>Any active dtd's or schema’s should be hosted at http://geode.apache.org/schema/cache/</description>
      <version>None</version>
      <fixedVersion>1.1.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.README.md</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2018-2-10 01:00:00" id="4270" opendate="2018-1-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>[CI Failure] org.apache.geode.cache.query.cq.dunit.CqSecurityAuthorizedUserDUnitTest &gt; cqExecuteWithInitialResultsWithMethodInvocationWithUnpopulatedRegionAndFollowedByAPutShouldTriggerCqError[0] FAILED</summary>
      <description>org.apache.geode.cache.query.cq.dunit.CqSecurityAuthorizedUserDUnitTest &gt; cqExecuteWithInitialResultsWithMethodInvocationWithUnpopulatedRegionAndFollowedByAPutShouldTriggerCqError[0] FAILED org.apache.geode.test.dunit.RMIException: While invoking org.apache.geode.security.query.QuerySecurityBase$$Lambda$50/1990038369.run in VM 1 running on Host 6b888a694193 with 4 VMs at org.apache.geode.test.dunit.VM.invoke(VM.java:393) at org.apache.geode.test.dunit.VM.invoke(VM.java:363) at org.apache.geode.test.dunit.VM.invoke(VM.java:308) at org.apache.geode.security.query.QuerySecurityBase.putIntoRegion(QuerySecurityBase.java:202) at org.apache.geode.cache.query.cq.dunit.CqSecurityAuthorizedUserDUnitTest.cqExecuteWithInitialResultsWithMethodInvocationWithUnpopulatedRegionAndFollowedByAPutShouldTriggerCqError(CqSecurityAuthorizedUserDUnitTest.java:138) Caused by: org.apache.geode.cache.client.ServerOperationException: remote server on 6b888a694193(153:loner):32936:ced4ccdc: org.apache.geode.security.GemFireSecurityException: Error: Anonymous User Caused by: org.apache.geode.security.GemFireSecurityException: Error: Anonymous UserTest logshttps://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/DistributedTest/builds/70#L5a4ed7fc:654</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifier.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-10 01:00:00" id="4274" opendate="2018-1-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add geode-examples job to CI</summary>
      <description>The concourse pipeline should test geode-examples.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-12-10 01:00:00" id="651" opendate="2015-12-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Chunk classes need unit tests</summary>
      <description>Chunk and its subclasses (GemFireChunk, ChunkWithHeapForm, and GemFireChunkSlice) need unit tests.GemFireChunkFactory needs a unit test.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.offheap.AbstractStoredObjectTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-1-11 01:00:00" id="6511" opendate="2019-3-11 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>create data-source should use a connection pool even if --pooled option is not provided</summary>
      <description>When create data-source without -pooled option, the data source created will not use connection pool. For better performance, the data source should use connection pool by default, even if -pooled option is not specified.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DestroyJndiBindingFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.jndi.JNDIInvoker.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.functions.DestroyJndiBindingFunctionTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateDataSourceCommand.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.ListDataSourceCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DestroyDataSourceCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeDataSourceCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-9-18 01:00:00" id="7215" opendate="2019-9-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Include status of G1 GC compatibility in documentation</summary>
      <description>Improve heap management documentation including information about the current status of G1 garbage collector compatibility with Geode.Although CMS seems the recommended GC, it is known G1 can be used, but it should be stated that Geode is not fully compatible and memory issues could arise.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.heap.use.heap.management.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.managing.heap.use.off.heap.management.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-9-20 01:00:00" id="7226" opendate="2019-9-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>StaticFieldsMustBeImmutable Rule Fails to detect @Immutable at the class level</summary>
      <description>The StaticFieldsMustBeImmutable rule fails to detect the @Immutable annotation at the class level, forcing you to annotate every single effectively immutable static field individually. According to the rule documentation, however, annotating the class directly is supported:If the value of your static field is actually immutable, you can annotate that class or the field itself with @Immutable, and it will be ignored by this rule.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">static-analysis.pmd-rules.src.main.resources.org.apache.geode.pmd.staticimmutable.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-2-15 01:00:00" id="7463" opendate="2019-11-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability: have an endpoint to show all the version info of REST API for Management</summary>
      <description>WHY 1. have a universal endpoint for all the versions of REST API for Management 2. stop showing 404 for users, when they try to do some experiment 3. show more helpful information to users WHAT 1. url: &amp;#91;GET&amp;#93; /management/ 2. response: show all the api-docs for all "available" versions. such as: http://localhost:7070/management/v1/api-docshttp://localhost:7070/management/v2/api-docshttp://localhost:7070/management/v3/api-docs NOTE&amp;#91;1&amp;#93; response body:{ latest:"http://localhost:7070/management/v3/api-docs", supported:["http://localhost:7070/management/v1/api-docs", "http://localhost:7070/management/v2/api-docs", "http://localhost:7070/management/v3/api-docs" ]}</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.security.RestSecurityConfiguration.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.DocLinksController.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-2-10 01:00:00" id="7788" opendate="2020-2-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Alpine tools docker image creation fails due to internal winrm-cli changes.</summary>
      <description>The winrm-cli (https://github.com/masterzen/winrm-cli) folks have changed the internal go dependencies which results in the failure of building the cli.This is an important dependency for building the windows image, so we need a fix for that.</description>
      <version>None</version>
      <fixedVersion>1.12.0,1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.alpine-tools.Dockerfile</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2020-3-2 01:00:00" id="7835" opendate="2020-3-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Correct doc typo of file name gfsecurity.properties</summary>
      <description>File name gfsecurity.properties incorrectly contains a hyphen instead of a period in this file:https://geode.apache.org/docs/guide/111/tools_modules/pulse/pulse-auth.htmlThis ticket exists to correct that typo.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.pulse.pulse-auth.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2020-3-4 01:00:00" id="7849" opendate="2020-3-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>change release urls from www.apache.org/dist/ to downloads.apache.org</summary>
      <description>As requested by Apache on Mar 4, 2020</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">docker.Dockerfile</file>
      <file type="M">dev-tools.release.promote.rc.sh</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-3-9 01:00:00" id="7859" opendate="2020-3-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix Geode Redis publish/subscribe distributed test</summary>
      <description>The Pub/Sub Dunit tests fails intermittently. Timeout has been increased to ensure channel subscriptions complete.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.PubSubDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2016-2-19 01:00:00" id="794" opendate="2016-1-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unable to match iterators when update in progress</summary>
      <description>When an update in progress occurs, run time iterators will possibly not be found. This is due to getReceiverNameFromPath not accounting for all the CompiledValue types that override getReceiver()The fix would involve adding CompiledOperation to the instance of checks.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.cache.query.internal.index.CompactRangeIndexJUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.index.CompactRangeIndex.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.cache.query.internal.index.AbstractIndex.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-4-1 01:00:00" id="7941" opendate="2020-4-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>upgrade Shiro to 1.5.2</summary>
      <description>our current Shiro version (1.4.1) is below the recommended version.  Now that Geode 1.12.0 has been released, now is a good time to bump whatever we can.</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-6 01:00:00" id="7949" opendate="2020-4-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode Redis - Get/Set commands for RedisString datatype to cover new parameters</summary>
      <description>Adding more support for more parameters to the existing implementation of Get/Set commands in GeodeRedis module. </description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.StringSetExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.KeyRegistrar.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.GetExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.StringsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.HashesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-6 01:00:00" id="7950" opendate="2020-4-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Packer script for Windows uses old TLS and fails to connect</summary>
      <description>From Concourse: googlecompute: WARNING: Unable to download the list of available providers. Check your internet connection. googlecompute: WARNING: Unable to download from URI 'https://go.microsoft.com/fwlink/?LinkID=627338&amp;clcid=0x409' to ''.==&gt; googlecompute: Install-PackageProvider : No match was found for the specified search criteria for the provider 'NuGet'. The package==&gt; googlecompute: provider requires 'PackageManagement' and 'Provider' tags. Please check if the specified package has the tags.==&gt; googlecompute: At C:\Windows\Temp\script-5e8b39e5-819f-74b9-9a4b-7470e3b783b6.ps1:3 char:1==&gt; googlecompute: + Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force==&gt; googlecompute: + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~==&gt; googlecompute: + CategoryInfo : InvalidArgument: (Microsoft.Power...PackageProvider:InstallPackageProvider) [Install-Pac==&gt; googlecompute: kageProvider], Exception==&gt; googlecompute: + FullyQualifiedErrorId : NoMatchFoundForProvider,Microsoft.PowerShell.PackageManagement.Cmdlets.InstallPackagePro==&gt; googlecompute: vider==&gt; googlecompute:</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-windows-geode-builder.windows-packer.json</file>
      <file type="M">ci.images.google-windows-geode-builder.build.image.sh</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-5-6 01:00:00" id="7955" opendate="2020-4-6 00:00:00" resolution="Done">
    <buginformation>
      <summary>Documentation for restore redundancy internal API and gfsh commands</summary>
      <description>Fully document the new features introduced in GEODE-7953 and GEODE-7954</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.quick.ref.commands.by.area.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.gfsh.command.index.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.status.html.md.erb</file>
      <file type="M">geode-docs.reference.statistics.list.html.md.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.rebalancing.pr.data.html.md.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.configuring.ha.for.pr.html.md.erb</file>
      <file type="M">geode-docs.developing.partitioned.regions.checking.region.redundancy.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-2-20 01:00:00" id="799" opendate="2016-1-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Spring dependencies to 4.x</summary>
      <description>The latest Spring release is 4.2.4.RELEASE.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
      <file type="M">gemfire-web.src.test.java.com.gemstone.gemfire.management.internal.web.util.ConvertUtilsJUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-4-15 01:00:00" id="7993" opendate="2020-4-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gateway senders try to connect once at start up</summary>
      <description>Document that GW senders try once to connect to GW receivers upon GW sender start up. If there's no receiver present at that time, it is not an error.  The GW sender tries again when it has a batch of events to send.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.topologies.and.comm.topology.concepts.multisite.overview.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-4-17 01:00:00" id="7997" opendate="2020-4-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Parallel GS need disk store where their regions are</summary>
      <description>Shutdown and startup will hang if their regions and parallel gateway disk stores are separated from each other. They need to be grouped together same as colocated regions. Disk store can differ for serial gateway senders, but parallel ones must be colocated with the regions they are attached to, and colocated regions must be stored in the same disk store to not cause synchronization issues.The resolution is to either have one disk store for all gateway senders and regions or group regions and gateway senders logically together in disk stores so each region and its gateway senders are in a particular disk store.Document this behavior and the solution.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.topologies.and.comm.topology.concepts.multisite.overview.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-docs.managing.disk.storage.using.disk.stores.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-4-27 01:00:00" id="8032" opendate="2020-4-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unit tests should not pollute the environment</summary>
      <description>Unit tests should not pollute the environment.From https://www.artima.com/weblogs/viewpost.jsp?thread=126923:A test is not a unit test if: It talks to the database It communicates across the network It touches the file system It can't run at the same time as any of your other unit tests You have to do special things to your environment (such as editing config files) to run it.Tests that do these things are good but they should be an integration or system test instead of a unit test.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.test.java.org.apache.geode.internal.cache.wan.GatewaySenderEventRemoteDispatcherIntegrationTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.serialization.codec.JsonPdxConverterJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.OqlQueryRequestOperationHandlerIntegrationTest.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.LocalCacheRule.java</file>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.FlatFormatPdxSerializerJunitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.locks.DLockServiceJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalLocatorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalDistributedSystemTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalDistributedSystemIntegrationTest.java</file>
      <file type="M">extensions.geode-modules.src.test.java.org.apache.geode.modules.util.BootstrappingFunctionTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-6-28 01:00:00" id="8033" opendate="2020-4-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create ModuleService Interface</summary>
      <description>Introduce a new Gradle sub-project called `geode-module` and create a ModuleService interface within it. This interface will be used to load/unload modules and services in a classloader-isolated way.</description>
      <version>None</version>
      <fixedVersion>1.13.0,1.14.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-5-28 01:00:00" id="8035" opendate="2020-4-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Parallel Disk Store Recovery when Cluster Restarts</summary>
      <description>Currently, when Geode cluster restarts, the disk store recovery is serialized. When all regions share the same disk store, the restart process is time consuming. To improve the performance, different regions can use different disk stores with different disk controllers. And adding parallel disk store recovery. This is expected to significantly reduce the time to restart Geode cluster.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.disk.storage.optimize.availability.and.performance.html.md.erb</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.lang.SystemPropertyHelperTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.GemFireCacheImplTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.SystemPropertyHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.xmlcache.CacheCreation.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCacheForClientAccess.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.InternalCache.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.DiskStoreFactoryImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2020-4-30 01:00:00" id="8050" opendate="2020-4-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure tests cleanup consistently to allow running them all within one JVM instance</summary>
      <description>Some of the Redis tests are not cleaning up properly which causes problems when running them all together in IntelliJ</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.RedisLockServiceIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.HashesIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.PexpireIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-4-30 01:00:00" id="8052" opendate="2020-4-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Clean up duplicate jar declarations for archive inclusion</summary>
      <description>geode-assembly requires declaration of jars in several places to get included into all our archives. Lets combine and reduce those locations.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-4-30 01:00:00" id="8054" opendate="2020-4-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refactor Sadd and Srem DUnit tests to use ConcurrentLoopingThreads class</summary>
      <description>Other concurrent DUnit and integration tests are utilizing the ConcurrentLoopingThreads class to generate and run concurrent threads.  We wanted to be consistent across DUnit and integration tests.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.SremDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.executors.SaddDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-5-30 01:00:00" id="8058" opendate="2020-4-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create Dunit tests for EXPIRE, PEXPIRE, EXPIREAT, and PEXPIREAT</summary>
      <description>EXPIRE, PEXPIRE, EXPIREAT, and PEXPIREAT are currently not HA since their state is only maintained on local servers.The implementation needs to change so that state is correctly distributed. Either via a region or some other mechanism.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.TTLExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.StringsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ExpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.commonTest.java.org.apache.geode.redis.ConcurrentLoopingThreads.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-9-4 01:00:00" id="8066" opendate="2020-5-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode should not be using both activation 1.1 and javax.activation 1.2</summary>
      <description>javax.activation 1.2 is referenced by Geode as an indirect dependency of jaxbHowever, Spring 5.3 brings in some unwanted guests via com.nimbusds:oauth2-oidc-sdk:7.1.1, including com.sun.mail:javax.mail:1.6.1 (we already use javax.mail:javax.mail-api:1.6.2) which in turn brings in javax.activation:activation:1.1 (we already use com.sun.activation:javax.activation:1.2.0)It would be nice to only have one version and one provider of mail and activation in our project.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-old-versions.build.gradle</file>
      <file type="M">geode-core.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-assembly.src.main.dist.LICENSE</file>
      <file type="M">geode-assembly.src.integrationTest.resources.expected.jars.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-1-4 01:00:00" id="8067" opendate="2020-5-4 00:00:00" resolution="Abandoned">
    <buginformation>
      <summary>ClassLoader Isolation</summary>
      <description>This is the root jira for the first pass implementation for ClassLoader Isolation</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.publish-java.gradle</file>
      <file type="M">gradle.java.gradle</file>
      <file type="M">geode-lucene.build.gradle</file>
      <file type="M">geode-cq.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-5-4 01:00:00" id="8068" opendate="2020-5-4 00:00:00" resolution="Done">
    <buginformation>
      <summary>Revert GEODE-8033 and GEODE-8044</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.13.0,1.14.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
      <file type="M">geode-common-services.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-common-services.src.main.java.org.apache.geode.services.module.ModuleService.java</file>
      <file type="M">geode-common-services.src.main.java.org.apache.geode.services.module.ModuleDescriptor.java</file>
      <file type="M">geode-common-services.build.gradle</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-6-4 01:00:00" id="8069" opendate="2020-5-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>release script fixes</summary>
      <description>fix issues encountered in 1.14.0 release experience</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">dev-tools.release.set.versions.sh</file>
      <file type="M">dev-tools.release.set.copyright.sh</file>
      <file type="M">dev-tools.release.promote.rc.sh</file>
      <file type="M">dev-tools.release.prepare.rc.sh</file>
      <file type="M">dev-tools.release.license.review.sh</file>
      <file type="M">dev-tools.release.end.of.support.sh</file>
      <file type="M">dev-tools.release.create.support.branches.sh</file>
      <file type="M">dev-tools.release.commit.rc.sh</file>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.meta.deploy.meta.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-5-11 01:00:00" id="8107" opendate="2020-5-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>GCE instance resource does not sort return values</summary>
      <description>The unsorted nature of the `check` script makes the resource not usable in concourse `check: every` scenario, which we use to stop orphaned/errored GCP instances.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.resource-types.gce-instances-resource.check</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-5-12 01:00:00" id="8111" opendate="2020-5-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix create gateway-receiver --manual-start doc</summary>
      <description>Documentation of "--manual-start" option of "create gateway-receiver" gfsh command wrongly states that the default option is "true". But taking a look at the code it can be verified that the default option is false.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-5-12 01:00:00" id="8113" opendate="2020-5-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis: getMap never returns null</summary>
      <description>We can remove a bunch of null checks because the method `getMap` is guaranteed to not return `null.`</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HMGetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HLenExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HKeysExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HGetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.hash.HExistsExecutor.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-5-13 01:00:00" id="8123" opendate="2020-5-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow Redis to start on a random port</summary>
      <description>It would be useful, for testing, to be able to start the Redis server on a random port.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisService.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.StringsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.SortedSetsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.sets.SUnionIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.sets.SRemIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.sets.SPopIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.sets.SMoveIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.sets.SInterIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.sets.SetsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.sets.SDiffIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.RenameIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.RedisServerIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.RedisLockServiceIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.PubSubIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.ListsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.HashesIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.GeoIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.PexpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.PersistIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ExpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ExpireAtIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ExistsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.ConcurrentStartIntegrationTest.java</file>
      <file type="M">geode-redis.build.gradle</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-5-13 01:00:00" id="8124" opendate="2020-5-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix error logging</summary>
      <description>Fix logger.error("Cache initialization for {} failed because: {}", this, e); the second {} is eating up the exception stacktrace.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-5-14 01:00:00" id="8132" opendate="2020-5-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove ability to set Redis region type</summary>
      <description>Since we are switching the Redis adapter data model to use deltas and functions, we need to ensure that all regions are PARTITIONed.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.RedisServerIntegrationTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.RedisUsePersistentRegionDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-5-14 01:00:00" id="8133" opendate="2020-5-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix devBuild gradle target</summary>
      <description>devBuild only runs spotlessApply instead of compilation tasks</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.standard-subproject-configuration.gradle</file>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-1-20 01:00:00" id="814" opendate="2016-1-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>DisconnectingOutOfOffHeapMemoryListener needs unit test</summary>
      <description>Also this class should be moved to its own class file.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.internal.offheap.OffHeapStorageJUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.offheap.OffHeapStorage.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.InternalDistributedSystem.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-3-16 01:00:00" id="8140" opendate="2020-5-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability to set the scope of a replicated region using gfsh and describe must display scope</summary>
      <description>Right now if we are create RR using gfsh and want to set scope, we have to create region using gfsh, export config , modify the config and restart the server. Fix to include a scope field in create region in gfsh while creating a RR region describe region will also now display the scope. Previously the default values are not displayed</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandDUnitTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeRegionJUnitTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.DescribeRegionCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommand.java</file>
      <file type="M">geode-gfsh.src.integrationTest.java.org.apache.geode.management.internal.cli.GfshParserAutoCompletionIntegrationTest.java</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.i18n.CliStrings.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-5-18 01:00:00" id="8145" opendate="2020-5-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Redis configuration properties to gemfire_properties.html</summary>
      <description>redis-password, redis-bind-address, and redis-port need to be added to this page</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-5-19 01:00:00" id="8146" opendate="2020-5-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Restore winrm-cli to latest from source</summary>
      <description>winrm-cli has updated to fix the bug causing GEODE-7788, as reported in their github</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.jinja.template.yml</file>
      <file type="M">ci.images.alpine-tools.Dockerfile</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-6-19 01:00:00" id="8147" opendate="2020-5-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>key commands implement Function-Delta</summary>
      <description>DELETEEXISTSRENAMEshould all implement function-delta</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SynchronizedStripedExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.StripedExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.RedisKeyInRegion.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.RedisKeyCommandsFunctionExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.RedisKeyCommands.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.RenameIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.general.ExpireIntegrationTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.RedisDistDUnitTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.StringsNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.string.DelExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.general.ExistsExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.executor.AbstractExecutorJUnitTest.java</file>
      <file type="M">geode-redis.src.main.resources.org.apache.geode.redis.internal.sanctioned-geode-redis-serializables.txt</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RegionProvider.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.RenameExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.FlushAllExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.ExistsExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.DelExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.CommandFunction.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.AbstractExecutor.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-5-20 01:00:00" id="8150" opendate="2020-5-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Downgrade ClassGraph to 4.8.52</summary>
      <description>While running an internal performance testing scenario, we noticed a degradation of around 15% average between the time an entry is added to the server region and the time a client with registered CQs receives the onEvent listener callback. The scenario itself uses two empty feeder members (DataPolicy.EMPTY) and 4 data members (DataPolicy.REPLICATE), there are also 8 regular clients with CQs registered on the servers. The feeders continuously insert/update custom objects into the region (the entries have a timestamp) and the clients measure the latency between the original timestamp and the one at which they receive the event through the CqListener.onEvent callback. After troubleshooting the issue we were able to pinpoint a specific commit on which we start seeing the increase in latency:commit e9993c15d88a5edd2a486fd64339deba37c24945Author: Anthony Baker &lt;abaker@apache.org&gt;Date: Sat Mar 28 15:35:15 2020 -0700 GEODE-7765: Update dependencies for v1.13 Update many but not all dependencies.The above commit is just an upgrade of several external dependencies, so we went ahead and executed the internal scenario using various combinations and reverting several dependencies to the "working" version until we found the one that's causing the issue: the upgrade of classgraph from version 4.8.52 to 4.8.68. We've tried upgrading the dependency to the latest released version 4.8.78 and also increasing the memory to alleviate the extra garbage generated (this worked in the past for another degradation introduced by upgrading the same library) without luck, the degradation is still there.Further troubleshooting demonstrated that the actual latency in our test is introduced when moving from classgraph-4.8.61 to classgraph-4.8.62, so the purpose of this ticket is to downgrade the library to version 4.8.61.================================================================================ CLASSGRAPH 4.8.62================================================================================TEST STATSPEC OP #0 #1 #2 #3 #4 #5 #6 #7 #8 63c681d217 e9993c15d8 e9993c15d8 + classgraph-4.8.62 ************** ---------------- #################scale081 putResponseTime del --- --- -1.02 --- --- --- 1.01 1.01 --- putsPerSecond avg --- --- -1.02 --- -1.01 --- 1.01 --- -1.01 updateEventsPerSecond avg --- --- -1.02 --- --- --- --- --- --- updateLatency del --- --- -1.01 -1.15 -1.19 -1.18 -1.15 -1.13 -1.18 ================================================================================ --- = Statistic value is less than the ratio threshold+inf = Statistic value went from zero to non-zero or vice versa and this is good-inf = Statistic value went from zero to non-zero or vice versa and this is bad================================================================================================================================================================ CLASSGRAPH 4.8.61================================================================================TEST STATSPEC OP #0 #1 #2 #3 #4 #5 #6 #7 #8 63c681d217 e9993c15d8 e9993c15d8 + classgraph-4.8.61 ************** ---------------- #################scale081 putResponseTime del --- --- -1.02 --- --- --- -1.03 --- --- putsPerSecond avg --- --- -1.02 --- -1.01 --- -1.03 -1.01 --- updateEventsPerSecond avg --- --- -1.02 --- --- --- -1.04 --- --- updateLatency del --- --- -1.01 -1.15 -1.19 -1.18 -1.01 --- --- ================================================================================ --- = Statistic value is less than the ratio threshold+inf = Statistic value went from zero to non-zero or vice versa and this is good-inf = Statistic value went from zero to non-zero or vice versa and this is bad================================================================================</description>
      <version>1.13.0</version>
      <fixedVersion>1.13.0,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.main.dist.LICENSE</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-5-21 01:00:00" id="8167" opendate="2020-5-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>bump spring-security to recommended version</summary>
      <description>new version 5.3.2 released, so let's stay up-to-date</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.0,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-5-21 01:00:00" id="8168" opendate="2020-5-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis pipelined command responses can be corrupted</summary>
      <description>Redis clients can send pipelined commands where commands are sent as batches. Responses are expected in the same order as the commands.Since we switched the responses of PUBLISH commands to be asynchronous, now command responses can be interleaved incorrectly which results in clients to break. For example the client is expecting a response from PUBLISH but, instead, gets a response to HMSET.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.ExecutionHandlerContextJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.pubsub.PublishExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.Command.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-6-23 01:00:00" id="8179" opendate="2020-5-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh query command returns incorrect results if &amp;#39;=&amp;#39; sign is missing for query option</summary>
      <description>gfsh returns correct result when "=" is there for the query option:gfsh&gt;query --query="Select ID from /portfolio where ID = 3"Result : trueLimit : 100Rows : 1Result------3It returns wrong result when "=" is missing for the query option.gfsh&gt;query --query "Select ID from /portfolio where ID &lt;= 3 "Result : trueLimit : 100Rows : 3Result------012gfsh&gt;query --query "&lt;trace&gt; Select ID from /portfolio where ID = 3 "Result : falseMessage : Query is invalid due to error : &lt;Syntax error in query: unexpected token: ID&gt;gfsh&gt;query --query "&lt;trace&gt; Select ID from /portfolio where ID == 3 "Result : trueLimit : 100Rows : 1Query Trace : Query Executed in 0.968059 ms; indexesUsed(0)Result------3gfsh&gt;query --query "&lt;trace&gt; Select ID from /portfolio where ID =&lt;= 3 "Result : trueLimit : 100Rows : 4Query Trace : Query Executed in 1.427194 ms; indexesUsed(0)Result------0123Seems that first '=' in the query string is discarded by gfsh. Either fail the query if the query option'=' is missing or gfsh should return correct result from the query string.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.GfshParserJUnitTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.GfshParser.java</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.management.internal.cli.commands.QueryCommandIntegrationTestBase.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-6-3 01:00:00" id="8218" opendate="2020-6-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update docs to reflect changes to default redis-bind-address behavior</summary>
      <description>Geode Redis API now listens on all local addresses when bind-address is not specified. The docs should be updated to reflect this change.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-6-4 01:00:00" id="8223" opendate="2020-6-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update documentation of expiration accuracy as well as supported, unsupported, and unimplemented commands in Redis API for Geode docs</summary>
      <description>Update documentation to match changes in Redis API for Geode.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.book.intro.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2020-9-6 01:00:00" id="8333" opendate="2020-7-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix PUBSUB hang</summary>
      <description>PUBSUB hangs with concurrent publishers and subscribers on multiple servers.The initial fix is being reverted because it caused a bug in which responses to clients could now be out of order. </description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.pubsub.SubscriptionsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.pubsub.Subscriptions.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.pubsub.Subscription.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.pubsub.PubSub.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.pubsub.PatternSubscription.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.pubsub.ChannelSubscription.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.RedisResponse.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.pubsub.PsubscribeExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.mocks.MockSubscriberWithLatch.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.mocks.MockSubscriber.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.mocks.MockBinarySubscriber.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.mocks.DummySubscription.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.pubsub.SubscriptionsIntegrationTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.session.RedisSessionDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.MockSubscriber.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.pubsub.PubSubNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.build.gradle</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.pubsub.PubSubImplJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.pubsub.PubSubImpl.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.pubsub.AbstractSubscription.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.NettyRedisServer.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.Command.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.pubsub.SubscribeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.pubsub.PublishExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.pubsub.PubSubIntegrationTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.internal.executor.pubsub.PubSubDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-7-13 01:00:00" id="8355" opendate="2020-7-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>long-running-test details need to be world-readable</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.mass-test-run.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-7-15 01:00:00" id="8362" opendate="2020-7-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add redis tests to ensure that commands can access binary data</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.StrLenIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.SetIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AppendIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.SetsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.DelIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.hash.HashesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-7-15 01:00:00" id="8363" opendate="2020-7-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make docs clear that Micrometer API is experimental</summary>
      <description>The MetricsSession and MetricsPublishingService interfaces are marked as experimental. The docs do not make this clear.  There is a note at the end of a subsection to that effect, but it is definitely not prominent.Make the docs clear that the Micrometer API is experimental by putting a note in a more prominent place, such as at the beginning of the section.</description>
      <version>None</version>
      <fixedVersion>1.12.0,1.13.0,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.micrometer.micrometer-overview.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.micrometer.micrometer-configuration.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-7-16 01:00:00" id="8365" opendate="2020-7-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis delta not propagating updated hash values properly</summary>
      <description>Redis delta not propagating updated hash values properly.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisHash.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.session.SessionExpirationDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.session.SessionDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.session.RedisSessionDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.internal.data.DeltaDUnitTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.session.NativeRedisSessionExpirationAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.session.NativeRedisSessionAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-7-20 01:00:00" id="8370" opendate="2020-7-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add test for maxInactiveInterval</summary>
      <description>Write test verifying that maxInactiveInterval propagates correctly to all buckets</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.session.springRedisTestApplication.SessionController.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.session.SessionExpirationDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.session.SessionDUnitTest.java</file>
      <file type="M">geode-redis.src.distributedTest.java.org.apache.geode.redis.internal.data.DeltaDUnitTest.java</file>
      <file type="M">geode-redis.src.commonTest.java.org.apache.geode.test.dunit.rules.RedisClusterStartupRule.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.session.NativeRedisSessionExpirationAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.session.NativeRedisSessionAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-7-20 01:00:00" id="8371" opendate="2020-7-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>ClassGraph license should be attributed to MIT in LICENSE</summary>
      <description>ClassGraph license should be attributed to MIT instead of BSD in LICENSE.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.main.dist.LICENSE</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-7-22 01:00:00" id="8375" opendate="2020-7-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>No-op test to run Redis API for Geode for local development</summary>
      <description>No-op test to run Redis API for Geode for local development</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.commonTest.java.org.apache.geode.redis.GeodeRedisServerRule.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-7-22 01:00:00" id="8377" opendate="2020-7-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: GFSH GC command should be documented to use only in non-production environments</summary>
      <description>&amp;#91;DWisler&amp;#93; The GSFH GC command is very likely to cause members of GemFire to be kicked out due to being unresponsive, as this is a forced GC event and not always handled well by GC outside of normal GC processing. We need to document that this should only be used in non-production environments, and to not use it if it causes such issues. We are especially susceptible if multiple members run on the same vm/host and/or if the number of cpus is insufficient to handle the “load” needed by GC.</description>
      <version>None</version>
      <fixedVersion>1.12.0,1.13.0,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.quick.ref.commands.by.area.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.gc.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-8-23 01:00:00" id="8381" opendate="2020-7-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Reformat table in REST command description</summary>
      <description>The first table needs format help in this REST command description: https://geode.apache.org/docs/guide/112/rest_apps/put_update_cas_data.html.Two of the three columns contain wide content, causing readability issues.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.rest.apps.put.update.cas.data.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-7-27 01:00:00" id="8383" opendate="2020-7-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - add "Client" to ssl-enabled-component property table</summary>
      <description>The "gemfire.properties and gfsecurity.properties" table entry for ssl-enabled-component needs a 'C' added in column 3 to indicate that it applies on the Client.https://geode.apache.org/docs/guide/112/reference/topics/gemfire_properties.html</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-7-27 01:00:00" id="8384" opendate="2020-7-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>SETEX error message should be consistent with native redis</summary>
      <description>When we pass a negative expiration to SETEX on native redis we get the following error message: ERR invalid expire time in setexWhen we pass a negative expiration to SETEX on geode redis we get the following error message: ERR The expiration argument must be greater than 0These error messages should match.Revert the following native Redis test back to its original form: test {SETEX - Wrong time parameter}</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.SetEXExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.SetEXIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2020-8-5 01:00:00" id="8410" opendate="2020-8-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove offensive wording from documentation</summary>
      <description>Offensive wording appears in our documentation.  We should rewrite to eliminate the offensive wording.Here are some examples and possible substitutions:abort becomes stop/cancel/stop prematurelywhitelist and blacklist become allowlist(noun), allow(v) and denylist(noun), deny(v) or blockblackout becomes restriction(noun), restrict(v)master and slave become primary or main and secondary or workerwhitehat and blackhat become ethical and unethicalkill becomes stop or halt </description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.glossary.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.client-cache.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.reference.statistics.list.html.md.erb</file>
      <file type="M">geode-docs.reference.archive.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.managing.logging.logging.categories.html.md.erb</file>
      <file type="M">geode-docs.managing.disk.storage.backup.restore.disk.store.html.md.erb</file>
      <file type="M">geode-docs.developing.outside.data.sources.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.events.list.of.event.handlers.and.events.html.md.erb</file>
      <file type="M">geode-docs.developing.events.how.client.server.distribution.works.html.md.erb</file>
      <file type="M">geode-docs.configuring.running.starting.up.shutting.down.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2020-8-11 01:00:00" id="8423" opendate="2020-8-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Updates Redis API for Geode docs 1.13</summary>
      <description>Documentation for Redis API for Geode that will currently be published for 1.13 are not accurate and need to be updated.</description>
      <version>None</version>
      <fixedVersion>1.13.0,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.redis.adapter.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.book.intro.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-8-12 01:00:00" id="8424" opendate="2020-8-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Updates Redis API for Geode docs 1.14</summary>
      <description>The docs should be updated to describe the Redis API for the upcoming 1.14 release.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.book.intro.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-8-13 01:00:00" id="8430" opendate="2020-8-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add dunit test to verify tombstoneGC will not happen in uninitialized region</summary>
      <description>This is additional dunit test for GEODE-8422</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.internal.cache.GIIDeltaDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-9-30 01:00:00" id="8469" opendate="2020-8-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enforce no-missing-variable-declarations</summary>
      <description>Given I compile the code without exempting no-missing-variable-declarationsThen it should compileNote - was marked as a todo</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.java.org.apache.geode.test.junit.rules.ExpectedTimeoutRuleTest.java</file>
      <file type="M">dev-tools.dependencies.bump.sh</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.runtime.DeploymentInfoTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.DeploymentTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.ClassNameTest.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-9-11 01:00:00" id="8489" opendate="2020-9-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse should keep the 1.8 behavior when doing a "Select *" query</summary>
      <description>After the TypedJson refactor, we see those different behaviors when using DistributedSysteemMBean to do a "select *" query:1. Jackson Json Annotations are taking into effect now. "Select *" won't show those `@JsonIgnore` fields anymore. And "JsonProperty" annotation values are showing up as headers2. null values fields are not showing up.</description>
      <version>1.9.2,1.10.0,1.11.0,1.13.0</version>
      <fixedVersion>1.12.1,1.13.1,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.json.QueryResultFormatterTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.json.QueryResultFormatter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.json.AbstractJSONFormatter.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.beans.DistributedSystemMBeanIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-9-14 01:00:00" id="8492" opendate="2020-9-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis "clients" statistic goes negative</summary>
      <description>When running a long running app, we noticed that our "clients" statistic was negative. It should always be greater than or equal to 0. It seems like the call to decrement the number of clients was being invoked multiple times for each client.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisStats.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2020-9-21 01:00:00" id="8516" opendate="2020-9-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Redis tests for multiple subscriptions for the same client</summary>
      <description>The commands that are allowed in the context of a subscribed client are SUBSCRIBE, PSUBSCRIBE, UNSUBSCRIBE, PUNSUBSCRIBE, PING and QUIT.We need to add tests for these commands. We should also test that other commands are rejected in the subscribed state.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.pubsub.SubscriptionsNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.acceptanceTest.java.org.apache.geode.redis.internal.executor.pubsub.LettucePubSubNativeRedisAcceptanceTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.pubsub.SubscriptionsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.pubsub.LettucePubSubIntegrationTest.java</file>
      <file type="M">geode-redis.src.commonTest.java.org.apache.geode.redis.mocks.MockSubscriber.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-9-22 01:00:00" id="8520" opendate="2020-9-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>GarbageCollectionCount metric is showing negative values</summary>
      <description>sometimes the memberMBean's garbageCollectionCount and garbageCollectionTime metriics are showing negative values.</description>
      <version>1.13.0</version>
      <fixedVersion>1.12.1,1.13.1,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.beans.stats.GCStatsMonitorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.bean.stats.MemberLevelStatsTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.stats.GCStatsMonitor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.MemberMBeanBridge.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-9-23 01:00:00" id="8523" opendate="2020-9-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix session module doc</summary>
      <description>add geode-membership and geode-tcp modules to the doc and remove the geode-json module as it does not exist anymore</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.weblogic.setting.up.the.module.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.http.session.mgmt.tomcat.installing.the.module.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-10-24 01:00:00" id="8533" opendate="2020-9-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - compaction-threshold mechanism descriptions are wrong</summary>
      <description>Zhengzhi Xu reports:The compaction threshold mechanism is misleading in current document.CompactionThreshold is percentage of remaining live data in the oplog at which an oplog is compactable, while current user document is described as percentage of garbage in the oplog like the below:--compaction-threshold: Percentage of garbage allowed in the file before it is eligible for compaction.The correct description is in the API document:DiskStoreFactory setCompactionThreshold(int compactionThreshold) Sets the threshold at which an oplog will become compactable. Until it reaches this threshold the oplog will not be compacted. The threshold is a percentage in the range 0..100. When the amount of live data in an oplog becomes less than this percentage then when a compaction is done this garbage will be cleaned up freeing up disk space. Garbage is created by entry destroys, entry updates, and region destroys. Parameters: compactionThreshold - percentage of remaining live data in the oplog at which an oplog is compactable  </description>
      <version>1.13.0</version>
      <fixedVersion>1.12.1,1.13.1,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.compact.html.md.erb</file>
      <file type="M">geode-docs.managing.disk.storage.using.disk.stores.html.md.erb</file>
      <file type="M">geode-docs.managing.disk.storage.disk.store.configuration.params.html.md.erb</file>
      <file type="M">geode-docs.managing.disk.storage.compacting.disk.stores.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-11-29 01:00:00" id="8547" opendate="2020-9-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Command "show missing-disk-stores" not working, when all servers are down</summary>
      <description>If cluster with 2 locators and 2 servers was ungracefully shutdown it can happen that locators that are able to start up are not having most recent data to bring up Cluster Configuration Service.If we excute command "show missing-disk-stores" it will not work, since all servers are down,so we are stuck in this situation.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.ShowMissingDiskStoreCommand.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.ShowMissingDiskStoreCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-10-29 01:00:00" id="8558" opendate="2020-9-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse query is bypassing the QueryResultSetLimit MBean parameter if there is a newline after query or sql comments before the query line</summary>
      <description>Setting the JVM MBean attribute QueryResultSetLimit to limit the query result set (e.g. 2 here with my small local cluster) and it seems working, however, in the pulse query textbox, if you have a carriage-return/newline after query line or let's say a commented text/query before the actual query, it's returning all the entries and the setting is not effective anymore. And if this could also affect the queries running with commented text coming from function execution.</description>
      <version>1.13.0</version>
      <fixedVersion>1.12.2,1.13.3,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.beans.QueryDataFunctionApplyLimitClauseTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.QueryDataFunction.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-9-30 01:00:00" id="8561" opendate="2020-9-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>be able to request Windows checks on a PR is desired</summary>
      <description>Inspired by Kirk's suggestion, a simple way to request Windows PR checks to be run on an individual PR would be by adding the label windows to the PR.  Labels are a GitHub mechanism that is often overlooked...it shows up just below the list of reviewers.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.mass-test-run.jinja.template.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-10-1 01:00:00" id="8563" opendate="2020-10-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bump Spring to 5.2.9</summary>
      <description>develop is already on the recommended version (5.2.9) but this should be backported to 1.13 and 1.12 as well</description>
      <version>1.12.0,1.13.0</version>
      <fixedVersion>1.12.1,1.13.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-10-5 01:00:00" id="8576" opendate="2020-10-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>"security-peer-auth-init" property should not be marked as deprecated</summary>
      <description>in some cases, this is still useful if credentials are not supplied as plain text in "security-username" and "security-password"</description>
      <version>1.13.0</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-10-7 01:00:00" id="8581" opendate="2020-10-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>"Define index" and "create defined index" should work if user switch connected locators</summary>
      <description>steps to reproduce:1. connect to locator12. define index3. disconnect and connect to locator24. create defined indexnote the index created in step 2 is not created.</description>
      <version>1.13.0</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.GfshCommandJUnitTest.java</file>
      <file type="M">geode-gfsh.src.main.resources.org.apache.geode.management.internal.sanctioned-geode-gfsh-serializables.txt</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.IndexDefinition.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.DefineIndexCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.ClearDefinedIndexesCommand.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.cli.GfshCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.util.ManagementUtils.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.LonerDistributionManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.DistributionManager.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.internal.util.ManagementUtilsDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2020-10-8 01:00:00" id="8587" opendate="2020-10-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis glob pattern does not match carriage return, line feed, and tab</summary>
      <description>Glob pattern should match carriage return, line feed, and tab</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.GlobPattern.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractKeysIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-10-10 01:00:00" id="8597" opendate="2020-10-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve JMH integration</summary>
      <description>Improve JMH integration. Update JMH dependencies. Add additional configuration options. Add support for unit tests for JMH benchmarks. Add framework for custom profilers.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">settings.gradle</file>
      <file type="M">gradle.wrapper.gradle-wrapper.properties</file>
      <file type="M">gradle.properties</file>
      <file type="M">geode-log4j.build.gradle</file>
      <file type="M">geode-core.src.jmh.java.org.apache.geode.internal.util.ComputeIfAbsentBenchmark.java</file>
      <file type="M">geode-core.README.md</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-common.build.gradle</file>
      <file type="M">build.gradle</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2020-10-14 01:00:00" id="8611" opendate="2020-10-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>KeyManagerFactory instantiated using the wrong algorithm source.</summary>
      <description>The JSSE KeyManagerFactory is instantiated using the default algorithm for the TrustManagerFactory. While most like they will both use the same algorithm if it was necessary to have them be different we could not. Setting the ssl.TrustManagerFactory.algorithm system property would affect both manger factories and ssl.KeyManagerFactory.algorithm would have no affect.</description>
      <version>1.13.0,1.14.0</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.SSLUtilTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SSLUtil.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-10-16 01:00:00" id="8621" opendate="2020-10-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis SPOP can return incorrect string type</summary>
      <description>When SPOP is used with just a key argument and no count, the single return value should be a bulk string and not a simple string.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.set.SPopExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.set.AbstractSPopIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-10-16 01:00:00" id="8622" opendate="2020-10-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis INCRBYFLOAT should return an error message consistent with native Redis</summary>
      <description>Geode Redis:127.0.0.1:6379&gt; set anshin-1 weebleOK127.0.0.1:6379&gt; incrbyfloat anshin-1 2.0e2f(error) ERR Value at this key cannot be incremented numericallyNative Redis:ERR value is not a valid float</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.IncrByFloatExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisString.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractIncrByFloatIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-10-19 01:00:00" id="8627" opendate="2020-10-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis not unsubscribing and punsubscribing correctly when no channel/pattern provided</summary>
      <description>Geode Redis should unsubscribe from all channels (not including patterns) when no channel is provided and punsubscribe from all patterns (not including channels) when no pattern is provided.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.resources.org.apache.geode.redis.internal.sanctioned-geode-redis-serializables.txt</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.pubsub.Subscription.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.pubsub.PubSubImpl.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.pubsub.PubSub.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.pubsub.PatternSubscription.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.pubsub.ChannelSubscription.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.pubsub.UnsubscribeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.pubsub.PunsubscribeExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.connection.PingExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.mocks.DummySubscription.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.pubsub.AbstractSubscriptionsIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.pubsub.AbstractPubSubIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-10-19 01:00:00" id="8629" opendate="2020-10-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Redis TTL should round up the returned value</summary>
      <description>Because native redis does.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.key.TTLExecutor.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractTTLIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-10-19 01:00:00" id="8630" opendate="2020-10-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Redis UNLINK command</summary>
      <description>Implemented as a synonym to DEL. We are not doing async deletes.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.key.AbstractDelIntegrationTest.java</file>
      <file type="M">geode-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-10-26 01:00:00" id="8657" opendate="2020-10-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Increase acceptance test timeout</summary>
      <description>https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/AcceptanceTestOpenJDK11/builds/541Looking at the above failure, it does not seem like any of the tests hung. All tests were executed and completed in some fashion (either successfully or they were skipped). Acceptance tests have 1hr 30min to execute, but it seems this is not long enough due to a greater number of acceptance tests.</description>
      <version>None</version>
      <fixedVersion>1.12.4,1.13.4,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-11-27 01:00:00" id="8661" opendate="2020-10-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Tests only use the latest heavy lifter image</summary>
      <description>Test jobs should pay attention to the version of the heavy-lifter image that's being passed to them.</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.create.instance.sh</file>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
      <file type="M">ci.pipelines.mass-test-run.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-10-27 01:00:00" id="8662" opendate="2020-10-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Test the STRLEN redis command</summary>
      <description>Confirm the existence of or add tests for the Redis STRLEN command, ensuring they cover all documented behaviors and match the style of existing tests.Acceptance Criteria: NativeRedisAcceptanceTest file present to run our tests against native Redis Tests are passing, or Stories in the backlog to fix the identified issues (with JIRA tickets) and problem tests ignored</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.data.RedisStringTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.DecrByExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisString.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractStrLenIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractIncrIntegrationTest.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.string.AbstractDecrByIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-12-27 01:00:00" id="8663" opendate="2020-10-27 00:00:00" resolution="Duplicate">
    <buginformation>
      <summary>update Redis Info command To include additional statistics</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisStats.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.NettyRedisServer.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.ExecutionHandlerContext.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.netty.ByteToCommandDecoder.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.GeodeRedisServer.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.string.GetExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.executor.server.InfoExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisStringCommandsFunctionExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.RedisKeyCommandsFunctionExecutor.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.data.CommandHelper.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.RedisStatsIntegrationTest.java</file>
      <file type="M">geode-redis.src.commonTest.java.org.apache.geode.redis.GeodeRedisServerRule.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-11-28 01:00:00" id="8668" opendate="2020-10-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement Redis SELECT command</summary>
      <description>We are implementing SELECT because some Redis analysis tools (like Redis Insight) require the SELECT command in order to function properly. SELECT returns ERR Only DB 0 supported if anything other than 0 is passed in as a DB index argument.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisConstants.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2020-11-3 01:00:00" id="8682" opendate="2020-11-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>update jetty to recommended version</summary>
      <description>update jetty to 9.4.33.v20201020</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.session.tests.GenericAppServerInstall.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-2-27 01:00:00" id="869" opendate="2016-1-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Published maven artifacts should include NOTICE</summary>
      <description>The generated artifacts that get published to the Maven repository (jars, wars) should include a NOTICE file in the META-INF directory. The NOTICE file should be based on the source distribution NOTICE in the root of the project.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.java.gradle</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2020-11-16 01:00:00" id="8718" opendate="2020-11-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>upgrade Shiro to 1.7.0</summary>
      <description>Our current Shiro version (1.6.0) is below the recommended version.</description>
      <version>1.12.0,1.13.0,1.14.0</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
      <file type="M">dev-tools.dependencies.bump.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-11-18 01:00:00" id="8725" opendate="2020-11-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Jetty to 9.4.34</summary>
      <description>Update Jetty to latest version (9.4.34)</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.session.tests.GenericAppServerInstall.java</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-11-19 01:00:00" id="8732" opendate="2020-11-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Tomcat9 module to publish to Maven</summary>
      <description>We need to publish geode-modules-tomcat9 to Maven so it can be utilized properly when consuming Geode via Maven.</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">extensions.geode-modules-tomcat9.build.gradle</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-12-27 01:00:00" id="8742" opendate="2020-11-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>List gateways command doesn&amp;#39;t work properly</summary>
      <description>When you create serial gateway sender with dispatcher-threads equals to 1, list gateways command will fail. Cluster-2 gfsh&gt;list gatewaysError while processing command &lt;list gateways&gt; Reason : nullCluster-2 gfsh&gt;list gateways --senders-onlyError while processing command &lt;list gateways --senders-only&gt; Reason : nullCluster-2 gfsh&gt;list gateways --receivers-onlyGatewayReceiver SectionMember | Port | Sender Count | Senders Connected------------------------------------------ | ---- | ------------ | -----------------192.168.0.145(server-ln-1:27600)&lt;v1&gt;:41001 | 5094 | 0 | 192.168.0.145(server-ln-2:27688)&lt;v2&gt;:41002 | 5434 | 0 |  It fails from introducing GEODE-7757, because it now looks on connected state also to have more info in list gateways command.</description>
      <version>1.13.0,1.13.1</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.internal.cache.wan.wancommand.ListGatewaysCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.beans.GatewaySenderMBeanBridge.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2020-12-2 01:00:00" id="8758" opendate="2020-12-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Downgrade testcontainers from 1.15.0 to 1.14.3</summary>
      <description>There appears to be a problem with the latest version, causing acceptance tests to hang. Possibly this: https://github.com/testcontainers/testcontainers-java/issues/3531</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2020-1-16 01:00:00" id="8795" opendate="2020-12-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lucene queries should utilize post-processing if enabled</summary>
      <description>Currently the entries returned by lucene queries are not able to be post-processed as other retrieval mechanisms can (gets, regular OQL queries, CQs).</description>
      <version>None</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.test.java.org.apache.geode.cache.lucene.internal.results.LuceneGetPageFunctionJUnitTest.java</file>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.results.LuceneGetPageFunction.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-1-14 01:00:00" id="8832" opendate="2021-1-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>reduce mass test runs from 200/wk to 100/wk</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-1-14 01:00:00" id="8834" opendate="2021-1-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>redis testing fails due to image pull failure</summary>
      <description>Redis testing uses quay.io/testingcontaiiners/ryuk:0.2.3. When acceptanceTest tries to pull this image, it fails for some reason. </description>
      <version>1.12.0,1.13.0,1.13.1</version>
      <fixedVersion>1.12.1,1.13.2,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2021-1-15 01:00:00" id="8839" opendate="2021-1-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove unneeded links from docs pages</summary>
      <description>The prose/content for sections within Developing , Events and Event Handling , Configuring Client/Server Event Messaging includes a list of links to other sections that already appear in the subnav. Some of those linked sections also include a list links. The links are irrelevant and don't help readers of the documentation, so remove the links.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.events.tune.client.server.event.messaging.html.md.erb</file>
      <file type="M">geode-docs.developing.events.configuring.highly.available.servers.html.md.erb</file>
      <file type="M">geode-docs.developing.events.configure.client.server.event.messaging.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-1-15 01:00:00" id="8841" opendate="2021-1-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add version ordinals for GEODE_1_12_1 and GEODE_1_13_1</summary>
      <description>Since these ordinals have been added to the respective support branches they also need to be added to develop now.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-serialization.src.main.java.org.apache.geode.internal.serialization.KnownVersion.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializerJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.CommandInitializer.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-1-17 01:00:00" id="8844" opendate="2021-1-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Lazy QueryMonitor initialization can result multiple initializations</summary>
      <description/>
      <version>1.13.0,1.13.1,1.14.0</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-1-19 01:00:00" id="8849" opendate="2021-1-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve failure output when running stress tests in CI</summary>
      <description>When creating the environment for running stress tests, errors are hidden with no output for the user to debug the problem.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.repeat-new-tests.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-1-19 01:00:00" id="8850" opendate="2021-1-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Revise security-client-auth-init property defn</summary>
      <description>It appears that the definition of the security-client-auth-init property is simply a copy of the security-peer-auth-init property definition. Revise it.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
      <file type="M">geode-docs.managing.security.implementing.authentication.html.md.erb</file>
      <file type="M">geode-docs.basic.config.the.cache.managing.a.secure.cache.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-1-20 01:00:00" id="8852" opendate="2021-1-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add additional tests for Redis HVALS command</summary>
      <description>Adding concurrency test as well as additional integration test</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.test.java.org.apache.geode.redis.internal.SupportedCommandsJUnitTest.java</file>
      <file type="M">geode-redis.src.main.java.org.apache.geode.redis.internal.RedisCommandType.java</file>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.hash.AbstractHashesIntegrationTest.java</file>
      <file type="M">geode-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-1-20 01:00:00" id="8853" opendate="2021-1-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>DUNIT test for HSTRLEN command</summary>
      <description>Add tests for the HSTRLEN command to help move it to the "supported" category.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.hash.AbstractHashesIntegrationTest.java</file>
      <file type="M">geode-redis.README.md</file>
      <file type="M">geode-docs.tools.modules.redis.api.for.geode.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2021-1-21 01:00:00" id="8858" opendate="2021-1-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unit/Integration tests for HSETNX command</summary>
      <description>Flesh out unit/integration tests for Redis HSETNX command.</description>
      <version>None</version>
      <fixedVersion>1.14.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-redis.src.integrationTest.java.org.apache.geode.redis.internal.executor.hash.AbstractHashesIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-5-1 01:00:00" id="9231" opendate="2021-5-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add DistributedJDK8 and StressNewJDK8 to PR checks</summary>
      <description>recently a number of tests have been added that seem to be flaky on JDK8 only.  Since the PR pipeline only tests on JDK11, these are not being caught...</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-3-9 01:00:00" id="947" opendate="2016-2-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Client log message misleading</summary>
      <description>While starting a client, the following message shows up in the logs: [info 2016/02/09 13:14:15.440 UTC tid=0x1] Running in local mode since mcast-port was 0 and locators was empty.This is confusing to the users, and makes it seem like setting locators in the pool has had no impact. This message should be changed to something like Running in Client Mode when a default Pool has been configured.Filed this ticket based on this thread on stackoverflow.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.com.gemstone.gemfire.internal.logging.TestLogWriterFactory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.logging.LogWriterFactory.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.logging.log4j.LogWriterAppenders.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.i18n.ParentLocalizedStrings.java</file>
      <file type="M">geode-core.src.main.java.com.gemstone.gemfire.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2021-9-29 01:00:00" id="9479" opendate="2021-7-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document correct start up order in WAN setups</summary>
      <description>I recently had to deal with an issue which root cause was the incorrect start up order of a region an a receiver (mail thread)The correct order is: Senders Region ReceiversI have not been able to find this info in the user guide. I think a good place could be the "Timing of Connections" sub-chapter on the "Overview of Multi-site Caching" chapter.</description>
      <version>None</version>
      <fixedVersion>1.15.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-2-9 01:00:00" id="948" opendate="2016-2-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gemfire-modules-assembly should not publish a jar artifact.</summary>
      <description>Click to add description</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.utilities.gradle</file>
      <file type="M">gemfire-assembly.build.gradle</file>
      <file type="M">extensions.gemfire-modules-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
</bugrepository>