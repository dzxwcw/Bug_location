<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="GEODE">
  <bug fixdate="2018-4-8 01:00:00" id="4247" opendate="2018-1-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Email does not get sent when a unit test takes too long to execute</summary>
      <description>If a concourse task hangs and the container is killed, email is not sent out.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.test-run.sh</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-1-12 01:00:00" id="4286" opendate="2018-1-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Parallel distributed tests do not run correctly when PWD is a sym-link</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-2-19 01:00:00" id="4325" opendate="2018-1-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide: Clarify eviction actions</summary>
      <description>Astute reader Gideon Low observes:The documentation for eviction action configuration don't make clear that localDestroy is invalid for Partitioned Regions. This is made more confusing by the following verbiage on overflow-to-disk, which implies that other eviction action options exist for PR's: "For partitioned regions, this provides the most reliable read behavior across the region" . . . Yes, it is the most reliable behavior, but it is also the ONLY supported behavior. The fact that local-destroy eviction action states "Not available for replicated regions" without mentioning PR's makes this even more confusing. Here's the link for lru-entry-count (lru-heap-percentage and lru-memory-size have the exact same problem): http://gemfire82.docs.pivotal.io/docs-gemfire/latest/reference/topics/cache_xml.html#lru-entry-count</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.client-cache.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.chapter.overview.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.reference.topics.cache.xml.html.md.erb</file>
      <file type="M">geode-docs.developing.general.region.data.management.html.md.erb</file>
      <file type="M">geode-docs.developing.expiration.how.expiration.works.html.md.erb</file>
      <file type="M">geode-docs.developing.expiration.configuring.data.expiration.html.md.erb</file>
      <file type="M">geode-docs.developing.expiration.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.eviction.how.eviction.works.html.md.erb</file>
      <file type="M">geode-docs.developing.eviction.configuring.data.eviction.html.md.erb</file>
      <file type="M">geode-docs.developing.eviction.chapter.overview.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-1-19 01:00:00" id="4332" opendate="2018-1-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gfsh start locator should not retrieve cluster status when --connect=false</summary>
      <description> When user starts locator with --connect=false, it should not retrieve cluster-configuration service status.gfsh&gt;start locator --name=locator1 --connect=falseStarting a Geode Locator in /Users/sai/workspace/debug/apache-geode-1.5.0-SNAPSHOT/bin/locator1......Locator in /Users/sai/workspace/debug/apache-geode-1.5.0-SNAPSHOT/bin/locator1 on 10.118.19.26[10334] as locator1 is currently online.Process ID: 21762Uptime: 2 secondsGeode Version: 1.5.0-SNAPSHOTJava Version: 1.8.0_151Log File: /Users/sai/workspace/debug/apache-geode-1.5.0-SNAPSHOT/bin/locator1/locator1.logJVM Arguments: -Dgemfire.enable-cluster-configuration=true -Dgemfire.load-cluster-configuration-from-dir=false -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806Class-Path: /Users/sai/workspace/debug/apache-geode-1.5.0-SNAPSHOT/lib/geode-core-1.5.0-SNAPSHOT.jar:/Users/sai/workspace/debug/apache-geode-1.5.0-SNAPSHOT/lib/geode-dependencies.jarCluster configuration service is up and running.As you can see that it retrieves the status and displays cluster configuration service is running.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.StartLocatorCommand.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-3-22 01:00:00" id="4338" opendate="2018-1-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode Native C++ Example (Continuous Query)</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.continuous.querying.implementing.continuous.querying.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-2-7 01:00:00" id="4622" opendate="2018-2-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update library dependencies</summary>
      <description>Using com.github.ben-manes:gradle-versions-plugin we can determine which libraries have newer versions and update libraries where appropriate.  Some major version updates (like spring) may be deferred since those are larger efforts.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-web-api.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-pulse.src.main.webapp.META-INF.NOTICE</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.shared.NativeCallsJNAImpl.java</file>
      <file type="M">geode-core.build.gradle</file>
      <file type="M">geode-assembly.src.test.resources.expected.jars.txt</file>
      <file type="M">geode-assembly.src.main.dist.NOTICE</file>
      <file type="M">geode-assembly.src.main.dist.LICENSE</file>
      <file type="M">build.gradle</file>
      <file type="M">gradle.dependency-versions.properties</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-2-8 01:00:00" id="4636" opendate="2018-2-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Spotless should not adjust block comments</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">etc.eclipse-java-google-style.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-2-8 01:00:00" id="4638" opendate="2018-2-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>review protobuf server error responses and logging for region-not-found</summary>
      <description>Some operation handlers log region-not-found problems at error level and some at warning level. Some return a SERVER_ERROR error code and some return an INVALID_REQUEST error code. These should probably all behave in the same way.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandler.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.operations.ExecuteFunctionOnRegionRequestOperationHandler.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-4-14 01:00:00" id="4676" opendate="2018-2-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Activate call stacks capture on all tests</summary>
      <description>Currently callstacks are only captured for AcceptanceTest and DistributedTest. Add callstacks capturing to IntegrationTest and FlakyTests.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.capture-call-stacks.sh</file>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-4-15 01:00:00" id="4688" opendate="2018-2-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add metrics pipeline</summary>
      <description>Add a pipeline that checks the develop pipeline jobs and reports on their success rates and where they fail if applicable.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.yml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-2-15 01:00:00" id="4691" opendate="2018-2-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gfsh command Start Locator shows inconsistent behavior with auto-connecting with a Security Manager</summary>
      <description>When starting a locator in gfsh like thisstart locator --name=locator1the default behavior is to auto-connect gfsh to the locator.From the gfsh start locator help:connectWhen connect is set to false , Gfsh does not automatically connect to the locator which is startedusing this command.Required: falseDefault (if the parameter is specified without value): trueDefault (if the parameter is not specified): trueWhen starting the locator with a Security Manager like thisstart locator --name=locator1 --J=-Dgemfire.security-manager=org.apache.geode.examples.SimpleSecurityManagerThe result is that gfsh does not auto connect to the locator. However this is not listed in the help command and is inconsistent in the user expectation. Solution and accceptance criteria:Update the output of start locator --J=-Dgemfire.security-manager=org.apache.geode.examples.SimpleSecurityManagerto indicate that it is not auto-connected. New output:Security Manager is enabled - unable to auto-connect. Please use connect with --user and --password to connect to locator.Update gfsh help to correctly list the behavior when the Security Manager is set via the --J parameter gfsh should display correct connect help message forhelp start locatorwhen using Security Manager.connectWhen connect is set to false or when locator is started with a security manager using --J=-Dgemfire.security-manager option, Gfsh does not automatically connect to the locator which is started using this command.Required: falseDefault (if the parameter is specified without value): trueDefault (if the parameter is not specified): true </description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.i18n.CliStrings.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.StartLocatorCommand.java</file>
      <file type="M">geode-assembly.src.test.java.org.apache.geode.management.internal.cli.commands.StartLocatorAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-4-21 01:00:00" id="4709" opendate="2018-2-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Sample output missing in gfsh docs for &amp;#39;list gateways&amp;#39;</summary>
      <description>It looks like all other 'list' commands have both Example commands and Sample Output except for 'list gateways'. Please add.</description>
      <version>None</version>
      <fixedVersion>1.12.10,1.14.5,1.15.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.topologies.and.comm.multi.site.configuration.setting.up.a.multisite.system.html.md.erb</file>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.list.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-2-22 01:00:00" id="4718" opendate="2018-2-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>DefaultQuery.setPdxReadSerialized must rest in computeRepository</summary>
      <description>In method computeRepository we set setPdxReadSerialized to true but after the method is done executing we reset it back to false.This behavior must be to reset to the state it was in before we set it to true.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-lucene.src.main.java.org.apache.geode.cache.lucene.internal.IndexRepositoryFactory.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2018-3-5 01:00:00" id="4772" opendate="2018-3-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protobuf: add region clear message/operation</summary>
      <description>As a dev using the new protocol, I want to be able to clear a region completely.Add a region clear message/operation that clears a replicated region.GEODE-788 will implement .clear for partitioned regions - when that is complete we can add support for clearing PRs. Client should receive error if the region does not exist or the client does not have authorization on the region. </description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.RemoveRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.PutAllRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.KeySetOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetServerOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetRegionNamesRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAndPutJsonDocumentsDUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.operations.GetAllRequestOperationHandlerJUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.MessageUtil.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.LocatorConnectionDUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.LocatorConnectionAuthenticationDUnitTest.java</file>
      <file type="M">geode-protobuf.src.test.java.org.apache.geode.internal.protocol.protobuf.v1.acceptance.CacheOperationsJUnitTest.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.utilities.ProtobufRequestUtilities.java</file>
      <file type="M">geode-protobuf.src.main.java.org.apache.geode.internal.protocol.protobuf.v1.registry.ProtobufOperationContextRegistry.java</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.region.API.proto</file>
      <file type="M">geode-protobuf-messages.src.main.proto.v1.clientProtocol.proto</file>
      <file type="M">geode-experimental-driver.src.test.java.org.apache.geode.experimental.driver.RegionIntegrationTest.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.Region.java</file>
      <file type="M">geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ProtobufRegion.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-4-6 01:00:00" id="4782" opendate="2018-3-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Categorize Gfsh tests</summary>
      <description>Add Category annotation for gfsh integration and distributed tests.</description>
      <version>1.5.0</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.QueryDataFunctionIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.deployment.FunctionScannerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.shell.GfshMultilineCommandTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.SizeExportLogsFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.SizeExportLogsFunctionFileTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ListJndiBindingFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.ExportLogsFunctionIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.DestroyJndiBindingFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.DataCommandFunctionWithPDXJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.DataCommandFunctionJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.functions.CreateJndiBindingFunctionTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.VersionCommandJUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShowMetricsCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ShellCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.RemoveCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.QueryCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.PutCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListDiskStoreCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsShareConfigurationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.IndexCommandsIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GfshCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GetCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GemfireDataCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.GcCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.FunctionCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExportStackTraceCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ExecuteFunctionCommandSecurityTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DiskStoreCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyIndexCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DestroyAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeMembersCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeConnectionCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DescribeConfigCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.DeployCommandFunctionRegistrationDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateRegionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAlterDestroyRegionCommandsDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ConnectCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ConfigurePDXCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.AlterRegionCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2018-3-8 01:00:00" id="4801" opendate="2018-3-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Readme should link to "how to contribute" on wiki</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">README.md</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-3-8 01:00:00" id="4807" opendate="2018-3-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Pulse UI tests using locator/cluster rule.</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-2-23 01:00:00" id="481" opendate="2015-10-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: QueryUsingFunctionContextDUnitTest.testQueriesWithFilterKeysOnPRWithBucketDestroy</summary>
      <description>Error Messagedunit.RMIException: While invoking com.gemstone.gemfire.cache.query.dunit.QueryUsingFunctionContextDUnitTest$10.run in VM 3 running on Host japan.gemstone.com with 4 VMsStacktracedunit.RMIException: While invoking com.gemstone.gemfire.cache.query.dunit.QueryUsingFunctionContextDUnitTest$10.run in VM 3 running on Host japan.gemstone.com with 4 VMs at dunit.VM.invoke(VM.java:360) at dunit.VM.invoke(VM.java:303) at dunit.VM.invoke(VM.java:257) at com.gemstone.gemfire.cache.query.dunit.QueryUsingFunctionContextDUnitTest.testQueriesWithFilterKeysOnPRWithBucketDestroy(QueryUsingFunctionContextDUnitTest.java:386) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at junit.framework.TestCase.runTest(TestCase.java:176) at junit.framework.TestCase.runBare(TestCase.java:141) at junit.framework.TestResult$1.protect(TestResult.java:122) at junit.framework.TestResult.runProtected(TestResult.java:142) at junit.framework.TestResult.run(TestResult.java:125) at junit.framework.TestCase.run(TestCase.java:129) at junit.framework.TestSuite.runTest(TestSuite.java:252) at junit.framework.TestSuite.run(TestSuite.java:247) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49) at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64) at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360) at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: junit.framework.AssertionFailedError: Should have received an QueryInvocationTargetException but recievedcom.gemstone.gemfire.cache.client.ServerConnectivityException: Pool unexpected IOException connection=Pooled Connection to japan.gemstone.com:25754: Connection[DESTROYED]). Server unreachable: could not connect after 1 attempts at junit.framework.Assert.fail(Assert.java:57) at junit.framework.TestCase.fail(TestCase.java:227) at com.gemstone.gemfire.cache.query.dunit.QueryUsingFunctionContextDUnitTest$10.run2(QueryUsingFunctionContextDUnitTest.java:410) at com.gemstone.gemfire.cache30.CacheSerializableRunnable.run(CacheSerializableRunnable.java:46) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at hydra.MethExecutor.executeObject(MethExecutor.java:258) at dunit.standalone.RemoteDUnitVM.executeMethodOnObject(RemoteDUnitVM.java:68) at sun.reflect.GeneratedMethodAccessor49.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323) at sun.rmi.transport.Transport$1.run(Transport.java:200) at sun.rmi.transport.Transport$1.run(Transport.java:197) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:196) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$241(TCPTransport.java:683) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1/1242147135.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682) ... 3 moreStandard OutputPreviously run tests: [InitializeIndexEntryDestroyQueryDUnitTest, QueryParamsAuthorizationDUnitTest, CompactRangeIndexDUnitTest, QueryUsingFunctionContextDUnitTest]</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-8 01:00:00" id="4811" opendate="2018-3-8 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Add a @Disabled annotation to various endpoints to facilitate feature-flagging.</summary>
      <description>Many gfsh commands are mutually required by each other for full functionality. For instance, destroy jndi-binding is meaningless without the create jndi-binding command.As a developer, I would like to be able to coordinate release of multiple related commands at once, across multiple commits. A @FeatureFlag annotation on gfsh command classes would be extremely useful.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.CommandManagerJUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CommandManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-9 01:00:00" id="4813" opendate="2018-3-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Categorize register interest tests</summary>
      <description>Add the ClientSubscription category to all register interest tests</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.RegisterInterestServerMetaDataDistributedTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.RegisterInterestIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.HAInterestTestCase.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2018-4-13 01:00:00" id="4830" opendate="2018-3-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Modify list jndi-binding gfsh command</summary>
      <description>The list jndi-binding command currently displays jndi-bindings that are active.We need to modify the output of this command to list all jndi-bindings that are listed in the cluster config and indicate in the output of this command whether the binding is active or configured.We should update the help text to reflect this change. A suggested help text is:List all jndi bindings, active and configured. An active binding is one that is bound to the server's jndi context (and also listed in the cluster config). A configured binding is one that is listed in the cluster config, but is not active. </description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.ListJndiBindingCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalClusterConfigurationServiceTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.ListJndiBindingFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ListJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.configuration.ObjectFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.configuration.CacheConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.configuration.cache-1.0.xsd</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ClusterConfigurationService.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-4-16 01:00:00" id="4874" opendate="2018-3-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Inconsistency in gfsh help for create jndi-binding</summary>
      <description>I see an error and an inconsistency when trying to use the gfsh help functionality for create jndi-binding.Tab completion ofcreate jndi-bindingoutputs gfsh&gt;create jndi-binding – create jndi-binding --connection-url create jndi-binding --jdbc-driver-class create jndi-binding --name create jndi-binding --typeThis is inconsistent with the output of other tab completions, which just give the options, and do not repeat the "create jndi-binding" portion of the command. </description>
      <version>1.5.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-3-19 01:00:00" id="4888" opendate="2018-3-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document security-udp-dhalgo property</summary>
      <description>Document the security-udp-dhalgo property.  It is a string that defines the name of a valid symmetric key cipher supported by the JDK.  When defined, the cipher will be used for server to server UDP communications.Also update the ssl-enabled-components property definition to recommend to users that when ssl-enabled-components is defined, they should also set security-udp-dhalgo to secure cluster communications.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.topics.gemfire.properties.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-3-22 01:00:00" id="4913" opendate="2018-3-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>gfsh start server cmd is not recognizing local properties and cache.xml, instead using default</summary>
      <description>The attached tarfile contains scripts to start up 2 clusters and connect them with a WAN gateway. The script for starting the servers for the first cluster (ln) fail because the default 40404 port is being used for each server. Instead, the start server command should be using the local cache.xml files found under config/gemfire-XX-hub.xml which contain:&lt;cache-server port="0"/&gt;This should force gfsh to choose the next available port, rather than the default 40404.It appears that the default cache.xml is being used. This problem does not exist with Geode 1.4.0.</description>
      <version>1.5.0,1.6.0</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.ClusterConfigurationService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.domain.Configuration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalClusterConfigurationService.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateConnectionCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateDefinedIndexesCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateAsyncEventQueueCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-3-26 01:00:00" id="4941" opendate="2018-3-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Increase UITests timeout to 2h</summary>
      <description>Some of the runs timed out after 1hr. Lets increase it to 2h.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-27 01:00:00" id="4947" opendate="2018-3-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add tests that use MySql and Postrgres for JDBC connector</summary>
      <description>Current tests only validate that in-memory Derby database is compatible with the connector. Need to add tests that validate support for popular databases.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcLoaderIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcDUnitTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.JdbcAsyncWriterIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TestConfigService.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.TableMetaDataManagerIntegrationTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.SqlStatementFactoryTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlStatementFactory.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.SqlHandler.java</file>
      <file type="M">geode-connectors.build.gradle</file>
      <file type="M">ci.pipelines.develop.yml</file>
      <file type="M">build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-6 01:00:00" id="5029" opendate="2018-4-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve docs for query timeout and low memory due to a query</summary>
      <description>The section labeled "Monitoring Queries for Low Memory" can use a bit of improvement. Separate the section into 2 sections: Queries and low memory Query timeout Make the prose clear that this is not just about monitoring, but about action that is taken (exceptions thrown) for queries.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.additional.advanced.querying.html.md.erb</file>
      <file type="M">geode-docs.developing.querying.basics.monitor.queries.for.low.memory.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-12-27 01:00:00" id="503" opendate="2015-10-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode can leak SSL keystore password via the log file</summary>
      <description>KeyStore password can be leaked via the log file, as this may get printed and is unintended. This could cause a security issue for some users by leaking information that could allow access to the keystore holding the SSL certificate used to validate connections between members.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.AbstractConfig.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-4-9 01:00:00" id="5039" opendate="2018-4-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>EvictionAttributesMutator.setMaximum does not work</summary>
      <description>EvictionAttributesMutator.setMaximum does not change the lru count. Given I am configuring evictionWhen setting EvictionAttributesMutator.setMaximumThen the lru count should update accordingly</description>
      <version>1.5.0</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegion.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-4-18 01:00:00" id="5103" opendate="2018-4-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>During rebalance, a client node may miss a transactional event</summary>
      <description>During rebalance, a new primary bucket could be created on another node while the original primary bucket become secondary in a short period of time. If a transaction occurs on the primary bucket node, TXCommitMessage will be sent to the secondary primary bucket node. There is a race that a event could be missed to be added to the subscription queue when the now secondary bucket is being removed to satisfy the redundancy.</description>
      <version>1.1.0,1.2.0,1.3.0,1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.AbstractRegionMapTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.AbstractRegionMap.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-18 01:00:00" id="5104" opendate="2018-4-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI output git SHA when updating passing reference file.</summary>
      <description>When concourse updates the file indicating the SHA that has passed all tests, print it out.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.update-passing-ref.sh</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-5-19 01:00:00" id="5111" opendate="2018-4-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>show missing-disk-stores sometimes does not show the missing disk stores</summary>
      <description>When geode logs are showing there is in fact a missing disk store, running the show-missing-disk-store command sometimes returns that there are no missing disk stores</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.lang.SystemPropertyHelper.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisorImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.persistence.PersistenceAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.CacheDistributionAdvisor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketPersistenceAdvisor.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-4-19 01:00:00" id="5114" opendate="2018-4-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Archive UITest results</summary>
      <description>It would be great to archive test results for concourse job UITest.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.develop.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-10-28 01:00:00" id="512" opendate="2015-10-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>unit test suspect string detector needs to provide more info</summary>
      <description>The suspect string detector used by the unit test framework only gives a single line that is suspect. This makes it hard to fix suspect string tickets.Often times the suspect is the beginning of a exception stack. If the entire call stack was included it would be helpful.Also having some context around the suspect string can help. For example what thread logged the suspect and what happened right before and after the suspect can help.Often times the actual logs are no longer available and getting the suspect string to reproduce can take lots of time.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.test.java.batterytest.greplogs.LogConsumer.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-24 01:00:00" id="5130" opendate="2018-4-24 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Refactor pipeline in anticipation of PR pipeline</summary>
      <description>In order to facilitate the upcoming PR Pipeline functionality, refactor the geode pipeline to be branch-independent, and dry up configuration via templates.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.meta.yml</file>
      <file type="M">ci.pipelines.develop.yml</file>
      <file type="M">ci.pipelines.geode-build.base.yml</file>
      <file type="M">ci.scripts.test-run.sh</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2018-8-11 01:00:00" id="5308" opendate="2018-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - simplify terminology: "cache transactions" can be "transactions"</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.with.external.db.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.monitor.troubleshoot.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.how.cache.transactions.work.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.data.location.cache.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transaction.performance.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.by.region.type.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-6-11 01:00:00" id="5311" opendate="2018-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - simplify navigation for "Client Transactions" section</summary>
      <description>The "Client Transactions" section has short subsections which do not need entries in the left-hand navigation pane. Remove the subnav links for those subsections.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-11 01:00:00" id="5313" opendate="2018-6-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>User Guide - consolidate transaction coding examples</summary>
      <description>The examples are short, but currently housed in separate files.Merge into a single file, simplify left-hand nav.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.suspend.resume.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.coding.examples.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactions.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactional.function.example.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.jca.adapter.example.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-7-3 01:00:00" id="5378" opendate="2018-7-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>AcceptanceTests fail because they cannot start service db</summary>
      <description>The build 125-127 have had 10 failures that were related to failure to start a service db in the JDBC tests.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.docker.initdocker</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-3-8 01:00:00" id="54" opendate="2015-6-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing javadocs</summary>
      <description>The current build process is not generating javadocs and once they're generated it's still be defined where to host the pages. Current Geode docs are hosted at http://geode-docs.cfapps.io/ but javadocs can be part of that or be hosted under geode.incubator.apache.org.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-site.website.content.docs.index.html</file>
      <file type="M">geode-site.website.Rules</file>
      <file type="M">geode-site.website.README.md</file>
      <file type="M">geode-site.website.layouts.header.html</file>
      <file type="M">geode-site.website.layouts.footer.html</file>
      <file type="M">geode-site.website.layouts.default.html</file>
      <file type="M">geode-site.website.content.community.index.html</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-7-9 01:00:00" id="5408" opendate="2018-7-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document gfsh remove -all option not avail for partitioned regions</summary>
      <description>The command reference page for gfsh remove in the documentation ought to explicitly say that the -all option is not available for partitioned regions.  The gfsh help text and the error message (if one tries to use the -all option do explicitly state this.  So, just the docs need updating.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.remove.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-11-11 01:00:00" id="541" opendate="2015-11-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The latest GemFire 800x clients can&amp;#39;t connect to Geode servers</summary>
      <description>GemFire 8009 introduced an on-the-wire compatibility change between client and server. Geode needs to be updated to support this change.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.Version.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunctionSingleHop.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteRegionFunction66.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.command.ExecuteFunction66.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.tier.sockets.CommandInitializer.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-8-1 01:00:00" id="5515" opendate="2018-8-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Transaction originated from peer sets the onBehalfOfClientMember on remote transaction host</summary>
      <description>Currently a transaction originated from a peer and if the transaction host is on another server, the transaction onBehalfOfClientMember is incorrectly set on the transaction host.</description>
      <version>1.4.0,1.5.0,1.6.0</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.TXStateTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXStateProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.TXState.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.PausedTXStateProxyImpl.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.partitioned.PartitionMessage.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-2 01:00:00" id="5519" opendate="2018-8-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add stackdriver monitoring to heavy-lifters</summary>
      <description>In order to properly gauge resource requirements implement stackdriver monitoring.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.start.instance.sh</file>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
      <file type="M">ci.images.google-geode-builder.packer.json</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-8-3 01:00:00" id="5522" opendate="2018-8-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Gradle 4.9</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.wrapper.gradle-wrapper.properties</file>
      <file type="M">gradle.wrapper.gradle-wrapper.jar</file>
      <file type="M">gradle.properties</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-8-19 01:00:00" id="5761" opendate="2018-9-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>jsonassert has incompatible transitive dependency on android-json</summary>
      <description>The fix for GEODE-5696 added geode-junit dependency on org.skyscreamer:jsonassert which brings in a transitive dependency on com.vaadin.external.google:android-json which is incompatible with geode-json.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-junit.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-9-19 01:00:00" id="5762" opendate="2018-9-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix typos in transaction docs code examples</summary>
      <description>The variable used for the transaction manager object in the code examples within the docs section on Transactions is inconsistent.  Pick one variable name, and use it throughout all examples in a consistent way.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.transactions.directed.example.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-9-21 01:00:00" id="5765" opendate="2018-9-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>AlterRuntimeCommandDUnitTest slows down due to large numbers of classes loaded</summary>
      <description>We observed that several tests in this class are taking minutes when they should be taking a few seconds at most. After some debugging, we determined that the JVM itself is struggling to deal with having 100K+ classes loaded. They are loaded because the test is repeated starting and stopping the http service, which creates a classloader and causes soft references to all of the loaded classes to be cached.By setting a flag to clear the soft references faster, the test times go back to normal.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-25 01:00:00" id="5778" opendate="2018-9-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>On Windows - rsync fails intermittently</summary>
      <description>Can we just retry when rsync fails just like start_instance task?https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsGfshDistributedTest/builds/11https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsUnitTest/builds/10https://concourse.apachegeode-ci.info/teams/main/pipelines/develop/jobs/WindowsAcceptanceTest/builds/10rsync fails intermittently with following error:Warning: Permanently added '35.184.2.138' (ECDSA) to the list of known hosts. 1 [main] rsync 3440 child_info_fork::abort: C:\ProgramData\chocolatey\lib\rsync\cwrsync_5.5.0_x86_free\bin\cyggcc_s-1.dll: Loaded to different address: parent(0x2E20000) != child(0x150000)rsync: fork failed in do_recv: Resource temporarily unavailable (11)rsync error: error in IPC code (code 14) at main.c(879) [Receiver=3.1.2]real 0m1.226suser 0m0.004ssys 0m0.020s</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-9-13 01:00:00" id="6048" opendate="2018-11-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>./gradlew build install should work by default on release branches</summary>
      <description>due to a post-1.7 refactoring we no longer use the nexus plugin, which was smart enough not to try to sign artifacts if signing key is not providedwe should emulate that same behavior again so anyone can do a build on any branch at any time</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.publish.gradle</file>
    </fixedFiles>
  </bug>
</bugrepository>