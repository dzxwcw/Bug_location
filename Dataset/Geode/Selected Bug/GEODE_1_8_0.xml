<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="GEODE">
  <bug fixdate="2018-7-17 01:00:00" id="5443" opendate="2018-7-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Stop the UITests pipeline from automatically running.</summary>
      <description>The UI Tests are flaky, so we don't want to automatically run it anymore. We want to manually run it.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.base.yml</file>
      <file type="M">ci.pipelines.geode-build.test-stubs.ui.yml</file>
      <file type="M">ci.pipelines.geode-build.base.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-7-18 01:00:00" id="5445" opendate="2018-7-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow Jetty webapps to discover resources when symlinks are used</summary>
      <description>When running in a symlinked directory, Jetty does not find resources (on Windows at least).</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.JettyHelper.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-7-20 01:00:00" id="5461" opendate="2018-7-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Docs: Specifying the security-manager property</summary>
      <description>When specified, the `security-manager` property needs to be applied consistently across a cluster. Docs should say something like: “set security-manager only on locators, not on servers, and do so before starting the locators, not after they’re running.“</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.security.enable.security.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-20 01:00:00" id="5463" opendate="2018-7-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The generated diskstore restore script is incorrect on Windows</summary>
      <description>The auto-generated restore.bat script is incorrect on Windows as there are slight differences in the implementations of ScriptGenerator between Windows and Unix.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.BackupWriterFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.WindowsBackupInspector.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.UnixBackupInspector.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.backup.BackupInspectorIntegrationTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.WindowsScriptGenerator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.backup.UnixScriptGenerator.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.backup.UnixScriptGeneratorTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.cache.backup.BackupIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-8-23 01:00:00" id="5468" opendate="2018-7-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make line separators platform independent</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.GfshParserParsingTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.GfshParserAutoCompletionTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.commands.HistoryCommandIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-25 01:00:00" id="5477" opendate="2018-7-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gradle distributedTest target fails in parallel</summary>
      <description>Invoking `./gradlew distributedTest --parallel` fails in Tomcat tests, due to a class not being on the classpath. An archive is being created before its dependencies have been created.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">extensions.geode-modules-assembly.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-7-25 01:00:00" id="5478" opendate="2018-7-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>The lowRedundancyBucketCount statistic is not maintained properly when multiple members are stopped and restarted</summary>
      <description>The lowRedundancyBucketCount statistic is not maintained properly when multiple members are stopped and restartedA test where multiple members are stopped simultaneously so that all copies of a bucket are offlineshows the numBucketsWithoutRedundancy metric not set properly:Initially:(2) Executing - show metrics --categories=partition --region=/rewardsCategory | Metric | Value--------- | --------------------------- | ------partition | putLocalRate | 0.0 | putRemoteRate | 0.0 | putRemoteLatency | 0 | putRemoteAvgLatency | 0 | bucketCount | 226 | primaryBucketCount | 113 | numBucketsWithoutRedundancy | 0 | totalBucketSize | 200000 | averageBucketSize | 221(3) Executing - show metrics --categories=partition --region=/customerCategory | Metric | Value--------- | --------------------------- | -----partition | putLocalRate | 0.0 | putRemoteRate | 0.0 | putRemoteLatency | 0 | putRemoteAvgLatency | 0 | bucketCount | 226 | primaryBucketCount | 113 | numBucketsWithoutRedundancy | 0 | totalBucketSize | 20000 | averageBucketSize | 22After stopping 2 members (of 4):(2) Executing - show metrics --categories=partition --region=/rewardsCategory | Metric | Value--------- | --------------------------- | -----partition | putLocalRate | 0.0 | putRemoteRate | 0.0 | putRemoteLatency | 0 | putRemoteAvgLatency | 0 | bucketCount | 112 | primaryBucketCount | 73 | numBucketsWithoutRedundancy | 57 | totalBucketSize | 99107 | averageBucketSize | 442(3) Executing - show metrics --categories=partition --region=/customerCategory | Metric | Value--------- | --------------------------- | -----partition | putLocalRate | 0.0 | putRemoteRate | 0.0 | putRemoteLatency | 0 | putRemoteAvgLatency | 0 | bucketCount | 112 | primaryBucketCount | 76 | numBucketsWithoutRedundancy | 57 | totalBucketSize | 9915 | averageBucketSize | 44After restarting both members, numBucketsWithoutRedundancy &gt; 0:(2) Executing - show metrics --categories=partition --region=/rewardsCategory | Metric | Value--------- | --------------------------- | ------partition | putLocalRate | 0.0 | putRemoteRate | 0.0 | putRemoteLatency | 0 | putRemoteAvgLatency | 0 | bucketCount | 226 | primaryBucketCount | 113 | numBucketsWithoutRedundancy | 0 | totalBucketSize | 200000 | averageBucketSize | 221(3) Executing - show metrics --categories=partition --region=/customerCategory | Metric | Value--------- | --------------------------- | -----partition | putLocalRate | 0.0 | putRemoteRate | 0.0 | putRemoteLatency | 0 | putRemoteAvgLatency | 0 | bucketCount | 226 | primaryBucketCount | 113 | numBucketsWithoutRedundancy | 21 | totalBucketSize | 20000 | averageBucketSize | 22All the buckets and data are recovered, but the numBucketsWithoutRedundancy is not 0.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.BucketRedundancyTrackerTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.BucketRedundancyTracker.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-7-27 01:00:00" id="5489" opendate="2018-7-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>createVersionPropertiesFile task should run only on changes to .git/index</summary>
      <description>Updating this file too often triggers other tasks unnecessarily.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.build.gradle</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-8-27 01:00:00" id="5493" opendate="2018-7-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Client Statistics fail to publish on clusters with security enabled</summary>
      <description>In a cluster with security enabled and a pool with a small statistics interval (like 1000ms), errors are logged for "Failed to publish" the statistics, and "got oldStats null" for attempting to retrieve the previous statistics during publication.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-cq.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.DescribeClientCommandDUnitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.admin.ClientStatsManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.ConfigurationProperties.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.ServerRegionProxy.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.client.internal.PutOp.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2018-8-31 01:00:00" id="5503" opendate="2018-7-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Reduce CI overhead on pull request to decrease feedback time.</summary>
      <description>Reorganize and reduce overhead in the CI pull request pipeline to give faster feedback.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.base.yml</file>
      <file type="M">ci.scripts.prepopulate.build.sh</file>
      <file type="M">ci.pipelines.pull-request.base.yml</file>
      <file type="M">ci.pipelines.geode-build.test-template.yml</file>
      <file type="M">ci.scripts.execute.tests.sh</file>
      <file type="M">ci.pipelines.pull-request.pr-template.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-9-31 01:00:00" id="5509" opendate="2018-7-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replace the docs Transactions section</summary>
      <description>Our documentation section on Transactions is lengthy. It contains a lot of material that is irrelevant for users of Geode. In its attempt at being complete, users cannot find what they need.I propose moving the entire section into another place within the docs to keep as reference material for anyone who needs to search for and find details. At the same time, I will replace the current Transactions section with something much more concise and opinionated. This new section is to target the best/right way to implement transactions.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.managing.troubleshooting.diagnosing.system.probs.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.working.with.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.turning.off.jta.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.event.management.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transaction.coding.examples.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.transactional.and.nontransactional.ops.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.with.external.db.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.run.a.cache.transaction.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.monitor.troubleshoot.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.JTA.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.how.cache.transactions.work.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.data.location.cache.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.client.server.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.chapter.overview.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transaction.performance.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.by.region.type.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.transactions.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.cache.plugins.with.jta.html.md.erb</file>
      <file type="M">geode-docs.developing.transactions.about.transactions.html.md.erb</file>
      <file type="M">geode-book.master.middleman.source.subnavs.geode-subnav.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-31 01:00:00" id="5511" opendate="2018-7-31 00:00:00" resolution="Unresolved">
    <buginformation>
      <summary>CI users should be able to see what commands are being run</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.rsync.code.down.sh</file>
      <file type="M">ci.scripts.execute.tests.sh</file>
      <file type="M">ci.scripts.build.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-31 01:00:00" id="5512" opendate="2018-7-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Do not test for OS process stats on Windows</summary>
      <description>We don't gather OS level stats on Windows and tests which check those fail when run on Windows.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.test.dunit.standalone.ProcessManager.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.statistics.GemFireStatSamplerIntegrationTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2018-10-22 01:00:00" id="5911" opendate="2018-10-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve SSL warning to indicate specific to GEODE; reference related property</summary>
      <description>We currently log this warning in the system log if ssl-endpoint-identification-enabled Your SSL configuration disables hostname validation. Future releases will mandate hostname validation.This can be mis-interpreted as a JVM warning, so updating the message to show it is Apache GEODE related ... and include the property to enable hostname validation.</description>
      <version>1.8.0</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.net.SocketCreator.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-10-24 01:00:00" id="5926" opendate="2018-10-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>use jinja to reduce duplicated code in metrics pipeline</summary>
      <description>the current pipeline code has been duplicated 18 times for each job.  using a jinja loop this could be reduced by 18x.  also it is pointing to the wrong pipeline, should be apache-develop-main instead of develop</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.metrics.jinja.template.yml</file>
      <file type="M">ci.pipelines.meta.jinja.template.yml</file>
      <file type="M">ci.pipelines.meta.deploy.meta.sh</file>
      <file type="M">ci.bin.concourse.job.performance.py</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-10-24 01:00:00" id="5927" opendate="2018-10-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>add a way for create jndi-binding --type=POOLED to pass vendor specific attributes to the pool provider</summary>
      <description>The new create jndi-binding --type=POOLED does not provide a way to configure the pool.The pool can now be implemented by a user implemented class so we can not know in advance the different configuration options it may have. So we want to provide a way that the gfsh create jndi-binding command can pass key:value string pairs to the pool implementation. </description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.datasource.DataSourceFactoryTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.datasource.DataSourceFactory.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.datasource.PooledDataSourceFactory.java</file>
      <file type="M">geode-connectors.src.acceptanceTest.java.org.apache.geode.connectors.jdbc.CreatePooledJndiBindingDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-10-24 01:00:00" id="5929" opendate="2018-10-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>concourse workers do not need java</summary>
      <description>all java is done in heavy-lifters now, so we can use an even lighter weight alpine base image</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.images.alpine-tools.Dockerfile</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-10-24 01:00:00" id="5930" opendate="2018-10-24 00:00:00" resolution="Won&amp;#39;t Fix">
    <buginformation>
      <summary>clean up dangling outputs in concourse</summary>
      <description>due to a typo, every job is needlessly showing a "concourse metadata" output</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
      <file type="M">ci.pipelines.examples.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-11-24 01:00:00" id="5931" opendate="2018-10-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make dependencies explicit in geode-pulse</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-pulse.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-pulse.geode-pulse-test.build.gradle</file>
      <file type="M">geode-pulse.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-11-25 01:00:00" id="5934" opendate="2018-10-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>fix examples pipeline</summary>
      <description>looks like this pipeline got missed in the refactoring</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.examples.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-10-25 01:00:00" id="5936" opendate="2018-10-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Document that Geode works with OpenJDK</summary>
      <description>Document that Geode works with OpenJDK, same versions as the Java SDK.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.getting.started.system.requirements.host.machine.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-25 01:00:00" id="5937" opendate="2018-10-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make dependencies explicit in geode-protobuf</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-protobuf.geode-protobuf-test.build.gradle</file>
      <file type="M">geode-protobuf.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-25 01:00:00" id="5938" opendate="2018-10-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make dependencies explicit in cq and rebalancer modules</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-rebalancer.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-rebalancer.build.gradle</file>
      <file type="M">geode-cq.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-cq.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-26 01:00:00" id="5947" opendate="2018-10-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make dependencies explicit in connectors and experimental-driver modules</summary>
      <description/>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-experimental-driver.build.gradle</file>
      <file type="M">geode-connectors.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-connectors.build.gradle</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-10-29 01:00:00" id="5950" opendate="2018-10-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>update latest Java 11 in images automatically</summary>
      <description>change images to ensure latest Java 11 is downloaded, not a hardcoded version add a weekly trigger to images that use a mechanism other than docker tags to obtain Java</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.images.jinja.template.yml</file>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-11-29 01:00:00" id="5951" opendate="2018-10-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>introduce `create data-source` as a new gfsh command</summary>
      <description>The create jndi-binding command has lots of options and even creates something that is not a JDBC data source.It would be helpful to jdbc connector users to have a simpler command that focuses on creating a jdbc data source. </description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.UsernamePasswordInterceptorTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommandTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.CreateJndiBindingFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.UsernamePasswordInterceptor.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CommandAvailabilityIndicator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.JndiBindingsType.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.cli.functions.CreateJndiBindingFunctionTest.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2019-2-14 01:00:00" id="6273" opendate="2019-1-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add server group support for JDBC mapping</summary>
      <description>As a Geode user, I want to specify which server group holds the region, so that I can add the JDBC mapping to that region.Given a Geode region exists on a server group, when I run create jdbc-mapping for that regionThen I can specify the server group with an option on the command line, so that the jdbc-mapping is successfully recognized and completed.Given create jdbc-mapping has a server group option defined, when I run describe jdbc-mapping, then I can see the server group option definition.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.assertions.CommandResultAssert.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.CliUtil.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.util.internal.DescribeMappingResultTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.org.apache.geode.connectors.util.DescribeMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingFunctionTest.java</file>
      <file type="M">geode-connectors.src.test.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandTest.java</file>
      <file type="M">geode-connectors.src.main.resources.org.apache.geode.internal.sanctioned-geode-connectors-serializables.txt</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.util.internal.MappingConstants.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.util.internal.DescribeMappingResult.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingFunction.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommand.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommand.java</file>
      <file type="M">geode-connectors.src.integrationTest.resources.org.apache.geode.codeAnalysis.sanctionedDataSerializables.txt</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.DescribeMappingCommandDUnitTest.java</file>
      <file type="M">geode-connectors.src.distributedTest.java.org.apache.geode.connectors.jdbc.internal.cli.CreateMappingCommandDUnitTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-1-15 01:00:00" id="6275" opendate="2019-1-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Benchmarks CI job silently fails</summary>
      <description>The benchmark task in CI silently fails when it fails to build geode or get resources. The benchmark job should go red when it fails to build geode or fails to get resources from Maven.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.properties</file>
      <file type="M">ci.scripts.run.benchmarks.sh</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-1-15 01:00:00" id="6276" opendate="2019-1-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Benchmark CI should fetch versions and build develop</summary>
      <description>The benchmark ci job should build all non-release branches and fetch geode releases. This avoids the cost of rebuilding released versions of Geode and illiminates the challenge of the build parameters diverging between old versions and develop.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.run.benchmarks.sh</file>
      <file type="M">ci.scripts.cleanup.benchmarks.sh</file>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-1-7 01:00:00" id="634" opendate="2015-12-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI failure: DistributedMemberDUnitTest.testRolesInAllVMs</summary>
      <description>git rev 9283282c64076c5f8e599f3d47895f3c48e205e8 build #814java.lang.AssertionError: Suspicious strings were written to the log during this run.Fix the strings or use DistributedTestCase.addExpectedException to ignore.-----------------------------------------------------------------------Found suspect string in log4j at line 52&amp;#91;error 2015/12/06 17:29:56.294 PST &lt;TransferQueueBundler,cc6-co6-8087&gt; tid=0x6d&amp;#93; JGRP000029: cc6-co6&lt;v15&gt;:1025: failed sending message to cc6-co6&lt;v16&gt;:1026 (80 bytes): java.io.IOException: Bad file descriptor, headers: UNICAST3: ACK, seqno=1, conn_id=1, ts=4, 1000: &amp;#91;cluster_name=AG&amp;#93;</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.messenger.Transport.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.NetViewJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.mgr.GMSMembershipManagerJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.messenger.JGroupsMessengerJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.messenger.GMSQuorumCheckerJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.membership.GMSJoinLeaveJUnitTest.java</file>
      <file type="M">gemfire-core.src.test.java.com.gemstone.gemfire.distributed.internal.membership.gms.fd.GMSHealthMonitorJUnitTest.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.NetView.java</file>
      <file type="M">gemfire-core.src.main.java.com.gemstone.gemfire.distributed.internal.membership.gms.messenger.JGroupsMessenger.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-2-30 01:00:00" id="6340" opendate="2019-1-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add arbitrary key=value metadata to benchmark runs.</summary>
      <description>User should be able to add arbitrary key=value pair metadata to a benchmark run. The key=value pairs should be stored in the benchmark output in a known location.Example (not required implementation):./gradlew benchmark -Phosts=... -PoutputDir=... -Pmetadata=k1=v1,k2=v2output/.../metadata.json:{ "k1":"v1", "k2":"v2"}Acceptance: Command line option for providing key=value pairs. File containing the key=value pairs. Arguments can be provide through all helper scripts.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.scripts.run.benchmarks.sh</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-1-10 01:00:00" id="655" opendate="2015-12-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode web page sentence should be better worded</summary>
      <description>The first sentence on the http://geode.incubator.apache.org/ web page means something different than intended. The sentence says"Solving low latency data management problems at very high concurrency since 2002."Low latency modifies data management problems. Because of this, the sentence implies that the problems being solved are ones that exhibit low latency. This is the opposite of what is intended.Here is a better wording for that sentence:Providing low latency, high concurrency data management solutions since 2002.Pull request to make this change will follow.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gemfire-site.website.content.index.html</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-9-21 01:00:00" id="6556" opendate="2019-3-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode User Guide: Correct gfsh create region param explanations</summary>
      <description>On the reference page for the `gfsh create region` command, some region-wide parameters are incorrectly described as applying to the regions themselves, when they actually apply to all entries within the region. The params whose descriptions need correcting are: region-idle-time-expiration and region-idle-time-expiration-action region-time-to-live-expiration and region-time-to-live-expiration-action</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.command-pages.create.html.md.erb</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-4-25 01:00:00" id="6560" opendate="2019-3-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode Management REST API should create regions within groups</summary>
      <description>There is no code (or test) that supports `ClusterManagementService.create(config, group)`. WhyNeed to be able to create Geode components (ex. regions) associated with a specific group like `gfsh` can do today.Scenario: Given that I have servers started with different groups (ex. `group-1` and `group-2`)When I have a `ClusterManagementService` instance and a `RegionConfig` instance and call `cms.create(config, "group-1")`Then the region is only created on the server associated with `group-1` and the relevant cluster config is available to any new servers joining which are a part of `group-1`</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.RegionManagementController.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementSecurityIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.ClientClusterManagementService.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.LocatorClusterManagementServiceTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ClientClusterManagementServiceDunitTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-3-28 01:00:00" id="6569" opendate="2019-3-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>geode-all-bom should not make a jar</summary>
      <description>We need to disable creation and publishing of artifacts on the geode-all-bom subproject.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-protobuf-messages.build.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.build.gradle</file>
      <file type="M">boms.geode-all-bom.build.gradle</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-6-29 01:00:00" id="6574" opendate="2019-3-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cluster Management Service should be able to query and list member details</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-web-management.src.main.webapp.WEB-INF.geode-management-servlet.xml</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.RegionManagementController.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.cli.domain.ClassName.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.ClientClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.RestfulEndpoint.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementResult.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.RegionConfig.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.cache.configuration.CacheElement.java</file>
      <file type="M">geode-management.build.gradle</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.LocatorClusterManagementServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.RegionConfigTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigMutator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.ConfigurationMutator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GetMemberInformationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.DataCommandFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.converters.ConfigPropertyConverter.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.InternalLocator.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.management.internal.configuration.mutators.RegionConfigMutatorIntegrationTest.java</file>
      <file type="M">geode-core.src.distributedTest.java.org.apache.geode.management.api.ClusterManagementServiceRetrievalDUnitTest.java</file>
      <file type="M">geode-connectors.src.main.java.org.apache.geode.management.internal.cli.converters.PoolPropertyConverter.java</file>
      <file type="M">geode-common.src.test.resources.expected-pom.xml</file>
      <file type="M">geode-common.build.gradle</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementSecurityIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-web-management.src.distributedTest.java.org.apache.geode.management.client.MemberManagementServiceDUnitTest.java</file>
      <file type="M">geode-web-management.src.distributedTest.java.org.apache.geode.management.client.ClientClusterManagementServiceDUnitTest.java</file>
      <file type="M">geode-web-management.src.commonTest.java.org.apache.geode.management.internal.rest.BaseLocatorContextLoader.java</file>
      <file type="M">geode-web-management.build.gradle</file>
      <file type="M">geode-dunit.src.main.java.org.apache.geode.test.dunit.rules.ClusterStartupRule.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-4-29 01:00:00" id="6577" opendate="2019-3-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Performance Improvement: init object in constructor</summary>
      <description>Initialize inexpensive object in the constructor for GemfireCacheImpl instead of in a hot code path, while holding a lock. This will result in a noticeable performance gain.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.GemFireCacheImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-5-1 01:00:00" id="6583" opendate="2019-4-1 00:00:00" resolution="Won&amp;#39;t Fix">
    <buginformation>
      <summary>Integrate phi-accrual failure detection into Geode</summary>
      <description>Akka has a history-based failure detector that records heartbeat history and is forgiving of pauses to a certain extent.  This has been incorporated into hazelcast as an alternative failure detector &amp; we should investigate doing the same.The Akka detector was written in Scala.  There is a Java port here: https://github.com/komamitsu/phi-accural-failure-detector</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.main.java.org.apache.geode.distributed.internal.membership.gms.fd.GMSHealthMonitor.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-9-1 01:00:00" id="6585" opendate="2019-4-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>tuning advice for subscription-ack-interval has multiple problems</summary>
      <description>On this page:https://gemfire.docs.pivotal.io/97/geode/developing/events/limit_server_subscription_queue_size.htmlthe first paragraph undersubscription-ack-intervalhas some inconsistencies:Optional: Increase the frequency of queue synchronization. This only applies to configurations where server redundancy is used for high availability. Increase the client’s pool configuration, subscription-ack-interval. The client periodically sends a batch acknowledgment of messages to the server, rather than acknowledging each message individually. A lower setting speeds message delivery and generally reduces traffic between the server and client. A higher setting helps contain server queue size.Third sentence: “Increase…subscription-ack-interval“—this seems backward to me. It certainly disagrees with the first sentence since the interval is inversely proportional to the frequency.Fifth sentence: “…and generally reduces traffic…“—is that true? I doubt it.Last sentence: “A higher setting helps contain server queue size.“—again backward.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.events.limit.server.subscription.queue.size.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-5-15 01:00:00" id="6653" opendate="2019-4-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Gfsh command output trimed</summary>
      <description>While executing query on entry with a large key, gfsh automatically trims the columns width so it can fit in available width of the terminal.gfsh&gt;query --query="select * from /example-region"Result : trueLimit  : 100Rows   : 1Result------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut ali.. In a documentation state following:gfsh commands such as query produce output with wide columns that may become misaligned and require manual reformatting to view the output. If the output cannot fit in the available width of the terminal, gfsh automatically trims the columns widths to fit. You can disable this behavior by setting the gfsh environment variable GFSH.TRIMSCRWIDTH to false.But this is wrong described. Only way to disable this behavior is setting gfsh environment variable APP_RESULT_VIEWER to an arbitrary value except 'external' as it enables viewing of the output using UNIX less command.  </description>
      <version>1.7.0,1.8.0,1.9.0</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.tools.modules.gfsh.configuring.gfsh.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-6-15 01:00:00" id="6654" opendate="2019-4-15 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Stats documentation issues</summary>
      <description>Hi,There is no information in documentation (https://geode.apache.org/docs/guide/18/reference/statistics_list.html) about the following statistics: Region Entry Eviction - Heap based eviction (HeapLRUStatistics) Thread stats (VMThreadStats) Client-to-Server communication (ClientSendStats) Disk Store stats (DiskStoreStatistics) There are also these errors in statistics names (doc not aligned with code): "Locator (LocatorStatistics)" should be "Locator (LocatorStats)" "Region Entry Eviction – Size-based (LRUStatistics)" should be "Region Entry Eviction – Size-based (MemLRUStatistics)" "Continuous Querying (CQStatistics)" should be "Continuous Querying (CqQueryStats)" "Gateway Queue (GatewayStatistics)" should be "Gateway Sender statistics (GatewaySenderStatistics)" "Function Execution (FunctionServiceStatistics)" should be "Function Execution (FunctionStatistics)" Also, I cannot find references in the code about the "Delta Propagation (DeltaPropagationStatistics)" described in the documentation</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.reference.statistics.list.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-12-14 01:00:00" id="666" opendate="2015-12-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update awaitility dependency from 1.6.5 to 1.7.0</summary>
      <description>com.jayway.awaitility:awaitility releases are now up to 1.7.0. We should update our dependency from 1.6.5 to 1.7.0.Awaitility is used in IntegrationTests and DistributedTests for awaiting and asserting on asynchronous conditions.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2015-12-14 01:00:00" id="667" opendate="2015-12-14 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update system-rules dependency from 1.12.1 to 1.15.0</summary>
      <description>com.github.stefanbirkner:system-rules releases are now up to 1.15.0. We should update our dependency from 1.12.1 to 1.15.0.System-Rules is a library of JUnit Rules used in UnitTests, IntegrationTests and DistributedTests for controlling System properties, stdout, stderr, etc.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating.M1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.dependency-versions.properties</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-6-1 01:00:00" id="6728" opendate="2019-5-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Generify ClusterManagementService.list</summary>
      <description>By introducing generics we will be able to unsure better type safety for return values.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.MemberManagementController.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.cache.configuration.CacheElementJsonMappingTest.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.assertions.ClusterManagementResultAssert.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.ClusterManagementResultTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.MemberManagementServiceDunitTest.java</file>
      <file type="M">geode-web-management.src.distributedTest.java.org.apache.geode.management.client.MemberManagementServiceDUnitTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.MemberConfig.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.ClusterManagementResult.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.LocatorClusterManagementServiceTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.ConfigurationManager.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ListRegionManagementDunitTest.java</file>
      <file type="M">geode-assembly.src.acceptanceTest.resources.ManagementClientTestCreateRegion.java</file>
      <file type="M">geode-assembly.src.acceptanceTest.java.org.apache.geode.management.internal.rest.StandaloneClientManagementAPIAcceptanceTest.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-9-2 01:00:00" id="6734" opendate="2019-5-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Create Image pipeline red due to bad Java url in script</summary>
      <description>build-google-geode-builder job is broken. Update the Docker/Packer to fix</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.net.NioPlainEngineTest.java</file>
      <file type="M">ci.pipelines.meta.deploy.meta.sh</file>
      <file type="M">ci.images.google-geode-builder.scripts.setup.sh</file>
      <file type="M">ci.images.google-geode-builder.packer.json</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-5-6 01:00:00" id="6741" opendate="2019-5-6 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Off-heap value may be referenced when draining client registration queue</summary>
      <description>If the value of the event added to a client's temporary registration queue is off-heap, then it is possible that when draining the queue the event has already been released which results in an IllegalStateException.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.ClientRegistrationEventQueueManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.internal.cache.tier.sockets.CacheClientNotifierTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.cache.tier.sockets.ClientRegistrationEventQueueManager.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-5-7 01:00:00" id="6745" opendate="2019-5-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add status to list members output for REST v2</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.distributedTest.java.org.apache.geode.management.client.MemberManagementServiceDUnitTest.java</file>
      <file type="M">geode-web-management.src.commonTest.java.org.apache.geode.management.internal.rest.PlainLocatorContextLoader.java</file>
      <file type="M">geode-web-management.src.commonTest.java.org.apache.geode.management.internal.rest.LocatorWithSecurityManagerContextLoader.java</file>
      <file type="M">geode-web-management.src.commonTest.java.org.apache.geode.management.internal.rest.LocatorWebContext.java</file>
      <file type="M">geode-web-management.src.commonTest.java.org.apache.geode.management.internal.rest.LocatorCleanupEventListener.java</file>
      <file type="M">geode-web-management.src.commonTest.java.org.apache.geode.management.internal.rest.BaseLocatorContextLoader.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.cache.configuration.CacheElementJsonMappingTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-core-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.functions.GetMemberInformationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.domain.CacheServerInfo.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.MemberManagementServiceDunitTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.cli.domain.MemberInformation.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.MemberManagementServiceRestIntegrationTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.MemberConfig.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.MemberConfigManager.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2019-7-4 01:00:00" id="6827" opendate="2019-6-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Benchmark CI: Make Windows jobs not gating for benchmarks</summary>
      <description>In Geode CI, the Benchmark job is blocked by the successful completion of the Windows tests. Since Benchmark runs on linux and the Windows tests still frequently fail with timing issues, it does not make sense for these tests to be gating to Benchmark runs. When they are gating, we do not get frequent runs of the benchmark task.</description>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.shared.jinja.variables.yml</file>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-9-24 01:00:00" id="7242" opendate="2019-9-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incorrect documentation for AVG and SUM aggregate functions</summary>
      <description>The documentation for OQL Aggregate Functions states that AVG and SUM always return either a Float or Double, but the actual return type can be any of Integer, Long, Float or Double.</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-docs.developing.query.select.aggregates.html.md.erb</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-9-30 01:00:00" id="7255" opendate="2019-9-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Need to pick up CVE-2019-16942</summary>
      <description>There is a CVE out on Jackson versions before 2.10.0... We need to upgrade to 2.10.0 to get a fix.see CVE-2019-16942</description>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-assembly.src.integrationTest.resources.dependency.classpath.txt</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">buildSrc.src.main.groovy.org.apache.geode.gradle.plugins.DependencyConstraints.groovy</file>
      <file type="M">boms.geode-all-bom.src.test.resources.expected-pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-11-7 01:00:00" id="7417" opendate="2019-11-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CI checks do not trigger on geode-book changes</summary>
      <description>due to new branch protection rules, it is now impossible to submit geode-book changes as the required checks will never firewe should remove the exclusion so checks can run</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.pull-request.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-3-7 01:00:00" id="7421" opendate="2019-11-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability: can deploy jar by REST API for Management</summary>
      <description>WHAT 1. can deploy jar file by REST API 2. from feature point , it will cover current 'gfsh deploy' 3. if two files have same file name, the later wins 4. can recognize version pattern. "filename-version&amp;#91;-label&amp;#93;.jar" . filename=&amp;#91;a-zA-Z/-&amp;#93;+, not single "", not end with "" version=&amp;#91;0-9/.&amp;#93;*, not single ".", not end with "." label=&amp;#91;a-zA-Z0-9&amp;#93;*such as: &lt;commons-beanutils-1.9.3.jar&gt; is a later version of &lt;commons-beanutils-1.9.2.jar&gt;, will deploy. &lt;commons-beanutils-1.9.3.jar&gt; is a same version of &lt;commons-beanutils-1.9.3-SNAPSHOT.jar&gt;, the later wins &lt;commons-beanutils-1.9.3-RELEASE.jar&gt; is a same version of &lt;commons-beanutils-1.9.3-SNAPSHOT.jar&gt;, the later wins &lt;commons-beanutils-1.9.1.jar&gt; is an earlier version of &lt;commons-beanutils-1.9.2.jar&gt;, will block it. 5. if there is a version part in the file name, we will deploy them without append "#1" part to the file name 6. can accept "group"</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RebalanceIntegrationTest.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.configuration.DeploymentTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.EntityInfo.java</file>
      <file type="M">geode-junit.src.main.java.org.apache.geode.test.junit.assertions.ClusterManagementListResultAssert.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.web.http.support.HttpRequesterTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.ExportClusterConfigurationCommandTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.web.shell.HttpOperationInvoker.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.web.http.support.HttpRequester.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.functions.DeployFunction.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.realizers.DeploymentRealizerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.mutators.DeploymentManagerTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.domain.ConfigurationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.api.LocatorClusterManagementServiceTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.distributed.internal.InternalConfigurationPersistenceServiceDeployedJarTest.java</file>
      <file type="M">geode-core.src.main.resources.org.apache.geode.internal.sanctioned-geode-management-serializables.txt</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.functions.CacheRealizationFunction.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.DeploymentRealizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.realizers.ConfigurationRealizer.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.DeploymentManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.ConfigurationManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.domain.Configuration.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.internal.DeployedJar.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.internal.DeployedJarTest.java</file>
      <file type="M">geode-core.src.integrationTest.java.org.apache.geode.codeAnalysis.AnalyzeManagementSerializablesJUnitTest.java</file>
      <file type="M">geode-assembly.src.integrationTest.resources.assembly.content.txt</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ListIndexOnPartitionRegionTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.DeployToMultiGroupDUnitTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.DeploymentManagementDUnitTest.java</file>
      <file type="M">geode-web-management.src.main.webapp.WEB-INF.management-servlet.xml</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.security.RestSecurityConfiguration.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.controllers.DeploymentManagementController.java</file>
      <file type="M">geode-management.src.test.java.org.apache.geode.management.internal.ClientClusterManagementServiceTest.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.internal.ClientClusterManagementService.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.Deployment.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.configuration.AbstractConfiguration.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.RestTemplateClusterManagementServiceTransport.java</file>
      <file type="M">geode-management.src.main.java.org.apache.geode.management.api.CommandType.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-2-8 01:00:00" id="7424" opendate="2019-11-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ability: can create index in RESTAPI for Management</summary>
      <description>WHAT 1. endpoint: &amp;#91;POST&amp;#93; `management/v1/indexes` 1. parameter: "name(indexID)", "expression", "region", "type", "group" 1. expected result: create index by specified parameters 1. type: default is "range" 1. region is required 1. name(indexID) is required 1. expression is required 1. "hash" type is not supported. Note1. request body```JSON{ "name": "Foo6name3", "expression": "name3", "regionPath": "/Foo6", “group”：“”， “type”：“” range|key }```</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.integrationTest.java.org.apache.geode.management.internal.rest.RegionManagementIntegrationTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.management.internal.configuration.validators.IndexValidatorTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.validators.IndexValidator.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.configuration.mutators.IndexConfigManager.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.management.internal.api.LocatorClusterManagementService.java</file>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.ManagementLoggingFilter.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-2-8 01:00:00" id="7428" opendate="2019-11-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>adjustment: set the log-lvl of REST API of Management from info to debug</summary>
      <description>WHY 1. too many logs in the log file, that is a customer concern 2. broker team call RESTAPI for Management for healthcheck per 10 seconds. it will produce too many logs. WHAT 1. change every log which is produced by RESTAPI for management to be DEBUG.</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-web-management.src.main.java.org.apache.geode.management.internal.rest.ManagementLoggingFilter.java</file>
      <file type="M">geode-assembly.src.integrationTest.java.org.apache.geode.management.internal.rest.controllers.ClusterManagementRestLoggingTest.java</file>
      <file type="M">geode-assembly.src.distributedTest.java.org.apache.geode.management.internal.rest.ManagementRequestLoggingDistributedTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-11-9 01:00:00" id="7431" opendate="2019-11-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>benchmarks may fail due to infrastructure quota</summary>
      <description>For example, https://concourse.apachegeode-ci.info/teams/main/pipelines/apache-develop-main/jobs/Benchmark/builds/677 failed because there were already 3 benchmarks jobs running at the timeSince the quota is 40 and each benchmark uses 12, we should restrict max_in_flight to 3 for this job</description>
      <version>None</version>
      <fixedVersion>1.12.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ci.pipelines.geode-build.jinja.template.yml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2020-5-30 01:00:00" id="8055" opendate="2020-4-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>can not create index on sub regions</summary>
      <description>When trying to use "create index" command in gfsh to create index on sub regions, we get the following message:"Sub-regions are unsupported"Pre-1.6, we were able to do that.</description>
      <version>1.7.0,1.8.0,1.9.2,1.10.0,1.11.0,1.12.0</version>
      <fixedVersion>1.12.1,1.13.0,1.14.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode-wan.src.distributedTest.java.org.apache.geode.management.internal.configuration.ClusterConfigurationIndexWithFromClauseDUnitTest.java</file>
      <file type="M">geode-gfsh.src.test.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandTest.java</file>
      <file type="M">geode-gfsh.src.main.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommand.java</file>
      <file type="M">geode-gfsh.src.distributedTest.java.org.apache.geode.management.internal.cli.commands.CreateIndexCommandDUnitTest.java</file>
      <file type="M">geode-core.src.test.java.org.apache.geode.cache.configuration.CacheConfigTest.java</file>
      <file type="M">geode-core.src.main.java.org.apache.geode.cache.configuration.CacheConfig.java</file>
    </fixedFiles>
  </bug>
  
</bugrepository>