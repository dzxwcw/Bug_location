<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CALCITE">
  <bug fixdate="2016-3-4 01:00:00" id="1077" opendate="2016-2-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Separate Avatica from "core" Calcite build</summary>
      <description>Uber-JIRA-issue for tracking the separation of Avatica from the rest of the Calcite build.Long term, Avatica can be a standalone project, but we're not there yet in terms of governance (enough people intimately involved). One thing we can do now is to separate Avatica from Calcite and begin "getting them used to" not being next to one another.DISCUSS thread: https://mail-archives.apache.org/mod_mbox/calcite-dev/201601.mbox/%3C56ABCCFF.3010205%40gmail.com%3E</description>
      <version>None</version>
      <fixedVersion>avatica-1.7.0,1.7.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">site..config.yml</file>
      <file type="M">avatica.site..docs.history.md</file>
      <file type="M">avatica.site.downloads.index.md</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-3-1 01:00:00" id="1117" opendate="2016-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use commons httpclient instead of JDK http client</summary>
      <description>I've been stumbling around, trying to get a better understanding of how HttpURLConnection works (with http/1.1), applying it to some of the knowledge I have with the distributed key-value stores on Hadoop I'm familiar with.Along the way, I found lots of recommendations to move to Apache Commons HttpClient (http://hc.apache.org) with the broad suggestion that "it's just generally better". I mocked this up and was pleasantly surprised to find that this netted about a 20% improvement over the existing http client implementation (with a stubbed-out JDBC driver inside Avatica &amp;#8211; just measuring Avatica itself).Thankfully, we have an interface for the http client, so it should be easy to add a new implementation with a factory to do some client-side configuration.</description>
      <version>None</version>
      <fixedVersion>avatica-1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.remote.Driver.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.ConnectionConfigImpl.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.ConnectionConfig.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.BuiltInConnectionProperty.java</file>
      <file type="M">avatica.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-1 01:00:00" id="1118" opendate="2016-3-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>"noop" JDBC driver for benchmarking/testing Avatica</summary>
      <description>As I was working on the general effort of improving performance of Avatica (alluded to in CALCITE-1117), I found myself lamenting a view into the performance of Avatica that wasn't bound by the underlying database being written to.I hacked together a really quick/dirty JDBC driver that does nothing whenever you call the methods (sans creating Statements and DatabaseMetaData instances). Turns out this was really useful in testing our just Avatica.I'm sure there are issues with it, but it was sufficient for doing some write-heavy testing. Would be nice to have it included for future testing.</description>
      <version>None</version>
      <fixedVersion>avatica-1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-2 01:00:00" id="1119" opendate="2016-3-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Additional metrics instrumentation</summary>
      <description>I've found that instrumenting ExecuteRequest and CommitRequest are really nice to see latencies on the write side.</description>
      <version>None</version>
      <fixedVersion>avatica-1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.remote.LocalService.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-9 01:00:00" id="1136" opendate="2016-3-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>RAT check failure on Calcite due to avatica directory</summary>
      <description>Another one that fell through the cracks: the RAT check fails on Calcite because Maven doesn't know about the Avatica directory and thinks it's just garbage.Just need to exclude it; we'll run RAT in avatica. Don't need to worry about it for calcite.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-9 01:00:00" id="1137" opendate="2016-3-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Exclude Avatica from calcite src release assembly descriptor</summary>
      <description>Avatica will probably be picked up automatically by the source-release descriptor. Need to exclude it.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.config.assemblies.source-assembly.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-9 01:00:00" id="1140" opendate="2016-3-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update website properly for Avatica 1.7.0</summary>
      <description>I left a placeholder post in the Avatica site for the 1.7.0 release. Need to create a real one.Also, remove the apostrophe in "from it's previous location".We recently decided in Calcite that the release notes should state which JDK and Guava versions the software has been tested against, and I think Avatica should do the same.</description>
      <version>None</version>
      <fixedVersion>avatica-1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">avatica.site..posts.2016-03-03-tbd-release.md</file>
      <file type="M">avatica.site..posts.2016-03-03-separate-project.md</file>
      <file type="M">avatica.site..docs.history.md</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-9 01:00:00" id="1141" opendate="2016-3-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update minor.version from 6 to 7</summary>
      <description>See title.</description>
      <version>None</version>
      <fixedVersion>avatica-1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">avatica.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-9 01:00:00" id="1143" opendate="2016-3-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove incorrect NOTICE paragraph in Avatica</summary>
      <description>This product is based on source code originally developedby DynamoBI Corporation, LucidEra Inc., SQLstream Inc. and othersunder the auspices of the Eigenbase Foundationand released as the LucidDB project.is not applicable to Avatica.</description>
      <version>None</version>
      <fixedVersion>avatica-1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">avatica.NOTICE</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-9 01:00:00" id="1144" opendate="2016-3-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix Avatica LICENSE file</summary>
      <description>Needs to say "Apache Calcite Avatica Sub Components" not "Apache Calcite Sub Components".Also, placeholder for concern about missing jekyll/sass entries from Julian.</description>
      <version>None</version>
      <fixedVersion>avatica-1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">avatica.LICENSE</file>
      <file type="M">avatica.core.src.main.resources.META-INF.LICENSE</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-7-24 01:00:00" id="1167" opendate="2016-3-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>OVERLAPS should swap operands if second is earlier than first</summary>
      <description>If second date in interval is earlier than first OVERLAPS doesn't swap them.Example:select 1 from "TEST"."tdt" where (date '1999-12-01' , date '2001-12-31' ) overlaps ( date '2001-01-01' , date '2002-11-11' );+------------+| EXPR$0 |+------------+| 1 || 1 || 1 || 1 |+------------+select 1 from "TEST"."tdt" where ( date '2001-12-31', date '1999-12-01' ) overlaps ( date '2001-01-01' , date '2002-11-11' );+------------+| EXPR$0 |+------------+</description>
      <version>None</version>
      <fixedVersion>1.17.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.sql.misc.iq</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2016-5-5 01:00:00" id="1190" opendate="2016-4-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cross-Version Compatibility Test Harness</summary>
      <description>One thing that the Protobuf serialization aimed to provide was a library which provides us the tools to make Avatica compatible across versions. However, Protobuf is just a tool and the developers can still misuse protobuf in such a way that breaks compatibility across versions. Not to mention, compatibility isn't even remotely certain without any tests.Because of Avatica's position as a library less than a product, we have to defer some logic to the concrete product being tested (e.g. Phoenix or Drill). I'm thinking something like the following:The user provides pairs of client and server "definitions" for a given version of compatibility. This would include some version of Avatica and some backing database. For example, Avatica-1.7.1 and Phoenix-4.7.0 or Avatica-1.8.0-SNAPSHOT and HSQLDB-2.3.1.The client half would be some template for the appropriate JDBC url to use (sans the URL to the Avatica server) and a JAR file containing the necessary classes to run the j.s.Driver. The server half would just be a URL to the Avatica server instance.The test harness itself can provide the logic to test the remote driver against the other servers, enumerating the possible combinations of client-server communication. Starting the server for each version to test is likely too difficult to automate well given the unknown of what the server will be, so that will be left as a prerequisite.</description>
      <version>None</version>
      <fixedVersion>avatica-1.8.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">avatica.site..data.docs.yml</file>
      <file type="M">avatica.pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2016-10-2 01:00:00" id="1224" opendate="2016-5-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Provide non-shaded and shaded variants of Avatica artifacts</summary>
      <description>Kevin Risden started a discussion about problems he using Avatica in certain environments because of the shaded classes.https://mail-archives.apache.org/mod_mbox/calcite-dev/201605.mbox/%3CCAJU9nmgcPU9XnFh7RtR%3D4eDZ1Qg25qO0j6xudd_%3Ds89VZ3P1Ag%40mail.gmail.com%3EAfter talking it out, we can to the conclusion that providing three things for Avatica clients should be sufficient for users: Provide an avatica client artifact with all dependencies shaded (relocated, when possible) Provide an avatica client artifact with no dependencies shaded Provide an example project (e.g. documentatino) users can modify to construct their own Avatica client artifact with just the dependencies they desire.We can't reasonably enumerate all permutations of what might be desired by users WRT dependency versions, but we can provide them the tools to create the artifacts they need for their unique environment/deployment.</description>
      <version>None</version>
      <fixedVersion>avatica-1.9.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">avatica.site..data.docs.yml</file>
      <file type="M">avatica.site.downloads.index.md</file>
      <file type="M">avatica.pom.xml</file>
      <file type="M">avatica.core.src.main.resources.META-INF.LICENSE</file>
      <file type="M">avatica.core.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-5-13 01:00:00" id="1235" opendate="2016-5-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Push down LIMIT in unfiltered Cassandra queries</summary>
      <description/>
      <version>1.7.0</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">cassandra.src.test.java.org.apache.calcite.test.CassandraAdapterIT.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraToEnumerableConverter.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraTable.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraSort.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraRules.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraRel.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraMethod.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-6-17 01:00:00" id="1239" opendate="2016-5-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to avatica-1.8.0</summary>
      <description>After Avatica release 1.8.0 and before Calcite release 1.8.0, upgrade Calcite to use the new Avatica.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.jdbc.CalciteRemoteDriverTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.server.CalciteServer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteStatement.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteMetaImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteConnectionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionProperty.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-6-19 01:00:00" id="1248" opendate="2016-5-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Release Avatica 1.8</summary>
      <description>Parent issue to track things to do for this release</description>
      <version>None</version>
      <fixedVersion>avatica-1.8.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">avatica.site..docs.howto.md</file>
      <file type="M">avatica.tck.pom.xml</file>
      <file type="M">avatica.server.pom.xml</file>
      <file type="M">avatica.pom.xml</file>
      <file type="M">avatica.noop-driver.pom.xml</file>
      <file type="M">avatica.metrics.pom.xml</file>
      <file type="M">avatica.metrics-dropwizardmetrics3.pom.xml</file>
      <file type="M">avatica.core.pom.xml</file>
      <file type="M">avatica.site..docs.history.md</file>
      <file type="M">avatica.standalone-server.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-5-19 01:00:00" id="1249" opendate="2016-5-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>L&amp;N incorrect for source and non-shaded jars for avatica-standalone-server module</summary>
      <description>I had added the special L&amp;N files for the shaded jar, but these also got added to the source and "normal" jar (which make them incorrect).Need to make sure that the special L&amp;N files only hit the shaded jar.</description>
      <version>None</version>
      <fixedVersion>avatica-1.8.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">avatica.standalone-server.src.main.resources.META-INF.LICENSE</file>
      <file type="M">avatica.standalone-server.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-5-20 01:00:00" id="1251" opendate="2016-5-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Write release notes</summary>
      <description>Forgot that I need to write up release notes before I make an rc0 because the site is also contained in the tag.</description>
      <version>None</version>
      <fixedVersion>avatica-1.8.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">avatica.site..docs.history.md</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-10-1 01:00:00" id="1270" opendate="2016-6-1 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade Calcite to avatica-1.9</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.11.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">splunk.pom.xml</file>
      <file type="M">pom.xml</file>
      <file type="M">piglet.pom.xml</file>
      <file type="M">mongodb.pom.xml</file>
      <file type="M">example.csv.pom.xml</file>
      <file type="M">elasticsearch.pom.xml</file>
      <file type="M">druid.pom.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteResultSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteMetaImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteConnectionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionProperty.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionConfigImpl.java</file>
      <file type="M">core.pom.xml</file>
      <file type="M">cassandra.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2016-6-7 01:00:00" id="1277" opendate="2016-6-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Rat fails on source distribution due to git.properties</summary>
      <description>During 1.8 release vote, alangates reported that mvn apache-rat:check fails on source distribution due to git.properties. I confirmed this.git.properties is not a source file &amp;#8211; it is generated during the release. We should add it to rat exclusions.</description>
      <version>None</version>
      <fixedVersion>1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  
</bugrepository>