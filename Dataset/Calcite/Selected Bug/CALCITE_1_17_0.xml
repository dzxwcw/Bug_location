<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CALCITE">
  
  
  
  <bug fixdate="2018-7-8 01:00:00" id="2304" opendate="2018-5-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>In Babel parser, allow Hive-style syntax "LEFT SEMI JOIN"</summary>
      <description>In Babel parser, allow Hive-style syntax "LEFT SEMI JOIN".This case is a fairly modest extension to syntax, and can be used as a template for other changes to the Babel parser.</description>
      <version>None</version>
      <fixedVersion>1.17.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">server.src.main.codegen.config.fmpp</file>
      <file type="M">core.src.test.codegen.config.fmpp</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.JoinType.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
      <file type="M">core.src.main.codegen.config.fmpp</file>
      <file type="M">babel.src.test.resources.sql.select.iq</file>
      <file type="M">babel.src.main.codegen.includes.parserImpls.ftl</file>
      <file type="M">babel.src.main.codegen.config.fmpp</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2018-6-29 01:00:00" id="2388" opendate="2018-6-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to dbcp2 version 2.4.0</summary>
      <description>Upgrade from apache commons-dbcp 1.4 to commons-dbcp2 2.4.0.</description>
      <version>None</version>
      <fixedVersion>1.17.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcUtils.java</file>
      <file type="M">core.pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  
  <bug fixdate="2018-9-19 01:00:00" id="2475" opendate="2018-8-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>SqlAdvisor: support MINUS</summary>
      <description/>
      <version>1.17.0</version>
      <fixedVersion>1.18.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlAdvisorTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlSimpleParser.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-9-19 01:00:00" id="2478" opendate="2018-8-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>SqlAdvisor: purge from_clause when _suggest_ token is located in one of the from sub-queries</summary>
      <description>Testcase:select axc from (select (select ^ from dummy) axc from dummy a), dummy bExpected output:SELECT * FROM ( SELECT ( SELECT _suggest_ FROM dummy ) axc FROM dummy a )Actual output:SELECT * FROM ( SELECT ( SELECT _suggest_ FROM dummy ) axc FROM dummy a ) , dummy b</description>
      <version>1.17.0</version>
      <fixedVersion>1.18.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlAdvisorTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlSimpleParser.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-9-23 01:00:00" id="2486" opendate="2018-8-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade Apache parent POM to version 21</summary>
      <description>Apache parent POM 21 has just been released. It generates .sha512 checksums during release with Maven Release Plugin.We should investigate using it for the next release (1.18). Also investigate upgrading Avatica for its next release (1.13).</description>
      <version>None</version>
      <fixedVersion>avatica-1.13.0,1.18.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">mongodb.pom.xml</file>
      <file type="M">geode.pom.xml</file>
      <file type="M">example.csv.pom.xml</file>
      <file type="M">elasticsearch.pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-8-28 01:00:00" id="2497" opendate="2018-8-28 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Janino version to 3.0.9</summary>
      <description>Update Janino version to 3.0.9 where was fixed https://github.com/janino-compiler/janino/issues/47, and remove workaround made in CALCITE-2261 because of this issue.</description>
      <version>1.17.0</version>
      <fixedVersion>1.18.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.SchemaPlus.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2018-9-31 01:00:00" id="2518" opendate="2018-8-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add failOnWarnings to maven-javadoc-plugin configuration</summary>
      <description>It would catch javadoc warnings automatically in CI</description>
      <version>1.17.0</version>
      <fixedVersion>1.18.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Bug.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.RuleQueue.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-9-9 01:00:00" id="2543" opendate="2018-9-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade SQLLine to 1.5.0</summary>
      <description>Upgrade SQLLine to 1.5.0.</description>
      <version>None</version>
      <fixedVersion>1.18.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-9-19 01:00:00" id="2570" opendate="2018-9-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade forbiddenapis to 2.6 for JDK 11 support</summary>
      <description>forbiddenapis 2.6 was released 2 days ago with support for JDK 11</description>
      <version>None</version>
      <fixedVersion>avatica-1.13.0,1.18.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-9-19 01:00:00" id="2574" opendate="2018-9-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Download pages must include instructions for verifying the integrity of files directly.</summary>
      <description>The announcement for Avatica-Go 3.2.0 was rejected because the download page did not include instructions for verifying the integrity of files. I believe having a link to the documentation is not enough.See Apache Atlas' download page for a valid example: http://atlas.apache.org/Downloads.html</description>
      <version>None</version>
      <fixedVersion>avatica-1.13.0,1.18.0,avatica-go-4.0.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site.downloads.index.md</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-19 01:00:00" id="2575" opendate="2018-9-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Release Calcite 1.18.0</summary>
      <description>Release Calcite 1.18.0.</description>
      <version>None</version>
      <fixedVersion>1.18.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.howto.md</file>
      <file type="M">site..docs.history.md</file>
      <file type="M">README</file>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-9-19 01:00:00" id="2577" opendate="2018-9-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update URLs on download page to HTTPS</summary>
      <description/>
      <version>None</version>
      <fixedVersion>avatica-1.13.0,1.18.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site.downloads.index.md</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-9-20 01:00:00" id="2578" opendate="2018-9-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support ANY_VALUE Aggregate Function in ElasticSearch Adapter</summary>
      <description>Sometimes it is useful to return a single value from a multi-set (bucket).SELECT foo, ANY_VALUE(bar) FROM elastic GROUP BY foo</description>
      <version>None</version>
      <fixedVersion>1.18.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.AggregationTest.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchTable.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchProject.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchJson.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchFilter.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchAggregate.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-9-23 01:00:00" id="2588" opendate="2018-9-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Run Geode Adapter tests with an Embedded Instance</summary>
      <description>Similar to what has been done for Mongo / Elastic and Cassandra, allow Geode tests to run as part of CI build.</description>
      <version>1.17.0</version>
      <fixedVersion>1.18.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode.src.test.resources.model2.json</file>
      <file type="M">geode.src.test.resources.model.json</file>
      <file type="M">geode.src.test.resources.model-zips.json</file>
      <file type="M">geode.src.test.resources.model-with-classes.json</file>
      <file type="M">geode.src.test.resources.model-geode-pg-federation.json</file>
      <file type="M">geode.src.test.resources.model-bookshop.json</file>
      <file type="M">geode.src.test.resources.model-bookshop-all.json</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.GeodeZipsIT.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.GeodeAdapterIT.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.GeodeAdapterBookshopIT.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.BaseGeodeAdapterIT.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.util.GeodeUtils.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.simple.GeodeSimpleSchema.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeToEnumerableConverter.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeTableScan.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeTable.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeSort.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeSchemaFactory.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeSchema.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeRules.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeRel.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeProject.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeFilter.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeAggregate.java</file>
      <file type="M">geode.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2014-5-18 01:00:00" id="259" opendate="2014-6-18 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Using sub-queries in CASE statement against JDBC tables generates invalid Oracle SQL</summary>
      <description>1. select e.NAME,(CASE e.dept_ID WHEN (Select d.id from PV_ADMIN.dept d where d.id = e.dept_id) THEN (Select d.name from PV_ADMIN.dept d where d.id = e.dept_id) ELSE 'DepartmentNotFound' END ) AS DEPTNAME from PV_ADMIN.EMP e;2. select e.NAME, CASE WHEN e.dept_ID = (select d.ID from PV_ADMIN.dept d where d.NAME = 'SALES') then 'SALES' ELSE 'Not Matched.' END as department from PV_ADMIN.EMP e ;---------------- Imported from GitHub ----------------Url: https://github.com/julianhyde/optiq/issues/259Created by: kunal-mahaleLabels: duplicate, Created at: Fri Apr 25 06:41:04 CEST 2014State: open</description>
      <version>None</version>
      <fixedVersion>1.3.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcAdapterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcRules.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2018-8-12 01:00:00" id="2624" opendate="2018-10-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a rule to copy a sort below a join operator</summary>
      <description>Currently, the only rule that allows a sort to traverse a binary operator is the SortJoinTransposeRule. The rule was introduced mainly to push limits in the case of left and right outer joins (see CALCITE-831).I assume that the main reason that we don't have more rules is that sorts with limits and offsets cannot be pushed safely below many types of join operators. However, in many cases, it is possible and beneficial for optimization purposes to just push the sort without the limit and offset. Since we do not know in advance if the join operator preserves the order we cannot remove (that is why I am saying copy and not transpose) the sort operator on top of the join. The latter is not really a problem since the SortRemoveRule can detect such cases and remove the sort if it is redundant.A few concrete examples where this optimization makes sense are outlined below: allow the sort to be later absorbed by an index scan and disappear from the plan (Sort + Tablescan =&gt; IndexScan with RelCollation); allow operators that require sorted inputs to be exploited more easily (e.g., merge join); allow the sort to be performed on a possibly smaller result (assuming that the physical binary operator that is going to be used preserves the order of left/right input and the top sort operator can be removed entirely).I propose to add a new rule (e.g., SortCopyBelowJoinRule, SortJoinCopyBelowRule) which allows a sort to be copied to the left or right (or to both if it is rather easy to decompose the sort) of a join operator (excluding the limit and offset attributes) if the respective inputs are not already sorted.</description>
      <version>1.17.0</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptRulesTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-12 01:00:00" id="2625" opendate="2018-10-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>ROW_NUMBER, RANK generating Invalid SQL</summary>
      <description>The SQL standard says:- If &lt;ntile function&gt;, &lt;lead or lag function&gt;, &lt;rank function type&gt; or ROW_NUMBER is specified, then: … The window framing clause of WDX shall not be present.So, Calcite should not print the Window Frames when such functions are used.</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.SqlImplementor.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2018-3-7 01:00:00" id="2658" opendate="2018-11-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Introducing more ReduceExpressionRules</summary>
      <description>It is useful to have rules reducing Exchange/Sort/SortExchange keys, e.g.,SELECT key,value FROM (SELECT 1 AS key, value FROM src) r DISTRIBUTE BY key;can be reduced to SELECT 1 AS key, value FROM src; # Since singleton requirement may already required by SELECT.SELECT key,value FROM (SELECT 1 AS key, value FROM src) r ORDER BY key;can be reduced toSELECT 1 AS key, value FROM src; # Since ordering on constant is useless.</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptRulesTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalcitePrepareImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-9 01:00:00" id="2663" opendate="2018-11-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>CREATE FUNCTION and DROP FUNCTION DDL commands</summary>
      <description>support create function and drop function statement like apache hive:CREATE [OR REPLACE] FUNCTION [IF NOT EXISTS] [db_name.]function_name AS class_name  [USING JAR|FILE|ARCHIVE 'file_uri' [, JAR|FILE|ARCHIVE 'file_uri'] ];DROP FUNCTION [IF EXISTS] function_name;   </description>
      <version>1.16.0,1.17.0</version>
      <fixedVersion>1.18.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">server.src.test.java.org.apache.calcite.test.ServerParserTest.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlDropObject.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlDdlNodes.java</file>
      <file type="M">server.src.main.codegen.includes.parserImpls.ftl</file>
      <file type="M">server.src.main.codegen.config.fmpp</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.UtilTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlUnParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Util.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlKind.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-12-20 01:00:00" id="2689" opendate="2018-11-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>ES Adapter. Grouping on date / number fields fails</summary>
      <description>For Terms Aggregation missing value has to have same type as group key:select max(amount), date from orders group by date -- date column is of type date (in ES)Currently single (text) key is used _MISSING_ which fails when grouping on non-string fields (eg. dates, numbers or booleans).When using missing (value) query converter should consider field type.This logic should be reviewed once we migrate to composite aggregations (available since 6.1 see PR26800)</description>
      <version>None</version>
      <fixedVersion>1.18.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.ScrollingTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.BooleanLogicTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.AggregationTest.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.Scrolling.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchTransport.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchTable.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchJson.java</file>
      <file type="M">elasticsearch.pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2018-12-29 01:00:00" id="2719" opendate="2018-11-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>MySQL does not support cast to BIGINT type</summary>
      <description>Cast to BIGING is not supported in MySQL. The trick is to use CAST to SIGNED INT. When accepted I will try to fix this.</description>
      <version>1.17.0</version>
      <fixedVersion>1.18.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.MysqlSqlDialect.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-6-2 01:00:00" id="2721" opendate="2018-12-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support parsing of DOT + MEMBER_FUNCTION</summary>
      <description>Support parsing of &lt;DOT&gt; + &lt;MEMBER_FUNCTION&gt; parsing Similar to ExampleSELECT t.complex_col.member_func() FROM tbl;For more details please see: Member Function</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-3-7 01:00:00" id="2729" opendate="2018-12-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Introducing WindowReduceExpressionRule</summary>
      <description>Introducing WindowExpressionRules, for example:select sum(sal) over (partition by deptno order by sal) from src where sal=5000can be reduced to select sum(5000) over (partition by deptno) from src where sal=5000</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptRulesTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ReduceExpressionsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalcitePrepareImpl.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-7 01:00:00" id="2730" opendate="2018-12-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>RelBuilder incorrectly simplifies a filter with duplicate conjunction to empty</summary>
      <description>Regression from 1.17.</description>
      <version>None</version>
      <fixedVersion>1.18.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelBuilderTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSimplify.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-7 01:00:00" id="2732" opendate="2018-12-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade postgresql driver version</summary>
      <description>We are still using the JDBC 3 version (9.3-1102-jdbc3). Not sure if anyone has run the compatibility tests in calcite-test-dataset with Postgresql recently, but I get an java.lang.AbstractMethodError message for several of them. We can move to the JDBC 4.1 implementation 9.3-1102-jdbc41 (I verified that this fixes the issue).</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-7 01:00:00" id="2733" opendate="2018-12-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use catalog and schema from JDBC connection string to retrieve tables if specified</summary>
      <description>From JDBC 4.1, catalog and schema can be retrieved from the connection object. When we retrieve the table objects using the JDBC connection, I believe we could try to get catalog and schema from connection object if they have not been specified by user. If they are not in the connection object either, null will be passed.</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcAdapterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcSchema.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-8-11 01:00:00" id="2734" opendate="2018-12-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>MongoDB adapter tutorial is out of date</summary>
      <description>Hey all,    I am trying to learn Calcite via MongoDB adapter, and I found there is a related tutorial section in HOWTO,].  But it seems to be a little out of date now, I found several issues at least:1. model file: mongo-zips-model.json  has been renamed into mongo-models.json.2. data source file zips.json doesn't include all the data required in the models.json file.3. the MongoDB adapter can not be directly used, because there is a log related bug when execute command ``!connect jdbc:calcite:model=mongodb/target/test-classes/mongo-model.json admin admin``, related output:```SLF4J: Detected both log4j-over-slf4j.jar AND slf4j-log4j12.jar on the class path, preempting StackOverflowError.SLF4J: See also http://www.slf4j.org/codes.html#log4jDelegationLoop for more details.Caused by: java.lang.NoClassDefFoundError: Could not initialize class org.apache.log4j.Log4jLoggerFactory```   </description>
      <version>1.17.0</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.howto.md</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-29 01:00:00" id="2759" opendate="2018-12-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update maven-remote-resources-plugin to 1.6.0</summary>
      <description/>
      <version>1.17.0</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  
</bugrepository>