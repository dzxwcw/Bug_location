<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CALCITE">
  
  
  <bug fixdate="2016-3-8 01:00:00" id="1132" opendate="2016-3-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update artifactId and name for avatica modules</summary>
      <description>From the mailing list: Remove "calcite-" from Avatica artifactId's Ensure "Apache Calcite" prefaces the module "readable" name Update calcite "core" build for the new names Use 'org.apache.calcite.avatica' consistently across all Avatica modules</description>
      <version>None</version>
      <fixedVersion>avatica-1.7.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">splunk.pom.xml</file>
      <file type="M">pom.xml</file>
      <file type="M">piglet.pom.xml</file>
      <file type="M">mongodb.pom.xml</file>
      <file type="M">example.csv.pom.xml</file>
      <file type="M">core.pom.xml</file>
      <file type="M">avatica.server.pom.xml</file>
      <file type="M">avatica.pom.xml</file>
      <file type="M">avatica.noop-driver.pom.xml</file>
      <file type="M">avatica.metrics.pom.xml</file>
      <file type="M">avatica.metrics-dropwizardmetrics3.pom.xml</file>
      <file type="M">avatica.core.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-3-8 01:00:00" id="1133" opendate="2016-3-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove dropwizard reporter for Hadoop Metrics2</summary>
      <description>I introduced a module in CALCITE-642 whose purpose was to send Dropwizard Metrics to a Hadoop Metrics2 sink.Since then, I've pulled this out into its own repository and deployed it to central. We really don't need this to live in Calcite at all anymore (it's just debt).</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">dropwizard-metrics2.src.test.java.org.apache.calcite.dropwizard.metrics.hadoop.HadoopMetrics2ReporterTest.java</file>
      <file type="M">dropwizard-metrics2.src.main.java.org.apache.calcite.dropwizard.metrics.hadoop.PackageMarker.java</file>
      <file type="M">dropwizard-metrics2.src.main.java.org.apache.calcite.dropwizard.metrics.hadoop.package-info.java</file>
      <file type="M">dropwizard-metrics2.src.main.java.org.apache.calcite.dropwizard.metrics.hadoop.HadoopMetrics2Reporter.java</file>
      <file type="M">dropwizard-metrics2.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-17 01:00:00" id="2139" opendate="2018-1-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade checkstyle</summary>
      <description>Upgrade maven-checkstyle-plugin to 3.0.0, which uses checkstyle-6.18. Fix any formatting issues.</description>
      <version>None</version>
      <fixedVersion>1.16.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectToWindowRule.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-10-5 01:00:00" id="785" opendate="2015-7-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add "Piglet", a subset of Pig Latin on top of Calcite algebra</summary>
      <description>Implement a subset of Pig Latin on top of Calcite, mapping it onto Calcite algebra (via RelBuilder) that can then be optimized and executed on any back-end.This serves several purposes: Illustrate how to implement a data language on Calcite Clear technical roadblocks so that the real Pig can be implemented on Calcite Strengthen Calcite's support for nested collections and related operations such as cogroup</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CalciteSuite.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  <bug fixdate="2015-3-10 01:00:00" id="835" opendate="2015-8-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unicode character seems to be handled incorrectly in Avatica</summary>
      <description>This was discovered with Apache Phoenix (4.4 and 4.5) while using the thin JDBC client to connect to Phoenix Query Server.This can be reproduced using a CREATE TABLE statement with non-ASCII characters in column name:create table colUnicode ("НомерТелефона" integer not null primary key, col2 varchar)When executing the above statement using the thin client and retrieving the table using either the thin or the thick client the column name shows up as Ð�Ð¾Ð¼ÐµÑ�Ð¢ÐµÐ»ÐµÑ�Ð¾Ð½Ð°. Executing the same CREATE table statement using the thick client seems to work fine, the column name shows up correctly when using either the thin or the thick client to retrieve the table.The same behavior can also be observed when when inserting non-ASCII data into a varchar column in a table.When using WireShark to observe the network traffic, we can see the non-ASCII character sent from the thin client to the server has been encoded into UTF-8.</description>
      <version>None</version>
      <fixedVersion>avatica-1.8.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">avatica.server.src.test.java.org.apache.calcite.avatica.RemoteDriverTest.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-3-10 01:00:00" id="836" opendate="2015-8-10 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Provide a way for the Avatica client to query the server versions</summary>
      <description>Currently there doesn't seem to be a way for Avatica clients to find out the Avatica RPC protocol version and versions of other server components.The use case here is to allow the Apache Phoenix clients to request the Avatica version, Phoenix version and HBase version from the Phoenix Query Server.</description>
      <version>None</version>
      <fixedVersion>avatica-1.8.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">avatica.server.src.test.java.org.apache.calcite.avatica.remote.RemoteMetaTest.java</file>
      <file type="M">avatica.server.src.test.java.org.apache.calcite.avatica.RemoteDriverTest.java</file>
      <file type="M">avatica.server.src.main.java.org.apache.calcite.avatica.jdbc.JdbcMeta.java</file>
      <file type="M">avatica.pom.xml</file>
      <file type="M">avatica.core.src.main.java.org.apache.calcite.avatica.remote.Service.java</file>
      <file type="M">avatica.core.src.main.java.org.apache.calcite.avatica.remote.ProtobufTranslationImpl.java</file>
      <file type="M">avatica.core.src.main.java.org.apache.calcite.avatica.Meta.java</file>
      <file type="M">avatica.core.src.main.java.org.apache.calcite.avatica.InternalProperty.java</file>
      <file type="M">avatica.core.src.main.java.org.apache.calcite.avatica.AvaticaJdbc41Factory.java</file>
      <file type="M">avatica.core.src.main.java.org.apache.calcite.avatica.AvaticaConnection.java</file>
      <file type="M">avatica.core.pom.xml</file>
      <file type="M">avatica.core.src.main.java.org.apache.calcite.avatica.AvaticaDatabaseMetaData.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2015-9-11 01:00:00" id="840" opendate="2015-8-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protobuf transport for Avatica</summary>
      <description>Create a transport for Avatica that uses Protobuf.</description>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.main.config.checkstyle.suppressions.xml</file>
      <file type="M">site..docs.howto.md</file>
      <file type="M">pom.xml</file>
      <file type="M">LICENSE</file>
      <file type="M">example.csv.pom.xml</file>
      <file type="M">core.pom.xml</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.util.AbstractCursor.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.remote.TypedValue.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.remote.Service.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.remote.RemoteMeta.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.remote.JsonService.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.remote.JsonHandler.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.remote.Handler.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.remote.Driver.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.remote.AvaticaRemoteConnectionProperty.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.MetaImpl.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.Meta.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.ConnectionPropertiesImpl.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.ConnectionConfigImpl.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.ConnectionConfig.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.ColumnMetaData.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.BuiltInConnectionProperty.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaUtils.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaParameter.java</file>
      <file type="M">avatica.pom.xml</file>
      <file type="M">avatica-server.src.test.java.org.apache.calcite.avatica.remote.RemoteMetaTest.java</file>
      <file type="M">avatica-server.src.test.java.org.apache.calcite.avatica.RemoteDriverTest.java</file>
      <file type="M">avatica-server.src.main.java.org.apache.calcite.avatica.server.Main.java</file>
      <file type="M">avatica-server.pom.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2015-12-30 01:00:00" id="861" opendate="2015-8-30 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix or document issue where first time user cannot use mvn compile</summary>
      <description>Having come up from last vote:While I managed to get it to compile, note that a “mvn compile” will fail with:Could not find artifact org.apache.calcite:calcite-avatica:jar:tests:1.4.0-incubating in central</description>
      <version>None</version>
      <fixedVersion>avatica-1.16.0,1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.howto.md</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2015-5-3 01:00:00" id="873" opendate="2015-9-3 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Prevent sort when ORDER BY not necessary due to equality constraints</summary>
      <description>We're working on an optimization in Phoenix to optimize away an ORDER BY when it is known based on equality expressions in the WHERE clause that it is not necessary (PHOENIX-2194). It'd be great if Calcite could do that as well.Here's a example, given the following schema:CREATE TABLE T ( K1 VARCHAR, K2 VARCHAR, K3 VARCHAR, CONSTRAINT pk PRIMARY KEY (K1, K2, K3));In the following queries, no sort is necessary:SELECT * FROM T WHERE K1='A' ORDER BY K2,K3;SELECT * FROM T WHERE K2='B' ORDER BY K1,K3;SELECT * FROM T WHERE K1='A' AND K2='B' ORDER BY K3;There are also some edge cases where a function may be known to select a prefix of the column value where it's still ok to not sort:SELECT * FROM T WHERE K1='A' AND SUBSTR(K2,1,3)='ABC' ORDER BY K2;But if another column is included in the ORDER BY after the prefixing, a sort would still be necessary:SELECT * FROM T WHERE K1='A' AND SUBSTR(K2,1,3)='ABC' ORDER BY K2,K3;</description>
      <version>None</version>
      <fixedVersion>1.17.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptRulesTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalcitePrepareImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  
  <bug fixdate="2015-10-16 01:00:00" id="923" opendate="2015-10-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Type mismatch when converting LEFT join to INNER</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexUtil.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelTestBase.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptTestBase.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterJoinRule.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2015-10-22 01:00:00" id="930" opendate="2015-10-22 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Now Calcite is a top-level project, remove references to "incubating"</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.5.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..sass..style.scss</file>
      <file type="M">site..posts.2014-06-27-release-0.8.0-incubating.md</file>
      <file type="M">site..docs.tutorial.md</file>
      <file type="M">site..docs.index.md</file>
      <file type="M">site..docs.howto.md</file>
      <file type="M">site..docs.history.md</file>
      <file type="M">site..docs.downloads.md</file>
      <file type="M">site..docs.contributing.md</file>
      <file type="M">site..docs.api.md</file>
      <file type="M">site..docs.adapter.md</file>
      <file type="M">site..data.contributors.yml</file>
      <file type="M">site..config.yml</file>
      <file type="M">site.README.md</file>
      <file type="M">site.index.html</file>
      <file type="M">site.help.index.md</file>
      <file type="M">site.doap.calcite.rdf</file>
      <file type="M">site.develop.index.md</file>
      <file type="M">README.md</file>
      <file type="M">README</file>
      <file type="M">pom.xml</file>
      <file type="M">DISCLAIMER</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonRoot.java</file>
      <file type="M">.travis.yml</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2015-12-19 01:00:00" id="984" opendate="2015-11-19 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing Avatica RPC docs: ExecuteRequest, SyncResultsRequest, OpenConnectionRequest</summary>
      <description>Went to point someone to the RPC docs for the equivalent call for execute on a prepared statement and realized the docs were missing.Giving a glance comparing the current docs to Service.java, I noticed we were missing ExecuteRequest, SyncResultsRequest, OpenConnectionRequest. Let me add some docs here.</description>
      <version>None</version>
      <fixedVersion>1.6.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.avatica.json.reference.md</file>
    </fixedFiles>
  </bug>
  
</bugrepository>