<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="CALCITE">
  
  
  
  
  
  
  
  
  
  
  <bug fixdate="2016-9-23 01:00:00" id="1329" opendate="2016-7-23 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>As part of release, generate a file containing multiple digests</summary>
      <description>Currently as part of the release we generate .md5 and .sha1 digests (as well as the pgp .asc file) and the download page http://calcite.apache.org/downloads/ references the md5 and pgp but not the sha1.Per http://www.apache.org/dev/release-signing.html#md5-security md5 is no longer secure, and sha512 is preferred over sha256. The best approach seems to be to generate multiple digests, and generate new ones as best practices change. I think we should generate checksum file with a .mds suffix as follows:$ gpg --print-mds apache-calcite-1.8.0-src.tar.gz | tee apache-calcite-1.8.0-src.tar.gz.mdsapache-calcite-1.8.0-src.tar.gz: MD5 = B2 5D 0C 14 8B FE 20 0C 16 47 13 96 D9 2E C4 6Dapache-calcite-1.8.0-src.tar.gz: SHA1 = 4246 C20C BAA0 6534 B628 ADCB 1D5E 3AF1 4DE4 A864apache-calcite-1.8.0-src.tar.gz: RMD160 = ED29 BD56 D430 AD30 EB17 67CB 34C6 FCB0 47DB 58C5apache-calcite-1.8.0-src.tar.gz: SHA224 = 40333911 B0852673 08009F4B 747C88AD B9996629 EE9BC16E 4492F367apache-calcite-1.8.0-src.tar.gz: SHA256 = E5C1DD83 14146A58 3AD44BAF 40F19F4C D39A95FC E438231D 186F335B C86D6551apache-calcite-1.8.0-src.tar.gz: SHA384 = B2619FD2 E17C1CFB 199AE44B D15E79CA DFAC6AFF D2F00D28 851D2DA2 F07B210E F7349BED 44524A16 4990B79D A36D2B29apache-calcite-1.8.0-src.tar.gz: SHA512 = 18CFCA89 53874D31 80C60C6C 8D89652D 36AA1DAC 4007E113 02BCCDC3 E7465182 78B86071 431195D6 940773A7 F5314B09 5749791B 55F82E25 60C89735 29B4B468Apache Ranger already does this; see http://ranger.apache.org/download.html.We would no longer generate .md5 and .sha1 files, but would continue to generate the .asc file.</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.howto.md</file>
      <file type="M">site.downloads.index.md</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2016-7-25 01:00:00" id="1330" opendate="2016-7-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>DB2 does not support character sets in data type</summary>
      <description>I have a very small db2 database, and it does not support "varchar(100) CHARACTER SET `ISO-8859-1`". db2 =&gt; select TS, cast(TS as varchar(100)) from mydb.mytimestampTS 2-------------------------- ----------------------------------------------------------------------------------------------------2016-07-18-01.02.03.000000 2016-07-18-01.02.03.0000001 record(s) selected.db2 =&gt; select TS, cast(TS as varchar(100) CHARACTER SET "ISO-8859-1") from mydb.mytimestampSQL0104N An unexpected token "CHARACTER SET "ISO-8859-1"" was found following"t(TS as varchar(100)". Expected tokens may include: "&lt;space&gt;".SQLSTATE=42601</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDialect.java</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2016-8-5 01:00:00" id="1346" opendate="2016-8-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Invalid nested window aggregate query with alias</summary>
      <description>The following query should fail but does not!SELECT max(sum(sal)) OVER (partition by deptno) AS maxSalFROM empWHERE deptno &gt; 10;</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorImpl.java</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2016-9-13 01:00:00" id="1374" opendate="2016-9-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support operator "!=" as an alternative to "&lt;&gt;"</summary>
      <description/>
      <version>None</version>
      <fixedVersion>1.10.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlAdvisorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.DefaultSqlTestFactory.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlConformance.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParser.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlAbstractParserImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalcitePrepareImpl.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
    </fixedFiles>
  </bug>
</bugrepository>