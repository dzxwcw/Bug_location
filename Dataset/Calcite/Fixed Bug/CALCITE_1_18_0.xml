<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CALCITE">
  <bug id="2620" opendate="2018-10-11 00:00:00" fixdate="2018-10-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Simplify "coalesce(null,x)" to "x"</summary>
      <description>"coalesce(x0,x1,.....)" can be simplified if any of "xi" is null literal.e.g.  "coalesce(null,x)" can simplify to "x", "coalesce(x,null,y)" can simplify to "coalesce(x,y)"</description>
      <version>1.18.0</version>
      <fixedVersion>1.18.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexProgramTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSimplify.java</file>
    </fixedFiles>
  </bug>
  <bug id="2623" opendate="2018-10-12 00:00:00" fixdate="2018-1-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add specific translation for POSITION, MOD and set operators in BigQuery and Hive SQL dialects</summary>
      <description>Owing to the syntactical differences between Calcite SQL and certain other Dialects, emulation for SqlNode unparsing needs to be added based on the Dialect in RelToSqlConcverter.Saw some code in PostgreSqlDialect which is already doing this.Changes in other Dialects can follow suit.</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlKind.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDialectFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlPositionFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.HiveSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.BigQuerySqlDialect.java</file>
    </fixedFiles>
  </bug>
  <bug id="2755" opendate="2018-12-26 00:00:00" fixdate="2018-1-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>expose document _id field when querying ElasticSearch</summary>
      <description>Elastic exposes _id field for each document (think unique doc ID).Expose if it is explicitly listed in projection: select _MAP['_id'], _MAP['foo'] from elastic -- availableselect * from elastic -- not available</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.Projection2Test.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchToEnumerableConverter.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchTable.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchRules.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchRel.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchProject.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchMethod.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchJson.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchEnumerators.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchConstants.java</file>
    </fixedFiles>
  </bug>
  <bug id="2762" opendate="2019-1-3 00:00:00" fixdate="2019-1-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Quidem env variable is always false if its name is separated by dot(".")</summary>
      <description></description>
      <version>1.18.0</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.QuidemTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2765" opendate="2019-1-3 00:00:00" fixdate="2019-1-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bump Janino compiler dependency to 3.0.11</summary>
      <description>Bump the Janino compiler, which fixes minor issues and some NPE exceptions: http://janino-compiler.github.io/janino/changelog.html</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2779" opendate="2019-1-8 00:00:00" fixdate="2019-1-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove References to StringBuffer</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestCommandScript.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexProgram.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="2782" opendate="2019-1-10 00:00:00" fixdate="2019-1-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use server time zone by default if time zone is not specified in the user connection string</summary>
      <description>The default value for BuiltInConnectionProperty.TIME_ZONE is null. If the timezone is not set in the properties then the null is returned and a NullPointerException is thrown when PeriodGranularity initializes.Caused by: java.lang.RuntimeException: Error while applying rule DruidProjectRule, args [rel#303:LogicalProject.NONE.[](input=RelSubset#145,EXPR$0=EXTRACT(FLAG(DAY), $0)), rel#213:DruidQuery.BINDABLE.[](table=[adhoc, bach.sign_ctrl_f],intervals=[2019-01-08T00:00:00.000Z/3000-01-01T00:00:00.000Z])]    at org.apache.calcite.plan.volcano.VolcanoRuleCall.onMatch(VolcanoRuleCall.java:236)    at org.apache.calcite.plan.volcano.VolcanoPlanner.findBestExp(VolcanoPlanner.java:641)    at org.apache.calcite.tools.Programs.lambda$standard$3(Programs.java:298)    at org.apache.calcite.tools.Programs$SequenceProgram.run(Programs.java:358)    at org.apache.calcite.prepare.Prepare.optimize(Prepare.java:189)    at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:320)    at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:231)    at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:772)    at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:636)    at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:606)    at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:229)    at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:550)    at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:675)    at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156)    ... 14 moreCaused by: java.lang.NullPointerException    at java.util.Objects.requireNonNull(Unknown Source)    at org.apache.calcite.adapter.druid.Granularities$PeriodGranularity.&lt;init&gt;(Granularities.java:93)    at org.apache.calcite.adapter.druid.Granularities$PeriodGranularity.&lt;init&gt;(Granularities.java:85)    at org.apache.calcite.adapter.druid.Granularities.createGranularity(Granularities.java:57)    at org.apache.calcite.adapter.druid.DruidDateTimeUtils.extractGranularity(DruidDateTimeUtils.java:331)    at org.apache.calcite.adapter.druid.DruidQuery.toDruidColumn(DruidQuery.java:273)    at org.apache.calcite.adapter.druid.DruidQuery.computeProjectAsScan(DruidQuery.java:763)    at org.apache.calcite.adapter.druid.DruidRules$DruidProjectRule.onMatch(DruidRules.java:298)    at org.apache.calcite.plan.volcano.VolcanoRuleCall.onMatch(VolcanoRuleCall.java:212)    ... 27 moreIn tests, org.apache.calcite.test.CalciteAssert#assertQuery sets the timezone to UTC hiding the problem. When I issue queries from DBeaver it fails because of the NPE</description>
      <version>1.18.0</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionProperty.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionConfigImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionConfig.java</file>
    </fixedFiles>
  </bug>
  <bug id="2783" opendate="2019-1-10 00:00:00" fixdate="2019-1-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>"COALESCE(s, TRUE) = TRUE" and "(s OR s IS UNKNOWN) = TRUE" causes NullPointerException</summary>
      <description>This first appears in 1.18, and is introduced by CALCITE-1413.I have a table "table" with column "f0" of nullable booleans. Table contains the following values:truefalsenullWorking query:SELECT coalesce(f0, true) FROM table;truefalsetrueBroken query:SELECT coalesce(f0, true) = true FROM table;Caused by: java.lang.NullPointerException at org.apache.calcite.runtime.SqlFunctions.cannotConvert(SqlFunctions.java:1457) at org.apache.calcite.runtime.SqlFunctions.toBoolean(SqlFunctions.java:1480) at SC.eval0(Unknown Source)Broken generated code:{ final Boolean inp0_ = ((Row) c.element()).getBoolean(0); c.output(Row.withSchema(outputSchema).addValue((SqlFunctions.isTrue(inp0_) || inp0_ == null ? Boolean.TRUE : inp0_ == null ? (Boolean) null : Boolean.FALSE) == null ? (Boolean) null : Boolean.valueOf(SqlFunctions.toBoolean(inp0_) || inp0_ == null)).build());}</description>
      <version>1.18.0</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.sql.conditions.iq</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="2791" opendate="2019-1-21 00:00:00" fixdate="2019-3-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add the JSON_TYPE function</summary>
      <description>The data in json can be =, &lt;, &lt;=, &gt;, &gt;=, &lt;&gt;,! =, and &lt;=&gt;. But the data types in json can be diverse, so when you compare different types, you have a priority, and the high priority is greater than the low priority (you can view the types with the JSON_TYPE() function). The priorities are as follows: BOOLEAN,ARRAY,OBJECT,STRING,INTEGE,DOUBLE,NULLExample Sql::{"a":[10,true]}SELECT JSON_TYPE(v) AS c1 ,JSON_TYPE(JSON_VALUE(v, 'lax $.b' ERROR ON ERROR)) AS c2 ,JSON_TYPE(JSON_VALUE(v, 'strict $.a&amp;#91;0&amp;#93;' ERROR ON ERROR)) AS c3 ,JSON_TYPE(JSON_VALUE(v, 'strict $.a&amp;#91;1&amp;#93;' ERROR ON ERROR)) AS c4 FROM (VALUES ('{"a": [10, true],"b": "[10, true]"}')) AS t(v) limit 10;Result:c1 c2 c3 c4 ======= ======= ======= ======= OBJECT ARRAY INTEGER BOOLEAN</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">server.src.main.codegen.config.fmpp</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlJsonFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.test.codegen.config.fmpp</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
      <file type="M">core.src.main.codegen.config.fmpp</file>
      <file type="M">babel.src.main.codegen.config.fmpp</file>
    </fixedFiles>
  </bug>
  <bug id="2792" opendate="2019-1-21 00:00:00" fixdate="2019-10-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Stackoverflow while evaluating filter with large number of OR conditions</summary>
      <description>As a workaround for CALCITE-2696 we're currently using OR conditions for filtering values, e.g. instead of... WHERE value2 IN (1,2,3)... WHERE value2=1 OR value2=2 OR value2=3We're now hitting a StackOverflowError because the number of values in the filter grows quite large (i.e. 1000-3000) and obviously the evaluation recursive:java.lang.StackOverflowError at java.util.AbstractCollection.toArray(AbstractCollection.java:176) at org.apache.calcite.sql.util.SqlShuttle$CallCopyingArgHandler.&lt;init&gt;(SqlShuttle.java:111) at org.apache.calcite.sql.validate.SqlValidatorImpl$Expander.visitScoped(SqlValidatorImpl.java:5699) at org.apache.calcite.sql.validate.SqlScopedShuttle.visit(SqlScopedShuttle.java:50) at org.apache.calcite.sql.validate.SqlScopedShuttle.visit(SqlScopedShuttle.java:33) at org.apache.calcite.sql.SqlCall.accept(SqlCall.java:138) at org.apache.calcite.sql.util.SqlShuttle$CallCopyingArgHandler.visitChild(SqlShuttle.java:134) at org.apache.calcite.sql.util.SqlShuttle$CallCopyingArgHandler.visitChild(SqlShuttle.java:101) at org.apache.calcite.sql.SqlOperator.acceptCall(SqlOperator.java:865) at org.apache.calcite.sql.validate.SqlValidatorImpl$Expander.visitScoped(SqlValidatorImpl.java:5701) at org.apache.calcite.sql.validate.SqlScopedShuttle.visit(SqlScopedShuttle.java:50) at org.apache.calcite.sql.validate.SqlScopedShuttle.visit(SqlScopedShuttle.java:33) at org.apache.calcite.sql.SqlCall.accept(SqlCall.java:138) at org.apache.calcite.sql.util.SqlShuttle$CallCopyingArgHandler.visitChild(SqlShuttle.java:134) at org.apache.calcite.sql.util.SqlShuttle$CallCopyingArgHandler.visitChild(SqlShuttle.java:101) at org.apache.calcite.sql.SqlOperator.acceptCall(SqlOperator.java:865) at org.apache.calcite.sql.validate.SqlValidatorImpl$Expander.visitScoped(SqlValidatorImpl.java:5701) at org.apache.calcite.sql.validate.SqlScopedShuttle.visit(SqlScopedShuttle.java:50) at org.apache.calcite.sql.validate.SqlScopedShuttle.visit(SqlScopedShuttle.java:33) at org.apache.calcite.sql.SqlCall.accept(SqlCall.java:138)...We tried to increase the stack size of the virtual machine (-Xss8000k) but this leads to a problem with Janino:java.sql.SQLException: exception while executing query: Compiling "Buzz": Code of method "execute(Lorg/apache/calcite/interpreter/Context;[Ljava/lang/Object;)V" of class "Buzz" grows beyond 64 KB at org.apache.calcite.avatica.Helper.createException(Helper.java:56) at org.apache.calcite.avatica.Helper.createException(Helper.java:41) at org.apache.calcite.avatica.AvaticaConnection.executeQueryInternal(AvaticaConnection.java:577) at org.apache.calcite.avatica.AvaticaPreparedStatement.executeQuery(AvaticaPreparedStatement.java:137) at org.apache.calcite.issue.StackOverflowTest.stackOverflow(StackOverflowTest.java:45) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)Caused by: org.codehaus.janino.InternalCompilerException: Compiling "Buzz": Code of method "execute(Lorg/apache/calcite/interpreter/Context;[Ljava/lang/Object;)V" of class "Buzz" grows beyond 64 KB at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:382) at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:237) at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:465) at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:313) at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:235) at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:207) at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:50) at org.codehaus.janino.ClassBodyEvaluator.createInstance(ClassBodyEvaluator.java:347) at org.apache.calcite.interpreter.JaninoRexCompiler.getScalar(JaninoRexCompiler.java:176) at org.apache.calcite.interpreter.JaninoRexCompiler.baz(JaninoRexCompiler.java:153) at org.apache.calcite.interpreter.JaninoRexCompiler.compile(JaninoRexCompiler.java:111) at org.apache.calcite.interpreter.Interpreter$CompilerImpl.compile(Interpreter.java:487) at org.apache.calcite.interpreter.Nodes$CoreCompiler.compile(Nodes.java:42) at org.apache.calcite.interpreter.TableScanNode.createEnumerable(TableScanNode.java:266) at org.apache.calcite.interpreter.TableScanNode.createProjectableFilterable(TableScanNode.java:233) at org.apache.calcite.interpreter.TableScanNode.create(TableScanNode.java:81) at org.apache.calcite.interpreter.Nodes$CoreCompiler.visit(Nodes.java:69) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.calcite.util.ReflectUtil.invokeVisitorInternal(ReflectUtil.java:257) at org.apache.calcite.util.ReflectUtil.invokeVisitor(ReflectUtil.java:214) at org.apache.calcite.util.ReflectUtil$1.invokeVisitor(ReflectUtil.java:464) at org.apache.calcite.interpreter.Interpreter$CompilerImpl.visit(Interpreter.java:451) at org.apache.calcite.interpreter.Nodes$CoreCompiler.visit(Nodes.java:42) at org.apache.calcite.interpreter.Interpreter$CompilerImpl.visitRoot(Interpreter.java:405) at org.apache.calcite.interpreter.Interpreter.&lt;init&gt;(Interpreter.java:88) at Baz.bind(Unknown Source) at org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature.enumerable(CalcitePrepare.java:355) at org.apache.calcite.jdbc.CalciteConnectionImpl.enumerable(CalciteConnectionImpl.java:309) at org.apache.calcite.jdbc.CalciteMetaImpl._createIterable(CalciteMetaImpl.java:506) at org.apache.calcite.jdbc.CalciteMetaImpl.createIterable(CalciteMetaImpl.java:497) at org.apache.calcite.avatica.AvaticaResultSet.execute(AvaticaResultSet.java:182) at org.apache.calcite.jdbc.CalciteResultSet.execute(CalciteResultSet.java:64) at org.apache.calcite.jdbc.CalciteResultSet.execute(CalciteResultSet.java:43) at org.apache.calcite.avatica.AvaticaConnection.executeQueryInternal(AvaticaConnection.java:573) ... 26 moreCaused by: org.codehaus.janino.InternalCompilerException: Code of method "execute(Lorg/apache/calcite/interpreter/Context;[Ljava/lang/Object;)V" of class "Buzz" grows beyond 64 KB at org.codehaus.janino.CodeContext.makeSpace(CodeContext.java:1048) at org.codehaus.janino.CodeContext.write(CodeContext.java:925) at org.codehaus.janino.UnitCompiler.writeByte(UnitCompiler.java:12275) at org.codehaus.janino.UnitCompiler.load(UnitCompiler.java:11936) at org.codehaus.janino.UnitCompiler.load(UnitCompiler.java:11926) at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:4465) at org.codehaus.janino.UnitCompiler.access$8000(UnitCompiler.java:215) at org.codehaus.janino.UnitCompiler$16$1.visitLocalVariableAccess(UnitCompiler.java:4408) at org.codehaus.janino.UnitCompiler$16$1.visitLocalVariableAccess(UnitCompiler.java:4400) at org.codehaus.janino.Java$LocalVariableAccess.accept(Java.java:4274) at org.codehaus.janino.UnitCompiler$16.visitLvalue(UnitCompiler.java:4400) at org.codehaus.janino.UnitCompiler$16.visitLvalue(UnitCompiler.java:4396) at org.codehaus.janino.Java$Lvalue.accept(Java.java:4148) at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:4396) at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:4461) at org.codehaus.janino.UnitCompiler.access$7500(UnitCompiler.java:215) at org.codehaus.janino.UnitCompiler$16$1.visitAmbiguousName(UnitCompiler.java:4403) at org.codehaus.janino.UnitCompiler$16$1.visitAmbiguousName(UnitCompiler.java:4400) at org.codehaus.janino.Java$AmbiguousName.accept(Java.java:4224) at org.codehaus.janino.UnitCompiler$16.visitLvalue(UnitCompiler.java:4400) at org.codehaus.janino.UnitCompiler$16.visitLvalue(UnitCompiler.java:4396) at org.codehaus.janino.Java$Lvalue.accept(Java.java:4148) at org.codehaus.janino.UnitCompiler.compileGet(UnitCompiler.java:4396) at org.codehaus.janino.UnitCompiler.compileGetValue(UnitCompiler.java:5662) at org.codehaus.janino.UnitCompiler.compileBoolean2(UnitCompiler.java:4120) at org.codehaus.janino.UnitCompiler.access$6600(UnitCompiler.java:215) at org.codehaus.janino.UnitCompiler$14.visitBinaryOperation(UnitCompiler.java:3957) at org.codehaus.janino.UnitCompiler$14.visitBinaryOperation(UnitCompiler.java:3935) at org.codehaus.janino.Java$BinaryOperation.accept(Java.java:4864) at org.codehaus.janino.UnitCompiler.compileBoolean(UnitCompiler.java:3935) at org.codehaus.janino.UnitCompiler.compileBoolean2(UnitCompiler.java:4078) at org.codehaus.janino.UnitCompiler.access$6600(UnitCompiler.java:215) at org.codehaus.janino.UnitCompiler$14.visitBinaryOperation(UnitCompiler.java:3957) at org.codehaus.janino.UnitCompiler$14.visitBinaryOperation(UnitCompiler.java:3935) at org.codehaus.janino.Java$BinaryOperation.accept(Java.java:4864)</description>
      <version>1.18.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcAdapterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.SqlImplementor.java</file>
    </fixedFiles>
  </bug>
  <bug id="2796" opendate="2019-1-22 00:00:00" fixdate="2019-3-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JDBC adapter should convert "GROUP BY ROLLUP(x, y)" to "GROUP BY x, y WITH ROLLUP" for MySQL 5</summary>
      <description>The JDBC adapter currently pushes down ROLLUP to all dialects. MySQL supports the ROLLUP and CUBE functions but only in version 8 and later. MySQL 5 has a similar but less powerful feature "GROUP BY ... WITH ROLLUP", but the JDBC adapter should use it if possible. For example,SELECT x, yFROM tGROUP BY ROLLUP(x, y)should be pushed down to MySQL 5 asSELECT x, yFROM tGROUP BY x, y WITH ROLLUP"GROUP BY ... WITH ROLLUP" cannot be combined with "ORDER BY", but nevertheless guarantees output order, and therefore the JDBC adpater should just remove an ORDER BY clause if it is satisfied. For example,SELECT x, yFROM tGROUP BY ROLLUP(x, y)ORDER BY x, yshould be pushed down to MySQL 5 asSELECT x, yFROM tGROUP BY x, y WITH ROLLUPNote that MySQL 5 supports explicit ASC and DESC keywords in GROUP BY to control sort direction (e.g. GROUP BY x DESC, y ASC WITH ROLLUP) but I cannot see a reason to use it, because if there is no ROLLUP function we can continue to use ORDER BY. should convert "GROUP BY ROLLUP(x, y)" to "GROUP BY x, y WITH ROLLUP" for MySQL 5.MySQL 5 does not support CUBE, but note that ROLLUP with one argument is equivalent to CUBE with one argument; therefore we should convert "GROUP BY CUBE&amp;#40;x)" to "GROUP BY x WITH ROLLUP".</description>
      <version>1.18.0</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeRules.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.UtilTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.InduceGroupingTypeTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Util.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RelBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.Programs.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlRollupOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.MysqlSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelFieldCollation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.RelToSqlConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Aggregate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="2797" opendate="2019-1-22 00:00:00" fixdate="2019-3-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support APPROX_COUNT_DISTINCT aggregate function in ElasticSearch</summary>
      <description>Use native elastic cardinality aggregation for APPROX_COUNT_DISTINCT</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.ElasticSearchAdapterTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.AggregationTest.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchTableScan.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchTable.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchAggregate.java</file>
    </fixedFiles>
  </bug>
  <bug id="2798" opendate="2019-1-23 00:00:00" fixdate="2019-1-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Optimizer should remove ORDER BY in sub-query, provided it has no LIMIT or OFFSET</summary>
      <description>The following SQL performs sort twice, however inner sort can be eliminatedselect * from ( select * from "emps" order by "emps"."deptno") order by 1 descThe same goes for (window calculation will sort on its own)select row_number() over (order by "emps"."deptno") from ( select * from "emps" order by "emps"."deptno" desc)The same goes for SetOp (union, minus):select * from ( select * from "emps" order by "emps"."deptno") union select * from ( select * from "emps" order by "emps"."deptno" desc)There might be other cases like that (e.g. Aggregate, Join, Exchange, SortExchange)</description>
      <version>1.18.0</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.tools.PlannerTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlToRelConverter.java</file>
    </fixedFiles>
  </bug>
  <bug id="2802" opendate="2019-1-24 00:00:00" fixdate="2019-1-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Druid adapter: Usage of range conditions like "2010-01-01 &lt; timestamp" leads to incorrect results</summary>
      <description>Timestamp range conditions when the timestamp is on left hand side work correctly; however when the literal is on the left hand side results are missing. @Test public void testRangeCalc() { final Fixture2 f = new Fixture2(); checkDateRange(f, f.and( f.le(f.timestampLiteral(2011, Calendar.JANUARY, 1), f.t), f.le(f.t, f.timestampLiteral(2012, Calendar.FEBRUARY, 2))), is("[2011-01-01T00:00:00.000Z/2012-02-02T00:00:00.001Z]")); }Fail:java.lang.AssertionError: Expected: is "[2011-01-01T00:00:00.000Z/2012-02-02T00:00:00.001Z]" but: was "[1900-01-01T00:00:00.000Z/2011-01-01T00:00:00.001Z]"</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">druid.src.test.java.org.apache.calcite.test.DruidDateRangeRulesTest.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidDateTimeUtils.java</file>
    </fixedFiles>
  </bug>
  <bug id="2804" opendate="2019-1-25 00:00:00" fixdate="2019-6-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Druid adapter: Cast does not work when casting to timestamp</summary>
      <description>When trying to execute a simple statement of select cast("__time" as timestamp) from my_datasource limit 10;the query fails with a 500 error Caused by: java.io.IOException: Server returned HTTP response code: 500 for URL: http://localhost:58082/druid/v2/?prettyat sun.net.www.protocol.http.HttpURLConnection.getInputStream0(Unknown Source)at sun.net.www.protocol.http.HttpURLConnection.getInputStream(Unknown Source)at org.apache.calcite.runtime.HttpUtils.executeMethod(HttpUtils.java:137)at org.apache.calcite.runtime.HttpUtils.post(HttpUtils.java:110)at org.apache.calcite.adapter.druid.DruidConnectionImpl.request(DruidConnectionImpl.java:109)... 29 morebecause the JSON generated is incorrect. Here is the generated JSON  { "queryType": "scan", "dataSource": "my_datasource", "intervals": [ "1900-01-01T00:00:00.000Z/3000-01-01T00:00:00.000Z" ], "virtualColumns": [ { "type": "expression", "name": "vc", "expression": "timestamp_parse(timestamp_format(\"__time\",'yyyy-MM-dd\\u0027T\\u0027HH:mm:ss.SSS\\u0027Z\\u0027','America/New_York'),'','UTC')", "outputType": "LONG" } ], "columns": [ "vc" ], "resultFormat": "compactedList", "limit": 10}There are two problems. First, the "__time" dimension is not formatted correctly in timestamp_format. The escaped quotes need to be removed.Also, the call to timestamp_parse is incorrect. If a timezone is going to be provided then a date time format needs to be provided as well. Currently, it is only empty string  </description>
      <version>1.18.0</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidSqlCastConverter.java</file>
      <file type="M">druid.src.test.java.org.apache.calcite.test.DruidAdapterIT.java</file>
    </fixedFiles>
  </bug>
  <bug id="2805" opendate="2019-1-25 00:00:00" fixdate="2019-1-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Can&amp;#39;t specify port with Cassandra adapter in connection string</summary>
      <description>Since the Cassandra adapter currently expects the port to be numeric (which it is when parsed from JSON) it fails when specifying the port in the connection string since all values are represented as strings.</description>
      <version>1.18.0</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraSchemaFactory.java</file>
    </fixedFiles>
  </bug>
  <bug id="2806" opendate="2019-1-25 00:00:00" fixdate="2019-1-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cassandra adapter doesn&amp;#39;t allow uppercase characters in table names</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">cassandra.src.test.resources.twissandra.cql</file>
      <file type="M">cassandra.src.test.java.org.apache.calcite.test.CassandraAdapterTest.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraSchema.java</file>
    </fixedFiles>
  </bug>
  <bug id="2808" opendate="2019-1-26 00:00:00" fixdate="2019-3-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add the JSON_LENGTH function</summary>
      <description>``` JSON_LENGTH(*json_doc*&amp;#91;, *path*&amp;#93;) ```Returns the length of a JSON document, or, if a path argument is given, the length of the value within the document identified by the path. Returns `NULL` if any argument is `NULL` or the path argument does not identify a value in the document. An error occurs if the json_doc argument is not a valid JSON document or the path argument is not a valid path expression or contains a {*} or }}{{`` wildcard.The length of a document is determined as follows: The length of a scalar is 1. The length of an array is the number of array elements. The length of an object is the number of object members. The length does not count the length of nested arrays or objects.Example Sql:// code placeholderSELECT JSON_LENGTH(v) AS c1,JSON_LENGTH(v, 'lax $.a') AS c2,JSON_LENGTH(v, 'strict $.a[0]') AS c3,JSON_LENGTH(v, 'strict $.a[1]') AS c4FROM (VALUES ('{"a": [10, true]}')) AS t(v)LIMIT 10;Result:c1c2c3c41211 </description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">server.src.main.codegen.config.fmpp</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlJsonFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.test.codegen.config.fmpp</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonApiCommonSyntaxOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
      <file type="M">core.src.main.codegen.config.fmpp</file>
      <file type="M">babel.src.main.codegen.config.fmpp</file>
    </fixedFiles>
  </bug>
  <bug id="2811" opendate="2019-1-26 00:00:00" fixdate="2019-1-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update version of Cassandra driver</summary>
      <description></description>
      <version>1.18.0</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="282" opendate="2014-6-18 00:00:00" fixdate="2014-12-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add {fn QUARTER(date)} function</summary>
      <description>Is it possible to support {fn QUARTER(date)} in next release? YoY analysis need this function. ---------------- Imported from GitHub ----------------Url: https://github.com/julianhyde/optiq/issues/282Created by: jiangxuchinaLabels: Created at: Tue May 13 09:55:45 CEST 2014State: open</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.StandardConvertletTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="2820" opendate="2019-2-4 00:00:00" fixdate="2019-4-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Avoid reducing certain aggregate functions when it is not necessary</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptRulesTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateReduceFunctionsRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="2822" opendate="2019-2-4 00:00:00" fixdate="2019-6-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow multi-join rules to be used with any project/filter</summary>
      <description>Allow multi join rules to be used with any subclass of Project or Filter instead of having just LogicalProject and LogicalFilter</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptRulesTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlToRelConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectMultiJoinMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.MultiJoinProjectTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterMultiJoinMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="2838" opendate="2019-2-11 00:00:00" fixdate="2019-2-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Simplification: Remove redundant IS TRUE checks</summary>
      <description>In case simplifcation is already processing in unknownAsFalse mode, expr IS TRUE is redundant - and may just prevent further optimizations from happening: @Test public void testRedundantIsTrue() { // in case of unknownAsFalse // x is TRUE &lt;=&gt; x checkSimplify3(isTrue(vBool(1)), "IS TRUE(?0.bool1)", "?0.bool1", "IS TRUE(?0.bool1)"); }there are some further possibilities(unknownAsTrue) x is NOT FALSE &lt;=&gt; x(unknownAsTrue) x is FALSE &lt;=&gt; not x</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.sql.sub-query.iq</file>
      <file type="M">core.src.test.resources.sql.blank.iq</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexProgramTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptRulesTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.fuzzer.RexProgramFuzzyTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSimplify.java</file>
    </fixedFiles>
  </bug>
  <bug id="2840" opendate="2019-2-12 00:00:00" fixdate="2019-2-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>RexNode simplification logic should use more specific UnknownAs modes</summary>
      <description>Some parts of this was already working in 1.17 ; but 1.18 turned out to be a more conservative in this sense.</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexProgramTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexUnknownAs.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSimplify.java</file>
    </fixedFiles>
  </bug>
  <bug id="2841" opendate="2019-2-12 00:00:00" fixdate="2019-2-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Simplification: push negation into Case expression</summary>
      <description>Why would this be usefull? right now a boolean CASE expressions are translated into AND/ORs in most cases ; "disjunction of conjuctions" AND/OR simplification could "push" the NOT into them; but only after the CASE conversion; so the expression becames a "conjunction of disjunctions" and all the other simplification rules are working hard to restore order.... if the push of NOT would happen earlier it would be better because it could address complex cases better @Test public void testNotIntoCase() { checkSimplify( not( case_( isTrue(vBool()), vBool(1), vBool(2))), "CASE(IS TRUE(?0.bool0), NOT(?0.bool1), NOT(?0.bool2))"); }actually NOT right now stops the simplification recursion so it would be best to also enable that as well; in case NOT is not is not pushed/handled - unknownAs need to be negated. @Test public void testNotRecursion() { checkSimplify( not(coalesce(nullBool, trueLiteral)), "false"); }</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.sql.sub-query.iq</file>
      <file type="M">core.src.test.resources.sql.some.iq</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexProgramTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSimplify.java</file>
    </fixedFiles>
  </bug>
  <bug id="2848" opendate="2019-2-14 00:00:00" fixdate="2019-2-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Simplifying a case statement&amp;#39;s first branch should ignore its safety</summary>
      <description>Example: a very simple CASE which is not get rewritten because the first condition branch contains an unknown UDFCASE WHEN to_date('2001-11-11') = '2000' THEN true ELSE falseENDThis expression right now retained as is; because the "to_date" was an unknown UDF; but since the first branch of a CASE is always evaluated and that could unlock the rewrite of this case to it's boolean form.</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexProgramTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSimplify.java</file>
    </fixedFiles>
  </bug>
  <bug id="2850" opendate="2019-2-15 00:00:00" fixdate="2019-2-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Geode adapter: support boolean column as filter operand</summary>
      <description>The geode adapter currently only supports filtering by comparisions.After CALCITE-2839 the simplifier may remove the comparision in case the operands are booleans. x=true =&gt; x)</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.GeodeAllDataTypesTest.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeRules.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeFilter.java</file>
    </fixedFiles>
  </bug>
  <bug id="2852" opendate="2019-2-15 00:00:00" fixdate="2019-2-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>RexNode simplification does not traverse unknown functions</summary>
      <description>Currently simplification concentrates on basic constructs (and/or/=/...), but if it encounters an UDF which is not known; the recursion is stopped.For example the following expression is not simplified: @Test public void testSimplifyRecurseIntoArithmetics() { checkSimplify( plus(literal(1), case_( falseLiteral, literal(1), trueLiteral, literal(2), literal(3))), "+(1, 2)"); }</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexProgramTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSimplify.java</file>
    </fixedFiles>
  </bug>
  <bug id="2859" opendate="2019-2-21 00:00:00" fixdate="2019-2-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Centralize Calcite system properties</summary>
      <description>Currently there are various system (jvm) properties exploited by Calcite which are distributed all over the codebase. System properties are part of the public API so they should be easily accessible and well documented. The goal is to centralize all system properties with the "calcite" prefix under a common class/interface/enum.</description>
      <version>1.18.0</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">mongodb.src.test.java.org.apache.calcite.test.MongoAssertions.java</file>
      <file type="M">splunk.src.test.java.org.apache.calcite.test.SplunkAdapterTest.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkTableScan.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.SparkHandlerImpl.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.JdbcToSparkConverter.java</file>
      <file type="M">plus.src.test.java.org.apache.calcite.materialize.TpcdsLatticeSuggesterTest.java</file>
      <file type="M">plus.src.test.java.org.apache.calcite.adapter.tpch.TpchTest.java</file>
      <file type="M">plus.src.test.java.org.apache.calcite.adapter.tpcds.TpcdsTest.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraToEnumerableConverter.java</file>
      <file type="M">cassandra.src.test.java.org.apache.calcite.test.CassandraAdapterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableAggregate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableInterpretable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableWindow.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Interpreter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.JaninoRexCompiler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.Lattice.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptMaterialization.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptMaterializations.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.SubstitutionVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoPlanner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalciteMaterializer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalcitePrepareImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.profile.ProfilerImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Filter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalCorrelate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.JaninoRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateStarTableRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.MultiJoinOptimizeBushyRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexExecutorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCountAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParserUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlCollation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.Programs.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.javac.JaninoCompiler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.PartiallyOrderedSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.SaffronProperties.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Util.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.jdbc.CalciteRemoteDriverTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.volcano.TraitPropagationTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CalciteAssert.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.FoodmartTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MultiJdbcSchemaJoinTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelMetadataTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexProgramTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.tools.FrameworksTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.tools.PlannerTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.PartiallyOrderedSetTest.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidConnectionImpl.java</file>
      <file type="M">druid.src.test.java.org.apache.calcite.test.DruidAdapterIT.java</file>
      <file type="M">druid.src.test.java.org.apache.calcite.test.DruidAdapterIT2.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoToEnumerableConverter.java</file>
    </fixedFiles>
  </bug>
  <bug id="2863" opendate="2019-2-23 00:00:00" fixdate="2019-2-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ElasticSearch adapter. Query fails when filtering directly on _MAP</summary>
      <description>The following query fails:select * from elastic where _MAP['state'] = 'NY' order by _MAP['city']</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.Projection2Test.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchJson.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchEnumerators.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchConstants.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.ElasticSearchAdapterTest.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchProject.java</file>
    </fixedFiles>
  </bug>
  <bug id="2864" opendate="2019-2-25 00:00:00" fixdate="2019-2-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add the JSON_DEPTH function</summary>
      <description>Returns the maximum depth of a JSON document. Returns NULL if the argument is NULL. An error occurs if the argument is not a valid JSON document.An empty array, empty object, or scalar value has depth 1. A nonempty array containing only elements of depth 1 or nonempty object containing only member values of depth 1 has depth 2. Otherwise, a JSON document has depth greater than 2. Example Sql:SELECT JSON_DEPTH(v) AS c1 ,JSON_DEPTH(JSON_VALUE(v, 'lax $.b' ERROR ON ERROR)) AS c2 ,JSON_DEPTH(JSON_VALUE(v, 'strict $.a&amp;#91;0&amp;#93;' ERROR ON ERROR)) AS c3 ,JSON_DEPTH(JSON_VALUE(v, 'strict $.a&amp;#91;1&amp;#93;' ERROR ON ERROR)) AS c4 FROM (VALUES ('{"a": [10, true],"b": "[10, true]"}')) AS t(v) limit 10;Result:c1 c2 c3 c4 == == == ==  3   2   1   1</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">server.src.main.codegen.config.fmpp</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlJsonFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.test.codegen.config.fmpp</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
      <file type="M">core.src.main.codegen.config.fmpp</file>
      <file type="M">babel.src.main.codegen.config.fmpp</file>
      <file type="M">core.custom-schema-model.json</file>
    </fixedFiles>
  </bug>
  <bug id="2886" opendate="2019-3-1 00:00:00" fixdate="2019-3-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Simplification of AND expressions should push negations earlier</summary>
      <description>currently simplification decomposes the AND operands simplifies all operands runs main simplification (re) simplifies all operands which are negatedIdea is to make the recursion as a first step; which could also push negation further down; and skip the simplification at end completely - as its not connected to a structural change.</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.sql.sub-query.iq</file>
      <file type="M">core.src.test.resources.sql.blank.iq</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexProgramTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MaterializationTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.FlatLists.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSimplify.java</file>
    </fixedFiles>
  </bug>
  <bug id="2890" opendate="2019-3-3 00:00:00" fixdate="2019-3-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ElasticSearch adapter. Combine any_value with other aggregation functions failed</summary>
      <description>As Andrei Sereda provided in CALCITE-2679, the following test cases cannot pass.// combine any_value with other aggregation functions (eg. max)CalciteAssert.that() .with(newConnectionFactory()) .query("select cat1, any_value(cat2), max(val1) from view group by cat1") .returnsUnordered("cat1=a; EXPR$1=g; EXPR$2=1.0", "cat1=null; EXPR$1=g; EXPR$2=null", "cat1=b; EXPR$1=h; EXPR$2=7.0");CalciteAssert.that() .with(newConnectionFactory()) .query("select max(val1), cat1, any_value(cat2) from view group by cat1") .returnsUnordered("EXPR$0=1.0; cat1=a; EXPR$2=g", "EXPR$0=null; cat1=null; EXPR$2=g", "EXPR$0=7.0; cat1=b; EXPR$2=h");CalciteAssert.that() .with(newConnectionFactory()) .query("select any_value(cat2), cat1, max(val1) from view group by cat1") .returnsUnordered("EXPR$0=g; cat1=a; EXPR$2=1.0", "EXPR$0=g; cat1=null; EXPR$2=null", "EXPR$0=h; cat1=b; EXPR$2=7.0");</description>
      <version>1.18.0</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.AggregationTest.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchJson.java</file>
    </fixedFiles>
  </bug>
  <bug id="2891" opendate="2019-3-5 00:00:00" fixdate="2019-3-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Alias suggester failed to suggest name based on original name incrementally</summary>
      <description>in testAliasFilter(), the plan isLogicalFilter(condition=[&gt;($1, $2)]) LogicalProject($f1=[20], $f12=[10], DEPTNO=[$7]) LogicalTableScan(table=[[scott, EMP]])The project alias should be LogicalProject($f1=[20], $f2=[10], DEPTNO=[$7])</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelBuilderTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RelBuilder.java</file>
    </fixedFiles>
  </bug>
  <bug id="2892" opendate="2019-3-5 00:00:00" fixdate="2019-4-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add the JSON_KEYS function</summary>
      <description>JSON_KEYS({{json_doc[, path])}}Returns the keys from the top-level value of a JSON object as a JSON array, or, if a path argument is given, the top-level keys from the selected path. Returns NULL if any argument is NULL, the json_doc argument is not an object, or path, if given, does not locate an object. An error occurs if the json_doc_argument is not a valid JSON document or the path_ argument is not a valid path expression or contains a {} or * wildcard.The result array is empty if the selected object is empty. If the top-level value has nested subobjects, the return value does not include keys from those subobjects.Example SQL:// code placeholderSELECT JSON_KEYS(v) AS c1,JSON_KEYS(v, 'lax $.a') AS c2,JSON_KEYS(v, '$.b') AS c3,JSON_KEYS(v, 'strict $.a[0]') AS c4,JSON_KEYS(v, 'strict $.a[1]') AS c5FROM (VALUES ('{"a": [10, true],"b": {"c": 30}}')) AS t(v)LIMIT 10;Result:c1c2c3c4c5&amp;#91;"a", "b"&amp;#93;&amp;#91;NULL&amp;#93;&amp;#91;"c"&amp;#93;&amp;#91;NULL&amp;#93;&amp;#91;NULL&amp;#93;</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">server.src.main.codegen.config.fmpp</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlJsonFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.test.codegen.config.fmpp</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonTypeFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonPrettyFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonLengthFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonDepthFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
      <file type="M">core.src.main.codegen.config.fmpp</file>
      <file type="M">babel.src.main.codegen.config.fmpp</file>
    </fixedFiles>
  </bug>
  <bug id="2908" opendate="2019-3-11 00:00:00" fixdate="2019-3-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add LAST_DAY function</summary>
      <description>It would be nice if Calcite can support LAST_DAY function as Oracle/MySql does.&amp;#91;1&amp;#93; http://www.mysqltutorial.org/mysql-last_day/&amp;#91;2&amp;#93; https://docs.oracle.com/cd/B19306_01/server.102/b14200/functions072.htm</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.resources.sql.misc.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ReturnTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="2911" opendate="2019-3-11 00:00:00" fixdate="2019-3-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Release Calcite 1.19.0</summary>
      <description>Release Calcite 1.19.0.</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.howto.md</file>
      <file type="M">site..docs.history.md</file>
      <file type="M">README</file>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2916" opendate="2019-3-12 00:00:00" fixdate="2019-3-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade jackson to 2.9.8</summary>
      <description>Currently Jackson is on 2.9.6. We should upgrade to Jackson 2.9.8.</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2929" opendate="2019-3-18 00:00:00" fixdate="2019-3-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Simplification of IS NULL checks are incorrectly assuming that CAST-s are possible</summary>
      <description>Example:with ax(s) as (values ('xxx'),(cast(null as character varying)))select cast(s as int) IS NULL from ax;returns a result set; which evaluates however 'xxx' is not a valid integer; so an error should be recieved insteadAnother class of almost the same issue:select cast('xxx' as int) IS NULL;is also problematic; in that case the not nullability is deduced from the fact that the literal's type is not nullable</description>
      <version>1.18.0</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">spark.src.test.java.org.apache.calcite.test.SparkAdapterTest.java</file>
      <file type="M">core.src.test.resources.sql.sub-query.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexProgramTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSimplify.java</file>
    </fixedFiles>
  </bug>
  <bug id="2931" opendate="2019-3-18 00:00:00" fixdate="2019-3-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Mongo Adapter - Compare Bson (not string) query representation in tests</summary>
      <description>Some tests currently fail because of wrong order of keys in Bson. // Expected{$project: {POP: '$pop', STATE: '$state'}}// Actual{$project: {STATE: '$state', POP: '$pop'}}</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">mongodb.src.test.java.org.apache.calcite.adapter.mongodb.MongoAdapterTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2936" opendate="2019-3-20 00:00:00" fixdate="2019-5-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Simplify EXISTS or NOT EXISTS sub-query that has "GROUP BY ()"</summary>
      <description>An EXISTS or NOT EXISTS sub-query whose inner child is an aggregate with no grouping columns should be simplified to a Boolean constant.Example:exists(select sum(i) from X) --&gt; truenot exists(select sum(i) from X) --&gt; falseRepro:@Test public void testExistentialSubquery() { final String sql = "SELECT e1.empno\n" + "FROM emp e1 where exists\n" + "(select avg(sal) from emp e2 where e1.empno = e2.empno )"; sql(sql).decorrelate(true).ok(); }We got plan:LogicalProject(EMPNO=[$0]) LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], EMPNO0=[CAST($9):INTEGER], $f1=[CAST($10):BOOLEAN]) LogicalJoin(condition=[=($0, $9)], joinType=[inner]) LogicalTableScan(table=[[CATALOG, SALES, EMP]]) LogicalAggregate(group=[{0}], agg#0=[MIN($1)]) LogicalProject(EMPNO=[$0], $f0=[true]) LogicalAggregate(group=[{0}], EXPR$0=[AVG($1)]) LogicalProject(EMPNO=[$0], SAL=[$5]) LogicalTableScan(table=[[CATALOG, SALES, EMP]])The preferred plan should be:LogicalProject(EMPNO=[$0]) LogicalTableScan(table=[[CATALOG, SALES, EMP]])</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlToRelConverter.java</file>
    </fixedFiles>
  </bug>
  <bug id="2942" opendate="2019-3-21 00:00:00" fixdate="2019-3-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Materialized view rewriting logic instantiates RelMetadataQuery each time the rule is triggered</summary>
      <description>Performance penalty is similar to the one described in CALCITE-1812. An instance may be available in the cluster, hence we can use it; this is just an addendum to CALCITE-1812.</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AbstractMaterializedViewRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="2943" opendate="2019-3-21 00:00:00" fixdate="2019-3-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Materialized view rewriting logic calls getApplicableMaterializations each time the rule is triggered</summary>
      <description>RelOptMaterializations.getApplicableMaterializations is called each time the rule is triggered.... // Obtain applicable (filtered) materializations // TODO: Filtering of relevant materializations needs to be // improved so we gather only materializations that might // actually generate a valid rewriting. final List&lt;RelOptMaterialization&gt; applicableMaterializations = RelOptMaterializations.getApplicableMaterializations(node, materializations);...When I implemented the rule, I assumed (incorrectly) that getApplicableMaterializations was a lightweight call and hence would help discarding materialized views extracted from the planner quickly. It turns out that the method can quickly become the most time consuming part of the rule execution; I assume the method was just supposed to be used once per query.Since the prefiltering that we do right now is rather simple and we already extract the tables used by queries and materializations within the rule, we can just skip the materialization over there.</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AbstractMaterializedViewRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoPlanner.java</file>
    </fixedFiles>
  </bug>
  <bug id="2958" opendate="2019-3-27 00:00:00" fixdate="2019-3-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade SQLLine to 1.7.0</summary>
      <description>Upgrade SQLLine to 1.7.0.</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="296" opendate="2014-6-18 00:00:00" fixdate="2014-11-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Re-organize package structure</summary>
      <description>As we move code to the `org.apache.optiq` namespace, there is an opportunity to re-organize the package structure of the code.Proposed new structure is &lt;a href="https://docs.google.com/spreadsheets/d/1SdLgVh0Zxdk-Hz4mVC7lgzNFFMI5InXu2lsqCh7upeo/edit?usp=sharing"&gt;in a spreadsheet&lt;/a&gt;.---------------- Imported from GitHub ----------------Url: https://github.com/julianhyde/optiq/issues/296Created by: julianhydeLabels: Created at: Thu May 29 21:09:56 CEST 2014State: open</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.AbstractTableQueryable.java</file>
      <file type="M">ubenchmark.src.main.java.net.hydromatic.optiq.StatementTest.java</file>
      <file type="M">splunk.src.test.java.net.hydromatic.optiq.test.SplunkAdapterTest.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.util.TrustAllSslSocketFactory.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.util.StringUtils.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.util.SocketFactoryImpl.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.util.package-info.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.util.HttpUtils.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.SplunkTableAccessRel.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.SplunkTable.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.SplunkSchema.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.SplunkQuery.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.SplunkPushDownRule.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.SplunkDriverVersion.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.SplunkDriver.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.search.SplunkConnectionImpl.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.search.SplunkConnection.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.search.SearchResultListener.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.search.package-info.java</file>
      <file type="M">splunk.src.main.java.net.hydromatic.optiq.impl.splunk.package-info.java</file>
      <file type="M">spark.src.test.java.net.hydromatic.optiq.test.SparkAdapterTest.java</file>
      <file type="M">spark.src.main.java.net.hydromatic.optiq.impl.spark.SparkToEnumerableConverter.java</file>
      <file type="M">spark.src.main.java.net.hydromatic.optiq.impl.spark.SparkRuntime.java</file>
      <file type="M">spark.src.main.java.net.hydromatic.optiq.impl.spark.SparkRules.java</file>
      <file type="M">spark.src.main.java.net.hydromatic.optiq.impl.spark.SparkRel.java</file>
      <file type="M">spark.src.main.java.net.hydromatic.optiq.impl.spark.SparkMethod.java</file>
      <file type="M">spark.src.main.java.net.hydromatic.optiq.impl.spark.SparkHandlerImpl.java</file>
      <file type="M">spark.src.main.java.net.hydromatic.optiq.impl.spark.package-info.java</file>
      <file type="M">spark.src.main.java.net.hydromatic.optiq.impl.spark.JdbcToSparkConverterRule.java</file>
      <file type="M">spark.src.main.java.net.hydromatic.optiq.impl.spark.JdbcToSparkConverter.java</file>
      <file type="M">spark.src.main.java.net.hydromatic.optiq.impl.spark.HttpServer.java</file>
      <file type="M">spark.src.main.java.net.hydromatic.optiq.impl.spark.EnumerableToSparkConverterRule.java</file>
      <file type="M">spark.src.main.java.net.hydromatic.optiq.impl.spark.EnumerableToSparkConverter.java</file>
      <file type="M">plus.src.test.java.net.hydromatic.optiq.test.PlusSuite.java</file>
      <file type="M">plus.src.test.java.net.hydromatic.optiq.impl.tpch.TpchTest.java</file>
      <file type="M">plus.src.test.java.net.hydromatic.optiq.impl.tpcds.TpcdsTest.java</file>
      <file type="M">plus.src.main.java.net.hydromatic.optiq.impl.tpch.TpchSchemaFactory.java</file>
      <file type="M">plus.src.main.java.net.hydromatic.optiq.impl.tpch.TpchSchema.java</file>
      <file type="M">plus.src.main.java.net.hydromatic.optiq.impl.tpch.package-info.java</file>
      <file type="M">plus.src.main.java.net.hydromatic.optiq.impl.tpcds.TpcdsSchemaFactory.java</file>
      <file type="M">plus.src.main.java.net.hydromatic.optiq.impl.tpcds.TpcdsSchema.java</file>
      <file type="M">plus.src.main.java.net.hydromatic.optiq.impl.tpcds.package-info.java</file>
      <file type="M">mongodb.src.test.java.net.hydromatic.optiq.test.MongoAdapterTest.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.package-info.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.MongoToEnumerableConverterRule.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.MongoToEnumerableConverter.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.MongoTableScan.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.MongoTable.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.MongoSortRel.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.MongoSchemaFactory.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.MongoSchema.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.MongoRules.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.MongoRel.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.MongoProjectRel.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.MongoMethod.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.MongoFilterRel.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.MongoEnumerator.java</file>
      <file type="M">mongodb.src.main.java.net.hydromatic.optiq.impl.mongodb.MongoAggregateRel.java</file>
      <file type="M">linq4j.src.test.java.net.hydromatic.linq4j.test.PrimitiveTest.java</file>
      <file type="M">linq4j.src.test.java.net.hydromatic.linq4j.test.package-info.java</file>
      <file type="M">linq4j.src.test.java.net.hydromatic.linq4j.test.OptimizerTest.java</file>
      <file type="M">linq4j.src.test.java.net.hydromatic.linq4j.test.Linq4jTest.java</file>
      <file type="M">linq4j.src.test.java.net.hydromatic.linq4j.test.Linq4jSuite.java</file>
      <file type="M">linq4j.src.test.java.net.hydromatic.linq4j.test.InlinerTest.java</file>
      <file type="M">linq4j.src.test.java.net.hydromatic.linq4j.test.ExpressionTest.java</file>
      <file type="M">linq4j.src.test.java.net.hydromatic.linq4j.test.DeterministicTest.java</file>
      <file type="M">linq4j.src.test.java.net.hydromatic.linq4j.test.BlockBuilderTest.java</file>
      <file type="M">linq4j.src.test.java.net.hydromatic.linq4j.test.BlockBuilderBase.java</file>
      <file type="M">linq4j.src.test.java.net.hydromatic.linq4j.function.package-info.java</file>
      <file type="M">linq4j.src.test.java.net.hydromatic.linq4j.function.FunctionTest.java</file>
      <file type="M">linq4j.src.test.java.net.hydromatic.linq4j.expressions.TypeTest.java</file>
      <file type="M">linq4j.src.test.java.net.hydromatic.linq4j.expressions.package-info.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.RawQueryable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.RawEnumerable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.QueryProviderImpl.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.QueryProvider.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.QueryableRecorder.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.QueryableFactory.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.QueryableDefaults.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.Queryable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.package-info.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.OrderedQueryable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.OrderedEnumerable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.Ord.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.OpType.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.LookupImpl.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.Lookup.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.Linq4j.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.GroupingImpl.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.Grouping.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.Predicate2.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.Predicate1.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.package-info.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.NullableLongFunction1.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.NullableIntegerFunction1.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.NullableFloatFunction1.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.NullableDoubleFunction1.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.NullableBigDecimalFunction1.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.NonDeterministic.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.LongFunction1.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.IntegerFunction1.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.Functions.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.Function2.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.Function1.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.Function0.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.Function.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.FloatFunction1.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.EqualityComparer.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.DoubleFunction1.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.Deterministic.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.function.BigDecimalFunction1.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.Extensions.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.ExtendedQueryable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.ExtendedOrderedQueryable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.ExtendedOrderedEnumerable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.ExtendedEnumerable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.WhileStatement.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.Visitor.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.UnaryExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.Types.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.TypeBinaryExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.TryStatement.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ThrowStatement.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.TernaryExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.SwitchStatement.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.SwitchCase.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.Statement.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ReflectedPseudoField.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.PseudoField.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.Primitive.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ParameterExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.package-info.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.OptimizeVisitor.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.Node.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.NewExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.NewArrayExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.MethodDeclaration.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.MethodCallExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.MemberMemberBinding.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.MemberListBinding.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.MemberInitExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.MemberExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.MemberDeclaration.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.MemberBinding.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.MemberAssignment.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ListInitExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.LambdaExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.LabelTarget.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.LabelStatement.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.InvocationExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.IndexExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.GotoStatement.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.GotoExpressionKind.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.FunctionExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ForStatement.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.FieldDeclaration.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ExpressionWriter.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ExpressionVisitor.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ExpressionType.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.Expressions.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.Expression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.Evaluator.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ElementInit.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.DynamicExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.DeterministicCodeOptimizer.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.DefaultExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.DeclarationStatement.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ConstructorDeclaration.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ConstantUntypedNull.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ConstantExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ConditionalStatement.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ConditionalExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ClassDeclarationFinder.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ClassDeclaration.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.CatchBlock.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.CallSiteBinder.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.BlockStatement.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.Blocks.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.BlockBuilder.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.BinaryExpression.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.ArrayLengthRecordField.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.expressions.AbstractNode.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.Enumerator.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.EnumerableQueryable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.EnumerableOrderedQueryable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.EnumerableDefaults.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.Enumerable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.DefaultQueryable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.DefaultEnumerable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.CartesianProductEnumerator.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.BaseQueryable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.AbstractQueryable.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.AbstractEnumerable2.java</file>
      <file type="M">linq4j.src.main.java.net.hydromatic.linq4j.AbstractEnumerable.java</file>
      <file type="M">example.csv.src.test.java.net.hydromatic.optiq.test.package-info.java</file>
      <file type="M">example.csv.src.test.java.net.hydromatic.optiq.test.CsvTest.java</file>
      <file type="M">example.csv.src.main.java.net.hydromatic.optiq.impl.csv.package-info.java</file>
      <file type="M">example.csv.src.main.java.net.hydromatic.optiq.impl.csv.JsonTable.java</file>
      <file type="M">example.csv.src.main.java.net.hydromatic.optiq.impl.csv.JsonEnumerator.java</file>
      <file type="M">example.csv.src.main.java.net.hydromatic.optiq.impl.csv.CsvTranslatableTable.java</file>
      <file type="M">example.csv.src.main.java.net.hydromatic.optiq.impl.csv.CsvTableScan.java</file>
      <file type="M">example.csv.src.main.java.net.hydromatic.optiq.impl.csv.CsvTableFactory.java</file>
      <file type="M">example.csv.src.main.java.net.hydromatic.optiq.impl.csv.CsvTable.java</file>
      <file type="M">example.csv.src.main.java.net.hydromatic.optiq.impl.csv.CsvSchemaFactory.java</file>
      <file type="M">example.csv.src.main.java.net.hydromatic.optiq.impl.csv.CsvSchema.java</file>
      <file type="M">example.csv.src.main.java.net.hydromatic.optiq.impl.csv.CsvScannableTable.java</file>
      <file type="M">example.csv.src.main.java.net.hydromatic.optiq.impl.csv.CsvPushProjectOntoTableRule.java</file>
      <file type="M">example.csv.src.main.java.net.hydromatic.optiq.impl.csv.CsvFilterableTable.java</file>
      <file type="M">example.csv.src.main.java.net.hydromatic.optiq.impl.csv.CsvFieldType.java</file>
      <file type="M">example.csv.src.main.java.net.hydromatic.optiq.impl.csv.CsvEnumerator.java</file>
      <file type="M">core.src.test.resources.org.eigenbase.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.resources.org.eigenbase.test.SqlLimitsTest.xml</file>
      <file type="M">core.src.test.resources.org.eigenbase.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.resources.org.eigenbase.test.HepPlannerTest.xml</file>
      <file type="M">core.src.test.resources.org.eigenbase.sql.test.SqlPrettyWriterTest.xml</file>
      <file type="M">core.src.test.java.org.eigenbase.util.UtilTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.util.TestUtil.java</file>
      <file type="M">core.src.test.java.org.eigenbase.util.ReflectVisitorTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.util.PermutationTestCase.java</file>
      <file type="M">core.src.test.java.org.eigenbase.util.mapping.MappingTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.util.ChunkListTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.SqlValidatorTestCase.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.SqlValidatorFeatureTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.SqlToRelTestBase.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.SqlToRelConverterTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.SqlTestGen.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.SqlLimitsTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.SargTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.RexTransformerTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.RexProgramTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.RelOptTestBase.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.RelOptRulesTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.RelMetadataTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.package-info.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.MockSqlOperatorTable.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.MockRelOptPlanner.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.MockRelOptCost.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.MockCatalogReader.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.HepPlannerTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.FilteratorTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.EigenbaseTestCase.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.EigenbaseResourceTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.DiffTestCase.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.DiffRepository.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.concurrent.SamplePlugin.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.concurrent.package-info.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.concurrent.ConcurrentTestTimedCommandGenerator.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.concurrent.ConcurrentTestPluginCommand.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.concurrent.ConcurrentTestPlugin.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.concurrent.ConcurrentTestCommandScript.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.concurrent.ConcurrentTestCommandGenerator.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.concurrent.ConcurrentTestCommandExecutor.java</file>
      <file type="M">core.src.test.java.org.eigenbase.test.concurrent.ConcurrentTestCommand.java</file>
      <file type="M">core.src.test.java.org.eigenbase.sql.test.SqlTypeNameTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.sql.test.SqlTests.java</file>
      <file type="M">core.src.test.java.org.eigenbase.sql.test.SqlTestFactory.java</file>
      <file type="M">core.src.test.java.org.eigenbase.sql.test.SqlTesterImpl.java</file>
      <file type="M">core.src.test.java.org.eigenbase.sql.test.SqlTester.java</file>
      <file type="M">core.src.test.java.org.eigenbase.sql.test.SqlPrettyWriterTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.sql.test.SqlOperatorTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.sql.test.SqlAdvisorTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.sql.test.package-info.java</file>
      <file type="M">core.src.test.java.org.eigenbase.sql.test.DelegatingSqlTestFactory.java</file>
      <file type="M">core.src.test.java.org.eigenbase.sql.test.DefaultSqlTestFactory.java</file>
      <file type="M">core.src.test.java.org.eigenbase.sql.parser.SqlUnParserTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.rex.RexExecutorTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.relopt.volcano.VolcanoPlannerTraitTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.relopt.volcano.VolcanoPlannerTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.relopt.RelWriterTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.relopt.RelOptUtilTest.java</file>
      <file type="M">core.src.test.java.org.eigenbase.relopt.RelOptPlanReaderTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.util.PartiallyOrderedSetTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.util.graph.DirectedGraphTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.util.BitSetsTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.tools.TpchSchema.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.tools.PlannerTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.tools.FrameworksTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.TableInRootSchemaTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.SqlToRelConverterExtendedTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.SqlFunctionsTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.ScannableTableTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.ReflectiveSchemaTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.package-info.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.OptiqSuite.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.OptiqSqlOperatorTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.OptiqAssert.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.MultiJdbcSchemaJoinTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.ModelTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.MaterializationTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.LinqFrontJdbcBackTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.LatticeTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.JdbcFrontLinqBackTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.JdbcFrontJdbcBackTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.JdbcFrontJdbcBackLinqMiddleTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.JdbcAdapterTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.InterpreterTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.FoodmartTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.test.ExceptionMessageTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.runtime.EnumerablesTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.runtime.BinarySearchTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.impl.generate.RangeTable.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.impl.clone.ArrayTableTest.java</file>
      <file type="M">core.src.test.java.net.hydromatic.optiq.examples.foodmart.java.JdbcExample.java</file>
      <file type="M">core.src.main.resources.version.net-hydromatic-optiq-jdbc.properties</file>
      <file type="M">core.src.main.resources.org.eigenbase.resource.EigenbaseResource.properties</file>
      <file type="M">core.src.main.java.org.eigenbase.util.XmlOutput.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.Util.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.UnmodifiableArrayList.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.Template.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.Static.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.StackWriter.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.Stacks.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.SerializableCharset.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.SaffronProperties.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.RhBase64.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.ReflectUtil.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.ReflectiveVisitor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.ReflectiveVisitDispatcher.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.Permutation.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.Pair.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.NlsString.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.mapping.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.mapping.MappingType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.mapping.Mappings.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.mapping.Mapping.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.mapping.IntPair.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.mapping.AbstractTargetMapping.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.mapping.AbstractSourceMapping.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.JsonBuilder.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.IntList.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.IntegerIntervalSet.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.ImmutableNullableList.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.ImmutableIntList.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.IdentityHashSet.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.Holder.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.Glossary.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.Filterator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.EigenbaseException.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.EigenbaseContextException.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.DelegatingInvocationHandler.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.ControlFlowException.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.CompoundClosableAllocation.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.CompositeList.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.ClosableAllocationOwner.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.ClosableAllocation.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.ChunkList.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.CastingList.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.CancelFlag.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.Bug.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.BitString.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.Benchmark.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util.BarfingInvocationHandler.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util14.ZonelessTimestamp.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util14.ZonelessTime.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util14.ZonelessDatetime.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util14.ZonelessDate.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util14.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util14.NumberUtil.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util14.EigenbaseValidatorException.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util14.EigenbaseParserException.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util14.DateTimeUtil.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util14.ConversionUtil.java</file>
      <file type="M">core.src.main.java.org.eigenbase.util14.BasicDatetime.java</file>
      <file type="M">core.src.main.java.org.eigenbase.trace.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.trace.EigenbaseTrace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.trace.EigenbaseTimingTracer.java</file>
      <file type="M">core.src.main.java.org.eigenbase.trace.EigenbaseLogger.java</file>
      <file type="M">core.src.main.java.org.eigenbase.stat.RelStatSource.java</file>
      <file type="M">core.src.main.java.org.eigenbase.stat.RelStatColumnStatistics.java</file>
      <file type="M">core.src.main.java.org.eigenbase.stat.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.WithScope.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.WithNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.WithItemNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.UnnestNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.TableNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.TableConstructorNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlValidatorWithHints.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlValidatorUtil.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlValidatorTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlValidatorScope.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlValidatorNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlValidatorImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlValidatorException.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlValidatorCatalogReader.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlValidator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlUserDefinedTableMacro.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlUserDefinedTableFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlUserDefinedFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlUserDefinedAggFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlScopedShuttle.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlMonotonicity.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlMonikerType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlMonikerImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlMonikerComparator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlMoniker.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlIdentifierMoniker.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SqlConformance.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SetopNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SelectScope.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.SelectNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.ProcedureNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.ParameterScope.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.ParameterNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.OverScope.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.OrderByScope.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.ListScope.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.JoinScope.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.JoinNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.IdentifierNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.FieldNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.EmptyScope.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.DelegatingSqlValidatorTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.DelegatingSqlValidatorCatalogReader.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.DelegatingScope.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.DelegatingNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.CollectScope.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.CollectNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.AliasNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.AggregatingSelectScope.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.AggregatingScope.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.AggFinder.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.AggChecker.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.validate.AbstractNamespace.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.util.SqlVisitor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.util.SqlString.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.util.SqlShuttle.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.util.SqlBuilder.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.util.SqlBasicVisitor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.util.ReflectiveSqlOperatorTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.util.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.util.ListSqlOperatorTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.util.ChainedSqlOperatorTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.TableFunctionReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlTypeUtil.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlTypeTransforms.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlTypeTransformCascade.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlTypeTransform.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlTypeName.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlTypeFamily.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlTypeFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlTypeExplicitPrecedenceList.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlTypeAssignmentRules.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlSingleOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlReturnTypeInferenceChain.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlOperandTypeInference.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SqlOperandCountRanges.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SetopOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.SameOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.ReturnTypes.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.OrdinalReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.OperandTypes.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.OperandsTypeChecking.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.ObjectSqlType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.MultisetSqlType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.MultisetOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.MatchReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.MapSqlType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.LiteralOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.JavaToSqlTypeConversionRules.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.IntervalSqlType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.InferTypes.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.FamilyOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.ExtraSqlTypes.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.ExplicitReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.ExplicitOperandTypeInference.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.CursorReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.CompositeOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.ComparableOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.BasicSqlType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.AssignableOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.ArraySqlType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.type.AbstractSqlType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlWriter.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlWithItem.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlWith.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlWindow.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlValuesOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlUtil.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlUpdate.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlUnresolvedFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlUnnestOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlTimestampLiteral.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlTimeLiteral.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlSyntax.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlStateCodes.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlSpecialOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlSetOption.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlSetOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlSelectOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlSelectKeyword.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlSelect.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlSampleSpec.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlRankFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlProcedureCallOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlPrefixOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlPostfixOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlOverOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlOrderBy.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlOperatorTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlOperatorBinding.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlOperandCountRange.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlNumericLiteral.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlNullSemantics.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlNodeList.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlNode.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlMerge.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlLiteral.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlKind.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlJoin.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlJdbcFunctionCall.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlIntervalQualifier.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlIntervalLiteral.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlInternalOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlInsertKeyword.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlInsert.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlInfixOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlIdentifier.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlFunctionCategory.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlFunctionalOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlExplainLevel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlExplain.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlDynamicParam.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlDialect.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlDelete.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlDateLiteral.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlDataTypeSpec.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlCollation.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlCharStringLiteral.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlCallBinding.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlCall.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlBinaryStringLiteral.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlBinaryOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlBasicCall.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlAsOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlAggFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlAccessType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlAccessEnum.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlAbstractStringLiteral.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.SqlAbstractDateTimeLiteral.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.pretty.SqlPrettyWriter.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.pretty.SqlFormatOptions.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.pretty.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.parser.SqlParserUtil.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.parser.SqlParserPos.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.parser.SqlParserImplFactory.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.parser.SqlParser.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.parser.SqlParseException.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.parser.SqlAbstractParserImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.parser.Parser.jj</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.parser.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.parser.impl.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.parser.CommonParser.jj</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.JoinType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.JoinConditionType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlTrimFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlThrowOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlSumEmptyIsZeroAggFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlSumAggFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlSubstringFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlStringContextVariable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlSingleValueAggFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlRowOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlPositionFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlOverlayFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlOverlapsOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlNullifFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlNtileAggFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlNewOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlMultisetValueConstructor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlMultisetSetOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlMultisetQueryConstructor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlMultisetMemberOfOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlMonotonicUnaryFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlMonotonicBinaryOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlMinMaxAggFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlMapValueConstructor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlMapQueryConstructor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlLiteralChainOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlLikeOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlLeadLagAggFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlItemOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlInOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlHistogramAggFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlFloorFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlFirstLastValueAggFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlExtractFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlDatetimeSubtractionOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlCursorConstructor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlCurrentDateFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlCovarAggFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlCountAggFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlConvertFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlColumnListConstructor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlCollectionTableOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlCoalesceFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlCeilFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlCastFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlCaseOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlCase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlBetweenOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlAvgAggFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlArrayValueConstructor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlArrayQueryConstructor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.SqlAbstractTimeFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.fun.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.ExplicitOperatorBinding.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.advise.SqlSimpleParser.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.advise.SqlAdvisorValidator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.advise.SqlAdvisorHint.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.advise.SqlAdvisorGetHintsFunction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.advise.SqlAdvisor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql.advise.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql2rel.SubqueryConverter.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql2rel.StandardConvertletTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql2rel.SqlToRelConverter.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql2rel.SqlRexConvertletTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql2rel.SqlRexConvertlet.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql2rel.SqlRexContext.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql2rel.SqlNodeToRexConverterImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql2rel.SqlNodeToRexConverter.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql2rel.RelStructuredTypeFlattener.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql2rel.RelFieldTrimmer.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql2rel.RelDecorrelator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql2rel.ReflectiveConvertletTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql2rel.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sql2rel.DefaultValueFactory.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.SargStrictness.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.SargSetOperator.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.SargSetExpr.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.SargRexAnalyzer.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.SargMutableEndpoint.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.SargIntervalSequence.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.SargIntervalExpr.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.SargIntervalBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.SargInterval.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.SargFactory.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.SargExpr.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.SargEndpoint.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.SargBoundType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.SargBinding.java</file>
      <file type="M">core.src.main.java.org.eigenbase.sarg.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.runtime.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexWindowBound.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexWindow.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexVisitorImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexVisitor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexVariable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexUtil.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexTransformer.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexToSqlNodeConverterImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexToSqlNodeConverter.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexSqlStandardConvertletTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexSqlReflectiveConvertletTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexSqlConvertletTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexSqlConvertlet.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexSlot.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexShuttle.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexRangeRef.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexProgramBuilder.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexProgram.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexPermuteInputsShuttle.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexPermutationShuttle.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexPattern.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexOver.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexNode.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexMultisetUtil.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexLocalRef.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexLiteral.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexInputRef.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexFieldCollation.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexFieldAccess.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexExecutorImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexExecutable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexDynamicParam.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexCorrelVariable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexCopier.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexChecker.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexCallBinding.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexCall.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexBuilder.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.RexAction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rex.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.resource.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.resource.Feature.java</file>
      <file type="M">core.src.main.java.org.eigenbase.resource.EigenbaseNewResource.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.WindowRelBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.WindowRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.ValuesRelBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.ValuesRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.UnionRelBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.UnionRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.UncollectRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.TableModificationRelBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.TableModificationRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.TableFunctionRelBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.TableFunctionRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.TableAccessRelBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.TableAccessRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.SortRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.SingleRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.SetOpRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.SamplingRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.WindowedAggSplitterRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.UnionToDistinctRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.UnionEliminatorRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.TransitivePredicatesOnJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.TableAccessRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.SwapJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.SemiJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.SemiJoinRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.RemoveTrivialProjectRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.RemoveTrivialCalcRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.RemoveSortRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.RemoveSemiJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.RemoveIsNotDistinctFromRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.RemoveEmptyRules.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.RemoveDistinctRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.RemoveDistinctAggregateRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.ReduceValuesRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.ReduceExpressionsRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.ReduceDecimalsRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.ReduceAggregatesRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushSortPastProjectRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushSemiJoinPastProjectRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushSemiJoinPastJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushSemiJoinPastFilterRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushProjectPastSortRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushProjectPastSetOpRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushProjectPastJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushProjectPastFilterRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushProjector.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushProjectIntoMultiJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushJoinThroughUnionRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushJoinThroughJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushFilterPastTableFunctionRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushFilterPastSetOpRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushFilterPastProjectRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushFilterPastJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushFilterIntoMultiJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushAggregateThroughUnionRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PullUpProjectsOnTopOfMultiJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PullUpProjectsAboveJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PullUpAggregateAboveUnionRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PullConstantsThroughAggregatesRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.ProjectToCalcRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.ProjectTableRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.OptimizeBushyJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.NestedLoopsJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.MultiJoinRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.MergeProjectRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.MergeProjectOntoCalcRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.MergeFilterRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.MergeFilterOntoCalcRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.MergeCalcRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.LoptSemiJoinOptimizer.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.LoptOptimizeJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.LoptMultiJoin.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.LoptJoinTree.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.FilterToCalcRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.FilterTableRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.FilterAggregateTransposeRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.ExtractJoinFilterRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.EquiJoinRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.ConvertMultiJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.CommutativeJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.CombineUnionsRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.CoerceInputsRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.CalcRelSplitter.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.AggregateStarTableRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.AggregateProjectMergeRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.AggregateFilterTransposeRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.AddRedundantSemiJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelXmlWriter.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelWriterImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelWriter.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelVisitor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelShuttleImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelShuttle.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelNode.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelJsonWriter.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelJsonReader.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelJson.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelInput.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelImplementorImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelFieldCollation.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelFactories.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelCollationTraitDef.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelCollationImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.RelCollation.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.ProjectRelBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.ProjectRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.OneRowRelBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.OneRowRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.MinusRelBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.MinusRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelMetadataQuery.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelMdUtil.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelMdUniqueKeys.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelMdSelectivity.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelMdRowCount.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelMdPredicates.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelMdPopulationSize.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelMdPercentageOriginalRows.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelMdExplainVisibility.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelMdDistinctRowCount.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelMdColumnUniqueness.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelMdColumnOrigins.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelColumnOrigin.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelColumnMapping.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.ReflectiveRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.MetadataFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.MetadataFactory.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.Metadata.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.DefaultRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.ChainedRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.CachingRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.BuiltInMetadata.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.JoinRelType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.JoinRelBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.JoinRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.JoinInfo.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.jdbc.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.InvalidRelException.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.IntersectRelBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.IntersectRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.FilterRelBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.FilterRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.EmptyRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.CorrelatorRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.Correlation.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.convert.TraitMatchingRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.convert.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.convert.NoneConverterRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.convert.ConverterRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.convert.ConverterRelImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.convert.ConverterRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.CollectRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.CalcRelBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.CalcRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.Aggregation.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.AggregateRelBase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.AggregateRel.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.AggregateCall.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.AbstractRelNode.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.RelRecordType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.RelProtoDataType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.RelDataTypeSystemImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.RelDataTypeSystem.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.RelDataTypePrecedenceList.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.RelDataTypeImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.RelDataTypeFieldImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.RelDataTypeField.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.RelDataTypeFamily.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.RelDataTypeFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.RelDataTypeFactory.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.RelDataTypeComparability.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.RelDataType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.RelCrossType.java</file>
      <file type="M">core.src.main.java.org.eigenbase.reltype.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.volcano.VolcanoRuleMatch.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.volcano.VolcanoRuleCall.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.volcano.VolcanoRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.volcano.VolcanoPlannerPhaseRuleMappingInitializer.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.volcano.VolcanoPlannerPhase.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.volcano.VolcanoPlanner.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.volcano.VolcanoCost.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.volcano.RuleQueue.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.volcano.RelSubset.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.volcano.RelSet.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.volcano.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.volcano.ChainedPhaseRuleMappingInitializer.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.volcano.AbstractConverter.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.VisitorRelVisitor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.TableAccessMap.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.SubstitutionVisitor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.Strong.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelTraitSet.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelTraitPropagationVisitor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelTraitDef.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelTrait.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptUtil.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptSchemaWithSampling.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptSchema.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptSamplingParameters.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptRuleOperandChildren.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptRuleOperandChildPolicy.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptRuleOperand.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptRuleCall.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptQuery.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptPredicateList.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptPlanner.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptNode.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptMaterialization.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptListener.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptLattice.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptCostImpl.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptCostFactory.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptCost.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptConnection.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptCluster.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptAbstractTable.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelImplementor.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.MulticastRelOptListener.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.hep.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.hep.HepRuleCall.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.hep.HepRelVertex.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.hep.HepRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.hep.HepProgramBuilder.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.hep.HepProgram.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.hep.HepPlanner.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.hep.HepMatchOrder.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.hep.HepInstruction.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.ConventionTraitDef.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.Convention.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.Contexts.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.Context.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.CommonRelSubExprRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.AbstractRelOptPlanner.java</file>
      <file type="M">core.src.main.java.org.eigenbase.jdbc4.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.javac.SynchronizedJaninoCompiler.java</file>
      <file type="M">core.src.main.java.org.eigenbase.javac.package-info.java</file>
      <file type="M">core.src.main.java.org.eigenbase.javac.JavaCompilerArgs.java</file>
      <file type="M">core.src.main.java.org.eigenbase.javac.JavaCompiler.java</file>
      <file type="M">core.src.main.java.org.eigenbase.javac.JaninoCompiler.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.PartiallyOrderedSet.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.graph.TopologicalOrderIterator.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.graph.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.graph.Graphs.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.graph.DirectedGraph.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.graph.DepthFirstIterator.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.graph.DefaultEdge.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.graph.DefaultDirectedGraph.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.graph.CycleDetector.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.graph.BreadthFirstIterator.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.CompositeMap.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.CompatibleGuava11.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.Compatible.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.util.BitSets.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.TranslatableTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.tools.ValidationException.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.tools.RuleSets.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.tools.RuleSet.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.tools.RelConversionException.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.tools.Programs.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.tools.Program.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.tools.Planner.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.tools.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.tools.Frameworks.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.tools.FrameworkConfig.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.TableMacro.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.TableFunction.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.TableFactory.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.Table.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.Statistics.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.Statistic.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.server.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.server.OptiqServerStatement.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.server.OptiqServer.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.SemiMutableSchema.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.Schemas.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.SchemaPlus.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.SchemaFactory.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.Schema.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.ScannableTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.ScalarFunction.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.Utilities.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.Unit.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.Typed.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.Spaces.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.Spacer.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.SortedMultiMap.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.ResultSetEnumerable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.RecordEnumeratorCursor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.ObjectEnumeratorCursor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.Like.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.Hook.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.FlatLists.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.EnumeratorCursor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.Enumerables.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.Bindable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.BinarySearch.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.ArrayEnumeratorCursor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.ArrayComparator.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.runtime.AbstractCursor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.WinAggResultContext.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.WinAggResetContext.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.WinAggImplementor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.WinAggFrameResultContext.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.WinAggFrameContext.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.WinAggContext.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.WinAggAddContext.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.StrictWinAggImplementor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.StrictAggImplementor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.RexToLixTranslator.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.RexImpTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.ReflectiveCallNotNullImplementor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.PhysTypeImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.PhysType.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.NullPolicy.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.NotNullImplementor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.NestedBlockBuilderImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.NestedBlockBuilder.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.JavaRules.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.JavaRowFormat.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.JavaRelImplementor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.impl.WinAggResultContextImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.impl.WinAggResetContextImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.impl.WinAggAddContextImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.impl.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.impl.AggResultContextImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.impl.AggResetContextImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.impl.AggAddContextImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.EnumerableRelImplementor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.EnumerableRel.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.EnumerableConvention.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.CallImplementor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.AggResultContext.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.AggResetContext.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.AggImpState.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.AggImplementor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.AggContext.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.rules.java.AggAddContext.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.QueryableTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.ProjectableFilterableTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.prepare.RelOptTableImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.prepare.QueryableRelBuilder.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.prepare.Prepare.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.prepare.PlannerImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.prepare.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.prepare.OptiqSqlValidator.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.prepare.OptiqPrepareImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.prepare.OptiqMaterializer.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.prepare.OptiqCatalogReader.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.prepare.LixToRelTranslator.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.ModifiableTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.ModelHandler.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.JsonView.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.JsonTile.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.JsonTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.JsonSchema.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.JsonRoot.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.JsonMeasure.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.JsonMaterialization.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.JsonMapSchema.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.JsonLattice.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.JsonJdbcSchema.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.JsonFunction.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.JsonCustomTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.JsonCustomSchema.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.model.JsonColumn.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.Member.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.materialize.TileSuggester.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.materialize.TileKey.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.materialize.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.materialize.MaterializationService.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.materialize.MaterializationKey.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.materialize.MaterializationActor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.materialize.Lattice.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.SqlTimeoutException.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.OptiqStatement.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.OptiqSchema.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.OptiqRootSchema.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.OptiqResultSet.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.OptiqPreparedStatement.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.OptiqPrepare.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.OptiqJdbc41Factory.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.OptiqJdbc40Factory.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.OptiqFactory.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.OptiqConnectionImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.OptiqConnection.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.MetaImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.MetadataSchema.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.JavaTypeFactoryImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.JavaRecordType.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.jdbc.Driver.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.ViewTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.TableMacroImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.TableFunctionImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.StarTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.ScalarFunctionImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.ReflectiveFunctionBase.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.MaterializedViewTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.jdbc.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.jdbc.JdbcUtils.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.jdbc.JdbcToEnumerableConverterRule.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.jdbc.JdbcToEnumerableConverter.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.jdbc.JdbcTableScan.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.jdbc.JdbcTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.jdbc.JdbcSchema.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.jdbc.JdbcRules.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.jdbc.JdbcRel.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.jdbc.JdbcQueryProvider.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.jdbc.JdbcImplementor.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.jdbc.JdbcConvention.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.java.ReflectiveSchema.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.java.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.java.JavaTypeFactory.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.java.AbstractQueryableTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.interpreter.ValuesNode.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.interpreter.Source.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.interpreter.SortNode.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.interpreter.Sink.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.interpreter.ScanNode.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.interpreter.Scalar.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.interpreter.Row.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.interpreter.ProjectNode.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.interpreter.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.interpreter.Nodes.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.interpreter.Node.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.interpreter.Interpreter.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.interpreter.FilterNode.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.interpreter.Context.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.DelegatingSchema.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.clone.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.clone.ListTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.clone.ColumnLoader.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.clone.CloneSchema.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.clone.ArrayTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.AggregateFunctionImpl.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.ArrayImpl.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.AvaticaConnection.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.AvaticaDatabaseMetaData.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.AvaticaFactory.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.AvaticaJdbc40Factory.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.AvaticaJdbc41Factory.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.AvaticaParameter.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.AvaticaPreparedStatement.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.AvaticaPrepareResult.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.AvaticaResultSet.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.AvaticaResultSetMetaData.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.AvaticaStatement.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.BuiltInConnectionProperty.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.ByteString.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.Casing.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.ColumnMetaData.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.ConnectionConfig.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.ConnectionConfigImpl.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.ConnectionProperty.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.ConnectStringParser.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.Cursor.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.DriverVersion.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.Handler.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.HandlerImpl.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.Helper.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.InternalProperty.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.Meta.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.package-info.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.Quoting.java</file>
      <file type="M">avatica.src.main.java.net.hydromatic.avatica.UnregisteredDriver.java</file>
      <file type="M">avatica.src.test.java.net.hydromatic.avatica.test.AvaticaSuite.java</file>
      <file type="M">avatica.src.test.java.net.hydromatic.avatica.test.ConnectStringParserTest.java</file>
      <file type="M">avatica.src.test.java.net.hydromatic.avatica.test.package-info.java</file>
      <file type="M">core.src.main.codegen.templates.CombinedParser.jj</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.AggregateFunction.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.BuiltinMethod.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.config.Lex.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.config.OptiqConnectionConfig.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.config.OptiqConnectionConfigImpl.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.config.OptiqConnectionProperty.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.config.package-info.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.DataContext.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.Demo.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.FilterableTable.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.Function.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.FunctionParameter.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.ImplementableAggFunction.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.ImplementableFunction.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.AbstractSchema.java</file>
      <file type="M">core.src.main.java.net.hydromatic.optiq.impl.AbstractTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="2961" opendate="2019-3-29 00:00:00" fixdate="2019-3-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enable Travis to test against JDK 13</summary>
      <description>The docker hub Maven image recently added support for JDK 13.</description>
      <version>None</version>
      <fixedVersion>avatica-1.14.0,1.20.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">cassandra.src.test.java.org.apache.calcite.test.CassandraAdapterTest.java</file>
      <file type="M">.travis.yml</file>
    </fixedFiles>
  </bug>
  <bug id="2985" opendate="2019-4-8 00:00:00" fixdate="2019-5-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement JSON_STORAGE_SIZE function</summary>
      <description>JSON_STORAGE_SIZE(json_val)This function returns the number of bytes used to store the binary representation of a JSON document. When the argument is a JSON column, this is the space used to store the JSON document. json_val must be a valid JSON document or a string which can be parsed as one. In the case where it is string, the function returns the amount of storage space in the JSON binary representation that is created by parsing the string as JSON and converting it to binary. It returns NULL if the argument is NULL.An error results when json_val is not NULL, and is not—or cannot be successfully parsed as—a JSON document.To illustrate this function's behavior when used with a JSON column as its argument, we create a table named jtable containing a JSON column jcol, insert a JSON value into the table, then obtain the storage space used by this column with JSON_STORAGE_SIZE(), as shown here:SELECTJSON_STORAGE_SIZE('[100, "sakila", [1, 3, 5], 425.05]') AS A,JSON_STORAGE_SIZE('{"a": 1000, "b": "a", "c": "[1, 3, 5, 7]"}') AS B,JSON_STORAGE_SIZE('{"a": 1000, "b": "wxyz", "c": "[1, 3, 5, 7]"}') AS C,JSON_STORAGE_SIZE('[100, "json", [[10, 20, 30], 3, 5], 425.05]') AS D; A B C D 29 37 40 36</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlJsonFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.JsonFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="2986" opendate="2019-4-8 00:00:00" fixdate="2019-4-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Wrong results with =ANY subquery</summary>
      <description>ANY/SOME subqueries are rewritten using MAX/MIN and cross-join. This is wrong transformation for =ANY and &lt;&gt;ANY (and therefore =ALL and &lt;&gt;ALL).Queryselect * from "scott".emp where empno = any (select empno from "scott".emp);Expected output for above query is all rows from scott.emp but actual is only one rowTest case: e.g. https://github.com/apache/calcite/compare/master...vineetgarg02:CALCITE-2986</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.sql.some.iq</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelConverterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptRulesTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSubQuery.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SubQueryRemoveRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="3433" opendate="2019-10-21 00:00:00" fixdate="2019-11-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>EQUALS operator between date/timestamp types returns false if the type is nullable</summary>
      <description>sqlselect time0 = time1from (select timestamp'2000-12-30 21:07:32' as time0, timestamp'2000-12-30 21:07:32' as time1 union all select cast(null as timestamp) as time0, cast(null as timestamp) as time1)answer is falsebut sqlselect time0 = time1from(select timestamp'2000-12-30 21:07:32' as time0, timestamp'2000-12-30 21:07:32'as time1)answer is true </description>
      <version>1.17.0,1.18.0,1.19.0,1.20.0,1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="3576" opendate="2019-12-6 00:00:00" fixdate="2019-4-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove Enumerable convention check in FilterIntoJoinRule</summary>
      <description>Context: https://github.com/apache/calcite/pull/1247#discussion_r289489174</description>
      <version>None</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.sql.misc.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.enumerable.EnumerableHashJoinTest.java</file>
      <file type="M">core.src.test.resources.sql.sub-query.iq</file>
      <file type="M">core.src.test.resources.sql.join.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MaterializationTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableNestedLoopJoin.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
