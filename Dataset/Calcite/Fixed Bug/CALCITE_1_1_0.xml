<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CALCITE">
  <bug id="650" opendate="2015-3-27 00:00:00" fixdate="2015-3-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add metadata for average size of a tuple in SemiJoin</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.2.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdSize.java</file>
    </fixedFiles>
  </bug>
  <bug id="655" opendate="2015-3-30 00:00:00" fixdate="2015-4-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement "connectionSync" RPC</summary>
      <description>Per thread on dev list titled "Avatica handling of connection state", this ticket implements such an rpc.</description>
      <version>None</version>
      <fixedVersion>1.2.0-incubating</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteMetaImpl.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.remote.Service.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.remote.RemoteMeta.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.remote.LocalService.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.remote.JsonService.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.MetaImpl.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.Meta.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaConnection.java</file>
      <file type="M">avatica-server.src.test.java.org.apache.calcite.avatica.RemoteDriverTest.java</file>
      <file type="M">avatica-server.src.main.java.org.apache.calcite.avatica.jdbc.JdbcMeta.java</file>
    </fixedFiles>
  </bug>
  <bug id="662" opendate="2015-4-3 00:00:00" fixdate="2015-4-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Query validation fails when an ORDER BY clause is used with WITH CLAUSE</summary>
      <description>This query fails in validation:WITH x AS (SELECT deptno a FROM emp) (SELECT x.a FROM x ORDER BY x.a)while this one below, basically the same except for the "ORDER BY being gone", succeeds:WITH x AS (SELECT deptno a FROM emp) (SELECT x.a FROM x)</description>
      <version>None</version>
      <fixedVersion>1.2.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlWith.java</file>
    </fixedFiles>
  </bug>
  <bug id="665" opendate="2015-4-5 00:00:00" fixdate="2015-6-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ClassCastException in MongoDB adapter</summary>
      <description>When using with Mondrian 4.2 and With MongoDB (foodmart data), The following exception is raised. Exception in thread "main" java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.Long at org.apache.calcite.avatica.util.AbstractCursor$LongAccessor.getLong(AbstractCursor.java:483) at org.apache.calcite.avatica.util.AbstractCursor$AccessorImpl.getInt(AbstractCursor.java:252) at org.apache.calcite.avatica.AvaticaResultSet.getInt(AvaticaResultSet.java:248) at org.apache.commons.dbcp.DelegatingResultSet.getInt(DelegatingResultSet.java:225) at org.apache.commons.dbcp.DelegatingResultSet.getInt(DelegatingResultSet.java:225) at mondrian.spi.impl.SqlStatisticsProvider.getTableCardinality(SqlStatisticsProvider.java:52) at mondrian.rolap.RolapSchema$PhysStatistic.getTableCardinality(RolapSchema.java:2888) at mondrian.rolap.RolapSchema$PhysStatistic.getRelationCardinality(RolapSchema.java:2860) at mondrian.rolap.RolapSchema$PhysTable.populateColumns(RolapSchema.java:1859) at mondrian.rolap.RolapSchema$PhysRelationImpl.ensurePopulated(RolapSchema.java:1519) at mondrian.rolap.RolapSchema$PhysTable.ensurePopulated(RolapSchema.java:1729) at mondrian.rolap.RolapSchemaUpgrader.toPhysRelation(RolapSchemaUpgrader.java:1866) at mondrian.rolap.RolapSchemaUpgrader.convertCube(RolapSchemaUpgrader.java:179) at mondrian.rolap.RolapSchemaUpgrader.convertSchema(RolapSchemaUpgrader.java:2208) at mondrian.rolap.RolapSchemaUpgrader.upgrade(RolapSchemaUpgrader.java:125) at mondrian.rolap.RolapSchemaLoader.loadStage0(RolapSchemaLoader.java:254) at mondrian.rolap.RolapSchemaLoader.createSchema(RolapSchemaLoader.java:4303) at mondrian.rolap.RolapSchemaPool.get(RolapSchemaPool.java:210) at mondrian.rolap.RolapSchemaPool.get(RolapSchemaPool.java:62) at mondrian.rolap.RolapConnection.&lt;init&gt;(RolapConnection.java:160) at mondrian.rolap.RolapConnection.&lt;init&gt;(RolapConnection.java:84) at mondrian.olap.DriverManager.getConnection(DriverManager.java:112) at mondrian.olap.DriverManager.getConnection(DriverManager.java:68) at mondrian.olap.DriverManager.getConnection(DriverManager.java:50) at ....</description>
      <version>1.1.0-incubating</version>
      <fixedVersion>1.4.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">mongodb.src.test.java.org.apache.calcite.test.MongoAdapterIT.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoEnumerator.java</file>
    </fixedFiles>
  </bug>
  <bug id="715" opendate="2015-5-6 00:00:00" fixdate="2015-4-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add PERIOD type constructor and period operators (CONTAINS, PRECEDES, etc.)</summary>
      <description>Add support for period operators: CONTAINS, OVERLAPS, EQUALS, PRECEDES, SUCCEEDS, IMMEDIATELY PRECEDES, and IMMEDIATELY SUCCEEDS.These are among the temporal database features added to SQL:2011.See http://www.sigmod.org/publications/sigmod-record/0612/publications/1209/pdfs/07.industry.kulkarni.pdf.</description>
      <version>None</version>
      <fixedVersion>1.13.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.resources.sql.misc.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlPrettyWriterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlAdvisorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.OperandTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlKind.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlOverlapsOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.StandardConvertletTable.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
    </fixedFiles>
  </bug>
</bugrepository>
