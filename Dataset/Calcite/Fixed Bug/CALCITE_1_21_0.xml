<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CALCITE">
  <bug id="3280" opendate="2019-8-21 00:00:00" fixdate="2019-8-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cannot parse query REGEXP_REPLACE in Redshift</summary>
      <description>REGEXP_REPLACE error:No match found for function signature REGEXP_REPLACE(&lt;CHARACTER&gt;, &lt;CHARACTER&gt;, &lt;CHARACTER&gt;) Example query:SELECT * , MD5(TRIM(BOTH ' ' FROM REGEXP_REPLACE(LOWER(name), '([[:space:]]|,)+([iInNcC]|[lLcC]).*$', ''))) AS company_id FROM public.account </description>
      <version>None</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Unsafe.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="3288" opendate="2019-8-24 00:00:00" fixdate="2019-9-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>linq4j: support Set literals</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.ExpressionTest.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ConstantExpression.java</file>
    </fixedFiles>
  </bug>
  <bug id="3295" opendate="2019-8-26 00:00:00" fixdate="2019-8-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Aggregate call name lost in serialized json string.</summary>
      <description>When serialize a relnode to json string, the name of aggregate call was lost. For a sql string like thisSELECT max(SAL) as max_sal from EMP group by JOB;The serialized json string is like this{ "rels": [ { "id": "0", "relOp": "LogicalTableScan", "table": [ "scott", "EMP" ], "inputs": [] }, { "id": "1", "relOp": "LogicalProject", "fields": [ "JOB", "SAL" ], "exprs": [ { "input": 2, "name": "$2" }, { "input": 5, "name": "$5" } ] }, { "id": "2", "relOp": "LogicalAggregate", "group": [ 0 ], "aggs": [ { "agg": { "name": "MAX", "kind": "MAX", "syntax": "FUNCTION" }, "type": { "type": "DECIMAL", "nullable": true, "precision": 7, "scale": 2 }, "distinct": false, "operands": [ 1 ], } ] }, { "id": "3", "relOp": "LogicalProject", "fields": [ "max_sal" ], "exprs": [ { "input": 1, "name": "$1" } ] } ]}Lost the name of max call.</description>
      <version>None</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.plan.RelWriterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.RelJsonReader.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.RelJson.java</file>
    </fixedFiles>
  </bug>
  <bug id="3303" opendate="2019-8-28 00:00:00" fixdate="2019-9-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Release Calcite 1.21.0</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.howto.md</file>
      <file type="M">site..docs.history.md</file>
      <file type="M">README</file>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="3330" opendate="2019-9-8 00:00:00" fixdate="2019-10-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>propagateCostImprovements() could result in stack overflow</summary>
      <description>Current implementation uses depth first approach for propagating cost improvements to parent rel nodes. This could lead to stack overflow if the rel node hierarchy is very deep. Suggest use breath first approach for cost propagation.</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.RelSubset.java</file>
      <file type="M">mongodb.src.test.java.org.apache.calcite.adapter.mongodb.MongoAdapterTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="3334" opendate="2019-9-9 00:00:00" fixdate="2019-10-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Refinement for Substitution-Based MV Matching</summary>
      <description>The approach of substitution-based MV matching is an effective way for its simplicity and extensibility. This JIRA proposes to refine existing implementation by several points: Canonicalize before MV matching -- by such canonicalization we can significantly simplify the algebra tree and lower the difficulty for materialization matching. Separate matching rules into two categories and enumerate common matching patterns which need to be covered by rules.Please check the design doc: Design Doc</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.MaterializationTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.MaterializedViewFilterScanRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableRels.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.SubstitutionVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptMaterializations.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.MaterializedViewSubstitutionVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableRules.java</file>
    </fixedFiles>
  </bug>
  <bug id="3335" opendate="2019-9-9 00:00:00" fixdate="2019-9-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Connecting on ElasticSearch server on HTTPS</summary>
      <description>Currently Calcite assumes that elasticsearch server will be exposed on HTTP only. So, it initializes HTTP host with default scheme i.e. HTTP. CodeIf a ElasticSearch server is on HTTPS, connection to it fails with below exception:Caused by: java.net.UnknownHostException This is evident when trying to connect on AWS ElasticSearchService which is exposed only on HTTPS.</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchSchemaFactory.java</file>
    </fixedFiles>
  </bug>
  <bug id="3360" opendate="2019-9-18 00:00:00" fixdate="2019-9-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SqlValidator throws NPE for unregistered function without implicit type coercion</summary>
      <description></description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlTypeNameSpec.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlFunction.java</file>
    </fixedFiles>
  </bug>
  <bug id="3361" opendate="2019-9-18 00:00:00" fixdate="2019-10-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add a test that parses and validates a SQL statement with every built-in Redshift function</summary>
      <description>Add a test that parses and validates a SQL statement with every built-in Redshift function.It would be part of the babel component, but would go beyond parsing, and also validate.</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionProperty.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionConfigImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionConfig.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
      <file type="M">babel.src.test.resources.sql.select.iq</file>
      <file type="M">babel.src.test.java.org.apache.calcite.test.BabelTest.java</file>
      <file type="M">babel.src.test.java.org.apache.calcite.test.BabelQuidemTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="3364" opendate="2019-9-20 00:00:00" fixdate="2019-1-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ClassCastException if group by is used on the result of scalar valued table function</summary>
      <description>I was not able to find a suitable test, so I'll describe the issue using a custom minimal table function returning a row with a single value as an example. I believe, that it should be reproducible against any table function.There is a simple table function my_dummy() that just prints numbers 1 to 5. Simple select works as expected:SQL:select val from table(my_dummy())Result:val : INTEGER54321However, when trying to make an aggregation on top of it, there is a class cast error:SQL:select val from table(my_dummy())group by valError:java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to java.lang.Integer at org.apache.calcite.avatica.util.AbstractCursor$IntAccessor.getInt(AbstractCursor.java:541) at org.apache.calcite.avatica.AvaticaSite.get(AvaticaSite.java:340) at org.apache.calcite.avatica.AvaticaResultSet.getObject(AvaticaResultSet.java:393)Actually, this array Object[] contains a single integer produced by the table function. Also I faced similar class cast errors in a generated code making hashJoin (in a complex production code), I believe, the cause should be the same as in this minimal example.Here is this my_dummy() table function implementation (single file):package com.myapp.tf;import org.apache.calcite.DataContext;import org.apache.calcite.linq4j.AbstractEnumerable;import org.apache.calcite.linq4j.Enumerable;import org.apache.calcite.linq4j.Enumerator;import org.apache.calcite.linq4j.tree.Types;import org.apache.calcite.rel.type.RelDataType;import org.apache.calcite.rel.type.RelDataTypeFactory;import org.apache.calcite.schema.ScannableTable;import org.apache.calcite.schema.TableFunction;import org.apache.calcite.schema.impl.AbstractTable;import org.apache.calcite.schema.impl.TableFunctionImpl;import org.apache.calcite.sql.SqlIdentifier;import org.apache.calcite.sql.SqlOperatorBinding;import org.apache.calcite.sql.parser.SqlParserPos;import org.apache.calcite.sql.type.SqlTypeName;import org.apache.calcite.sql.validate.SqlUserDefinedTableFunction;import java.util.Collections;import java.util.concurrent.atomic.AtomicInteger;import static org.apache.calcite.sql.type.OperandTypes.family;public class DummyFunction extends SqlUserDefinedTableFunction { public static String DUMMY_FUNCTION_NAME = "my_dummy"; public static final TableFunction DUMMY_TABLE_FUNCTION = TableFunctionImpl.create(Types.lookupMethod( DummyFunction.class, "createDummyTable" )); public static DummyTable createDummyTable() { return new DummyTable(); } public DummyFunction() { super(new SqlIdentifier(DUMMY_FUNCTION_NAME, SqlParserPos.ZERO), null, null, family(), Collections.emptyList(), DUMMY_TABLE_FUNCTION ); } @Override public RelDataType inferReturnType(SqlOperatorBinding opBinding) { RelDataTypeFactory typeFactory = opBinding.getTypeFactory(); return typeFactory.builder() .add("val", SqlTypeName.INTEGER) .build(); }}class DummyTable extends AbstractTable implements ScannableTable { private final AtomicInteger cnt = new AtomicInteger(6); @Override public Enumerable&lt;Object[]&gt; scan(DataContext root) { return new AbstractEnumerable&lt;Object[]&gt;() { public Enumerator&lt;Object[]&gt; enumerator() { return new Enumerator&lt;Object[]&gt; () { @Override public Object[] current() { return new Object[] { cnt.intValue() }; } @Override public boolean moveNext() { return cnt.decrementAndGet() &gt; 0; } @Override public void reset() { } @Override public void close() { } }; } }; } @Override public RelDataType getRowType(RelDataTypeFactory typeFactory) { return typeFactory.builder() .add("val", SqlTypeName.INTEGER) .build(); }}And adding it into a schema:mySchemaPlus.add(DUMMY_FUNCTION_NAME, DummyFunction.DUMMY_TABLE_FUNCTION);</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.TableFunctionTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.adapter.enumerable.PhysTypeTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.PhysTypeImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="3370" opendate="2019-9-24 00:00:00" fixdate="2019-9-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Emulate NULL direction for MSSQL</summary>
      <description>MSSQL cannot handle NULLS LAST/FIRST and should emulate the NULLS LAST/FIRST in order by, i.e.--for nulls lastselect &amp;#91;column&amp;#93; from &amp;#91;table&amp;#93;  ORDER BY CASE WHEN &amp;#91;column&amp;#93; IS NULL THEN 1 ELSE 0 END, &amp;#91;column&amp;#93;"--for nulls firstselect &amp;#91;column&amp;#93; from &amp;#91;table&amp;#93;  ORDER BY CASE WHEN &amp;#91;column&amp;#93; IS NULL THEN 0 ELSE 1 END, &amp;#91;column&amp;#93;"</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">README.md</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.MssqlSqlDialect.java</file>
    </fixedFiles>
  </bug>
  <bug id="3383" opendate="2019-9-30 00:00:00" fixdate="2019-10-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow plural time units in interval literals</summary>
      <description>Allow plural time units in interval literals. For example, currently, Calcite allows INTERVAL '2' DAY but gives an error for INTERVAL '2' DAYS. (Note: DAY vs DAYS.)Standard SQL only allows the first; PostgreSQL allows both.</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">server.src.main.codegen.config.fmpp</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.codegen.config.fmpp</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlConformanceEnum.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlConformance.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlAbstractConformance.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParser.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlAbstractParserImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
      <file type="M">core.src.main.codegen.config.fmpp</file>
      <file type="M">babel.src.main.codegen.config.fmpp</file>
    </fixedFiles>
  </bug>
  <bug id="3390" opendate="2019-10-7 00:00:00" fixdate="2019-10-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ITEM expression does not get pushed to the right input of left-outer-join</summary>
      <description>In the following query, the ITEM expression above the Left Outer Join does not get pushed to the right input (null-preserving input) of the join whereas it should since ITEM does not change the nullability. explain plan without implementation for select tt7.columns[0], tt8.columns[0] as x from tt7 left outer join tt8 on tt7.columns[0] = tt8.columns[0]; DrillScreenRel DrillProjectRel(EXPR$0=[$1], x=[ITEM($2, 0)]) DrillJoinRel(condition=[=($0, $3)], joinType=[left]) DrillProjectRel($f2=[ITEM($0, 0)], ITEM=[ITEM($0, 0)]) DrillScanRel(table=[[dfs, tmp, tt7]], groupscan=[EasyGroupScan [selectionRoot=file:/tmp/tt7, numFiles=1, columns=[`columns`[0]], files=[file:/tmp/tt7/0_0_0.csv]]]) DrillProjectRel(columns=[$0], $f2=[ITEM($0, 0)]) DrillScanRel(table=[[dfs, tmp, tt8]], groupscan=[EasyGroupScan [selectionRoot=file:/tmp/tt8, numFiles=1, columns=[`columns`, `columns`[0]], files=[file:/tmp/tt8/0_0_0.csv]]])From what I can tell, the change in behavior occurred with CALCITE-1753; before that the ITEM was pushed on both sides of the Left Outer Join.</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoFilter.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeRules.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeFilter.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.PredicateAnalyzer.java</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexProgramTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexProgramBuilderBase.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptRulesTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlKind.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlItemOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.Strong.java</file>
    </fixedFiles>
  </bug>
  <bug id="3391" opendate="2019-10-8 00:00:00" fixdate="2019-10-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Insecure pages warning on Chrome</summary>
      <description>The problem as identified by apilloud is the use of insecure (plain http) links through a secure (https) connection.For more info see the discussion on the dev list.</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..posts.2017-03-24-release-1.12.0.md</file>
      <file type="M">site..posts.2016-03-22-release-1.7.0.md</file>
      <file type="M">site..posts.2016-03-22-cassandra-adapter.md</file>
      <file type="M">site..posts.2016-02-17-streaming-sql-talk.md</file>
      <file type="M">site..posts.2015-11-08-new-committers.md</file>
      <file type="M">site..posts.2015-10-22-calcite-graduates.md</file>
      <file type="M">site..posts.2015-07-31-xldb-best-lightning-talk.md</file>
      <file type="M">site..docs.stream.md</file>
      <file type="M">site..docs.spatial.md</file>
      <file type="M">site..docs.reference.md</file>
      <file type="M">site..docs.materialized.views.md</file>
      <file type="M">site..docs.lattice.md</file>
      <file type="M">site..docs.howto.md</file>
      <file type="M">site..docs.history.md</file>
      <file type="M">site..docs.druid.adapter.md</file>
      <file type="M">site.README.md</file>
      <file type="M">site.develop.index.md</file>
      <file type="M">site.community.index.md</file>
    </fixedFiles>
  </bug>
  <bug id="3392" opendate="2019-10-9 00:00:00" fixdate="2019-10-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Column expression in DDL should be validated before converting to RexNode</summary>
      <description>As described in CALCITE-3379, we should validate the column expression so that the expression can be converted correctly.</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">server.src.test.resources.sql.table.iq</file>
      <file type="M">server.src.test.java.org.apache.calcite.test.ServerTest.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlCreateTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.StandardConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlToRelConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.InitializerExpressionFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.InitializerContext.java</file>
    </fixedFiles>
  </bug>
  <bug id="3396" opendate="2019-10-10 00:00:00" fixdate="2019-10-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Materialization matching succeeds when query and view are both of UNION but have different &amp;#39;all&amp;#39; property</summary>
      <description>Materialized-View:select * from emps where empid &lt; 300unionselect * from emps where empid &gt; 200Query:select * from emps where empid &lt; 300union allselect * from emps where empid &gt; 200Above MV and Query have different 'all' property in UNION but they succeed matching now. </description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.MaterializationTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.MaterializedViewSubstitutionVisitor.java</file>
    </fixedFiles>
  </bug>
  <bug id="3405" opendate="2019-10-12 00:00:00" fixdate="2019-11-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Prune columns for ProjectableFilterableTable when Project is not simple mapping</summary>
      <description>Say beatles is a ProjectableFilterableTable, below Sqls fail to do column pruning by BindableTableScanSchema of beatles:i intj intk intselect k, 3 from beatles;select k + j from beatles;The reason is that ProjectableFilterableTable only works when the Project is a simple mapping. </description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.ScannableTableTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectTableScanRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="3412" opendate="2019-10-15 00:00:00" fixdate="2019-3-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>FLOOR(timestamp TO WEEK) gives wrong result</summary>
      <description>Floor timestamp to week exist error:The start day of the week is not Sunday or Monday, calcite use Thursday to split a week.Example:sql: select FLOOR(CAST('2017-01-28' AS TIMESTAMP) TO WEEK);Response:2017-01-26 00:00:00.0 2017-01-26 is Thursday that is not our expect result. As result, 2017-01-22 is the first day that we expect.  </description>
      <version>None</version>
      <fixedVersion>avatica-1.16.0,1.23.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.sql.operator.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="3416" opendate="2019-10-15 00:00:00" fixdate="2019-10-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SQL Dialects "DEFAULT"s should be more extensible</summary>
      <description>The behavior of SQLDialect is partly governed by the methods defined on the given dialect subclass and partly governed by options passed in in a Context object. So every dialect subclass exposes a "DEFAULT" instance that has been initialized with the correct Context.However, if you then wish to extend the dialect for one reason or another, you must create a new instance to extend, or of course create a whole new subclass. In either case, you lose the options from the Context passed into the default, which governs important behavior of the dialect. You can copy-paste the relevant Context out of the Calcite code, but then you lose future improvements or fixes that might land in mainline Calcite.It would be nice if each dialect exposed the DEFAULT_CONTEXT that it passed into its DEFAULT instance as a public final member. Then, when extending the dialect, you simply initialize your extension with the DEFAULT_CONTEXT, and if any customization needs to happens on the Context options that's easy to do with the Context's API.</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">piglet.src.test.java.org.apache.calcite.test.PigRelOpTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.VerticaSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.TeradataSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.SybaseSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.SparkSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.SnowflakeSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.RedshiftSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.PostgresqlSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.PhoenixSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.ParaccelSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.OracleSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.NetezzaSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.NeoviewSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.MysqlSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.MssqlSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.LucidDbSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.InterbaseSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.IngresSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.InformixSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.InfobrightSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.HsqldbSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.HiveSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.H2SqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.FirebirdSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.DerbySqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.Db2SqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.CalciteSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.BigQuerySqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.AnsiSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.AccessSqlDialect.java</file>
    </fixedFiles>
  </bug>
  <bug id="3433" opendate="2019-10-21 00:00:00" fixdate="2019-11-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>EQUALS operator between date/timestamp types returns false if the type is nullable</summary>
      <description>sqlselect time0 = time1from (select timestamp'2000-12-30 21:07:32' as time0, timestamp'2000-12-30 21:07:32' as time1 union all select cast(null as timestamp) as time0, cast(null as timestamp) as time1)answer is falsebut sqlselect time0 = time1from(select timestamp'2000-12-30 21:07:32' as time0, timestamp'2000-12-30 21:07:32'as time1)answer is true </description>
      <version>1.17.0,1.18.0,1.19.0,1.20.0,1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="3435" opendate="2019-10-21 00:00:00" fixdate="2019-11-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Enable decimal modulus operation to allow numeric with non-zero scale</summary>
      <description>mod's return type ischain(DECIMAL_MOD_NULLABLE, ARG1_NULLABLE),but mod(33.5,7)'s result is 5.5, not in line with ARG1_NULLABLE.This causes floor(mod(33.5,7)) wrongly returns 5.5</description>
      <version>1.16.0,1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.type.RelDataTypeSystemTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeSystem.java</file>
    </fixedFiles>
  </bug>
  <bug id="3437" opendate="2019-10-22 00:00:00" fixdate="2019-11-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Elasticsearch Match query is not supported</summary>
      <description>Currently, Calcite only builds "term" queries for text fields on elasticsearch. It doesn't support [Match|https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html] queries due to which full-text or contains search is not allowed.Expected query:{ "query": { "constant_score": { "filter": { "match": { "name": "Customer Name" } } } }} Expected behavior:For SqlStdOperatorTable.CONTAINS, calcite should build match query. </description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.QueryBuildersTest.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.QueryBuilders.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.PredicateAnalyzer.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CalciteAssert.java</file>
    </fixedFiles>
  </bug>
  <bug id="3442" opendate="2019-10-24 00:00:00" fixdate="2019-10-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In ElasticSearch adapter, set `stored_fields = _none_` to prohibit FetchPhase get involved</summary>
      <description>For elasticsearch-adapter, when ElasticsearchAggregate involved , set _source = false and size = 0 , Elasticsearch `FetchPhase` would still be executed against the current search process and visit the Lucene stored_fields, which would lead to performance declined dramatically. We can set `stored_fields = _none` prohibit this such behavior entirely, and skip the Elasticsearch's `fetch phase` which would bring time-consuming `fetch phase` for metadata fields such as '_id' etc.</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.ElasticSearchAdapterTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.AggregationTest.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="3448" opendate="2019-10-25 00:00:00" fixdate="2019-11-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>AggregateOnCalcToAggregateUnifyRule ignores Project incorrectly when there&amp;#39;s missing grouping or mapping breaks ordering</summary>
      <description>CALCITE-3087 fixed AggregateOnProjectToAggregateUnifyRule when mapping under Aggregate breaks ordering. But it fails when there's missing grouping in query compared with target.Below matching fails:MV: select empid, deptno, name, count(*) from emps group by empid, deptno, nameQuery: select name, empid, count(*) from emps group by name, empidNote that &amp;#8211; comparing groupings in MV (empid, deptno, name) and groupings in query (name, empid), deptno is missed and ordering is broken</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.MaterializationTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.Mappings.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.SubstitutionVisitor.java</file>
    </fixedFiles>
  </bug>
  <bug id="3454" opendate="2019-10-28 00:00:00" fixdate="2019-10-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support Exchange, SetOp and TableModify for builtin metadata query</summary>
      <description>Exchange RowCount in MaxRowCount,MinRowCount,RowCount</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelMetadataTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdUniqueKeys.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdTableReferences.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdSize.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdSelectivity.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdRowCount.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdPredicates.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdPopulationSize.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdNodeTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdMinRowCount.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdMaxRowCount.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdExpressionLineage.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdDistribution.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdDistinctRowCount.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdColumnUniqueness.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdColumnOrigins.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdCollation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdAllPredicates.java</file>
    </fixedFiles>
  </bug>
  <bug id="3516" opendate="2019-11-18 00:00:00" fixdate="2019-11-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bump net.java.dev.jna:jna to 5.5.0</summary>
      <description>This is a test-only dependency for Cassandra adapter, and having a recent version helps to resolve https://github.com/java-native-access/jna/issues/384With the upgrade we no longer need jna.nosys=true for Windows-based tests</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.properties</file>
      <file type="M">elasticsearch.build.gradle.kts</file>
      <file type="M">cassandra.build.gradle.kts</file>
      <file type="M">bom.build.gradle.kts</file>
      <file type="M">.github.workflows.main.yml</file>
    </fixedFiles>
  </bug>
  <bug id="3520" opendate="2019-11-19 00:00:00" fixdate="2019-12-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Type cast from primitive to box is not correct</summary>
      <description>RexToLixTranslator provides type cast function as public interface to users. However, some issues from primitive to box are concealed by current codegen framework.int x = ...byte y = (byte)x;// RexToLixTranslator.convert(y, Byte.class)Byte.valueOf(y) // Compile error</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.adapter.enumerable.EnumUtilsTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumUtils.java</file>
    </fixedFiles>
  </bug>
  <bug id="3534" opendate="2019-11-25 00:00:00" fixdate="2019-12-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support parse(unparse) alien system non-standard data type</summary>
      <description>For some systems, they have customized SQL type that does not belong to standard SQL, for example, UNSIGNED is a built-in type in MySQL which is synonym of INTEGER.</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUserDefinedTypeNameSpec.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDataTypeSpec.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.PostgresqlSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.OracleSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.MysqlSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.HiveSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.BigQuerySqlDialect.java</file>
    </fixedFiles>
  </bug>
  <bug id="3536" opendate="2019-11-26 00:00:00" fixdate="2019-12-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>NPE when executing plan with Coalesce due to wrong NullAs strategy</summary>
      <description>Currently, COALESCE expression specified in sql string will be rewrite to CASE by SqlValidator &amp;#91;1&amp;#93;, thus CoalesceImplementor is almost no use. But it is actually used somewhere, for example Sum0Splitter. When running AggregateRemove and split expression SUM0, a COALESCE is actually created and no chance to be rewrite to CASE anymore.In current code, CoalesceImplementor doesn't handle NullAs properly by semantics.If we disable the rewrite from COALESCE to CASE in Validator and run below sql in JDBC Test:select grocery_sqft from store where coalesce(grocery_sqft, 0) &gt;= 20000We will get below exception: Caused by: java.lang.RuntimeException: Error while compiling generated Java code:public org.apache.calcite.linq4j.Enumerable bind(final org.apache.calcite.DataContext root) { final org.apache.calcite.linq4j.Enumerable _inputEnumerable = org.apache.calcite.schema.Schemas.queryable(root, root.getRootSchema().getSubSchema("foodmart2"), java.lang.Object[].class, "store").asEnumerable(); return new org.apache.calcite.linq4j.AbstractEnumerable(){ public org.apache.calcite.linq4j.Enumerator enumerator() { return new org.apache.calcite.linq4j.Enumerator(){ public final org.apache.calcite.linq4j.Enumerator inputEnumerator = _inputEnumerable.enumerator(); public void reset() { inputEnumerator.reset(); } public boolean moveNext() { while (inputEnumerator.moveNext()) { final Integer inp16_ = (Integer) ((Object[]) inputEnumerator.current())[16]; if ((inp16_ ? inp16_.intValue() : 0) &gt;= 20000) { return true; } } return false; } public void close() { inputEnumerator.close(); } public Object current() { return (Integer) ((Object[]) inputEnumerator.current())[16]; } }; } };} at org.apache.calcite.avatica.Helper.wrap(Helper.java:37) at org.apache.calcite.avatica.Helper.wrap(Helper.java:37) at org.apache.calcite.adapter.enumerable.EnumerableInterpretable.toBindable(EnumerableInterpretable.java:128) at org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt.implement(CalcitePrepareImpl.java:1111) at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:332) at org.apache.calcite.prepare.Prepare.prepareSql(Prepare.java:231) at org.apache.calcite.prepare.CalcitePrepareImpl.prepare2_(CalcitePrepareImpl.java:638) at org.apache.calcite.prepare.CalcitePrepareImpl.prepare_(CalcitePrepareImpl.java:502) at org.apache.calcite.prepare.CalcitePrepareImpl.prepareSql(CalcitePrepareImpl.java:472) at org.apache.calcite.jdbc.CalciteConnectionImpl.parseQuery(CalciteConnectionImpl.java:231) at org.apache.calcite.jdbc.CalciteMetaImpl.prepareAndExecute(CalciteMetaImpl.java:550) at org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal(AvaticaConnection.java:675) at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:156) ... 29 moreCaused by: org.codehaus.commons.compiler.CompileException: Line 14, Column 28: Not a boolean expression at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:12211) at org.codehaus.janino.UnitCompiler.compileBoolean2(UnitCompiler.java:3994) at org.codehaus.janino.UnitCompiler.access$6300(UnitCompiler.java:215)This issue was found when I try to resolve CALCITE-3124 and CALCITE-3505&amp;#91;1&amp;#93; https://github.com/apache/calcite/blob/master/core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java#L1210</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="3542" opendate="2019-11-27 00:00:00" fixdate="2019-12-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement RepeatUnion All=false</summary>
      <description>CALCITE-2812 introduced recursive queries in Calcite via the new operator RepeatUnion.However, this initial implementation was not complete, since it only provided RepeatUnion ALL (i.e. duplicates were returned).The current ticket aims to implement the missing feature: RepeatUnion non-ALL (i.e. duplicates must be discarded).</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.algebra.md</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.EnumerableDefaults.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.enumerable.EnumerableRepeatUnionTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.enumerable.EnumerableRepeatUnionHierarchyTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableRepeatUnion.java</file>
    </fixedFiles>
  </bug>
  <bug id="3548" opendate="2019-11-30 00:00:00" fixdate="2019-12-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>./gradlew :ubenchmark:jmh cannot find benchmark to run</summary>
      <description>Per https://github.com/melix/jmh-gradle-plugin#configuration, jmh-gradle-plugin expects a file structure as: src/jmh/java, but current structure is src/main/jmh, thus ./gradlew :ubenchmark:jmh reports no benchmark to run.Change the structure accordingly fixed this problem.</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ubenchmark.src.main.jmh.org.apache.calcite.benchmarks.StringConstructBenchmark.java</file>
      <file type="M">ubenchmark.src.main.jmh.org.apache.calcite.benchmarks.StatementTest.java</file>
      <file type="M">ubenchmark.src.main.jmh.org.apache.calcite.benchmarks.PreconditionTest.java</file>
      <file type="M">ubenchmark.src.main.jmh.org.apache.calcite.benchmarks.ParserBenchmark.java</file>
      <file type="M">ubenchmark.src.main.jmh.org.apache.calcite.benchmarks.package-info.java</file>
      <file type="M">ubenchmark.src.main.jmh.org.apache.calcite.benchmarks.FlightRecorderProfiler.java</file>
      <file type="M">ubenchmark.src.main.jmh.org.apache.calcite.benchmarks.AbstractRelNodeGetRelTypeNameBenchmark.java</file>
      <file type="M">ubenchmark.src.main.jmh.org.apache.calcite.adapter.enumerable.CodeGenerationBenchmark.java</file>
    </fixedFiles>
  </bug>
  <bug id="3552" opendate="2019-12-2 00:00:00" fixdate="2019-12-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support MySQL ExtractValue function</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlXmlFunctionsTest.java</file>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.QuidemTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.Matchers.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="3559" opendate="2019-12-3 00:00:00" fixdate="2019-12-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Drop HydromaticFileSetCheck from Checkstyle configuration</summary>
      <description></description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.AggImplementor.java</file>
      <file type="M">src.main.config.checkstyle.suppressions.xml</file>
      <file type="M">src.main.config.checkstyle.checker.xml</file>
      <file type="M">gradle.properties</file>
      <file type="M">buildSrc.settings.gradle.kts</file>
      <file type="M">ubenchmark.src.jmh.java.org.apache.calcite.benchmarks.StringConstructBenchmark.java</file>
      <file type="M">ubenchmark.src.jmh.java.org.apache.calcite.benchmarks.StatementTest.java</file>
      <file type="M">ubenchmark.src.jmh.java.org.apache.calcite.benchmarks.PreconditionTest.java</file>
      <file type="M">ubenchmark.src.jmh.java.org.apache.calcite.benchmarks.ParserBenchmark.java</file>
      <file type="M">ubenchmark.src.jmh.java.org.apache.calcite.benchmarks.package-info.java</file>
      <file type="M">ubenchmark.src.jmh.java.org.apache.calcite.benchmarks.FlightRecorderProfiler.java</file>
      <file type="M">ubenchmark.src.jmh.java.org.apache.calcite.benchmarks.AbstractRelNodeGetRelTypeNameBenchmark.java</file>
      <file type="M">ubenchmark.src.jmh.java.org.apache.calcite.adapter.enumerable.CodeGenerationBenchmark.java</file>
      <file type="M">splunk.src.test.java.org.apache.calcite.test.SplunkAdapterTest.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.util.StringUtils.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.util.package-info.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkTableScan.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkTable.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkSchema.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkQuery.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkPushDownRule.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkDriverVersion.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkDriver.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.search.SplunkConnectionImpl.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.search.SplunkConnection.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.search.SearchResultListener.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.search.package-info.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.package-info.java</file>
      <file type="M">spark.src.test.java.org.apache.calcite.test.SparkAdapterTest.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.SparkToEnumerableConverter.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.SparkRuntime.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.SparkRules.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.SparkRel.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.SparkMethod.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.SparkHandlerImpl.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.package-info.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.JdbcToSparkConverterRule.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.JdbcToSparkConverter.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.HttpServer.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.EnumerableToSparkConverterRule.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.EnumerableToSparkConverter.java</file>
      <file type="M">server.src.test.java.org.apache.calcite.test.ServerUnParserTest.java</file>
      <file type="M">server.src.test.java.org.apache.calcite.test.ServerTest.java</file>
      <file type="M">server.src.test.java.org.apache.calcite.test.ServerQuidemTest.java</file>
      <file type="M">server.src.test.java.org.apache.calcite.test.ServerParserTest.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlKeyConstraint.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlDropView.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlDropType.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlDropTable.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlDropSchema.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlDropObject.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlDropMaterializedView.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlDropFunction.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlDdlNodes.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlCreateView.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlCreateType.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlCreateTable.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlCreateSchema.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlCreateMaterializedView.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlCreateFunction.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlCreateForeignSchema.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlColumnDeclaration.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlCheckConstraint.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlAttributeDefinition.java</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.package-info.java</file>
      <file type="M">server.src.main.codegen.includes.parserImpls.ftl</file>
      <file type="M">plus.src.test.java.org.apache.calcite.materialize.TpcdsLatticeSuggesterTest.java</file>
      <file type="M">plus.src.test.java.org.apache.calcite.chinook.RemotePreparedStatementParametersTest.java</file>
      <file type="M">plus.src.test.java.org.apache.calcite.chinook.EndToEndTest.java</file>
      <file type="M">plus.src.test.java.org.apache.calcite.adapter.tpch.TpchTest.java</file>
      <file type="M">plus.src.test.java.org.apache.calcite.adapter.tpcds.TpcdsTest.java</file>
      <file type="M">plus.src.test.java.org.apache.calcite.adapter.os.OsAdapterTest.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.chinook.StringConcatFunction.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.chinook.PreferredGenresTableFactory.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.chinook.PreferredAlbumsTableFactory.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.chinook.package-info.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.chinook.EnvironmentFairy.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.chinook.ConnectionFactory.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.chinook.CodesFunction.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.chinook.ChosenCustomerEmail.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.chinook.ChinookAvaticaServer.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.chinook.CalciteConnectionProvider.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.tpch.TpchSchemaFactory.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.tpch.TpchSchema.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.tpch.package-info.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.tpcds.TpcdsSchemaFactory.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.tpcds.TpcdsSchema.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.tpcds.package-info.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.os.VmstatTableFunction.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.os.StdinTableFunction.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.os.SqlShell.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.os.PsTableFunction.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.os.Processes.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.os.package-info.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.os.JpsTableFunction.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.os.GitCommitsTableFunction.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.os.FilesTableFunction.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.os.DuTableFunction.java</file>
      <file type="M">pig.src.test.java.org.apache.calcite.test.PigRelBuilderStyleTest.java</file>
      <file type="M">pig.src.test.java.org.apache.calcite.test.PigAdapterTest.java</file>
      <file type="M">pig.src.test.java.org.apache.calcite.test.AbstractPigTest.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigToEnumerableConverterRule.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigToEnumerableConverter.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigTableScan.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigTableFactory.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigTable.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigSchemaFactory.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigSchema.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigRules.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigRelFactories.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigRel.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigProject.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigJoin.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigFilter.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigDataType.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigAggregate.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.PigAggFunction.java</file>
      <file type="M">pig.src.main.java.org.apache.calcite.adapter.pig.package-info.java</file>
      <file type="M">piglet.src.test.java.org.apache.calcite.test.PigScriptTest.java</file>
      <file type="M">piglet.src.test.java.org.apache.calcite.test.PigRelTestBase.java</file>
      <file type="M">piglet.src.test.java.org.apache.calcite.test.PigRelOpTest.java</file>
      <file type="M">piglet.src.test.java.org.apache.calcite.test.PigRelExTest.java</file>
      <file type="M">piglet.src.test.java.org.apache.calcite.test.PigletTest.java</file>
      <file type="M">piglet.src.test.java.org.apache.calcite.test.Fluent.java</file>
      <file type="M">piglet.src.test.java.org.apache.calcite.test.CalciteHandler.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigUserDefinedFunction.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigUdfs.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigUdfFinder.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigTypes.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigToSqlAggregateRule.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigTable.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigRelUdfConverter.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigRelToSqlConverter.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigRelSqlUdfs.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigRelOpWalker.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigRelOpVisitor.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigRelOpInnerVisitor.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigRelExWalker.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigRelExVisitor.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigRelBuilder.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigConverter.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.package-info.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.Handler.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.DynamicTupleRecordType.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.Ast.java</file>
      <file type="M">piglet.src.main.javacc.PigletParser.jj</file>
      <file type="M">mongodb.src.test.java.org.apache.calcite.test.MongoAssertions.java</file>
      <file type="M">mongodb.src.test.java.org.apache.calcite.adapter.mongodb.MongoDatabasePolicy.java</file>
      <file type="M">mongodb.src.test.java.org.apache.calcite.adapter.mongodb.MongoAdapterTest.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.package-info.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoToEnumerableConverterRule.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoToEnumerableConverter.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoTableScan.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoTable.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoSort.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoSchemaFactory.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoSchema.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoRules.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoRel.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoProject.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoMethod.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoFilter.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoEnumerator.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoAggregate.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.tree.TypeTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.tree.package-info.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.PrimitiveTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.package-info.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.OptimizerTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.LookupImplTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.Linq4jTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.Linq4jSuite.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.JoinPreserveOrderTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.InlinerTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.ExpressionTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.DeterministicTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.CorrelateJoinTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.BlockBuilderTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.BlockBuilderBase.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.MemoryEnumerableTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.function.package-info.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.function.FunctionTest.java</file>
      <file type="M">linq4j.src.test.java.com.example.package-info.java</file>
      <file type="M">linq4j.src.test.java.com.example.Linq4jExample.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.WhileStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.VisitorImpl.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Visitor.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.UnaryExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Types.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.TypeBinaryExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.TryStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ThrowStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.TernaryExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.SwitchStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.SwitchCase.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Statement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Shuttle.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ReflectedPseudoField.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.PseudoField.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Primitive.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ParameterExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.package-info.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.OptimizeShuttle.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Node.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.NewExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.NewArrayExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MethodDeclaration.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MethodCallExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MemberMemberBinding.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MemberListBinding.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MemberInitExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MemberExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MemberDeclaration.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MemberBinding.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MemberAssignment.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ListInitExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.LambdaExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.LabelTarget.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.LabelStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.InvocationExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.IndexExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.GotoStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.GotoExpressionKind.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.FunctionExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ForStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ForEachStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.FieldDeclaration.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ExpressionWriter.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ExpressionVisitor.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ExpressionType.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Expressions.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Expression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Evaluator.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ElementInit.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.DynamicExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.DeterministicCodeOptimizer.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.DefaultExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.DeclarationStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ConstructorDeclaration.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ConstantUntypedNull.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ConstantExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ConditionalStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ConditionalExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ClassDeclarationFinder.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ClassDeclaration.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.CatchBlock.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.CallSiteBinder.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.BlockStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Blocks.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.BlockBuilder.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.BinaryExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ArrayLengthRecordField.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.AbstractNode.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.TransformedEnumerator.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.RawQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.RawEnumerable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.QueryProviderImpl.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.QueryProvider.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.QueryableRecorder.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.QueryableFactory.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.QueryableDefaults.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Queryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.PackageMarker.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.package-info.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.OrderedQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.OrderedEnumerable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Ord.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.OpType.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.ModularInteger.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.MemoryFactory.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.MemoryEnumerator.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.MemoryEnumerable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.LookupImpl.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Lookup.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Linq4j.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.JoinType.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.GroupingImpl.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Grouping.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Strict.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.SemiStrict.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Predicate2.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Predicate1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Parameter.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.package-info.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.NullableLongFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.NullableIntegerFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.NullableFloatFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.NullableDoubleFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.NullableBigDecimalFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.NonDeterministic.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.LongFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.IntegerFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Functions.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Function2.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Function1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Function0.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Function.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.FloatFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Experimental.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.EqualityComparer.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.DoubleFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Deterministic.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.BigDecimalFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Extensions.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.ExtendedQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.ExtendedOrderedQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.ExtendedOrderedEnumerable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.ExtendedEnumerable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Enumerator.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.EnumerableQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.EnumerableOrderedQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.EnumerableDefaults.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Enumerable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.DelegatingEnumerator.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.DefaultQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.DefaultEnumerable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.CartesianProductEnumerator.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.BaseQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.AbstractQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.AbstractEnumerable2.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.AbstractEnumerable.java</file>
      <file type="M">kafka.src.test.java.org.apache.calcite.adapter.kafka.KafkaRowConverterTest.java</file>
      <file type="M">kafka.src.test.java.org.apache.calcite.adapter.kafka.KafkaMockConsumer.java</file>
      <file type="M">kafka.src.test.java.org.apache.calcite.adapter.kafka.KafkaAdapterTest.java</file>
      <file type="M">kafka.src.main.java.org.apache.calcite.adapter.kafka.package-info.java</file>
      <file type="M">kafka.src.main.java.org.apache.calcite.adapter.kafka.KafkaTableOptions.java</file>
      <file type="M">kafka.src.main.java.org.apache.calcite.adapter.kafka.KafkaTableFactory.java</file>
      <file type="M">kafka.src.main.java.org.apache.calcite.adapter.kafka.KafkaTableConstants.java</file>
      <file type="M">kafka.src.main.java.org.apache.calcite.adapter.kafka.KafkaStreamTable.java</file>
      <file type="M">kafka.src.main.java.org.apache.calcite.adapter.kafka.KafkaRowConverterImpl.java</file>
      <file type="M">kafka.src.main.java.org.apache.calcite.adapter.kafka.KafkaRowConverter.java</file>
      <file type="M">kafka.src.main.java.org.apache.calcite.adapter.kafka.KafkaMessageEnumerator.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.simple.SimpleJdbcExample.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.simple.BookMasterRegionTest.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.RelationalJdbcExample.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.JsonLoader.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.GeodeZipsTest.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.GeodeEmbeddedPolicy.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.GeodeBookstoreTest.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.GeodeAssertions.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.GeodeAllDataTypesTest.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.AbstractGeodeTest.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.util.package-info.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.util.JavaTypeFactoryExtImpl.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.util.GeodeUtils.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.simple.package-info.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.simple.GeodeSimpleSchemaFactory.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.simple.GeodeSimpleSchema.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.simple.GeodeSimpleScannableTable.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.simple.GeodeSimpleEnumerator.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.package-info.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeToEnumerableConverterRule.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeToEnumerableConverter.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeTableScan.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeTable.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeSort.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeSchemaFactory.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeSchema.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeRules.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeRel.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeProject.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeFilter.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeEnumerator.java</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.rel.GeodeAggregate.java</file>
      <file type="M">file.src.test.java.org.apache.calcite.adapter.file.SqlTest.java</file>
      <file type="M">file.src.test.java.org.apache.calcite.adapter.file.RequiresNetworkExtension.java</file>
      <file type="M">file.src.test.java.org.apache.calcite.adapter.file.RequiresNetwork.java</file>
      <file type="M">file.src.test.java.org.apache.calcite.adapter.file.package-info.java</file>
      <file type="M">file.src.test.java.org.apache.calcite.adapter.file.FileReaderTest.java</file>
      <file type="M">file.src.main.java.org.apache.calcite.adapter.file.package-info.java</file>
      <file type="M">file.src.main.java.org.apache.calcite.adapter.file.FileTableScan.java</file>
      <file type="M">file.src.main.java.org.apache.calcite.adapter.file.FileTable.java</file>
      <file type="M">file.src.main.java.org.apache.calcite.adapter.file.FileSchemaFactory.java</file>
      <file type="M">file.src.main.java.org.apache.calcite.adapter.file.FileSchema.java</file>
      <file type="M">file.src.main.java.org.apache.calcite.adapter.file.FileRowConverter.java</file>
      <file type="M">file.src.main.java.org.apache.calcite.adapter.file.FileReaderException.java</file>
      <file type="M">file.src.main.java.org.apache.calcite.adapter.file.FileReader.java</file>
      <file type="M">file.src.main.java.org.apache.calcite.adapter.file.FileFieldType.java</file>
      <file type="M">file.src.main.java.org.apache.calcite.adapter.file.FileEnumerator.java</file>
      <file type="M">example.function.src.test.java.org.apache.calcite.test.ExampleFunctionTest.java</file>
      <file type="M">example.function.src.main.java.org.apache.calcite.example.maze.package-info.java</file>
      <file type="M">example.function.src.main.java.org.apache.calcite.example.maze.MazeTable.java</file>
      <file type="M">example.function.src.main.java.org.apache.calcite.example.maze.Maze.java</file>
      <file type="M">example.csv.src.test.java.org.apache.calcite.test.CsvTest.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.package-info.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.JsonTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.JsonScannableTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.JsonEnumerator.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvTranslatableTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvTableScan.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvTableFactory.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvStreamTableFactory.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvStreamScannableTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvSchemaFactory.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvSchema.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvScannableTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvProjectTableScanRule.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvFilterableTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvFieldType.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvEnumerator.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.test.ElasticsearchChecker.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.ScrollingTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.QueryBuildersTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.ProjectionTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.Projection2Test.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.MatchTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.EmbeddedElasticsearchPolicy.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchVersionTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchJsonTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.ElasticSearchAdapterTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.BooleanLogicTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.AggregationTest.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.Scrolling.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.QueryBuilders.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.PredicateAnalyzer.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.package-info.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.MapProjectionFieldVisitor.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchVersion.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchTransport.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchToEnumerableConverterRule.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchToEnumerableConverter.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchTableScan.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchTable.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchSort.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchSearchResult.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchSchemaFactory.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchSchema.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchRel.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchProject.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchMethod.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchMapping.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchJson.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchFilter.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchEnumerators.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchConstants.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchAggregate.java</file>
      <file type="M">druid.src.test.java.org.apache.calcite.test.DruidDateRangeRulesTest.java</file>
      <file type="M">druid.src.test.java.org.apache.calcite.test.DruidChecker.java</file>
      <file type="M">druid.src.test.java.org.apache.calcite.test.DruidAdapterIT.java</file>
      <file type="M">druid.src.test.java.org.apache.calcite.test.DruidAdapter2IT.java</file>
      <file type="M">druid.src.test.java.org.apache.calcite.adapter.druid.DruidQueryFilterTest.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.VirtualColumn.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.UnarySuffixOperatorConversion.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.UnaryPrefixOperatorConversion.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.TimeExtractionFunction.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.SubstringOperatorConversion.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.QueryType.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.package-info.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.NaryOperatorConverter.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.Granularity.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.Granularities.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.FloorOperatorConversion.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.ExtractOperatorConversion.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.ExtractionFunction.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.ExtractionDimensionSpec.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidType.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidTableFactory.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidTable.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidSqlOperatorConverter.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidSqlCastConverter.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidSchemaFactory.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidSchema.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidQuery.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidJsonFilter.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidJson.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidExpressions.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidConnectionImpl.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidConnection.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DirectOperatorConversion.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DimensionSpec.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DefaultDimensionSpec.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.ComplexMetric.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.CeilOperatorConversion.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.BinaryOperatorConversion.java</file>
      <file type="M">core.src.test.java.RootHr.java</file>
      <file type="M">core.src.test.java.RootEmployee.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.UtilTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.TestUtilTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.TestUtil.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.SourceTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.Smalls.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.ReflectVisitorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.PrecedenceClimbingParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.PermutationTestCase.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.PartiallyOrderedSetTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.mapping.MappingTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.ImmutableBitSetTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.graph.DirectedGraphTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.ChunkListTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.BitSetsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.tools.TpchSchema.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.tools.FrameworksTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.WithLex.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.UdtTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.UdfTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.TypeCoercionTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.TypeCoercionConverterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.TableInRootSchemaTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.TableFunctionTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.StreamTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTestCase.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorMatchTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorFeatureTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorDynamicTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelTestBase.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelConverterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelConverterExtendedTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlTestGen.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlStatisticProviderTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlOperatorBindingTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlLineTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlLimitsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlJsonFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlAdvisorJdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexTransformerTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexShuttleTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexProgramTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexProgramBuilderBase.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexImplicationCheckerTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptTestBase.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptRulesTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelMetadataTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelMdPercentageOriginalRowsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelMdColumnOriginsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelBuilderTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.QuidemTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.PigRelBuilderTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.package-info.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MutableRelTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MultiJdbcSchemaJoinTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.ModelTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MockSqlOperatorTable.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MockRelOptPlanner.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MockRelOptCost.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MaterializationTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.Matchers.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.LinqFrontJdbcBackTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.LatticeTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcFrontLinqBackTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcFrontJdbcBackTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcFrontJdbcBackLinqMiddleTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcAdapterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.InterpreterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.InduceGroupingTypeTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.HierarchySchema.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.HepPlannerTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.fuzzer.SimplifyTask.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.fuzzer.RexToTestCodeShuttle.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.fuzzer.RexShrinker.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.fuzzer.RexProgramFuzzyTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.fuzzer.RexFuzzer.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.FoodmartTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.FoodMartQuerySet.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.FoodMartLatticeStatisticProvider.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.FilteratorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.ExceptionMessageTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.enumerable.package-info.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.enumerable.EnumerableRepeatUnionTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.enumerable.EnumerableRepeatUnionHierarchyTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.enumerable.EnumerableJoinTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.enumerable.EnumerableHashJoinTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.enumerable.EnumerableCorrelateTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.enumerable.EnumerableCalcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.enumerable.EnumerableBatchNestedLoopJoinTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.DiffTestCase.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.DiffRepository.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CountriesTableFunction.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CoreQuidemTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.ConnectionSpec.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.SamplePlugin.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.package-info.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestTimedCommandGenerator.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestPluginCommand.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestPlugin.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestCommandScript.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestCommandGenerator.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestCommandExecutor.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestCommand.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CollectionTypeTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.catalog.VirtualColumnsExpressionFactory.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.catalog.MockCatalogReaderSimple.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.catalog.MockCatalogReaderExtended.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.catalog.MockCatalogReaderDynamic.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.catalog.MockCatalogReader.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.catalog.Fixture.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.catalog.EmpInitializerExpressionFactory.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.catalog.CountingFactory.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.catalog.CompoundNameColumnResolver.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.catalog.CompoundNameColumn.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CalciteSqlOperatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CalciteResourceTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CalciteAssert.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.BookstoreSchema.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.validate.SqlValidatorUtilTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.validate.LexEscapeTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.validate.LexCaseSensitiveTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.type.SqlTypeUtilTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.type.SqlTypeFixture.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.type.SqlTypeFactoryTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.type.RelDataTypeSystemTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlValidatorTester.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlTypeNameTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlTests.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlTestFactory.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlTester.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlRuntimeTester.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlPrettyWriterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlAdvisorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.package-info.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.DocumentationTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.AbstractSqlTester.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.SqlSetOptionOperatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlUnParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.parserextensiontesting.SqlUploadJarNode.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.parserextensiontesting.SqlCreateTable.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.parserextensiontesting.ExtensionSqlParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.schemas.HrClusteredSchema.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.runtime.EnumerablesTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.runtime.DeterministicAutomatonTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.runtime.BinarySearchTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.runtime.AutomatonTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rex.RexSqlStandardConvertletTableTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rex.RexExecutorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rex.RexBuilderTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rules.SortRemoveRuleTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rules.EnumerableLimitRuleTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rules.DateRangeRulesTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.RelDistributionTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.RelCollationTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterStructsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.logical.ToLogicalConverterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.profile.ProfilerTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.prepare.LookupOperatorOverloadsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.volcano.VolcanoPlannerTraitTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.volcano.VolcanoPlannerTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.volcano.TraitPropagationTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.volcano.TraitConversionTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.volcano.PlannerTests.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.volcano.ComboRuleTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.volcano.CollationConversionTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.RelWriterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.RelTraitTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.RelOptUtilTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.RelOptPlanReaderTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.materialize.LatticeSuggesterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.jdbc.JavaTypeFactoryTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.jdbc.CalciteRemoteDriverTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.examples.RelBuilderExample.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.examples.foodmart.java.JdbcExample.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.adapter.generate.RangeTable.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.adapter.enumerable.TypeFinderTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.adapter.enumerable.PhysTypeTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.adapter.enumerable.EnumUtilsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.adapter.clone.ArrayTableTest.java</file>
      <file type="M">core.src.test.codegen.includes.parserImpls.ftl</file>
      <file type="M">core.src.main.version.org.apache.calcite.jdbc.CalciteDriverVersion.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.XmlOutput.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Util.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Unsafe.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.UnmodifiableArrayList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.TryThreadLocal.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.trace.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.trace.CalciteTrace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.trace.CalciteTimingTracer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.trace.CalciteLogger.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.TimeWithTimeZoneString.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.TimeString.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.TimestampWithTimeZoneString.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.TimestampString.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Template.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Static.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.StackWriter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Stacks.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.SourceStringReader.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Sources.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Source.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.SerializableCharset.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.SaffronProperties.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ReflectUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ReflectiveVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ReflectiveVisitDispatcher.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.PrecedenceClimbingParser.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Permutation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.PartiallyOrderedSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Pair.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Optionality.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.NumberUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.NlsString.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.NameMultimap.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.NameMap.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.MappingType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.Mappings.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.Mapping.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.IntPair.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.AbstractTargetMapping.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.AbstractSourceMapping.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Litmus.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.JsonBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.javac.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.javac.JavaCompilerArgs.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.javac.JavaCompiler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.javac.JaninoCompiler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.IntList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.IntegerIntervalSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ImmutableNullableList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ImmutableIntList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ImmutableBitSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Holder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.TopologicalOrderIterator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.Graphs.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.DirectedGraph.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.DepthFirstIterator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.DefaultEdge.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.DefaultDirectedGraph.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.CycleDetector.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.BreadthFirstIterator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.AttributedDirectedGraph.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Glossary.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Filterator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.EquivalenceSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.DelegatingInvocationHandler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.DateTimeStringUtils.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.DateString.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ConversionUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ControlFlowException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CompositeMap.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CompositeList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Closer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ChunkList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CastingList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CaseInsensitiveComparator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CancelFlag.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CalciteValidatorException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CalciteParserException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Bug.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BlackholeMap.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BitString.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BitSets.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Benchmark.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BarfingInvocationHandler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.ValidationException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RuleSets.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RuleSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RelRunners.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RelRunner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RelConversionException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RelBuilderFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RelBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.Programs.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.Program.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.Planner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.PigRelBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.Frameworks.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.FrameworkConfig.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.statistic.QuerySqlStatisticProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.statistic.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.statistic.MapSqlStatisticProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.statistic.CachingSqlStatisticProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.WithScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.WithNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.WithItemNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.UnnestNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.TableScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.TableNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.TableConstructorNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorWithHints.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorCatalogReader.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlUserDefinedTableMacro.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlUserDefinedTableFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlUserDefinedFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlUserDefinedAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlScopedShuttle.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlQualified.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlNameMatchers.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlNameMatcher.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlMonotonicity.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlMonikerType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlMonikerImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlMoniker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlModality.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlIdentifierMoniker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlDelegatingConformance.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlConformanceEnum.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlConformance.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlAbstractConformance.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SetopNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SelectScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SelectNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.ScopeChild.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SchemaNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.ProcedureNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.ParameterScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.ParameterNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.OverScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.OrderByScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.MatchRecognizeScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.MatchRecognizeNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.ListScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.JoinScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.JoinNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.implicit.TypeCoercions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.implicit.TypeCoercionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.implicit.TypeCoercion.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.implicit.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.implicit.AbstractTypeCoercion.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.IdentifierNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.GroupByScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.FieldNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.EmptyScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.DelegatingSqlValidatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.DelegatingSqlValidatorCatalogReader.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.DelegatingScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.DelegatingNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.CyclicDefinitionException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.CollectScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.CollectNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.CatalogScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AliasNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AggVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AggregatingSelectScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AggregatingScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AggFinder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AggChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AbstractNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.SqlVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.SqlString.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.SqlShuttle.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.SqlBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.SqlBasicVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.ReflectiveSqlOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.ListSqlOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.ChainedSqlOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.TableFunctionReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeTransforms.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeTransformCascade.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeTransform.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeName.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeMappingRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeMappingRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeFamily.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeExplicitPrecedenceList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeCoercionRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeAssignmentRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlSingleOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlReturnTypeInferenceChain.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlOperandTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlOperandCountRanges.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SetopOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SameOperandTypeExceptLastOperandChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SameOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ReturnTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.OrdinalReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.OperandTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.OperandsTypeChecking.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ObjectSqlType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.MultisetSqlType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.MultisetOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.MatchReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.MapSqlType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.LiteralOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.JavaToSqlTypeConversionRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.IntervalSqlType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.InferTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ImplicitCastOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.FamilyOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ExtraSqlTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ExplicitReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ExplicitOperandTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.CursorReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.CompositeSingleOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.CompositeOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ComparableOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.BasicSqlType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.AssignableOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ArraySqlType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.AbstractSqlType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlWriter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlWithItem.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlWithinGroupOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlWith.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlWindow.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlValuesOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUserDefinedTypeNameSpec.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUpdate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUnresolvedFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUnnestOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlTypeNameSpec.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlTimestampLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlTimeLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlTableRef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSyntax.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlStateCodes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSplittableAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSpecialOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSnapshot.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSetOption.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSetOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSelectOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSelectKeyword.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSelect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSampleSpec.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlRowTypeNameSpec.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlRankFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlProcedureCallOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlPrefixOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlPostfixOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlOverOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlOrderBy.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlOperatorBinding.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlOperandCountRange.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlNumericLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlNullTreatmentOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlNullSemantics.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlNodeList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlMerge.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlMatchRecognize.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlMatchFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlLateralOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlKind.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJsonValueEmptyOrErrorBehavior.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJsonQueryWrapperBehavior.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJsonQueryEmptyOrErrorBehavior.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJsonExistsErrorBehavior.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJsonEncoding.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJsonEmptyOrError.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJsonConstructorNullClause.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJdbcFunctionCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJdbcDataTypeName.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlIntervalQualifier.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlIntervalLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlInternalOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlInsertKeyword.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlInsert.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlInfixOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlIdentifier.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlHint.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlGroupedWindowFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlFunctionCategory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlFunctionalOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlFilterOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlExplainLevel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlExplainFormat.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlExplain.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlExecutableStatement.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDynamicParam.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDrop.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDialectFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDialectFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDescribeTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDescribeSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDelete.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDdl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDateLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDataTypeSpec.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlCreate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlCollectionTypeNameSpec.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlCollation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlCharStringLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlCallBinding.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlBinaryStringLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlBinaryOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlBasicTypeNameSpec.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlBasicCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlAsOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlAlter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlAlienSystemTypeNameSpec.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlAccessType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlAccessEnum.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlAbstractStringLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlAbstractDateTimeLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.pretty.SqlPrettyWriter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.pretty.SqlFormatOptions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.pretty.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParserUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParserPos.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParserImplFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParser.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParseException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlAbstractParserImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.Span.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.impl.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.JoinType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.JoinConditionType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlTrimFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlTranslate3Function.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlTimestampDiffFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlTimestampAddFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlThrowOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlSumEmptyIsZeroAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlSumAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlSubstringFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStringContextVariable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlSingleValueAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlSequenceValueOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlRowOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlRollupOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlRegrCountAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlRegexpReplaceFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlRandIntegerFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlRandFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlQuantifyOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlPosixRegexOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlPositionFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlOverlayFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlOverlapsOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlNullifFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlNtileAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlNthValueAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlNewOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMultisetValueConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMultisetSetOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMultisetQueryConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMultisetMemberOfOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMonotonicUnaryFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMonotonicBinaryOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMinMaxAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMapValueConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMapQueryConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLiteralChainOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLikeOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperatorTableFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibrary.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLeadLagAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonValueFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonValueExpressionOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonTypeFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonStorageSizeFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonRemoveFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonQueryFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonPrettyFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonObjectFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonObjectAggAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonLengthFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonKeysFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonExistsFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonDepthFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonArrayFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonArrayAggAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlItemOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlInOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlHistogramAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlGroupingIdFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlGroupingFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlGroupIdFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlFloorFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlFirstLastValueAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlExtractFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlExtendOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlDotOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlDefaultOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlDatetimePlusOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlDatePartFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCursorConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCurrentDateFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCovarAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCountAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlConvertFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlColumnListConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCollectionTableOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCoalesceFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCastOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCastFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCaseOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCase.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlBitOpAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlBetweenOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlBaseContextVariable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlAvgAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlArrayValueConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlArrayQueryConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlArgumentAssignmentOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlAnyValueAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlAbstractTimeFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlAbstractGroupFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.OracleSqlOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.LibraryOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.ExplicitOperatorBinding.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.VerticaSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.TeradataSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.SybaseSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.SparkSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.SnowflakeSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.RedshiftSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.PostgresqlSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.PhoenixSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.ParaccelSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.OracleSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.NetezzaSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.NeoviewSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.MysqlSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.MssqlSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.LucidDbSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.JethroDataSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.InterbaseSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.IngresSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.InformixSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.InfobrightSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.HsqldbSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.HiveSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.H2SqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.FirebirdSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.DerbySqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.Db2SqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.CalciteSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.BigQuerySqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.AnsiSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.AccessSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlAdvisorValidator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlAdvisorHint2.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlAdvisorHint.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlAdvisorGetHintsFunction2.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlAdvisorGetHintsFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlAdvisor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SubQueryConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.StandardConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlToRelConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlRexConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlRexConvertlet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlRexContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlNodeToRexConverterImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlNodeToRexConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.RelStructuredTypeFlattener.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.RelFieldTrimmer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.RelDecorrelator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.ReflectiveConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.NullInitializerExpressionFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.InitializerExpressionFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.InitializerContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.DeduplicateCorrelateVariables.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.CorrelationReferenceFinder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.AuxiliaryConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.server.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.server.CalciteServerStatement.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.server.CalciteServer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Wrapper.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.TranslatableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.TransientTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.TemporalTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.TableMacro.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.TableFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.TableFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Table.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.StreamableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Statistics.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Statistic.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.SemiMutableSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.SchemaVersion.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Schemas.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.SchemaPlus.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.SchemaFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Schema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ScannableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ScalarFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.QueryableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ProjectableFilterableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Path.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ModifiableView.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ModifiableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Member.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.ViewTableMacro.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.ViewTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.TableMacroImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.TableFunctionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.StarTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.ScalarFunctionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.ReflectiveFunctionBase.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.ModifiableViewTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.MaterializedViewTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.LongSchemaVersion.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.ListTransientTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.DelegatingSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.AggregateFunctionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.AbstractTableQueryable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.AbstractTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.AbstractSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ImplementableFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ImplementableAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.FunctionParameter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Function.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.FilterableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ExtensibleTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.CustomColumnResolvingTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ColumnStrategy.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.AggregateFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Utilities.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Unit.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Typed.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.TrustAllSslSocketFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SortedMultiMap.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SocketFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.ResultSetEnumerable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Resources.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.RecordEnumeratorCursor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.RandomFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.PredicateImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Pattern.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.ObjectEnumeratorCursor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Matcher.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Like.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.JsonFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.HttpUtils.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Hook.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.GeoFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.FlatLists.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Feature.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.EnumeratorCursor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Enumerables.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.DeterministicAutomaton.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.ConsList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteContextException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Bindable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.BinarySearch.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.AutomatonBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Automaton.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.ArrayEnumeratorCursor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.ArrayComparator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.ArrayBindable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.AbstractImmutableList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexWindowBound.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexWindow.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexVisitorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexVariable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexUnknownAs.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexTransformer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexToSqlNodeConverterImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexToSqlNodeConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexTableInputRef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSubQuery.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSqlStandardConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSqlReflectiveConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSqlConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSqlConvertlet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSlot.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSimplify.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexShuttle.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexRangeRef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexProgramBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexProgram.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexPermuteInputsShuttle.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexPermutationShuttle.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexPatternFieldRef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexPattern.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexOver.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexMultisetUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexLocalRef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexInterpreter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexInputRef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexFieldCollation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexFieldAccess.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexExecutorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexExecutor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexExecutable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexDynamicParam.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexDigestIncludeType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexCorrelVariable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexCopier.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexCallBinding.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexBiVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexAnalyzer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexAction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.LogicVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.StructKind.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelRecordType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelProtoDataType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeSystemImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeSystem.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypePrecedenceList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeHolder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeFieldImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeField.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeFamily.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeComparability.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelCrossType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.DynamicRecordTypeImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.DynamicRecordType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.DelegatingTypeSystem.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.stream.StreamRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.stream.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.stream.LogicalDelta.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.stream.LogicalChi.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.stream.Delta.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.stream.Chi.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.SingleRel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ValuesReduceRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.UnionToDistinctRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.UnionPullUpConstantsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.UnionMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.UnionEliminatorRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.TableScanRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SubQueryRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SortUnionTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SortRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SortRemoveConstantKeysRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SortProjectTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SortJoinTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SortJoinCopyRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SemiJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SemiJoinRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SemiJoinProjectTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SemiJoinJoinTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SemiJoinFilterTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ReduceExpressionsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ReduceDecimalsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.PushProjector.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.PruneEmptyRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectWindowTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectToWindowRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectToCalcRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectTableScanRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectSortTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectSetOpTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectJoinTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectJoinRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectJoinJoinRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectFilterTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectCorrelateTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectCalcMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.MultiJoinProjectTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.MultiJoinOptimizeBushyRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.MultiJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.MaterializedViewFilterScanRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.MatchRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.LoptSemiJoinOptimizer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.LoptOptimizeJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.LoptMultiJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.LoptJoinTree.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinUnionTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinToMultiJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinToCorrelateRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinPushTransitivePredicatesRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinPushThroughJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinPushExpressionsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinProjectTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinExtractFilterRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinCommuteRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinAssociateRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinAddRedundantSemiJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.IntersectToDistinctRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterToCalcRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterTableScanRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterTableFunctionTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterSetOpTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterRemoveIsNotDistinctFromRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterProjectTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterCorrelateRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterCalcMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterAggregateTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ExchangeRemoveConstantKeysRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.EquiJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.DateRangeRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.CoerceInputsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.CalcSplitRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.CalcRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.CalcRelSplitter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.CalcMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateValuesRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateUnionTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateUnionAggregateRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateStarTableRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateReduceFunctionsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateProjectPullUpConstantsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateProjectMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateJoinTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateJoinRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateJoinJoinRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateFilterTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateExtractProjectRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateExpandDistinctAggregatesRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateCaseToFilterRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AbstractMaterializedViewRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AbstractJoinExtractFilterRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelWriter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelShuttleImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelShuttle.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelRoot.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelReferentialConstraintImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelReferentialConstraint.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelNodes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelInput.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelHomogeneousShuttle.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelFieldCollation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelDistributionTraitDef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelDistributions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelDistribution.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelCollationTraitDef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelCollations.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelCollationImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelCollation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.SqlImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.RelToSqlConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableWindow.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableValues.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableUnion.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableUncollect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableTableModify.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableTableFunctionScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableSort.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableSingleRel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableSetOp.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableSample.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableRelVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableRelType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableRels.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableRel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableProject.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableMultiRel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableMinus.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableMatch.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableLeafRel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableIntersect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableFilter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableExchange.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableCorrelate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableCollect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableCalc.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableBiRel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableAggregate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.Holder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.UnboundMetadata.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMetadataQueryBase.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMetadataQuery.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdUniqueKeys.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdTableReferences.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdSize.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdSelectivity.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdRowCount.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdPredicates.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdPopulationSize.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdPercentageOriginalRows.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdParallelism.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdNodeTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdMinRowCount.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdMemory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdMaxRowCount.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdExpressionLineage.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdExplainVisibility.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdDistribution.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdDistinctRowCount.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdColumnUniqueness.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdColumnOrigins.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdAllPredicates.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelColumnOrigin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelColumnMapping.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.ReflectiveRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.NullSentinel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.MetadataHandler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.MetadataFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.MetadataFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.MetadataDef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.Metadata.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.JaninoRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.DefaultRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.CyclicMetadataException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.ChainedRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.CachingRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.BuiltInMetadata.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.ToLogicalConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalWindow.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalValues.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalUnion.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalTableSpool.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalTableScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalTableModify.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalTableFunctionScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalSortExchange.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalSort.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalSnapshot.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalRepeatUnion.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalProject.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalMinus.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalMatch.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalIntersect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalFilter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalExchange.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalCorrelate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalCalc.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalAggregate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.InvalidRelException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.RelHint.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.NodeTypeHintStrategy.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.HintStrategyTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.HintStrategyCascade.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.HintStrategy.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.HintStrategies.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.Hintable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.ExplicitHintStrategy.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.ExplicitHintMatcher.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.RelXmlWriter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.RelWriterImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.RelJsonWriter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.RelJsonReader.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.RelJson.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.RelEnumTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Window.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Values.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Union.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Uncollect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.TableSpool.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.TableScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.TableModify.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.TableFunctionScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Spool.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.SortExchange.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Sort.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Snapshot.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.SetOp.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Sample.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.RepeatUnion.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.RelFactories.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Project.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Minus.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Match.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.JoinRelType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.JoinInfo.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Join.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Intersect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Filter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Exchange.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.EquiJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.CorrelationId.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Correlate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Collect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Calc.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.AggregateCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Aggregate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.convert.TraitMatchingRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.convert.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.convert.NoneConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.convert.ConverterRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.convert.ConverterImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.convert.Converter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.BiRel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.AbstractRelNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.profile.SimpleProfiler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.profile.ProfilerImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.profile.Profiler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.profile.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.RelOptTableImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.QueryableRelBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.Prepare.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.PlannerImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.LixToRelTranslator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalciteSqlValidator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalcitePrepareImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalciteMaterializer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalciteCatalogReader.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoRuleMatch.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoRuleCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoPlannerPhaseRuleMappingInitializer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoPlannerPhase.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoPlanner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoCost.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.RuleQueue.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.RelSubset.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.RelSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.ChainedPhaseRuleMappingInitializer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.AbstractConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.VisitorDataContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.ViewExpanders.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.TableAccessMap.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.Strong.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RexImplicationChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelTraitSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelTraitPropagationVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelTraitDef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelTrait.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptSchemaWithSampling.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptSamplingParameters.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRuleOperandChildren.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRuleOperandChildPolicy.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRuleOperand.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRuleCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptQuery.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptPredicateList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptPlanner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptMaterializations.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptMaterialization.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptListener.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptLattice.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptCostImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptCostFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptCost.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptConnection.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptCluster.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptAbstractTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelMultipleTrait.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelCompositeTrait.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.MulticastRelOptListener.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.MaterializedViewSubstitutionVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepRuleCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepRelVertex.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepProgramBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepProgram.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepPlanner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepMatchOrder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepInstruction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.ConventionTraitDef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.Convention.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.Contexts.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.Context.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.CommonRelSubExprRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.AbstractRelOptPlanner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.ModelHandler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonView.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonTypeAttribute.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonTile.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonStream.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonRoot.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonMeasure.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonMaterialization.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonMapSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonLattice.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonJdbcSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonCustomTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonCustomSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonColumn.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.TileSuggester.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.TileKey.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.Step.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.SqlStatisticProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.SqlLatticeStatisticProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.ProfilerLatticeStatisticProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.Path.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.MutableNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.MaterializationService.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.MaterializationKey.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.MaterializationActor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.LatticeTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.LatticeSuggester.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.LatticeStatisticProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.LatticeSpace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.Lattices.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.LatticeRootNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.LatticeNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.LatticeChildNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.Lattice.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.DelegatingLatticeStatisticProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.CachingLatticeStatisticProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.SqlTimeoutException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.SimpleCalciteSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.MetadataSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.JavaTypeFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.JavaRecordType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.Driver.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.ContextSqlValidator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteStatement.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteRootSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteResultSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalcitePreparedStatement.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalcitePrepare.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteMetaImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteJdbc41Factory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteConnectionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteConnection.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CachingCalciteSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.WindowNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.ValuesNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.UnionNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.UncollectNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.TableScanNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Source.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.SortNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Sink.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.SetOpNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Scalar.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Row.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.ProjectNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.NoneToBindableConverterRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Nodes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Node.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.MatchNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.JoinNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.JaninoRexCompiler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Interpreters.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Interpreter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.InterpretableRel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.InterpretableConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.InterpretableConvention.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.FilterNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Context.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Compiler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.CollectNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Bindables.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.BindableRel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.BindableConvention.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.AggregateNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.AbstractSingleNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.Demo.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.DataContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.NullCollation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.Lex.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteSystemProperty.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionProperty.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionConfigImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionConfig.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcUtils.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverterRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcTableScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcRel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcQueryProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcConvention.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcCatalogSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.java.ReflectiveSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.java.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.java.Map.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.java.JavaTypeFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.java.Array.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.java.AbstractQueryableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.Java9Workaround.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.WinAggResultContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.WinAggResetContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.WinAggImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.WinAggFrameResultContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.WinAggFrameContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.WinAggContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.WinAggAddContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.StrictWinAggImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.StrictAggImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.SourceSorter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.ReflectiveCallNotNullImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.PhysTypeImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.PhysType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.NullPolicy.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.NotNullImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.NestedBlockBuilderImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.NestedBlockBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.MatchUtils.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.MatchImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.LazyAggregateLambdaFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.JavaRowFormat.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.JavaRelImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.impl.WinAggResultContextImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.impl.WinAggResetContextImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.impl.WinAggAddContextImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.impl.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.impl.AggResultContextImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.impl.AggResetContextImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.impl.AggAddContextImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumUtils.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableWindowRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableWindow.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableValuesRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableValues.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableUnionRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableUnion.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableUncollectRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableUncollect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableTableSpoolRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableTableSpool.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableTableScanRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableTableScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableTableModifyRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableTableModify.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableTableFunctionScanRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableSortRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableSort.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableRepeatUnion.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableRelImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableRel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableProjectToCalcRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableProjectRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableProject.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableNestedLoopJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableMinusRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableMinus.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableMergeJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableMergeJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableMatchRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableMatch.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableLimitRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableLimit.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableIntersectRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableIntersect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableInterpreterRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableInterpreter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableInterpretable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableHashJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableFilterToCalcRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableFilterRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableFilter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableCorrelateRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableCorrelate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableConvention.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableCollectRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableCollect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableCalcRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableCalc.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableBindable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableBatchNestedLoopJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableBatchNestedLoopJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableAggregateRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableAggregate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.CallImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.BasicLazyAccumulator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.BasicAggregateLambdaFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.AggResultContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.AggResetContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.AggregateLambdaFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.AggImpState.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableRepeatUnionRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableTableFunctionScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexToLixTranslator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.SubstitutionVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdCollation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterMultiJoinMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectMultiJoinMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlSimpleParser.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.NameSet.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlHintsConverterTest.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidDateTimeUtils.java</file>
      <file type="M">druid.src.main.java.org.apache.calcite.adapter.druid.DruidRules.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchRules.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.EmbeddedElasticsearchNode.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvStreamReader.java</file>
      <file type="M">build.gradle.kts</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.ReflectiveSchemaTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.ScannableTableTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.tools.PlannerTest.java</file>
      <file type="M">babel.src.main.codegen.includes.parserImpls.ftl</file>
      <file type="M">babel.src.main.java.org.apache.calcite.sql.babel.Babel.java</file>
      <file type="M">babel.src.main.java.org.apache.calcite.sql.babel.package-info.java</file>
      <file type="M">babel.src.test.java.org.apache.calcite.test.BabelParserTest.java</file>
      <file type="M">babel.src.test.java.org.apache.calcite.test.BabelQuidemTest.java</file>
      <file type="M">babel.src.test.java.org.apache.calcite.test.BabelTest.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraEnumerator.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraFilter.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraLimit.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraMethod.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraProject.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraRel.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraSchema.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraSchemaFactory.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraSort.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraTable.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraTableScan.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraToEnumerableConverter.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.CassandraToEnumerableConverterRule.java</file>
      <file type="M">cassandra.src.main.java.org.apache.calcite.adapter.cassandra.package-info.java</file>
      <file type="M">cassandra.src.test.java.org.apache.calcite.test.CassandraAdapterTest.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.clone.ArrayTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.clone.CloneSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.clone.ColumnLoader.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.clone.ListTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.clone.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.AggAddContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.AggContext.java</file>
    </fixedFiles>
  </bug>
  <bug id="356" opendate="2014-7-25 00:00:00" fixdate="2014-1-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow column references of the form schema.table.column</summary>
      <description>See https://issues.apache.org/jira/browse/DRILL-1196.Query of the form Select `schema`.`table`.* from `schema`.table` returns an error from the parser. This affects loading data to TIBCO Spotfire BI tool.SELECT `hive43.default`.`bella_table`.* FROM `hive43.default`.`bella_table`;SqlParseException:[ Encountered ". *" at line 1, column 39.Was expecting one of: "FROM" ... "," ... "AS" ... &lt;IDENTIFIER&gt; ... &lt;QUOTED_IDENTIFIER&gt; ... &lt;BACK_QUOTED_IDENTIFIER&gt; ... &lt;BRACKET_QUOTED_IDENTIFIER&gt; ... &lt;UNICODE_QUOTED_IDENTIFIER&gt; ... "NOT" ... "IN" ... "BETWEEN" ... "LIKE" ... "SIMILAR" ... "=" ... "&gt;" ... "&lt;" ... "&lt;=" ... "&gt;=" ... "&lt;&gt;" ... "+" ... "-" ... "*" ... "/" ... "||" ... "AND" ... "OR" ... "IS" ... "MEMBER" ... "SUBMULTISET" ... "MULTISET" ... "[" ... "." &lt;IDENTIFIER&gt; ... "." &lt;QUOTED_IDENTIFIER&gt; ... "." &lt;BACK_QUOTED_IDENTIFIER&gt; ... "." &lt;BRACKET_QUOTED_IDENTIFIER&gt; ... "." &lt;UNICODE_QUOTED_IDENTIFIER&gt; ... "(" ... ]"</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.sql.misc.oq</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MockCatalogReader.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlAdvisorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Util.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Bug.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.WithScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorWithHints.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorCatalogReader.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlMonikerType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlMonikerImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlMonikerComparator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlMoniker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SelectScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.ParameterScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.OrderByScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.ListScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.EmptyScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.DelegatingScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AggregatingSelectScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AggChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlIdentifier.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParserPos.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlSimpleParser.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlAdvisor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlToRelConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalciteCatalogReader.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
    </fixedFiles>
  </bug>
  <bug id="3560" opendate="2019-12-3 00:00:00" fixdate="2019-12-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Additional calcite.util.Source implementation for generic text source (eg. CharSource)</summary>
      <description>Currently calcite calcite.util.Source interface can be built only from File or URL. This forces data to be stored on disk or accessed remotely using URL api. This proposal adds another Source implementation on the top of CharSource so calcite adapters can operate on in-memory elements like String or generic text sources.</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">file.src.main.java.org.apache.calcite.adapter.file.FileReader.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.JsonEnumerator.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvEnumerator.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.SourceTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Sources.java</file>
      <file type="M">core.build.gradle.kts</file>
    </fixedFiles>
  </bug>
  <bug id="3565" opendate="2019-12-4 00:00:00" fixdate="2019-12-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Explicitly cast assignable operand types to decimal for udf</summary>
      <description> Type is assignable conceptually, but in the runtime phase, explicite cast is still required. For example, according to SqlTypeAssignmentRules, ST_MakePoint(Decimal, Decimal) also accepts operands with (Integer, Decimal) types, because Decimal is assignable from Integer. @Test public void test1() { final String sql = "SELECT ST_MakePoint(1, 2.1)"; CalciteAssert.that() .with(CalciteAssert.Config.GEO) .query(sql) .returns("EXPR$0={\"x\":1,\"y\":2.1}\n"); }We will get:org.codehaus.commons.compiler.CompileException: Line 22, Column 124: No applicable constructor/method found for actual parameters "int, java.math.BigDecimal"; candidates are: "public static org.apache.calcite.runtime.GeoFunctions$Geom org.apache.calcite.runtime.GeoFunctions.ST_MakePoint(java.math.BigDecimal, java.math.BigDecimal, java.math.BigDecimal)", "public static org.apache.calcite.runtime.GeoFunctions$Geom org.apache.calcite.runtime.GeoFunctions.ST_MakePoint(java.math.BigDecimal, java.math.BigDecimal)" at org.codehaus.janino.UnitCompiler.compileError(UnitCompiler.java:12211) at org.codehaus.janino.UnitCompiler.findMostSpecificIInvocable(UnitCompiler.java:9263) at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:9123) at org.codehaus.janino.UnitCompiler.findIMethod(UnitCompiler.java:9025) at org.codehaus.janino.UnitCompiler.compileGet2(UnitCompiler.java:5062) at org.codehaus.janino.UnitCompiler.access$9100(UnitCompiler.java:215) </description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.ReflectiveCallNotNullImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumUtils.java</file>
    </fixedFiles>
  </bug>
  <bug id="3576" opendate="2019-12-6 00:00:00" fixdate="2019-4-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove Enumerable convention check in FilterIntoJoinRule</summary>
      <description>Context: https://github.com/apache/calcite/pull/1247#discussion_r289489174</description>
      <version>None</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.sql.misc.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.enumerable.EnumerableHashJoinTest.java</file>
      <file type="M">core.src.test.resources.sql.sub-query.iq</file>
      <file type="M">core.src.test.resources.sql.join.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MaterializationTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableNestedLoopJoin.java</file>
    </fixedFiles>
  </bug>
  <bug id="3579" opendate="2019-12-8 00:00:00" fixdate="2019-12-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Oracle XMLTRANSFORM Function Support</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.resources.sql.mysql-func.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlXmlFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.QuidemTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.XmlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="3580" opendate="2019-12-8 00:00:00" fixdate="2019-1-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Oracle EXTRACT(XML) Function Support</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.resources.sql.functions.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlXmlFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.OperandTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.XmlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="3584" opendate="2019-12-10 00:00:00" fixdate="2019-12-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Propagate hints when decorrelating a query</summary>
      <description>In CALCITE-482, we have support a basic SQL hints framework to let other engines to extend and have their own hints implementations. But for the decorrelation, the hints would just lost.We should support that because most of the sub-queries needs decorrelation.</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlHintsConverterTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlHintsConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlToRelConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.RelStructuredTypeFlattener.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.RelDecorrelator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalTableScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalProject.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.Hintable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="3601" opendate="2019-12-15 00:00:00" fixdate="2019-12-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update elasticsearch tests upgrade from junit4 to junit5</summary>
      <description>Update `elasticsearch` tests upgrade from junit4 to junit5.</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.ScrollingTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.ProjectionTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.Projection2Test.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.MatchTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.EmbeddedElasticsearchPolicy.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.ElasticSearchAdapterTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.BooleanLogicTest.java</file>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.AggregationTest.java</file>
      <file type="M">elasticsearch.gradle.properties</file>
    </fixedFiles>
  </bug>
  <bug id="3606" opendate="2019-12-18 00:00:00" fixdate="2019-1-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>batch insert failed</summary>
      <description>when I try to execute sql like (insert into example_table (column1,column2) values (value1,value2),(value1,value2)), it will failed with error message like this: column "EXPR$0" of relation "example_table" does not exist. I find the reason is that when converting SqlNode(insert sql) to RelNode(TableModify), one of the steps is to change the column that stored in RelDataType from the fake column name (like "EXPR$0") to the real column name (like "id"). But when the values part in sql is more than one , the step above-mentioned will skip because the RelNode is instance of  LogicalUnion instead of Project, the code refered to org.apache.calcite.tools.RelBuilder line 1461:if (input instanceof Project &amp;&amp; fieldNames != null) {    // change the column name} </description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="3620" opendate="2019-12-20 00:00:00" fixdate="2019-12-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove implicit lateral operator for temporal table join</summary>
      <description>Just as what CALCITE-3603 comment addressed, LATERAL and temporal table does not have any direct relational-ship in standard SQL, we should remove that binding.</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlLateralOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlToRelConverter.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
    </fixedFiles>
  </bug>
  <bug id="3621" opendate="2019-12-20 00:00:00" fixdate="2019-12-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JDBC adapter can&amp;#39;t push down sort to DB</summary>
      <description>JDBC adapter can't push down sort to DBselect ename from scott.emp order by empnoPLAN=EnumerableSort(sort0=[$1], dir0=[ASC]) JdbcToEnumerableConverter JdbcProject(ENAME=[$1], EMPNO=[$0]) JdbcTableScan(table=[[SCOTT, EMP]]) It should be:PLAN=JdbcToEnumerableConverter JdbcSort(sort0=[$1], dir0=[ASC]) JdbcProject(ENAME=[$1], EMPNO=[$0]) JdbcTableScan(table=[[SCOTT, EMP]])I think the root cause is JdbcSortRule, it convert input's trait to "JDBC, &amp;#91;1&amp;#93;". that is, input's relset will add a "JDBC, &amp;#91;1&amp;#93;" subset. But there is nothing rule can convert that input to a rel with "JDBC, &amp;#91;1&amp;#93;", so EnumerableSort win. public RelNode convert(Sort sort, boolean convertInputTraits) { final RelTraitSet traitSet = sort.getTraitSet().replace(out); final RelNode input; if (convertInputTraits) { input = convert(sort.getInput(), traitSet); } else { input = sort.getInput(); } return new JdbcSort(sort.getCluster(), traitSet, input, sort.getCollation(), sort.offset, sort.fetch);}This is my a part of change: convert input's trait to "JDBC, []"public RelNode convert(Sort sort, boolean convertInputTraits) { final RelTraitSet traitSet = sort.getTraitSet().replace(out); //update again final RelTraitSet inputTraitSet = sort.getInput().getTraitSet().replace(out); final RelNode input; if (convertInputTraits) { //update input = convert(sort.getInput(), inputTraitSet); } else { input = sort.getInput(); } return new JdbcSort(sort.getCluster(), traitSet, input, sort.getCollation(), sort.offset, sort.fetch);}  By the way, when we switch "calcite.enable.enumerable" to "false" without this change, this case will be failed. java.sql.SQLException: Error while executing SQL "explain plan for select ename from scott.emp order by empno": There are not enough rules to produce a node with desired properties: convention=ENUMERABLE, sort=[1].Missing conversion is JdbcTableScan[sort: [] -&gt; [0]]There is 1 empty subset: rel#34:Subset#0.JDBC.SCOTT.[0], the relevant part of the original plan is as follows0:JdbcTableScan(table=[[SCOTT, EMP]])</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcAdapterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.RelToSqlConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcRules.java</file>
    </fixedFiles>
  </bug>
  <bug id="3622" opendate="2019-12-22 00:00:00" fixdate="2019-12-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update geode tests upgrade from junit4 to junit5</summary>
      <description>Update `geode` tests upgrade from junit4 to junit5.</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.GeodeZipsTest.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.GeodeEmbeddedPolicy.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.GeodeBookstoreTest.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.GeodeAllDataTypesTest.java</file>
      <file type="M">geode.src.test.java.org.apache.calcite.adapter.geode.rel.AbstractGeodeTest.java</file>
      <file type="M">geode.gradle.properties</file>
    </fixedFiles>
  </bug>
  <bug id="3623" opendate="2019-12-22 00:00:00" fixdate="2019-12-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replace Spotless with Autostyle</summary>
      <description>Spotless has certain drawbacks:1) It is not able to verify license headers for non-Java files. For instance, it skips `package-info.java`, it skips `*.kts` and so on 2) Its error messages are too verbose. Sometimes it prints the full stacktrace when just one line was enough: "file X line Y column Z has error: ..."3) It uses unsafe Gradle APIs, so it will be incompatible with Gradle 7.0I suggest to replace it with https://github.com/autostyle/autostyleNote: I tried to contact Spotless authors, and their way to manage code makes it very hard to co-operate (</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0,avatica-1.17.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ubenchmark.build.gradle.kts</file>
      <file type="M">sqlsh.bat</file>
      <file type="M">sqlline.bat</file>
      <file type="M">site..docs.howto.md</file>
      <file type="M">example.csv.sqlline.bat</file>
      <file type="M">buildSrc.subprojects.buildext.src.main.kotlin.org.apache.calcite.buildtools.buildext.dsl.ParenthesisBalancer.kt</file>
      <file type="M">buildSrc.settings.gradle.kts</file>
      <file type="M">buildSrc.gradle.properties</file>
      <file type="M">buildSrc.build.gradle.kts</file>
      <file type="M">appveyor.yml</file>
      <file type="M">.travis.yml</file>
      <file type="M">babel.build.gradle.kts</file>
      <file type="M">bom.build.gradle.kts</file>
      <file type="M">build.gradle.kts</file>
      <file type="M">cassandra.build.gradle.kts</file>
      <file type="M">cassandra.src.test.java.org.apache.calcite.test.CassandraAdapterTest.java</file>
      <file type="M">cassandra.src.test.resources.logback-test.xml</file>
      <file type="M">core.build.gradle.kts</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.resources.version.org-apache-calcite-jdbc.properties</file>
      <file type="M">core.src.test.resources.log4j.properties</file>
      <file type="M">core.src.test.resources.org.apache.calcite.sql.test.SqlPrettyWriterTest.xml</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.HepPlannerTest.xml</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlHintsConverterTest.xml</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlLimitsTest.xml</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.TypeCoercionConverterTest.xml</file>
      <file type="M">druid.build.gradle.kts</file>
      <file type="M">druid.src.test.resources.log4j.properties</file>
      <file type="M">elasticsearch.build.gradle.kts</file>
      <file type="M">elasticsearch.src.test.resources.log4j2.xml</file>
      <file type="M">example.csv.build.gradle.kts</file>
      <file type="M">example.function.build.gradle.kts</file>
      <file type="M">file.build.gradle.kts</file>
      <file type="M">geode.build.gradle.kts</file>
      <file type="M">geode.src.test.resources.log4j.properties</file>
      <file type="M">gradle.properties</file>
      <file type="M">gradle.wrapper.gradle-wrapper.properties</file>
      <file type="M">kafka.build.gradle.kts</file>
      <file type="M">linq4j.build.gradle.kts</file>
      <file type="M">mongodb.build.gradle.kts</file>
      <file type="M">mongodb.src.test.resources.log4j.properties</file>
      <file type="M">piglet.build.gradle.kts</file>
      <file type="M">piglet.src.test.resources.log4j.properties</file>
      <file type="M">pig.build.gradle.kts</file>
      <file type="M">pig.src.test.resources.log4j.properties</file>
      <file type="M">plus.build.gradle.kts</file>
      <file type="M">release.build.gradle.kts</file>
      <file type="M">server.build.gradle.kts</file>
      <file type="M">settings.gradle.kts</file>
      <file type="M">site.docker-compose.yml</file>
      <file type="M">site..config.yml</file>
      <file type="M">site..data.contributors.yml</file>
      <file type="M">site..data.docs.yml</file>
      <file type="M">spark.build.gradle.kts</file>
      <file type="M">spark.src.test.resources.log4j.properties</file>
      <file type="M">splunk.build.gradle.kts</file>
      <file type="M">splunk.src.test.resources.log4j.properties</file>
      <file type="M">src.main.config.checkstyle.checker.xml</file>
      <file type="M">src.main.config.checkstyle.suppressions.xml</file>
    </fixedFiles>
  </bug>
  <bug id="3625" opendate="2019-12-23 00:00:00" fixdate="2019-12-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update mongo tests upgrade from junit4 to junit5</summary>
      <description>Update `mongo` tests upgrade from junit4 to junit5</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">mongodb.src.test.java.org.apache.calcite.test.MongoAssertions.java</file>
      <file type="M">mongodb.src.test.java.org.apache.calcite.adapter.mongodb.MongoDatabasePolicy.java</file>
      <file type="M">mongodb.src.test.java.org.apache.calcite.adapter.mongodb.MongoAdapterTest.java</file>
      <file type="M">mongodb.gradle.properties</file>
    </fixedFiles>
  </bug>
  <bug id="3635" opendate="2019-12-26 00:00:00" fixdate="2019-12-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Supports hint option as string or numeric literal</summary>
      <description>Support hint item syntax as:select /*+ time_zone(1, 1.23, 'a bc', -1.0) */ * from emp</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlHintsConverterTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlHintsConverterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlHint.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
    </fixedFiles>
  </bug>
  <bug id="3637" opendate="2019-12-26 00:00:00" fixdate="2019-12-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update linq4j tests upgrade from junit4 to junit5</summary>
      <description>Update `linq4j` tests upgrade from junit4 to junit5</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.LookupImplTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.Linq4jSuite.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.JoinPreserveOrderTest.java</file>
      <file type="M">linq4j.gradle.properties</file>
    </fixedFiles>
  </bug>
  <bug id="3644" opendate="2019-12-30 00:00:00" fixdate="2019-1-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Calc on the Intersect in target is not being matched</summary>
      <description>@Test public void testIntersectToCalcOnIntersect() { final String mv = "" + "select \"deptno\",\"name\" from \"emps\"\n" + "intersect all\n" + "select \"deptno\",\"name\" from \"depts\""; String mv1 = "select \"name\", \"deptno\" from (" + mv + ")"; final String query = "" + "select \"name\",\"deptno\" from \"depts\"\n" + "intersect all\n" + "select \"name\",\"deptno\" from \"emps\""; checkMaterialize(mv1, query, true); }error:java.lang.AssertionError: Expected: a string containing "EnumerableTableScan(table=[[hr, m0]])" but: was "PLAN=EnumerableIntersect(all=[true])\n EnumerableCalc(expr#0..3=[{inputs}], name=[$t1], deptno=[$t0])\n EnumerableTableScan(table=[[hr, depts]])\n EnumerableCalc(expr#0..4=[{inputs}], name=[$t2], deptno=[$t1])\n EnumerableTableScan(table=[[hr, emps]])\n\n"&lt;Click to see difference&gt; at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18) at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6) at org.apache.calcite.test.CalciteAssert.lambda$checkResultContains$7(CalciteAssert.java:429) at org.apache.calcite.test.CalciteAssert.assertQuery(CalciteAssert.java:544) at org.apache.calcite.test.CalciteAssert$AssertQuery.lambda$returns$1(CalciteAssert.java:1514)</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Wish</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.MaterializationTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableRels.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.SubstitutionVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptMaterializations.java</file>
    </fixedFiles>
  </bug>
  <bug id="3647" opendate="2019-12-30 00:00:00" fixdate="2019-3-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>MySQL COMPRESS function support</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.resources.sql.functions.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="3649" opendate="2019-12-30 00:00:00" fixdate="2019-12-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Hints should be propagated correctly in planner rules if original node is transformed to different kind</summary>
      <description>If the AGG was transformed to PROJECT + AGG, the hints of AGG should be propagated to the AGG node.In current implementation, the hints would lost.The perfect solution is to identify the replaced sub-tree, and for this tree, we should check which node is the right one to attach hints. But for this patch, we only consider the new transformed node with pattern of PROJECT + "node of same kind of original", this solves most of the cases.In current implementation, we try to match the first node of new relational expression sub-tree. The first node satisfies if it: Does not have any existing hints on it Can apply the original hints</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlHintsConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RelBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.RelStructuredTypeFlattener.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.RelDecorrelator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.Hintable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRuleCall.java</file>
    </fixedFiles>
  </bug>
  <bug id="3652" opendate="2019-12-30 00:00:00" fixdate="2019-12-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add org.apiguardian:apiguardian-api to specify API status</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.properties</file>
      <file type="M">bom.build.gradle.kts</file>
    </fixedFiles>
  </bug>
  <bug id="3655" opendate="2019-12-31 00:00:00" fixdate="2019-12-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SortJoinTransposeRule must not push sort into Project that contains OVER expressions</summary>
      <description></description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.sql.winagg.iq</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SortProjectTransposeRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="3658" opendate="2020-1-1 00:00:00" fixdate="2020-5-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>TableModify of Update contains correlated variable by mistake.</summary>
      <description>UPDATE clause like belowupdate emp set empno = empno + 1will be converted to LogicalTableModify(table=[[CATALOG, SALES, EMP]], operation=[UPDATE], updateColumnList=[[EMPNO]], sourceExpressionList=[[+($cor0.EMPNO, 1)]], flattened=[true]) LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$5], COMM=[$6], DEPTNO=[$7], SLACKER=[$8], EXPR$0=[+($0, 1)]) LogicalTableScan(table=[[CATALOG, SALES, EMP]])However the correlated variables $cor0.EMPNO should not exist in sourceExpressionList.It also brings trouble when convert TableModify back to Sql string.</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlToRelConverter.java</file>
    </fixedFiles>
  </bug>
  <bug id="3663" opendate="2020-1-2 00:00:00" fixdate="2020-1-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support for TRIM function in Bigquery dialect</summary>
      <description>In current Calcite implementation for query : SELECT TRIM('ABC') for  big-query Dialect it translated into SELECT TRIM(BOTH ' ' FROM 'ABC') .But the appropriate query for BigQuery is :: SELECT TRIM('ABC')Similarly below querySELECT TRIM(BOTH 'a' from 'ABC') SELECT TRIM(LEADING ' ' from 'ABC') SELECT TRIM(TRAILING ' ' from 'ABC') are translated into invalid BigQuery query.Unparse logic for the trim has been handle in BigQuery dialect to convert the source Trim query into valid bigQuery query.</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.BigQuerySqlDialect.java</file>
    </fixedFiles>
  </bug>
  <bug id="3668" opendate="2020-1-2 00:00:00" fixdate="2020-1-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>VolcanoPlanner doesn&amp;#39;t match all the RelSubSet in matchRecursive</summary>
      <description>If I have a rule to match pattern with Filter-RelSubset, VolcanoPlanner only matches 1 RelSubset in the RelSet, instead of all the subsets. if (operand.getMatchedClass() == RelSubset.class) { // If the rule wants the whole subset, we just provide it successors = ImmutableList.of(subset); } else { successors = subset.getRelList(); }</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.plan.volcano.VolcanoPlannerTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.volcano.PlannerTests.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoRuleCall.java</file>
    </fixedFiles>
  </bug>
  <bug id="3672" opendate="2020-1-3 00:00:00" fixdate="2020-2-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support implicit type coercion for insert and update</summary>
      <description></description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.TypeCoercionConverterTest.xml</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.tools.PlannerTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.TypeCoercionTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.TypeCoercionConverterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelConverterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcAdapterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.implicit.TypeCoercionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.implicit.TypeCoercion.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.implicit.AbstractTypeCoercion.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.RelToSqlConverter.java</file>
    </fixedFiles>
  </bug>
  <bug id="3684" opendate="2020-1-5 00:00:00" fixdate="2020-1-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement CBRT function</summary>
      <description>cbrt(x) → double Returns the cube root of x.select cbrt(-8);EXPR$0-2.0</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ReturnTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.resources.sql.functions.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJdbcFunctionCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">babel.src.test.resources.sql.redshift.iq</file>
    </fixedFiles>
  </bug>
  <bug id="3694" opendate="2020-1-5 00:00:00" fixdate="2020-3-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement SINH function</summary>
      <description>Implement SINH function select sinh(1);EXPR$01.1752011936438014 (1 row)!ok</description>
      <version>None</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.resources.sql.functions.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">babel.src.test.resources.sql.redshift.iq</file>
    </fixedFiles>
  </bug>
  <bug id="3695" opendate="2020-1-5 00:00:00" fixdate="2020-2-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement TANH function</summary>
      <description>Implement TANH function select tanh(1);EXPR$00.7615941559557649 (1 row)</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.resources.sql.functions.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="3704" opendate="2020-1-5 00:00:00" fixdate="2020-3-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement STRCMP function</summary>
      <description>IMPLEMENT STRCMP FUNCTIONMySQL strcmp() function is used to compare two strings. It returns 0 if both of the strings are same and returns -1 when the first argument is smaller than the second according to the defined order and 1 when the second one is smaller the first one.Syntax:STRCMP (expr1, expr2)</description>
      <version>None</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.resources.sql.functions.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="3707" opendate="2020-1-5 00:00:00" fixdate="2020-2-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement COSH function</summary>
      <description>Implement COSH function. select cosh(1);EXPR$01.543080634815244 (1 row)!ok</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.resources.sql.functions.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="3719" opendate="2020-1-9 00:00:00" fixdate="2020-1-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add hint option checker to customize the option validation</summary>
      <description>To allow customize the hint option content validation for each hint.Based on the fact that most of the vendors do not throw for hints error, we should keep sync with them.This patch also make the error behaviors customizable(throws or log warnings or ignored).</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlHintsConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.HintStrategyTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.ViewExpanders.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptTable.java</file>
      <file type="M">core.build.gradle.kts</file>
    </fixedFiles>
  </bug>
  <bug id="3733" opendate="2020-1-14 00:00:00" fixdate="2020-4-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In JDBC adapter, when generating SQL for MYSQL, generate TIMESTAMP type as DATETIME for CAST</summary>
      <description>Queries containing cast timestamp literal is rewritten into cast as TIMESTAMP. This syntax is not supported with MySql. Since TIMESTAMP is equivalent to DATETIME it should be rewritten into CAST as DATETIME.I will provide a test case later.</description>
      <version>None</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.MysqlSqlDialect.java</file>
    </fixedFiles>
  </bug>
  <bug id="3734" opendate="2020-1-14 00:00:00" fixdate="2020-3-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>MySQL JDBC rewrite is producing queries with CHAR with range beyond 255</summary>
      <description>Queries containing cast to varchar/string is rewritten into cast to CHAR with range beyond 255 causing query failure. This range/precision should be limited to 255.I will provide a test case later.</description>
      <version>None</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDialectFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.PostgresqlSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.MysqlSqlDialect.java</file>
    </fixedFiles>
  </bug>
  <bug id="3742" opendate="2020-1-16 00:00:00" fixdate="2020-1-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Gradle: 6.0.1 -&gt; 6.1</summary>
      <description></description>
      <version>avatica-1.16.0,1.21.0</version>
      <fixedVersion>1.22.0,avatica-1.17.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">gradle.wrapper.gradle-wrapper.properties</file>
    </fixedFiles>
  </bug>
  <bug id="3744" opendate="2020-1-16 00:00:00" fixdate="2020-1-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Duplicate RuleMatches when RelSet gets merged</summary>
      <description>Some times RelSet can get merged. e.g.Each number represet Rel id, and they are in different RelSet. 1 4 \ / 2 / \ / 3Assume in the rulequeue, we have rule match with name of 12, 23, 43. For simplicity, omit the rule name, first digit represent the parent RelNode, second represent the child.If after some rule, we merged the set of 3 into the set of 2, and RelNode 4's input is replaced by RelSubset of 2. We will retrigger rules and try to add rulematch 12, 42, 43 into rule queue.12 will be filtered out, because there is duplicate in the RuleMatch names set. But for 43, it now has different rulematch digest with previous match, because RelNode #4's input RelSubset changed, its digest also changed. So we can't detect the duplication and will re-apply rulematch 43 twice.Although we try to recompute rulematch's digest when popMatch(), but it seems too late. I think in RuleMatch digest, just using relnode's id should suffice. And we don't need to call recomputeDigest when popMatch.</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoRuleMatch.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.RuleQueue.java</file>
    </fixedFiles>
  </bug>
  <bug id="3747" opendate="2020-1-19 00:00:00" fixdate="2020-1-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Constructing BETWEEN with RelBuilder throws class cast exception</summary>
      <description>Fix the return type inference of BETWEEN operator.</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelBuilderTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlBetweenOperator.java</file>
    </fixedFiles>
  </bug>
  <bug id="3751" opendate="2020-1-21 00:00:00" fixdate="2020-1-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JDBC adapter wrongly pushes ORDER BY into sub-query</summary>
      <description>JDBC adapter wrongly pushes ORDER BY into sub-query. When I runselect deptno, job, sum(sal)from scott.empgroup by deptno, joborder by 1,2;against the hsqldb database via the JDBC adapter I get the errorError: Error while executing SQL "select deptno, job, sum(sal) from scott.emp group by deptno, job order by 1,2": While executing SQL [SELECT "DEPTNO", "JOB", SUM("SAL")FROM (SELECT "JOB", "DEPTNO", SUM("SAL")FROM "SCOTT"."EMP"GROUP BY "JOB", "DEPTNO"ORDER BY "DEPTNO" NULLS LAST, "JOB" NULLS LAST) AS "t0"] on JDBC sub-schema (state=,code=0)Caused by: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: SAL at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source) at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)Note that ORDER BY is inside a sub-query, which I presume is invalid SQL for hsqldb (and most other DBs).</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcAdapterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.SqlImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.RelToSqlConverter.java</file>
    </fixedFiles>
  </bug>
  <bug id="3756" opendate="2020-1-23 00:00:00" fixdate="2020-1-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>RelSubset should not match operand(RelNode.class)</summary>
      <description>Even RelSubset is a subclass of RelNode, but they are quite different. RelNode already fires these rules, it is not necessary to fire for RelSubset. More importantly, it never worked due to CALCITE-3755.In addition, it will waste time to try to iterate class operands of RelSubset and try to match pattern operand(RelNode), given that it never matches when ascending.</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcAdapterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoRuleCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.AbstractRelOptPlanner.java</file>
    </fixedFiles>
  </bug>
  <bug id="3765" opendate="2020-2-3 00:00:00" fixdate="2020-2-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Returns early when there is an existing operand when assigning operands solve order</summary>
      <description>I found this when i read the planner code. Hmm ~</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoRuleCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoPlannerPhaseRuleMappingInitializer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoPlanner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="3771" opendate="2020-2-5 00:00:00" fixdate="2020-2-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support of TRIM function for SPARK dialect and improvement in HIVE Dialect</summary>
      <description>In current Calcite implementation for query : SELECT TRIM('ABC') for SPARK Dialect it gets translated into SELECT TRIM(BOTH ' ' FROM 'ABC') .But the proper query for SPARK is :: SELECT TRIM('ABC')Unparse logic for the trim has been handled in Spark dialect to convert the source Trim query into valid SPARK query. Also,In HIVE/SPARK dialect TRIM with two operand is not supportedEg: SELECT TRIM(BOTH 'a' from 'ABC') So its equivalent is REGEXP_REPLACE which is handle in unparseTrim function.</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.SparkSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.HiveSqlDialect.java</file>
    </fixedFiles>
  </bug>
  <bug id="3780" opendate="2020-2-7 00:00:00" fixdate="2020-5-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SESSION Table-valued Function</summary>
      <description>We can create SESSION table-valued function to replace GROUP BY SESSION for inactive gap session functionality:SELECT *FROM TABLE SESSION ( data =&gt; TABLE Bid , timecol =&gt; DESCRIPTOR ( bidtime ) , keycol =&gt; DESCRIPTOR(key), inactive_gap =&gt; INTERVAL '10' MINUTES )  </description>
      <version>None</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.EnumerableDefaults.java</file>
      <file type="M">core.src.test.resources.sql.stream.iq</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlHopTableFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.AuxiliaryConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumUtils.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
    </fixedFiles>
  </bug>
  <bug id="3781" opendate="2020-2-10 00:00:00" fixdate="2020-2-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>HintStrategy can specify excluded rules for planner</summary>
      <description>It is efficient to support exclude rules explicitly for some hints, i.e. USE_MERGE, NO_USE_HASH.</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlHintsConverterTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlHintsConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.HintStrategyTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.hint.HintStrategies.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoRuleCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRuleCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.AbstractRelOptPlanner.java</file>
    </fixedFiles>
  </bug>
  <bug id="3789" opendate="2020-2-12 00:00:00" fixdate="2020-4-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Supports Presto style unnest with items alias</summary>
      <description>In Presto, users are able to UNNEST multiple array columns and CROSS JOIN with the original table . As shown in the Presto doc:SELECT numbers, animals, n, aFROM ( VALUES (ARRAY[2, 5], ARRAY['dog', 'cat', 'bird']), (ARRAY[7, 8, 9], ARRAY['cow', 'pig'])) AS x (numbers, animals)CROSS JOIN UNNEST(numbers, animals) AS t (n, a)yields: numbers | animals | n | a------------------------------+----- &amp;#91;2, 5&amp;#93; | &amp;#91;dog, cat, bird&amp;#93; | 2 | dog &amp;#91;2, 5&amp;#93; | &amp;#91;dog, cat, bird&amp;#93; | 5 | cat &amp;#91;2, 5&amp;#93; | &amp;#91;dog, cat, bird&amp;#93; | NULL | bird &amp;#91;7, 8, 9&amp;#93; | &amp;#91;cow, pig&amp;#93; | 7 | cow &amp;#91;7, 8, 9&amp;#93; | &amp;#91;cow, pig&amp;#93; | 8 | pig &amp;#91;7, 8, 9&amp;#93; | &amp;#91;cow, pig&amp;#93; | 9 | NULLIt seems Calcite does not have such a feature to support this semantics. In Calcite and for above SQL, n and a will be identified as alias of subfields of numbers.The plan will be to introduce a new Presto conformance and enable validation of such SQLs</description>
      <version>1.21.0</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigRelBuilder.java</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelConverterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.catalog.MockCatalogReaderSimple.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.catalog.Fixture.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlAdvisorTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RelBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlDelegatingConformance.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlConformanceEnum.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlConformance.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlAbstractConformance.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUnnestOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlToRelConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.RelStructuredTypeFlattener.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.mutable.MutableRels.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.ToLogicalConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Uncollect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableUncollect.java</file>
    </fixedFiles>
  </bug>
  <bug id="3790" opendate="2020-2-13 00:00:00" fixdate="2020-4-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make the URL of FileSource available</summary>
      <description>When a FileSource is constructed with only a File object, its URL is left null. This makes it inconvenient for some scenarios where a valid URL is required.This can be resolved, as each file in the local file system corresponds to a file URL, and we fix it by converting a file object to a file URL.</description>
      <version>None</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.util.SourceTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Sources.java</file>
    </fixedFiles>
  </bug>
  <bug id="3810" opendate="2020-2-20 00:00:00" fixdate="2020-3-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Render ANTI and SEMI join to NOT EXISTS and EXISTS in the JDBC adapter</summary>
      <description>Currently, when constructing an ANTI or SEMI join in the relational algebra, it's not possible to render to an Sql AST.</description>
      <version>1.21.0</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.SqlImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.RelToSqlConverter.java</file>
    </fixedFiles>
  </bug>
  <bug id="3811" opendate="2020-2-20 00:00:00" fixdate="2020-2-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>JDBC adapter generates SQL with invalid field names if Filter&amp;#39;s row type is different from its input</summary>
      <description>JDBC adapter generates SQL with invalid field names if a Filter object's row type is different from its input. Usually a Filter object's row type is identical to its input's row type (because that is how it derives its row type on construction), but if you call RelNode.replaceInput after construction it is possible to make the field names inconsistent.Here is an example of the wrong SQL generated:SELECT D AS `emps.deptno`FROM ( SELECT DEPTNO AS D2, COUNT(*) AS `emps.count` FROM `scott`.EMP GROUP BY DEPTNO HAVING COUNT(*) &lt; 2) AS `t1`Note that the sub-query returns a column D2 but the outer SELECT expression refers to D, because that was the name in the row type of the Filter (which became the HAVING clause in the generated SQL).</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlNodeList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlIdentifier.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.SqlImplementor.java</file>
    </fixedFiles>
  </bug>
  <bug id="3822" opendate="2020-2-25 00:00:00" fixdate="2020-6-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Source distribution must not contain fonts under SIL OFL 1.1 license (category B)</summary>
      <description>The source distribution contains "font-awesome:fonts" which is licensed ashttp://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License).OFL 1.1 is "category B" (see LEGAL-112).We need to remove "web and desktop font files", probably under site/fonts. Code and icons are OK.</description>
      <version>1.20.0,1.21.0</version>
      <fixedVersion>1.22.0,avatica-1.17.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">release.build.gradle.kts</file>
    </fixedFiles>
  </bug>
  <bug id="3840" opendate="2020-3-4 00:00:00" fixdate="2020-3-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Re-aliasing of VALUES that has column aliases produces wrong SQL in the JDBC adapter</summary>
      <description>Rendering a VALUES relnode to e.g. PostgreSQL will produce FROM (VALUES((1))) AS t(col_alias) where "t" is a static alias. When e.g. joining with such a VALUES, the RelToSqlConverter tries to re-alias this with a unique alias, but fails because it produces FROM (VALUES((1))) AS t(col_alias) AS newAlias.The fix is to replace the static table alias instead.</description>
      <version>1.21.0</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.SqlImplementor.java</file>
    </fixedFiles>
  </bug>
  <bug id="3851" opendate="2020-3-10 00:00:00" fixdate="2020-4-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replace the node importance map with a set for pruned nodes</summary>
      <description>Currently, volcano planner stores rel node importances with a map. In fact, the value of the map can only be 0. So there is no need to store the values, and we replace the map with a set to store nodes whose importances are 0. This makes the code logic clearer, and avoids instability caused by comparing floating point values.</description>
      <version>None</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.plan.volcano.VolcanoPlannerTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ValuesReduceRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SortRemoveConstantKeysRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ReduceExpressionsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ExchangeRemoveConstantKeysRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.CalcMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateValuesRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateCaseToFilterRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoRuleCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoPlanner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.RuleQueue.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.RelSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptPlanner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.AbstractRelOptPlanner.java</file>
    </fixedFiles>
  </bug>
  <bug id="3912" opendate="2020-4-10 00:00:00" fixdate="2020-4-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incorrect mapping parsing when properties have same name as reserved keywords in ElasticSearch</summary>
      <description>If a property has name type or properties ES adapter doesn't correctly process the mapping structure.</description>
      <version>1.21.0</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchJsonTest.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchJson.java</file>
    </fixedFiles>
  </bug>
  <bug id="3962" opendate="2020-4-28 00:00:00" fixdate="2020-4-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make JSON_VALUE operands varadic</summary>
      <description></description>
      <version>1.21.0,1.22.0</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlJsonFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJsonValueEmptyOrErrorBehavior.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJsonExistsErrorBehavior.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJsonEmptyOrError.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlInfixOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlRowOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonValueFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonExistsFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlDatetimePlusOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.StandardConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.JsonFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
    </fixedFiles>
  </bug>
  <bug id="444" opendate="2014-10-23 00:00:00" fixdate="2014-10-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Filters wrongly pushed into full outer join</summary>
      <description>Filter R1.x=10 (R1 full outer join R2 on R1.y=R2.y)Gets rewritten asR1 left outer join R2 on R1.y=R2.y and R1.x=10.This is obviously wrong and produces wrong result.select count from(select ss.ss_sold_date_sk, ss.ss_item_sk, ss.ss_customer_sk from store_sales ss full outer join date_dim d on ss.ss_sold_date_sk = d.d_date_sk where ss.ss_item_sk = 4496)R; produces wrong result due to above described problem.Patch separates the join simplification from Join filter classification.Predicate Push Down through Join would first simplify Outer Joins before applying predicate push down.</description>
      <version>None</version>
      <fixedVersion>0.9.2-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.eigenbase.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.eigenbase.test.RelOptRulesTest.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.rules.PushFilterPastJoinRule.java</file>
      <file type="M">core.src.main.java.org.eigenbase.rel.metadata.RelMdUtil.java</file>
      <file type="M">core.src.main.java.org.eigenbase.relopt.RelOptUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="482" opendate="2014-11-26 00:00:00" fixdate="2014-11-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement SQL and planner hints</summary>
      <description>Query optimizer can never be perfect, so it makes sense to implement hints to allow user better control the execution.For instance: "never merge this subquery with others" (`/+ no_merge/`), "treat those tables as leading ones" (`/*+ leading */`), etc.Hints would enable predictable performance and the planning time would be improved as well.</description>
      <version>1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">server.src.main.java.org.apache.calcite.sql.ddl.SqlDdlNodes.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelTestBase.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MockRelOptPlanner.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.catalog.MockCatalogReader.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CalciteSuite.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.IdentifierNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSelectOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSelect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlProcedureCallOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlKind.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.MysqlSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlToRelConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.RelStructuredTypeFlattener.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelRoot.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.SqlImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.RelToSqlConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalTableScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalProject.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.TableScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Project.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Join.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalcitePrepareImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalciteMaterializer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoRuleCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRuleCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptCluster.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepRuleCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableRel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableProject.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
    </fixedFiles>
  </bug>
</bugrepository>
