<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CALCITE">
  <bug id="586" opendate="2015-2-4 00:00:00" fixdate="2015-2-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Serializing Signature.internalParameters can cause exceptions</summary>
      <description>Observed exceptions:java.lang.AssertionError: nullat org.apache.calcite.rel.type.RelDataTypeImpl.getFieldList(RelDataTypeImpl.java:138) ~[calcite-core-1.0.0-incubating-SNAPSHOT.jar:1.0.0-incubating-SNAPSHOT]at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_25]at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_25]at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_25]at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_25]at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:466) ~[jackson-databind-2.4.2.jar:2.4.2]And in https://github.com/devth/calcite-map-demo:java.lang.RuntimeException: com.fasterxml.jackson.databind.JsonMappingException: No serializer found for class org.apache.calcite.sql.type.SqlTypeExplicitPrecedenceList and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationConfig.SerializationFeature.FAIL_ON_EMPTY_BEANS) ) (through reference chain: org.apache.calcite.avatica.remote.ResultSetResponse["signature"]-&gt;org.apache.calcite.avatica.Signature["internalParameters"]-&gt;java.util.LinkedHashMap["v0stashed"]-&gt;com.google.common.collect.RegularImmutableList[0]-&gt;org.apache.calcite.rex.RexCall["operands"]-&gt;com.google.common.collect.RegularImmutableList[0]-&gt;org.apache.calcite.rex.RexInputRef["type"]-&gt;org.apache.calcite.sql.type.MapSqlType["keyType"]-&gt;org.apache.calcite.sql.type.BasicSqlType["precedenceList"]) at org.apache.calcite.avatica.remote.JsonHandler.handle(JsonHandler.java:61) ~[calcite-avatica-1.0.0-incubating.jar:1.0.0-incubating] at org.apache.calcite.avatica.remote.JsonHandler.apply(JsonHandler.java:46) ~[calcite-avatica-1.0.0-incubating.jar:1.0.0-incubating] at org.apache.calcite.avatica.server.AvaticaHandler.handle(AvaticaHandler.java:47) ~[calcite-avatica-server-1.0.0-incubating.jar:1.0.0-incubating]Pull request:https://github.com/apache/incubator-calcite/pull/48</description>
      <version>None</version>
      <fixedVersion>1.1.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">doc.HISTORY.md</file>
    </fixedFiles>
  </bug>
  <bug id="587" opendate="2015-2-4 00:00:00" fixdate="2015-2-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade jetty-server dependency</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.1.0-incubating</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.HttpServer.java</file>
      <file type="M">pom.xml</file>
      <file type="M">avatica-server.src.main.java.org.apache.calcite.avatica.server.HttpServer.java</file>
    </fixedFiles>
  </bug>
  <bug id="591" opendate="2015-2-9 00:00:00" fixdate="2015-2-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Drop support for Java 1.6 (and JDBC 4.0)</summary>
      <description>Drop support for Java 1.6: The code would no longer compile under JDK 1.6 Compiler would have source 1.7 target 1.7 Class files would run on JDK 1.7 and higher Developers can use 1.7 syntax such as strings in switch statements and try-with-resourcesWe would continue to build and run under JDK 1.7 and 1.8.</description>
      <version>None</version>
      <fixedVersion>1.1.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">doc.HOWTO.md</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CalciteAssert.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Compatible.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.Driver.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteJdbc40Factory.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.UnregisteredDriver.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaJdbc40Factory.java</file>
      <file type="M">.travis.yml</file>
    </fixedFiles>
  </bug>
  <bug id="592" opendate="2015-2-10 00:00:00" fixdate="2015-3-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Guava 14.0.1</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.2.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">core.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="600" opendate="2015-2-18 00:00:00" fixdate="2015-2-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Use SetOpFactory in rules containing Union operator</summary>
      <description>Union related rules match on LogicalUnion and use this implementation to create the new Union operators. As it is done for other rules, a Union factory can be created and used by them, so subclasses that extend Union can use the rules.</description>
      <version>None</version>
      <fixedVersion>1.1.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.UnionToDistinctRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.UnionMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.UnionEliminatorRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateUnionTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateUnionAggregateRule.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
