<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CALCITE">
  <bug id="543" opendate="2014-12-19 00:00:00" fixdate="2014-1-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement Aggregate (including grouping sets) in Interpreter</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.InterpreterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Row.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Nodes.java</file>
    </fixedFiles>
  </bug>
  <bug id="545" opendate="2014-12-19 00:00:00" fixdate="2014-12-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>When a projected expression can only have one value, replace with that constant</summary>
      <description>When we have deduced that an expression can only have one value, replace the expression with that value. This is beneficial because it will allow us to do more column trimming.Example 1select deptno from emp where deptno = 10can becomeselect 10 from emp where deptno = 10Example 2 (using inference, as in CALCITE-360)select emp.deptnofrom emp join dept using (deptno)where dept.deptno = 10can becomeselect 10from emp join dept using (deptno)where dept.deptno = 10</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptRulesTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexShuttle.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexInputRef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexExecutorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ValuesReduceRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ReduceExpressionsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptPredicateList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexToLixTranslator.java</file>
    </fixedFiles>
  </bug>
  <bug id="552" opendate="2015-1-6 00:00:00" fixdate="2015-1-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade tpcds (which depends on an old version of guava)</summary>
      <description>Upgrade to tpcds-0.2. Tpcds-0.1 depends on Guava 11.0.2, which no longer exists in the repo. Tpcds-0.2 fixes the problem (see https://github.com/julianhyde/tpcds/commit/1d4b7fe0d608185b42f26c530ff2554e5e06240b).</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">plus.src.test.java.org.apache.calcite.adapter.tpcds.TpcdsTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="553" opendate="2015-1-6 00:00:00" fixdate="2015-2-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>"mvn clean install" fails due to missing SqlParserImpl</summary>
      <description>Every second time I call {mvn -DskipTests clean install} it fails with[ERROR] COMPILATION ERROR : [INFO] -------------------------------------------------------------[ERROR] /home/jhyde/open1/calcite.2/core/src/main/java/org/apache/calcite/sql/parser/SqlParser.java:[24,42] cannot find symbol symbol: class SqlParserImpl location: package org.apache.calcite.sql.parser.impl[ERROR] /home/jhyde/open1/calcite.2/core/src/main/java/org/apache/calcite/sql/parser/SqlParser.java:[201,50] cannot find symbol symbol: variable SqlParserImpl location: class org.apache.calcite.sql.parser.SqlParser.ConfigBuilder[INFO] 2 errorsI think CALCITE-484 broke something; maybe the parser is not generated correctly if at the start of the mvn command (before clean) the parser already exists.</description>
      <version>None</version>
      <fixedVersion>1.7.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.howto.md</file>
      <file type="M">site.develop.index.md</file>
      <file type="M">core.pom.xml</file>
    </fixedFiles>
  </bug>
</bugrepository>
