<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="CALCITE">
  <bug id="2911" opendate="2019-3-11 00:00:00" fixdate="2019-3-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Release Calcite 1.19.0</summary>
      <description>Release Calcite 1.19.0.</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.howto.md</file>
      <file type="M">site..docs.history.md</file>
      <file type="M">README</file>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2931" opendate="2019-3-18 00:00:00" fixdate="2019-3-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Mongo Adapter - Compare Bson (not string) query representation in tests</summary>
      <description>Some tests currently fail because of wrong order of keys in Bson. // Expected{$project: {POP: '$pop', STATE: '$state'}}// Actual{$project: {STATE: '$state', POP: '$pop'}}</description>
      <version>None</version>
      <fixedVersion>1.19.0</fixedVersion>
      <type>Test</type>
    </buginformation>
    <fixedFiles>
      <file type="M">mongodb.src.test.java.org.apache.calcite.adapter.mongodb.MongoAdapterTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="2965" opendate="2019-3-31 00:00:00" fixdate="2019-5-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement string functions: REPEAT, SPACE, SOUNDEX, DIFFERENCE</summary>
      <description>Some string functions including REPEAT, SPACE, SOUNDEX, DIFFERENCE are not implemented now. It would be great if these functions can be implemented.</description>
      <version>1.19.0</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">pom.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ReturnTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.OperandTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">core.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2973" opendate="2019-4-2 00:00:00" fixdate="2019-8-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow theta joins that have equi conditions to be executed using a hash join algorithm</summary>
      <description>Now the EnumerableMergeJoinRule only supports an inner and equi join.If users make a theta-join query  for a large dataset (such as 10000*10000), the nested-loop join process will take dozens of time than the sort-merge join process .So if we can apply merge-join or hash-join rule for a theta join, it will improve the performance greatly.</description>
      <version>1.19.0</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.ExtendedEnumerable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.EnumerableDefaults.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.DefaultEnumerable.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.runtime.EnumerablesTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableHashJoin.java</file>
    </fixedFiles>
  </bug>
  <bug id="2975" opendate="2019-4-3 00:00:00" fixdate="2019-5-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement JSON_REMOVE function</summary>
      <description>JSON_REMOVE(json_doc, path&amp;#91;, path&amp;#93; ...)Removes data from a JSON document and returns the result. Returns NULL if any argument is NULL. An error occurs if the json_doc argument is not a valid JSON document or any path argument is not a valid path expression or is $ or contains a * or ** wildcard.The path arguments are evaluated left to right. The document produced by evaluating one path becomes the new value against which the next path is evaluated.It is not an error if the element to be removed does not exist in the document; in that case, the path does not affect the document.JSON_REMOVE SQL:SELECT JSON_REMOVE(v, '$[1]') AS c1 FROM (VALUES ('["a", ["b", "c"], "d"]')) AS t(v);RESULT:c1&amp;#91;"a", "d"&amp;#93;</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlJsonFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.JsonFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="2976" opendate="2019-4-3 00:00:00" fixdate="2019-4-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve materialized view rewriting coverage with disjunctive predicates</summary>
      <description>For instance, in the following case:@Test public void testJoinAggregateMaterializationAggregateFuncs14() { checkMaterialize( "select \"empid\", \"emps\".\"name\", \"emps\".\"deptno\", \"depts\".\"name\", " + "count(*) as c, sum(\"empid\") as s\n" + "from \"emps\" join \"depts\" using (\"deptno\")\n" + "where (\"depts\".\"name\" is not null and \"emps\".\"name\" = 'a') or " + "(\"depts\".\"name\" is not null and \"emps\".\"name\" = 'b')\n" + "group by \"empid\", \"emps\".\"name\", \"depts\".\"name\", \"emps\".\"deptno\"", "select \"depts\".\"deptno\", sum(\"empid\") as s\n" + "from \"emps\" join \"depts\" using (\"deptno\")\n" + "where \"depts\".\"name\" is not null and \"emps\".\"name\" = 'a'\n" + "group by \"depts\".\"deptno\"", HR_FKUK_MODEL, CONTAINS_M0);}</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.MaterializationTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AbstractMaterializedViewRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="2991" opendate="2019-4-11 00:00:00" fixdate="2019-4-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>getMaxRowCount should return rowcount 1 for an aggregate with constant keys</summary>
      <description>Aggregate with constant keys are guaranteed to produce at most one row</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelMetadataTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdMaxRowCount.java</file>
    </fixedFiles>
  </bug>
  <bug id="2993" opendate="2019-4-12 00:00:00" fixdate="2019-4-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ParseException may be thrown for legal SQL queries due to incorrect "LOOKAHEAD(1)" hints</summary>
      <description>In some cases, ParseException is thrown incorrectly:Case 1select lead(x) ignore from t -- "ignore" aliases "lead(x)"Case 2select * from t match_recognize ( after match skip to last -- "last" is a identifier. This is the implicit form of "skip to last last" pattern (strt down+ up+) define down as down.price &lt; PREV(down.price), up as up.price &gt; prev(up.price) ) mrCase 3select json_object(key: value) from t -- "key"/"value" are both column names.And the failure on Case 1 is introduced by the fix of CALCITE-2847, Case 2/3 are not.</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">server.src.main.codegen.config.fmpp</file>
      <file type="M">piglet.src.main.javacc.PigletParser.jj</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.codegen.config.fmpp</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
      <file type="M">babel.src.main.codegen.config.fmpp</file>
    </fixedFiles>
  </bug>
  <bug id="2994" opendate="2019-4-12 00:00:00" fixdate="2019-4-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Least restrictive type among structs does not consider nullability</summary>
      <description>Consider the following high-level example:CREATE TYPE Coordinates AS ( x INT, y INT);CREATE TABLE Address ( loc1 Coordinates NOT NULL, loc2 Coordinates)The least restrictive type between loc1 and loc2 is the type of loc2 (i.e., a nullable Coordinates type). The existing code (i.e., RelDataTypeFactory#leastRestrictive) does take into account nullability when the type is structured type (or row type).</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.sql.type.SqlTypeFixture.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.type.SqlTypeFactoryTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeFactoryImpl.java</file>
    </fixedFiles>
  </bug>
  <bug id="2995" opendate="2019-4-14 00:00:00" fixdate="2019-7-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add the DAYNAME，MONTHNAME function</summary>
      <description>MONTHNAME(date) Returns the full name of the month for date. The language used for the name is controlled by the system time config.SQL:SELECT MONTHNAME('2018-01-01') monthname;Result:monthnameJanuaryDAYNAME(date) Returns the name of the weekday for date. The language used for the name is controlled by the system time config.SQL:SELECT DAYNAME('2018-01-01') dayname;Result:daynameMonday</description>
      <version>None</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJdbcFunctionCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.RelJsonReader.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteConnectionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.DataContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionProperty.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionConfigImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionConfig.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="30" opendate="2014-6-18 00:00:00" fixdate="2014-7-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement Statement.cancel method</summary>
      <description>would be good to have the ability to push a cancel() call down to the underlying framework.this would allow for a Cascading Flow to be stopped mid-flight.---------------- Imported from GitHub ----------------Url: https://github.com/julianhyde/optiq/issues/30Created by: cwenselLabels: Created at: Sun Mar 17 03:06:57 CET 2013State: open</description>
      <version>None</version>
      <fixedVersion>1.9.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">example.csv.src.test.java.org.apache.calcite.test.CsvTest.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvTranslatableTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvTableScan.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvStreamScannableTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvStreamReader.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvStreamEnumerator.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvSchemaFactory.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvScannableTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvFilterableTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvEnumerator.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.StreamTest.java</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CancelFlag.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptPlanner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.AbstractRelOptPlanner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteResultSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteConnectionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.DataContext.java</file>
    </fixedFiles>
  </bug>
  <bug id="3001" opendate="2019-4-15 00:00:00" fixdate="2019-4-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Apache Druid 0.14.0-incubating</summary>
      <description>Apache Druid 0.14.0-incubating has been released. This task is to upgrade the test vm to use Apache Druid 0.14.0-incubating and update calcite docs accordingly.</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.history.md</file>
      <file type="M">druid.src.test.resources.druid-wiki-no-columns-model.json</file>
      <file type="M">druid.src.test.resources.druid-wiki-model.json</file>
      <file type="M">druid.src.test.java.org.apache.calcite.test.DruidAdapterIT2.java</file>
      <file type="M">druid.src.test.java.org.apache.calcite.test.DruidAdapterIT.java</file>
    </fixedFiles>
  </bug>
  <bug id="3005" opendate="2019-4-16 00:00:00" fixdate="2019-6-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement string functions: LEFT, RIGHT</summary>
      <description>Some string functions including LEFT, RIGHT are not implemented now. It would be great if these functions can be implemented.LEFT(str,len)Returns the leftmost len characters from the string str, or NULL if any argument is NULL.RIGHT(str,len)Returns the rightmost len characters from the string str, or NULL if any argument is NULL.</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MockSqlOperatorTable.java</file>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlAdvisorTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.OperandTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJdbcFunctionCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
    </fixedFiles>
  </bug>
  <bug id="3006" opendate="2019-4-16 00:00:00" fixdate="2019-4-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Inaccurate information on site, example code doesn&amp;#39;t compile</summary>
      <description>The example code on Calcite website is no longer valid, create method was removed from ReflectiveSchema, thus the example code doesn't compile.</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.index.md</file>
    </fixedFiles>
  </bug>
  <bug id="3010" opendate="2019-4-17 00:00:00" fixdate="2019-4-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In SQL parser, move JsonValueExpression into Expression</summary>
      <description>Below is the syntax definition of JsonValueExpression from ISO/SEC 19075-6:&lt;JSON value expression&gt; ::= &lt;value expression&gt; [ &lt;JSON input clause&gt; ]&lt;JSON input clause&gt; ::= FORMAT &lt;JSON representation&gt;&lt;JSON representation&gt; ::= JSON [ ENCODING { UTF8 | UTF16 | UTF32 } ] | &lt;implementation-defined JSON representation option&gt;Currently it's an individual syntax standing out of Expression for easily implementing the behavior of "implicit JSON format". As the amount of JSON functions is getting larger, the design could definitely be improved. For example, it can be categorized as a PostfixOperator&amp;#91;1&amp;#93;.&amp;#91;1&amp;#93; https://github.com/apache/calcite/blob/master/core/src/main/java/org/apache/calcite/sql/SqlPostfixOperator.java</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">server.src.main.codegen.config.fmpp</file>
      <file type="M">core.src.test.codegen.config.fmpp</file>
      <file type="M">core.src.main.codegen.config.fmpp</file>
      <file type="M">babel.src.main.codegen.config.fmpp</file>
      <file type="M">core.src.test.resources.sql.agg.iq</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelConverterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlJsonFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlAdvisorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Bug.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.InferTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonValueExpressionOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonObjectFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonObjectAggAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonLengthFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonKeysFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonDepthFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonArrayFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonArrayAggAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonApiCommonSyntaxOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.StandardConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
    </fixedFiles>
  </bug>
  <bug id="3012" opendate="2019-4-19 00:00:00" fixdate="2019-5-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Column uniqueness metadata provider may return wrong result for FULL OUTER JOIN operator</summary>
      <description>Let's say set of columns passed to this API are join keys and there is one NULL key coming from both the inputs. Following code will return true which is wrong because the result of FULL. OUTER JOIN with NULL key on both side will produce two rows with NULL. Even though this value in respective input is unique the result of join may not be unique. Boolean leftUnique = mq.areColumnsUnique(left, leftColumns, ignoreNulls); Boolean rightUnique = mq.areColumnsUnique(right, rightColumns, ignoreNulls); if ((leftColumns.cardinality() &gt; 0) &amp;&amp; (rightColumns.cardinality() &gt; 0)) { if ((leftUnique == null) || (rightUnique == null)) { return null; } else { return leftUnique &amp;&amp; rightUnique; } }create table trepro(i int);insert into trepro values(null);select * from trepro t1 full outer join trepro t2 on t1.i=t2.i;null, nullnull, null</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelMetadataTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdColumnUniqueness.java</file>
    </fixedFiles>
  </bug>
  <bug id="3017" opendate="2019-4-24 00:00:00" fixdate="2019-5-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve null handling of JsonValueExpressionOperator</summary>
      <description>In Calcite's implementation, JsonValueExpressionOperator currently returns a null value no matter the argument is JSON NULL value or SQL NULL value. But in MySQL, some JSON functions behave differently on different null inputs. For instance for a MySQL JSON function JSON_STORAGE_SIZE, if we execute:SELECT JSON_STORAGE_SIZE(null), JSON_STORAGE_SIZE('null')The result should be:JSON_STORAGE_SIZE(null)JSON_STORAGE_SIZE('null')null2We should improve the operator a bit to support different behaviors.</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlJsonFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Util.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlKind.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonValueFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonTypeFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonQueryFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonPrettyFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonKeysFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonExistsFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlJsonApiCommonSyntaxOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.NullPolicy.java</file>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.DocumentationTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.OracleSqlOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.OracleSqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.StandardConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSqlStandardConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionProperty.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionConfigImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexToLixTranslator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
    </fixedFiles>
  </bug>
  <bug id="3022" opendate="2019-4-24 00:00:00" fixdate="2019-5-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Babel: Various SQL parsing issues</summary>
      <description>Various parsing issues in Babel SQL.</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">server.src.main.codegen.config.fmpp</file>
      <file type="M">core.src.test.codegen.config.fmpp</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParserUtil.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
      <file type="M">core.src.main.codegen.config.fmpp</file>
      <file type="M">babel.src.test.java.org.apache.calcite.test.BabelParserTest.java</file>
      <file type="M">babel.src.main.codegen.includes.parserImpls.ftl</file>
      <file type="M">babel.src.main.codegen.config.fmpp</file>
    </fixedFiles>
  </bug>
  <bug id="3039" opendate="2019-4-30 00:00:00" fixdate="2019-5-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>In Interpreter, min() incorrectly returns maximum double value</summary>
      <description>//代码占位符/** Implementation of {@code MIN} function to calculate the minimum of * {@code float} values as a user-defined aggregate. */public static class MinFloat extends NumericComparison&lt;Float&gt; { public MinFloat() { super(Float.MAX_VALUE, Math::min); }}/** Implementation of {@code MIN} function to calculate the minimum of * {@code double} and {@code real} values as a user-defined aggregate. */public static class MinDouble extends NumericComparison&lt;Double&gt; { public MinDouble() { super(Double.MAX_VALUE, Math::max); }}</description>
      <version>1.19.0</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.AggregateNode.java</file>
    </fixedFiles>
  </bug>
  <bug id="3054" opendate="2019-5-8 00:00:00" fixdate="2019-5-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ElasticSearch adapter. Avoid scripting for simple projections</summary>
      <description>No scripting should be used for simple field projection(s).In some cases elastic adapter uses script instead of _source for simple field projections.select _MAP['a'], _MAP['b.a'] from elastic</description>
      <version>1.19.0</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.Projection2Test.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchProject.java</file>
    </fixedFiles>
  </bug>
  <bug id="3056" opendate="2019-5-8 00:00:00" fixdate="2019-5-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Elasticsearch adapter. Invalid result with cast function on raw queries</summary>
      <description>Raw elastic queries (not based on views) return incorrect result when cast function is used.-- does not work without view (returns null)select max(cast(_MAP['foo'] as integer)) from elastic-- query based on view workscreate view elasticview as select cast(_MAP['foo'] as integer) as foo from elastic; -- worksselect max(foo) from elasticview This seems a little counterintuitive, since casting is not pushed to elastic, but consistent with existing view functionality.</description>
      <version>1.19.0</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">elasticsearch.src.test.java.org.apache.calcite.adapter.elasticsearch.AggregationTest.java</file>
      <file type="M">elasticsearch.src.main.java.org.apache.calcite.adapter.elasticsearch.ElasticsearchRules.java</file>
    </fixedFiles>
  </bug>
  <bug id="306" opendate="2014-6-20 00:00:00" fixdate="2014-11-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Standardize code style for "import package.*;"</summary>
      <description>Our house style does not specify whether/when imports are to be converted to stars. I propose that imports should be converted to stars if there are more than 3 from the same package. Thus:import a.b.C1;import a.b.C2;import a.b.C3;becomesimport a.b.*;when a.b.C4 is added. This is consistent with IntelliJ's default rule.It is OK to use stars if there are 3 or fewer uses. Thus removing the use of a.b.C2 would not require imports to be changed.Checkstyle has a rule to ban star imports (excluding certain packages) but does not allow them to be limited to a particular number.</description>
      <version>None</version>
      <fixedVersion>1.0.0-incubating</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableRel.java</file>
      <file type="M">ubenchmark.src.main.java.org.apache.calcite.StatementTest.java</file>
      <file type="M">src.main.config.checkstyle.suppressions.xml</file>
      <file type="M">src.main.config.checkstyle.checker.xml</file>
      <file type="M">splunk.src.test.java.org.apache.calcite.test.SplunkAdapterTest.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.util.TrustAllSslSocketFactory.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.util.StringUtils.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.util.SocketFactoryImpl.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.util.package-info.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.util.HttpUtils.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkTableScan.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkTable.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkSchema.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkQuery.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkPushDownRule.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkDriverVersion.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.SplunkDriver.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.search.SplunkConnectionImpl.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.search.SplunkConnection.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.search.SearchResultListener.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.search.package-info.java</file>
      <file type="M">splunk.src.main.java.org.apache.calcite.adapter.splunk.package-info.java</file>
      <file type="M">splunk.pom.xml</file>
      <file type="M">spark.src.test.java.org.apache.calcite.test.SparkAdapterTest.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.SparkToEnumerableConverter.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.SparkRuntime.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.SparkRules.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.SparkRel.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.SparkMethod.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.SparkHandlerImpl.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.package-info.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.JdbcToSparkConverterRule.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.JdbcToSparkConverter.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.HttpServer.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.EnumerableToSparkConverterRule.java</file>
      <file type="M">spark.src.main.java.org.apache.calcite.adapter.spark.EnumerableToSparkConverter.java</file>
      <file type="M">spark.pom.xml</file>
      <file type="M">pom.xml</file>
      <file type="M">plus.src.test.java.org.apache.calcite.test.PlusSuite.java</file>
      <file type="M">plus.src.test.java.org.apache.calcite.impl.tpch.TpchTest.java</file>
      <file type="M">plus.src.test.java.org.apache.calcite.adapter.tpch.TpcdsTest.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.tpch.TpchSchemaFactory.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.tpch.TpchSchema.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.tpch.package-info.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.tpcds.TpcdsSchemaFactory.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.tpcds.TpcdsSchema.java</file>
      <file type="M">plus.src.main.java.org.apache.calcite.adapter.tpcds.package-info.java</file>
      <file type="M">plus.pom.xml</file>
      <file type="M">mongodb.src.test.resources.mongo-zips-model.json</file>
      <file type="M">mongodb.src.test.resources.mongo-foodmart-model.json</file>
      <file type="M">mongodb.src.test.java.org.apache.calcite.test.MongoAdapterTest.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.package-info.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoToEnumerableConverterRule.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoToEnumerableConverter.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoTableScan.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoTable.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoSort.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoSchemaFactory.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoSchema.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoRules.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoRel.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoProject.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoMethod.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoFilter.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoEnumerator.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoAggregate.java</file>
      <file type="M">mongodb.pom.xml</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.tree.TypeTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.tree.package-info.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.PrimitiveTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.package-info.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.OptimizerTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.Linq4jTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.Linq4jSuite.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.InlinerTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.ExpressionTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.DeterministicTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.BlockBuilderTest.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.test.BlockBuilderBase.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.function.package-info.java</file>
      <file type="M">linq4j.src.test.java.org.apache.calcite.linq4j.function.FunctionTest.java</file>
      <file type="M">linq4j.src.test.java.com.example.Linq4jExample.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.WhileStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Visitor.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.UnaryExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Types.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.TypeBinaryExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.TryStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ThrowStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.TernaryExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.SwitchStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.SwitchCase.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Statement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ReflectedPseudoField.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.PseudoField.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Primitive.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ParameterExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.package-info.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.OptimizeVisitor.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Node.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.NewExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.NewArrayExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MethodDeclaration.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MethodCallExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MemberMemberBinding.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MemberListBinding.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MemberInitExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MemberExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MemberDeclaration.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MemberBinding.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.MemberAssignment.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ListInitExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.LambdaExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.LabelTarget.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.LabelStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.InvocationExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.IndexExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.GotoStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.GotoExpressionKind.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.FunctionExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ForStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.FieldDeclaration.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ExpressionWriter.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ExpressionVisitor.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ExpressionType.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Expressions.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Expression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Evaluator.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ElementInit.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.DynamicExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.DeterministicCodeOptimizer.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.DefaultExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.DeclarationStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ConstructorDeclaration.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ConstantUntypedNull.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ConstantExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ConditionalStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ConditionalExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ClassDeclarationFinder.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ClassDeclaration.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.CatchBlock.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.CallSiteBinder.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.BlockStatement.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.Blocks.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.BlockBuilder.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.BinaryExpression.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.ArrayLengthRecordField.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.tree.AbstractNode.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.RawQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.RawEnumerable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.QueryProviderImpl.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.QueryProvider.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.QueryableRecorder.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.QueryableFactory.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.QueryableDefaults.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Queryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.package-info.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.OrderedQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.OrderedEnumerable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Ord.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.OpType.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.LookupImpl.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Lookup.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Linq4j.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.GroupingImpl.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Grouping.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Predicate2.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Predicate1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.package-info.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.NullableLongFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.NullableIntegerFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.NullableFloatFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.NullableDoubleFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.NullableBigDecimalFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.NonDeterministic.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.LongFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.IntegerFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Functions.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Function2.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Function1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Function0.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Function.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.FloatFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.EqualityComparer.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.DoubleFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.Deterministic.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.function.BigDecimalFunction1.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Extensions.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.ExtendedQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.ExtendedOrderedQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.ExtendedOrderedEnumerable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.ExtendedEnumerable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Enumerator.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.EnumerableQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.EnumerableOrderedQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.EnumerableDefaults.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.Enumerable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.DefaultQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.DefaultEnumerable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.CartesianProductEnumerator.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.BaseQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.AbstractQueryable.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.AbstractEnumerable2.java</file>
      <file type="M">linq4j.src.main.java.org.apache.calcite.linq4j.AbstractEnumerable.java</file>
      <file type="M">linq4j.pom.xml</file>
      <file type="M">example.csv.src.test.resources.smart.json</file>
      <file type="M">example.csv.src.test.resources.model.json</file>
      <file type="M">example.csv.src.test.resources.model-with-view.json</file>
      <file type="M">example.csv.src.test.resources.model-with-custom-table.json</file>
      <file type="M">example.csv.src.test.resources.filterable-model.json</file>
      <file type="M">example.csv.src.test.resources.bug.json</file>
      <file type="M">example.csv.src.test.java.org.apache.calcite.test.package-info.java</file>
      <file type="M">example.csv.src.test.java.org.apache.calcite.test.CsvTest.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.package-info.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.JsonTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.JsonEnumerator.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvTranslatableTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvTableScan.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvTableFactory.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvSchemaFactory.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvSchema.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvScannableTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvProjectTableScanRule.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvFilterableTable.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvFieldType.java</file>
      <file type="M">example.csv.src.main.java.org.apache.calcite.adapter.csv.CsvEnumerator.java</file>
      <file type="M">core.src.test.resources.sql.subquery.oq</file>
      <file type="M">core.src.test.resources.sql.misc.oq</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.resources.org.apache.calcite.test.HepPlannerTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.UtilTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.TestUtil.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.ReflectVisitorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.PermutationTestCase.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.PartiallyOrderedSetTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.mapping.MappingTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.graph.DirectedGraphTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.ChunkListTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.util.BitSetsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.tools.TpchSchema.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.tools.PlannerTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.tools.FrameworksTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.TableInRootSchemaTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTestCase.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorFeatureTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelTestBase.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelConverterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelConverterExtendedTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlTestGen.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlLimitsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlFunctionsTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.ScannableTableTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexTransformerTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RexProgramTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptTestBase.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptRulesTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelMetadataTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.ReflectiveSchemaTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.package-info.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MultiJdbcSchemaJoinTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.ModelTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MockSqlOperatorTable.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MockRelOptPlanner.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MockRelOptCost.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MockCatalogReader.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MaterializationTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.LinqFrontJdbcBackTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.LatticeTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcFrontLinqBackTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcFrontJdbcBackTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcFrontJdbcBackLinqMiddleTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcAdapterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.InterpreterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.HepPlannerTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.FoodmartTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.FilteratorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.ExceptionMessageTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.DiffTestCase.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.DiffRepository.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.SamplePlugin.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.package-info.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestTimedCommandGenerator.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestPluginCommand.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestPlugin.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestCommandScript.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestCommandGenerator.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestCommandExecutor.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.concurrent.ConcurrentTestCommand.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CalciteSuite.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CalciteSqlOperatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CalciteResourceTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.CalciteAssert.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlTypeNameTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlTests.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlTestFactory.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlTesterImpl.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlTester.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlPrettyWriterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlAdvisorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.package-info.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.DelegatingSqlTestFactory.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.DefaultSqlTestFactory.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlUnParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.runtime.EnumerablesTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.runtime.BinarySearchTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rex.RexExecutorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.volcano.VolcanoPlannerTraitTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.volcano.VolcanoPlannerTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.RelWriterTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.RelOptUtilTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.plan.RelOptPlanReaderTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.examples.foodmart.java.JdbcExample.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.adapter.generate.RangeTable.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.adapter.clone.ArrayTableTest.java</file>
      <file type="M">core.src.main.resources.org.apache.calcite.runtime.CalciteResource.properties</file>
      <file type="M">core.src.main.resources.META-INF.services.java.sql.Driver</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ZonelessTimestamp.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ZonelessTime.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ZonelessDatetime.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ZonelessDate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.XmlOutput.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Util.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.UnmodifiableArrayList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.trace.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.trace.CalciteTrace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.trace.CalciteTimingTracer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.trace.CalciteLogger.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Template.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Static.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.StackWriter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Stacks.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.SerializableCharset.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.SaffronProperties.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.RhBase64.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ReflectUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ReflectiveVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ReflectiveVisitDispatcher.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Permutation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.PartiallyOrderedSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Pair.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.NumberUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.NlsString.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.MappingType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.Mappings.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.Mapping.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.IntPair.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.AbstractTargetMapping.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.mapping.AbstractSourceMapping.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.JsonBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.javac.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.javac.JavaCompilerArgs.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.javac.JavaCompiler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.javac.JaninoCompiler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.IntList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.IntegerIntervalSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ImmutableNullableList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ImmutableIntList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Holder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.TopologicalOrderIterator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.Graphs.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.DirectedGraph.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.DepthFirstIterator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.DefaultEdge.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.DefaultDirectedGraph.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.CycleDetector.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.graph.BreadthFirstIterator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Glossary.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Filterator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.DelegatingInvocationHandler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.DateTimeUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ConversionUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ControlFlowException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CompoundClosableAllocation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CompositeMap.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CompositeList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CompatibleGuava11.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Compatible.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ClosableAllocationOwner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ClosableAllocation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.ChunkList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CastingList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CancelFlag.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CalciteValidatorException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.CalciteParserException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Bug.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BitString.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BitSets.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Benchmark.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BasicDatetime.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BarfingInvocationHandler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.ValidationException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RuleSets.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RuleSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RelConversionException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.Programs.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.Program.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.Planner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.Frameworks.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.FrameworkConfig.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.WithScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.WithNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.WithItemNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.UnnestNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.TableNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.TableConstructorNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorWithHints.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorCatalogReader.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlUserDefinedTableMacro.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlUserDefinedTableFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlUserDefinedFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlUserDefinedAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlScopedShuttle.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlMonotonicity.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlMonikerType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlMonikerImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlMonikerComparator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlMoniker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlIdentifierMoniker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlConformance.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SetopNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SelectScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SelectNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.ProcedureNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.ParameterScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.ParameterNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.OverScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.OrderByScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.ListScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.JoinScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.JoinNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.IdentifierNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.FieldNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.EmptyScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.DelegatingSqlValidatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.DelegatingSqlValidatorCatalogReader.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.DelegatingScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.DelegatingNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.CollectScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.CollectNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AliasNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AggregatingSelectScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AggregatingScope.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AggFinder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AggChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.AbstractNamespace.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.SqlVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.SqlString.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.SqlShuttle.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.SqlBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.SqlBasicVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.ReflectiveSqlOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.ListSqlOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.util.ChainedSqlOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.TableFunctionReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeTransforms.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeTransformCascade.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeTransform.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeName.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeFamily.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeExplicitPrecedenceList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlTypeAssignmentRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlSingleOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlReturnTypeInferenceChain.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlOperandTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SqlOperandCountRanges.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SetopOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.SameOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ReturnTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.OrdinalReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.OperandTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.OperandsTypeChecking.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ObjectSqlType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.MultisetSqlType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.MultisetOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.MatchReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.MapSqlType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.LiteralOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.JavaToSqlTypeConversionRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.IntervalSqlType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.InferTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.FamilyOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ExtraSqlTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ExplicitReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ExplicitOperandTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.CursorReturnTypeInference.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.CompositeOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ComparableOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.BasicSqlType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.AssignableOperandTypeChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.ArraySqlType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.AbstractSqlType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlWriter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlWithItem.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlWith.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlWindow.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlValuesOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUpdate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUnresolvedFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUnnestOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlTimestampLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlTimeLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSyntax.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlStateCodes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSpecialOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSetOption.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSetOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSelectOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSelectKeyword.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSelect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlSampleSpec.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlRankFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlProcedureCallOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlPrefixOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlPostfixOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlOverOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlOrderBy.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlOperatorBinding.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlOperandCountRange.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlNumericLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlNullSemantics.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlNodeList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlMerge.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlKind.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJdbcFunctionCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlIntervalQualifier.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlIntervalLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlInternalOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlInsertKeyword.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlInsert.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlInfixOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlIdentifier.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlFunctionCategory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlFunctionalOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlExplainLevel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlExplain.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDynamicParam.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDelete.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDateLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDataTypeSpec.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlCollation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlCharStringLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlCallBinding.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlBinaryStringLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlBinaryOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlBasicCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlAsOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlAccessType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlAccessEnum.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlAbstractStringLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlAbstractDateTimeLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.pretty.SqlPrettyWriter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.pretty.SqlFormatOptions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.pretty.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParserUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParserPos.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParserImplFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParser.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlParseException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.SqlAbstractParserImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.parser.impl.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.JoinType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.JoinConditionType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlTrimFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlThrowOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlSumEmptyIsZeroAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlSumAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlSubstringFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStringContextVariable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlSingleValueAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlRowOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlPositionFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlOverlayFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlOverlapsOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlNullifFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlNtileAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlNewOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMultisetValueConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMultisetSetOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMultisetQueryConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMultisetMemberOfOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMonotonicUnaryFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMonotonicBinaryOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMinMaxAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMapValueConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlMapQueryConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLiteralChainOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLikeOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLeadLagAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlItemOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlInOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlHistogramAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlFloorFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlFirstLastValueAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlExtractFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCursorConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCurrentDateFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCovarAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCountAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlConvertFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlColumnListConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCollectionTableOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCoalesceFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCeilFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCastFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCaseOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlCase.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlBetweenOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlAvgAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlArrayValueConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlArrayQueryConstructor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlAbstractTimeFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.ExplicitOperatorBinding.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlSimpleParser.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlAdvisorValidator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlAdvisorHint.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlAdvisorGetHintsFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.SqlAdvisor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.advise.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SubqueryConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.StandardConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlToRelConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlRexConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlRexConvertlet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlRexContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlNodeToRexConverterImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlNodeToRexConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.RelStructuredTypeFlattener.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.RelFieldTrimmer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.RelDecorrelator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.ReflectiveConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.DefaultValueFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.server.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.server.CalciteServerStatement.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.server.CalciteServer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.TranslatableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.TableMacro.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.TableFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.TableFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Table.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Statistics.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Statistic.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.SemiMutableSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Schemas.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.SchemaPlus.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.SchemaFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Schema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ScannableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ScalarFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.QueryableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ProjectableFilterableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ModifiableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Member.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.ViewTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.TableMacroImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.TableFunctionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.StarTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.ScalarFunctionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.ReflectiveFunctionBase.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.MaterializedViewTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.DelegatingSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.AggregateFunctionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.AbstractTableQueryable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.AbstractTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.AbstractSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ImplementableFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.ImplementableAggFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.FunctionParameter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.Function.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.FilterableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.AggregateFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Utilities.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Unit.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Typed.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Spaces.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Spacer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SortedMultiMap.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.ResultSetEnumerable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.RecordEnumeratorCursor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.ObjectEnumeratorCursor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Like.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Hook.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.FlatLists.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Feature.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.EnumeratorCursor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Enumerables.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteResource.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.CalciteContextException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.Bindable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.BinarySearch.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.ArrayEnumeratorCursor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.ArrayComparator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.AbstractCursor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rules.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexWindowBound.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexWindow.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexVisitorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexVariable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexTransformer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexToSqlNodeConverterImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexToSqlNodeConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSqlStandardConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSqlReflectiveConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSqlConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSqlConvertlet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSlot.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexShuttle.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexRangeRef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexProgramBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexProgram.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexPermuteInputsShuttle.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexPermutationShuttle.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexPattern.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexOver.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexMultisetUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexLocalRef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexInputRef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexFieldCollation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexFieldAccess.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexExecutorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexExecutable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexDynamicParam.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexCorrelVariable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexCopier.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexChecker.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexCallBinding.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexAction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelRecordType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelProtoDataType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeSystemImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeSystem.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypePrecedenceList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeFieldImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeField.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeFamily.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataTypeComparability.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelDataType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.RelCrossType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.type.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.SingleRel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ValuesReduceRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.UnionToDistinctRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.UnionMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.UnionEliminatorRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.TableScanRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SortRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SortProjectTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SemiJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SemiJoinRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SemiJoinProjectTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SemiJoinJoinTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SemiJoinFilterTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ReduceExpressionsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ReduceDecimalsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.PushProjector.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectToWindowRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectToCalcRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectTableRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectSortTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectSetOpTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectMultiJoinMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectJoinTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectFilterTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.ProjectCalcMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.MultiJoinProjectTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.MultiJoinOptimizeBushyRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.MultiJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.LoptSemiJoinOptimizer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.LoptOptimizeJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.LoptMultiJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.LoptJoinTree.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinUnionTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinToMultiJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinToCorrelatorRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinPushTransitivePredicatesRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinPushThroughJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinProjectTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinExtractFilterRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinCommuteRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinAssociateRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.JoinAddRedundantSemiJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterToCalcRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterTableRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterTableFunctionTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterSetOpTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterRemoveIsNotDistinctFromRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterProjectTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterMultiJoinMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterCalcMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterAggregateTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.EquiJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.EmptyPruneRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.CoerceInputsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.CalcRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.CalcRelSplitter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.CalcMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateUnionTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateUnionAggregateRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateStarTableRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateRemoveRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateReduceFunctionsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateProjectPullUpConstantsRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateProjectMergeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateFilterTransposeRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.AggregateExpandDistinctAggregatesRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelWriter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelShuttleImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelShuttle.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelInput.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelImplementorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelFieldCollation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelCollationTraitDef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelCollationImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.RelCollation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMetadataQuery.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdUniqueKeys.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdSelectivity.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdRowCount.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdPredicates.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdPopulationSize.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdPercentageOriginalRows.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdExplainVisibility.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdDistinctRowCount.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdColumnUniqueness.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdColumnOrigins.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelColumnOrigin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelColumnMapping.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.ReflectiveRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.MetadataFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.MetadataFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.Metadata.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.DefaultRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.ChainedRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.CachingRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.BuiltInMetadata.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalWindow.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalValues.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalUnion.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalTableScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalTableModify.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalTableFunctionScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalProject.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalOneRow.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalMinus.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalIntersect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalFilter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalCalc.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.logical.LogicalAggregate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.jdbc.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.InvalidRelException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.RelXmlWriter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.RelWriterImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.RelJsonWriter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.RelJsonReader.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.externalize.RelJson.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Window.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Values.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Union.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Uncollect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.TableScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.TableModify.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.TableFunctionScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Sort.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.SetOp.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.SemiJoin.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Sample.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.RelFactories.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Project.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.OneRow.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Minus.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.JoinRelType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.JoinInfo.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Join.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Intersect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Filter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Empty.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Correlator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Correlation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Collect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Calc.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.AggregateCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Aggregate.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.convert.TraitMatchingRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.convert.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.convert.NoneConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.convert.ConverterRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.convert.ConverterImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.convert.Converter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.Aggregation.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.AbstractRelNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.RelOptTableImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.QueryableRelBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.Prepare.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.PlannerImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.LixToRelTranslator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalciteSqlValidator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalcitePrepareImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalciteMaterializer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.CalciteCatalogReader.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoRuleMatch.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoRuleCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoPlannerPhaseRuleMappingInitializer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoPlannerPhase.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoPlanner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.VolcanoCost.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.RuleQueue.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.RelSubset.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.RelSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.ChainedPhaseRuleMappingInitializer.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.volcano.AbstractConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.VisitorRelVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.TableAccessMap.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.SubstitutionVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.Strong.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelTraitSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelTraitPropagationVisitor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelTraitDef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelTrait.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptUtil.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptSchemaWithSampling.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptSamplingParameters.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRuleOperandChildren.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRuleOperandChildPolicy.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRuleOperand.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRuleCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptQuery.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptPredicateList.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptPlanner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptMaterialization.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptListener.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptLattice.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptCostImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptCostFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptCost.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptConnection.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptCluster.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptAbstractTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.MulticastRelOptListener.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepRuleCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepRelVertex.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepRelMetadataProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepProgramBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepProgram.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepPlanner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepMatchOrder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.hep.HepInstruction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.ConventionTraitDef.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.Convention.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.Contexts.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.Context.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.CommonRelSubExprRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.AbstractRelOptPlanner.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.ModelHandler.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonView.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonTile.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonRoot.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonMeasure.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonMaterialization.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonMapSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonLattice.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonJdbcSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonFunction.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonCustomTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonCustomSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.model.JsonColumn.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.TileSuggester.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.TileKey.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.MaterializationService.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.MaterializationKey.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.MaterializationActor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.materialize.Lattice.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.SqlTimeoutException.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.MetaImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.MetadataSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.JavaTypeFactoryImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.JavaRecordType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.Driver.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteStatement.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteRootSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteResultSet.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalcitePreparedStatement.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalcitePrepare.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteJdbc41Factory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteJdbc40Factory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteConnectionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.jdbc.CalciteConnection.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.ValuesNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Source.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.SortNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Sink.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.ScanNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Scalar.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Row.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.ProjectNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Nodes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Node.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Interpreter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.FilterNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.interpreter.Context.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.Demo.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.DataContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.Lex.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionProperty.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionConfigImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.config.CalciteConnectionConfig.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcUtils.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverterRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcTableScan.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcRel.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcQueryProvider.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.jdbc.JdbcConvention.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.java.ReflectiveSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.java.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.java.JavaTypeFactory.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.java.AbstractQueryableTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.WinAggResultContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.WinAggResetContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.WinAggImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.WinAggFrameResultContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.WinAggFrameContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.WinAggContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.WinAggAddContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.StrictWinAggImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.StrictAggImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexToLixTranslator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.ReflectiveCallNotNullImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.PhysTypeImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.PhysType.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.NullPolicy.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.NotNullImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.NestedBlockBuilderImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.NestedBlockBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.JavaRowFormat.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.JavaRelImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.impl.WinAggResultContextImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.impl.WinAggResetContextImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.impl.WinAggAddContextImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.impl.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.impl.AggResultContextImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.impl.AggResetContextImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.impl.AggAddContextImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableRules.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableRelImplementor.java</file>
      <file type="M">avatica.pom.xml</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.ArrayImpl.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaConnection.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaDatabaseMetaData.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaFactory.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaJdbc40Factory.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaJdbc41Factory.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaParameter.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaPreparedStatement.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaPrepareResult.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaResultSet.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaResultSetMetaData.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.AvaticaStatement.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.BuiltInConnectionProperty.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.ByteString.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.Casing.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.ColumnMetaData.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.ConnectionConfig.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.ConnectionConfigImpl.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.ConnectionProperty.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.ConnectStringParser.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.Cursor.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.DriverVersion.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.Handler.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.HandlerImpl.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.Helper.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.InternalProperty.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.Meta.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.package-info.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.Quoting.java</file>
      <file type="M">avatica.src.main.java.org.apache.calcite.avatica.UnregisteredDriver.java</file>
      <file type="M">avatica.src.test.java.org.apache.calcite.avatica.test.AvaticaSuite.java</file>
      <file type="M">avatica.src.test.java.org.apache.calcite.avatica.test.ConnectStringParserTest.java</file>
      <file type="M">avatica.src.test.java.org.apache.calcite.avatica.test.package-info.java</file>
      <file type="M">core.pom.xml</file>
      <file type="M">core.src.main.codegen.config.fmpp</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.clone.ArrayTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.clone.CloneSchema.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.clone.ColumnLoader.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.clone.ListTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.clone.package-info.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.AggAddContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.AggContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.AggImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.AggImpState.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.AggResetContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.AggResultContext.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.CallImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableConvention.java</file>
    </fixedFiles>
  </bug>
  <bug id="3063" opendate="2019-5-11 00:00:00" fixdate="2019-7-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Babel parse should parse PostgreSQL posix regular expressions</summary>
      <description>Quoting from the referenced link below, posix operators are:OperatorDescriptionExample~Matches regular expression, case sensitive'thomas' ~ '.thomas.'~*Matches regular expression, case insensitive'thomas' ~* '.Thomas.'!~Does not match regular expression, case sensitive'thomas' !~ '.Thomas.'!~*Does not match regular expression, case insensitive'thomas' !~* '.vadim.' Reference: https://www.postgresql.org/docs/11/functions-matching.html#FUNCTIONS-POSIX-REGEXP</description>
      <version>1.19.0</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">server.src.main.codegen.config.fmpp</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlFunctionsTest.java</file>
      <file type="M">core.src.test.codegen.config.fmpp</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.BuiltInMethod.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlKind.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlStdOperatorTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rex.RexSqlStandardConvertletTable.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
      <file type="M">core.src.main.codegen.templates.Parser.jj</file>
      <file type="M">core.src.main.codegen.config.fmpp</file>
      <file type="M">babel.src.main.codegen.includes.parserImpls.ftl</file>
      <file type="M">babel.src.main.codegen.config.fmpp</file>
    </fixedFiles>
  </bug>
  <bug id="3084" opendate="2019-5-22 00:00:00" fixdate="2019-5-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement JDBC string functions: ASCII, REPEAT, SPACE, SOUNDEX, DIFFERENCE</summary>
      <description>Implement jdbc functional content:{fn ASCII(string)}{fn DIFFERENCE(string, string)}{fn REPEAT(string, integer)}{fn SOUNDEX(string)}{fn SPACE(integer)} </description>
      <version>1.19.0</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.sql.test.SqlOperatorBaseTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJdbcFunctionCall.java</file>
    </fixedFiles>
  </bug>
  <bug id="3097" opendate="2019-5-28 00:00:00" fixdate="2019-5-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>GROUPING SETS breaks on sets of size &gt; 1 due to precedence issues</summary>
      <description>Easiest to explain in a test. The test on current master fails, with relevant part of the parsed and unparsed query turning into something like `GROUP BY GROUPING SETS("product_class_id", "brand_name", "product_class_id")`, incorrectly flattening the sub lists of group sets into one long list./** Tests that GROUPING SETS parse and unparse properly, especially that they maintain proper precedence * around nested lists. */@Test public void testGroupByGroupingSets() { final String query = "select \"product_class_id\", \"brand_name\"\n" + "from \"product\"\n" + "group by GROUPING SETS ((\"product_class_id\", \"brand_name\"), (\"product_class_id\"))\n" + "order by 2, 1"; final String expected = "SELECT \"product_class_id\", \"brand_name\"\n" + "FROM \"foodmart\".\"product\"\n" + "GROUP BY GROUPING SETS((\"product_class_id\", \"brand_name\"), (\"product_class_id\"))\n" + "ORDER BY \"brand_name\", \"product_class_id\""; sql(query) .withPostgresql() .ok(expected);}</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlRollupOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.RelToSqlConverter.java</file>
    </fixedFiles>
  </bug>
  <bug id="3098" opendate="2019-5-28 00:00:00" fixdate="2019-5-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade SQLLine to 1.8.0</summary>
      <description>Upgrade SQLLine to 1.8.0.</description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="311" opendate="2014-6-25 00:00:00" fixdate="2014-8-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Wrong results when filtering the results of windowed aggregation</summary>
      <description>Optiq incorrectly pushes filter down window aggregation, thus window aggregates get wrong input data resulting in incorrect result.Here's example:OptiqAssert.that() .with(OptiqAssert.Config.REGULAR) .query( "select * from (select \"empid\", count(*) over () c\n" + "from \"hr\".\"emps\"\n" + ") where \"empid\"=100") .returns("empid=100; C=4\n"); // It should count(*) first, and filter laterThe actual result is: empid=100; C=1The plan is as follows:EnumerableCalcRel(expr#0..5=[{inputs}], empid=[$t0], $1=[$t5]) EnumerableWindowRel(window#0=[window(partition {} order by [] range between UNBOUNDED PRECEDING and UNBOUNDED FOLLOWING aggs [COUNT()])]) EnumerableCalcRel(expr#0..4=[{inputs}], expr#5=[CAST($t0):INTEGER NOT NULL], expr#6=[100], expr#7=[=($t5, $t6)], proj#0..4=[{exprs}], $condition=[$t7]) EnumerableTableAccessRel(table=[[hr, emps]])I have no idea why PushFilterPastProjectRule is executed before WindowedAggSplitterRule.PROJECT.At best we should allow pushing filters that use expressions matching PARTITION BY expressions.I am not sure that is easy to do in ProjectRel_with_RexOvers form.I guess it would be easier if we create WindowRel first, and then have dedicated PushFilterPastWindowRel rule.At least we should deny PushFilterPastProjectRule when Project contains RexOver.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.sql.winagg.iq</file>
    </fixedFiles>
  </bug>
  <bug id="3115" opendate="2019-6-6 00:00:00" fixdate="2019-9-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Cannot add JdbcRules which have different JdbcConvention to same VolcanoPlanner&amp;#39;s RuleSet.</summary>
      <description>When we use Calcite via JDBC to run a sql which involves two difference jdbc schema:select * from (select "a",max("b") as max_b, sum("c") as sum_c from "test"."temp" where "d" &gt; 10 or "b" &lt;&gt; 'hello' group by "a", "e", "f" having "a" &gt; 100 and max("b") &lt; 20 limit 10) t union select "a", "b","c" from "test2"."temp2" group by "a","b","c" the sql get a plan like that:EnumerableUnion(all=[false]) JdbcToEnumerableConverter JdbcProject(a=[$0], MAX_B=[$3], SUM_C=[$4]) JdbcSort(fetch=[10]) JdbcFilter(condition=[&lt;(CAST($3):BIGINT, 20)]) JdbcAggregate(group=[{0, 4, 5}], MAX_B=[MAX($1)], SUM_C=[SUM($2)]) JdbcFilter(condition=[AND(OR(&gt;($3, 10), &lt;&gt;($1, 'hello')), &gt;($0, 100))]) JdbcTableScan(table=[[test, temp]]) EnumerableAggregate(group=[{0, 1, 2}]) JdbcToEnumerableConverter JdbcTableScan(table=[[test2, temp2]])And the EnumerableAggregate for table test2.temp2 cannot be converted to JdbcAggregate.</description>
      <version>1.19.0</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcAdapterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.convert.ConverterRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="3116" opendate="2019-6-6 00:00:00" fixdate="2019-6-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Avatica 1.15</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.20.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">core.src.test.resources.sql.struct.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.QuidemTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.Bug.java</file>
    </fixedFiles>
  </bug>
  <bug id="3122" opendate="2019-6-7 00:00:00" fixdate="2019-8-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Convert Pig Latin scripts into Calcite logical plans</summary>
      <description>We create an internal Calcite repo at LinkedIn and develop APIs to parse any Pig Latin scripts into Calcite logical plan. The code was tested in nearly ~1000 Pig scripts written at LinkedIn.Changes:1. piglet: main conversion code live there, include: APIs to convert any Pig scripts into RelNode plans or SQL statements Use Pig Grunt parser to parse Pig Latin scripts into Pig logical plan (DAGs) Convert Pig schemas into RelDatatype Traverse through Pig expression plan and convert Pig expressions into RexNodes Map some basic Pig UDFs to Calcite SQL operators Build Calcite UDFs for any other Pig UDFs, including UDFs written in both Java and Python Traverse (DFS) through Pig logical plans to convert each Pig logical nodes to RelNodes Have an optimizer rule to optimize Pig group/cogroup into Aggregate operators2. core: Implement other RelNode in Rel2Sql so that Pig can be translated into SQL Other minor changes in a few other classes to make Pig to Calcite works</description>
      <version>None</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.history.md</file>
      <file type="M">piglet.src.test.resources.log4j.properties</file>
      <file type="M">piglet.src.test.java.org.apache.calcite.test.CalciteHandler.java</file>
      <file type="M">piglet.pom.xml</file>
      <file type="M">kafka.pom.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.Matchers.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.RelBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.tools.PigRelBuilder.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.validate.SqlValidatorImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlUnnestOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlNode.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlLateralOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlBasicTypeNameSpec.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.schema.impl.ScalarFunctionImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.runtime.SqlFunctions.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.SqlImplementor.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.RelToSqlConverter.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.core.Uncollect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.prepare.RelOptTableImpl.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptCluster.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumUtils.java</file>
      <file type="M">piglet.src.main.java.org.apache.calcite.piglet.PigRelSqlUdfs.java</file>
    </fixedFiles>
  </bug>
  <bug id="3147" opendate="2019-6-25 00:00:00" fixdate="2019-9-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>BigQuery (standard SQL) quoting and identifier issues</summary>
      <description>BigQuery escapes single quotes with backticks, and requires triple-quote quoting (like Python) when there is a newline. Also, it does not support the same set of characters in identifiers as other dialects of SQL. For example, it does not support '$'. Ideally, RelToSqlConverter (with the logic of the BigQuery dialect) would handle all this.  </description>
      <version>None</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.util.NlsString.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlDialect.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlCharStringLiteral.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLiteralChainOperator.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.dialect.BigQuerySqlDialect.java</file>
    </fixedFiles>
  </bug>
  <bug id="3151" opendate="2019-6-27 00:00:00" fixdate="2019-6-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>RexCall&amp;#39;s Monotonicity is not considered in determining a Calc&amp;#39;s collation</summary>
      <description>In FLINK-12999 I found a case that the planner can't generate a valid execution plan for a sample query:SELECT UUID() FROM (VALUES(1, 2, 3)) T(a, b, c)I made an investigation and found the root case was: RexCall's Monotonicity is not considered in determining a Calc's collation( should do the same as Project).</description>
      <version>1.19.0</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptRulesTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.metadata.RelMdCollation.java</file>
    </fixedFiles>
  </bug>
  <bug id="3154" opendate="2019-6-28 00:00:00" fixdate="2019-1-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>RelToSqlConverter generates NULLA LAST and NULLS FIRST wrongly when converting RexOver to sql using MysqlSqlDialect</summary>
      <description>As for sql :String query = "SELECT row_number() over (order by \"hire_date\") FROM \"employee\"";using RelToSqlConverter  to generate a sql for mysql , the result is :SELECT ROW_NUMBER() OVER (ORDER BY `hire_date` NULLS LAST)FROM `foodmart`.`employee`However, mysql does not support NULLS LAST. </description>
      <version>1.19.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.rel.rel2sql.RelToSqlConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rel2sql.SqlImplementor.java</file>
    </fixedFiles>
  </bug>
  <bug id="3156" opendate="2019-6-29 00:00:00" fixdate="2019-6-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Replace fongo with mongo java server for test</summary>
      <description>mongo java server is a better alternative to Fongo for embedded java instance of mongo server.Currently all tests (including IT) are passing with mongo java server</description>
      <version>None</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">mongodb.src.test.java.org.apache.calcite.test.MongoAssertions.java</file>
      <file type="M">mongodb.src.test.java.org.apache.calcite.adapter.mongodb.MongoDatabasePolicy.java</file>
      <file type="M">mongodb.src.test.java.org.apache.calcite.adapter.mongodb.MongoAdapterTest.java</file>
      <file type="M">mongodb.pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="3157" opendate="2019-6-29 00:00:00" fixdate="2019-1-29 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Upgrade mongo java driver 3.5.0 -&gt; 3.10.2</summary>
      <description>We have quite outdated mongo java driver(3.5.0). Upgrade to 3.10.2</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">mongodb.src.test.java.org.apache.calcite.adapter.mongodb.MongoAdapterTest.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoSchemaFactory.java</file>
      <file type="M">mongodb.src.main.java.org.apache.calcite.adapter.mongodb.MongoSchema.java</file>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="3168" opendate="2019-7-3 00:00:00" fixdate="2019-7-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add test for invalid literal of sql parser</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="3170" opendate="2019-7-3 00:00:00" fixdate="2019-7-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>ANTI join on conditions push down generates wrong plan</summary>
      <description>create table A (a int, b int);create table B (c int, d int);insert into A values (1, 1);insert into A values (2, 2);sql: select * from A where A.a not in (select B.c from B where A.b &gt; 1);the equivalent logical tree:LogicalProject(a=[$0], b=[$1])+- LogicalProject(a=[$0], b=[$1]) +- LogicalJoin(condition=[AND(OR(=($0, $3), IS NULL($0), IS NULL($3)), $2)], joinType=[anti]) :- LogicalProject(a=[$0], b=[$1], $f2=[&gt;($1, 1)]) : +- LogicalTableScan(table=[[A]]) +- LogicalProject(c=[$0]) +- LogicalFilter(condition=[true]) +- LogicalTableScan(table=[[B]])the correct result is: (1, 1), (2, 2)while if the predicate ($2 in join condition) is pushed into left side, the result is (2, 2) which is incorrect.</description>
      <version>1.19.0</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.RelOptRulesTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.RelOptRulesTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.enumerable.EnumerableJoinTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterCorrelateRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.plan.RelOptUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="3179" opendate="2019-7-8 00:00:00" fixdate="2019-7-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bump Jackson from 2.9.8 to 2.9.9</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
    </fixedFiles>
  </bug>
  <bug id="3222" opendate="2019-7-31 00:00:00" fixdate="2019-8-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix code style issues introduced by CALCITE-3031</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.SubQueryRemoveRule.java</file>
    </fixedFiles>
  </bug>
  <bug id="3252" opendate="2019-8-14 00:00:00" fixdate="2019-8-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add CONVERT_TIMEZONE, TO_DATE, TO_TIMESTAMP functions to Redshift operator library</summary>
      <description>Syntax error while parsing CONVERT_TIMEZONE, TO_DATE, TO_TIMESTAMP functions on Redshift. Example queries that error for these functions:SELECT CONVERT_TIMEZONE('UTC', 'America/Los_Angeles', CAST('2019-01-01 01:00:00' AS TIMESTAMP) FROM mytable SELECT TO_DATE('2019-01-01', 'YYYY-MM-DD') FROM mytable SELECT TO_TIMESTAMP('2019-01-01 01:00:00', 'YYYY-MM-DD HH:MM:SS') FROM mytable With errors like:No match found for function signature CONVERT_TIMEZONE(&lt;CHARACTER&gt;, &lt;CHARACTER&gt;, &lt;TIMESTAMP&gt;)These are valid in Redshift and Postgres, except for CONVERT_TIMEZONE, which I believe is only valid on Redshift. </description>
      <version>None</version>
      <fixedVersion>1.21.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site..docs.reference.md</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlValidatorTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.materialize.LatticeSuggesterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.type.OperandTypes.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.SqlJdbcFunctionCall.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql.fun.SqlLibraryOperators.java</file>
    </fixedFiles>
  </bug>
  <bug id="3433" opendate="2019-10-21 00:00:00" fixdate="2019-11-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>EQUALS operator between date/timestamp types returns false if the type is nullable</summary>
      <description>sqlselect time0 = time1from (select timestamp'2000-12-30 21:07:32' as time0, timestamp'2000-12-30 21:07:32' as time1 union all select cast(null as timestamp) as time0, cast(null as timestamp) as time1)answer is falsebut sqlselect time0 = time1from(select timestamp'2000-12-30 21:07:32' as time0, timestamp'2000-12-30 21:07:32'as time1)answer is true </description>
      <version>1.17.0,1.18.0,1.19.0,1.20.0,1.21.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.RexImpTable.java</file>
    </fixedFiles>
  </bug>
  <bug id="35" opendate="2014-6-18 00:00:00" fixdate="2014-6-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support parenthesized sub-clause in JOIN</summary>
      <description>SQL-92 allows joins to be grouped into trees using parentheses. For example, select * from a join (b join c on b.x = c.x) on a.y = c.yOptiq should support this. Currently this gives "org.eigenbase.util.EigenbaseException: Non-query expression encountered in illegal context".---------------- Imported from GitHub ----------------Url: https://github.com/julianhyde/optiq/issues/35Created by: julianhydeLabels: Created at: Fri Apr 19 02:46:01 CEST 2013State: open</description>
      <version>1.19.0</version>
      <fixedVersion>1.31.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.java.org.apache.calcite.sql.parser.SqlParserTest.java</file>
    </fixedFiles>
  </bug>
  <bug id="3502" opendate="2019-11-14 00:00:00" fixdate="2019-11-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade Geode 1.6.0 -&gt; 1.9.2</summary>
      <description>Upgrade geode to 1.9.2 (from 1.6.0)</description>
      <version>None</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">pom.xml</file>
      <file type="M">geode.src.main.java.org.apache.calcite.adapter.geode.util.GeodeUtils.java</file>
    </fixedFiles>
  </bug>
  <bug id="3576" opendate="2019-12-6 00:00:00" fixdate="2019-4-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove Enumerable convention check in FilterIntoJoinRule</summary>
      <description>Context: https://github.com/apache/calcite/pull/1247#discussion_r289489174</description>
      <version>None</version>
      <fixedVersion>1.23.0</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.sql.misc.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.JdbcTest.java</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.enumerable.EnumerableHashJoinTest.java</file>
      <file type="M">core.src.test.resources.sql.sub-query.iq</file>
      <file type="M">core.src.test.resources.sql.join.iq</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.MaterializationTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.rel.rules.FilterJoinRule.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.adapter.enumerable.EnumerableNestedLoopJoin.java</file>
    </fixedFiles>
  </bug>
  <bug id="3738" opendate="2020-1-15 00:00:00" fixdate="2020-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Missing LogicalSort for INSERT statement</summary>
      <description>The following sql statement generates a wrong logical plan which missing the LogicalSort :insert into t select id*10,name from users order by name;the plan is :LogicalTableModify(table=[[t]], operation=[INSERT], flattened=[false]) LogicalProject(id=[*($0, 10)], name=[$1]) LogicalTableScan(table=[[users]])This issue is introduced by the issue https://issues.apache.org/jira/browse/CALCITE-2978 which removes the sort by in sub-query.However the query in insert statement is not a sub-query.</description>
      <version>1.19.0</version>
      <fixedVersion>1.22.0</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">core.src.test.resources.org.apache.calcite.test.SqlToRelConverterTest.xml</file>
      <file type="M">core.src.test.java.org.apache.calcite.test.SqlToRelConverterTest.java</file>
      <file type="M">core.src.main.java.org.apache.calcite.sql2rel.SqlToRelConverter.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
