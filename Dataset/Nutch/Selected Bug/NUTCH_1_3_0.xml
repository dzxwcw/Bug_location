<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="NUTCH">
  <bug fixdate="2011-8-7 01:00:00" id="1004" opendate="2011-6-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Do not index empty values for title field</summary>
      <description>Tika can generate multiple values for the title field for some files such as certain PDF's. It seems parse-tika's DOMContentUtils.getTitle() and helper methods are responsible for this behaviour. We should add a check on this to prevent empty values for the title field.</description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.4,nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-basic.src.java.org.apache.nutch.indexer.basic.BasicIndexingFilter.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-2-7 01:00:00" id="1005" opendate="2011-6-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Parse headings plugin</summary>
      <description>Very simple plugin for extracting and indexing a comma separated list of headings via the headings configuration directive.</description>
      <version>None</version>
      <fixedVersion>1.5</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.build.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-6-29 01:00:00" id="1024" opendate="2011-6-29 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Dynamically set fetchInterval by MIME-type</summary>
      <description>Add facility to configure default or fixed fetchInterval values by MIME-type. This is useful for conserving resources for files that are known to change frequently or never and everything in between. simple key\tvalue\n configuration file only set fetchInterval for new documents keep max fetchInterval fixed by current config</description>
      <version>None</version>
      <fixedVersion>1.6</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.metadata.Nutch.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.HttpHeaders.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.AdaptiveFetchSchedule.java</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  <bug fixdate="2011-9-25 01:00:00" id="1096" opendate="2011-8-25 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Empty (not null) ContentLength results in failure of fetch</summary>
      <description>In rare occasions, servers return an empty string ContentLength, which results in a fetch failure. One could argue whether the fetch is allowed to proceed in these cases. I for one believe it is. (Just like the cases where the header is null or not properly trimmed).Patch will be right up.</description>
      <version>1.3</version>
      <fixedVersion>1.4,nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.HttpResponse.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-7-9 01:00:00" id="1106" opendate="2011-9-9 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Options to skip url&amp;#39;s based on length</summary>
      <description>Adds option to skip URL's exceeding a certain length. At first we used regex to impose this limit but having this options configurable is more convenient. Comments?</description>
      <version>1.3</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.parse.ParseOutputFormat.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetcherThread.java</file>
      <file type="M">conf.regex-urlfilter.txt.template</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2011-1-4 01:00:00" id="1146" opendate="2011-10-4 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Get rid of _success files in webgraph code</summary>
      <description>WebGraph tools here and there also suffer from reading a _SUCCESS file. All jobs there should disable this setting.</description>
      <version>None</version>
      <fixedVersion>1.5</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2011-11-31 01:00:00" id="1185" opendate="2011-10-31 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Decrease solr.commit.size</summary>
      <description>Default document batch size should be decreased to prevent OOMEs.</description>
      <version>1.3</version>
      <fixedVersion>1.5</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-2-2 01:00:00" id="1193" opendate="2011-11-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Incorrect url transform to lowercase: parameter solr</summary>
      <description/>
      <version>1.3</version>
      <fixedVersion>1.5</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.crawl.Crawl.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-11-2 01:00:00" id="1195" opendate="2011-11-2 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add Solr 4x (trunk) example schema</summary>
      <description>The conf/schema.xml that we ship works ok for Solr 3.x, but in Solr trunk some of the class names have been changed, and some field types have been redefined, so if you simply drop this schema into Solr it will cause severe errors and indexing won't work.I propose to add a version of the schema.xml file that is tailored to Solr 4.x so that users can deploy this schema when indexing to Solr trunk.</description>
      <version>None</version>
      <fixedVersion>1.4</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2010-10-21 01:00:00" id="825" opendate="2010-5-21 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Publish nutch artifacts to central maven repository</summary>
      <description>As per the discussion at NUTCH-821, publishing nutch artifacts to maven will be nice. NUTCH-821 already introduces dependency management with ivy. As for the remaining, ant task for generating pom files should be developed, and artifacts should be published to maven repo by a committer after a release.</description>
      <version>None</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-5-24 01:00:00" id="826" opendate="2010-5-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Mailing list is broken.</summary>
      <description>All of the following addresses are failing:nutch-user@nutch.apache.orgnutch-user-subscribe@nutch.apache.orgnutch-user-subscribe@lucene.apache.orgFor the last one, the mailer daemon said "This mailing list has moved to user at nutch.apache.org."Below is the message I tried to send:Hi people,I've been banging my head against this problem for two days now.Simply, I want to add a field with the value of a given meta tag.I've been trying the parse-xml plugin, but that seems that it doesn'twork with version 1.0. I've tried the code athttp://sujitpal.blogspot.com/2009/07/nutch-getting-my-feet-wet.htmland it hasn't worked. I don't even know why. I don't even know if myplugin is being used... or even looked for! Nutch seems to have ainfuriating "Fail silently" policy for plugins. I put aSystem.exit(1) in my filters just to see if my code is even beingencountered. It has not in spite of my config telling it to.Here's my config:nutch-site.xml...&lt;property&gt; &lt;name&gt;plugin.includes&lt;/name&gt; &lt;value&gt;protocol-http|urlfilter-regex|parse-html|index-(basic|anchor)|query-(basic|site|url)|response-(json|xml)|summary-basic|scoring-opic|urlnormalizer-(pass|regex|basic)|metadata&lt;/value&gt;&lt;/property&gt;...parse-plugins.xml...&lt;mimeType name="application/xhtml+xml"&gt; &lt;plugin id="parse-html" /&gt; &lt;plugin id="metadata" /&gt;&lt;/mimeType&gt;&lt;mimeType name="text/html"&gt; &lt;plugin id="parse-html" /&gt; &lt;plugin id="metadata" /&gt;&lt;/mimeType&gt;&lt;mimeType name="text/sgml"&gt; &lt;plugin id="parse-html" /&gt; &lt;plugin id="metadata" /&gt;&lt;/mimeType&gt;&lt;mimeType name="text/xml"&gt; &lt;plugin id="parse-html" /&gt; &lt;plugin id="parse-rss" /&gt; &lt;plugin id="metadata" /&gt; &lt;plugin id="feed" /&gt;&lt;/mimeType&gt;...&lt;alias name="metadata"extension-id="com.example.website.nutch.parsing.MetaTagExtractorParseFilter"/&gt;...I've also copied the plugin.xml and jar from my build/metadata to theplugins root dir.Nonetheless, Nutch runs and puts data in solr for me. Afaik, Nutch iscompletely unaware of my plugin despite my config options. Is thesome other place I need to tell Nutch to use my plugin? Is there someother approach to do this without having to write a plugin? This doesseem like a lot of work to simply get a meta tag into a field. Anyhelp would be appreciated.Sincerely,John Sherwood</description>
      <version>None</version>
      <fixedVersion>1.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.site.src.documentation.content.xdocs.version.control.xml</file>
      <file type="M">src.site.src.documentation.content.xdocs.mailing.lists.xml</file>
      <file type="M">site.version.control.pdf</file>
      <file type="M">site.version.control.html</file>
      <file type="M">site.mailing.lists.pdf</file>
      <file type="M">site.mailing.lists.html</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2010-8-7 01:00:00" id="873" opendate="2010-8-7 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ivy configuration settings don&amp;#39;t include Gora</summary>
      <description>The Nutch 2.0 trunk now requires Gora, and even though it's not available in any repository, we should still configure Ivy to depend on it so that the build will work provided you follow the Gora instructions here:http://github.com/enis/goraI've fixed it locally and will commit an update shortly that takes care of it. In order to compile Nutch trunk now (before we get Gora into a repo), here are the steps (copied from http://github.com/enis/gora):$ git clone git://github.com/enis/gora.git$ cd gora $ antThis will install Gora into your local Ivy repo. Then from there on out, just update your Ivy resolver (or alternatively just the Nutch build post this issue being resolved) and you're good.</description>
      <version>None</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivysettings.xml</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2010-9-26 01:00:00" id="940" opendate="2010-11-26 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>static field plugin</summary>
      <description>A simple plugin called at indexing that adds fields with static data. You can specify a list of &lt;fieldname&gt;:&lt;fieldcontent&gt; per nutch job.It can be useful when collections can't be created by urlpatterns, like in subcollection, but on a job-basis.</description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.4</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.build.xml</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">src.plugin.index-static.src.java.org.apache.nutch.indexer.staticfield.StaticFieldIndexer.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2011-4-17 01:00:00" id="967" opendate="2011-2-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Tika 0.9</summary>
      <description/>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.3,nutchgora</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.parse-tika.plugin.xml</file>
      <file type="M">src.plugin.parse-tika.ivy.xml</file>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">conf.tika-mimetypes.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-4-12 01:00:00" id="980" opendate="2011-4-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix IllegalAccessError with slf4j used in Solrj.</summary>
      <description>Currently Solr commands fail because of: Exception in thread "main" java.lang.IllegalAccessError: tried to access field org.slf4j.impl.StaticLoggerBinder.SINGLETON from class org.slf4j.LoggerFactory at org.slf4j.LoggerFactory.staticInitialize(LoggerFactory.java:83) at org.slf4j.LoggerFactory.&lt;clinit&gt;(LoggerFactory.java:73) at org.apache.solr.client.solrj.impl.CommonsHttpSolrServer.&lt;clinit&gt;(CommonsHttpSolrServer.java:78)Julien looked it up http://www.slf4j.org/faq.html#IllegalAccessError , we need to change the versions in Ivy. I haven't yet come around to test it with trunk so we need to look for it there as well.</description>
      <version>1.3</version>
      <fixedVersion>1.3,nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2011-5-13 01:00:00" id="983" opendate="2011-4-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade SolrJ</summary>
      <description>Solr 3.1 has been released a while ago. The Javabin format between 1.4.1 and 3.1 has been changed so our SolrJ 1.4.1 cannot send documents to 3.1. Since Nutch 2.0 won't be released within a short period i believe it would be a good idea to upgrade our SolrJ to 3.1. New Solr users are encouraged to use Solr 3.1 or upgrade so i expect more users wanting to use 3.1 as well. Any thoughts?</description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.3,nutchgora</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-4-27 01:00:00" id="991" opendate="2011-4-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>SolrDedup must issue a commit</summary>
      <description>Title says it all. SolrDedup job doesn't commit but it should.</description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.3,nutchgora</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrDeleteDuplicates.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2011-5-17 01:00:00" id="997" opendate="2011-5-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>IndexingFitlers to store Date objects instead of Strings</summary>
      <description>See Nutch-985.Several IndexingFilters generate fields containing Dates with String values. This patch changes this so that Date objects are stored then converted into whatever type and format are required during the indexing.</description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-more.src.java.org.apache.nutch.indexer.more.MoreIndexingFilter.java</file>
      <file type="M">src.plugin.index-basic.src.java.org.apache.nutch.indexer.basic.BasicIndexingFilter.java</file>
      <file type="M">src.plugin.feed.src.java.org.apache.nutch.indexer.feed.FeedIndexingFilter.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrWriter.java</file>
      <file type="M">conf.schema.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
</bugrepository>