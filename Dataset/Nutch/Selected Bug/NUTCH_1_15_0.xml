<?xml version="1.0" encoding="UTF-8" standalone="no"?><bugrepository name="NUTCH">
  <bug fixdate="2015-10-24 01:00:00" id="2192" opendate="2015-12-24 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Get rid of oro</summary>
      <description>Couple of classes still rely on oro, we should get rid of it.</description>
      <version>2.3.1,1.15</version>
      <fixedVersion>2.4,1.16</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.urlnormalizer-regex.sample.regex-normalize-scope1.xml</file>
      <file type="M">src.plugin.urlnormalizer-regex.sample.regex-normalize-default.xml</file>
      <file type="M">src.java.org.apache.nutch.parse.OutlinkExtractor.java</file>
      <file type="M">LICENSE.txt</file>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">conf.regex-normalize.xml.template</file>
      <file type="M">conf.parse-plugins.xml</file>
      <file type="M">src.plugin.parse-js.src.test.org.apache.nutch.parse.js.TestJSParseFilter.java</file>
      <file type="M">src.plugin.parse-js.src.java.org.apache.nutch.parse.js.JSParseFilter.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-6-12 01:00:00" id="2496" opendate="2018-1-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Speed up link inversion step in crawling script</summary>
      <description>While working on a project where I have to index a huge number of URLs I encountered an issue with the link inversion step of the crawling script. A while ago Ian Lopata stumbled upon the same issue as described here: http://lucene.472066.n3.nabble.com/InvertLinks-Performance-Nutch-1-6-td4183004.htmlI am running the invertlinks step in my Nutch 1.6 based crawl process on a single node. I run invertlinks only because I need the Inlinks in the indexer step so as to store them with the document. I do not need the anchor text and I am not scoring. I am finding that invertlinks (and more specifically the merge of the linkdb) takes a long time - about 30 minutes for a crawl of around 150K documents. I am looking for ways that I might shorten this processing time. Any suggestions? Back then wastl-nagel suggested turning off the normalizers and filters during the inversion step which speeds up the process a bunch.In my case however I kind of depend on those so this is no real solution.I opened this issue here in order to get some feedback on how we could improve things in a crawl script and speed up the process.</description>
      <version>1.15</version>
      <fixedVersion>1.17</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.bin.crawl</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-1-13 01:00:00" id="2497" opendate="2018-1-13 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Elastic REST Indexer: Allow multiple hosts</summary>
      <description>Allow specifying a list of Elasticsearch hosts to index documents to. This would be especially helpful when working with a Elasticsearch cluster which contains of multiple nodes.</description>
      <version>None</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.indexer-elastic-rest.src.java.org.apache.nutch.indexwriter.elasticrest.ElasticRestIndexWriter.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-7-14 01:00:00" id="2510" opendate="2018-2-14 00:00:00" resolution="Implemented">
    <buginformation>
      <summary>Crawl script modification. HostDb : generate, optional usage and description</summary>
      <description>Script crawl now includes hostdb update as a part of crawling cycle, but :1) There is no hostdb parameter for generate2) Generation of hostdb is not optional, therefore hostdb is generated each step without asking of user. It should be an optional parameter.3) Description of 1 and 2.</description>
      <version>1.15</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.bin.crawl</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2018-6-5 01:00:00" id="2593" opendate="2018-6-5 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Single mode doesn&amp;#39;t work in RabbitMQ indexer</summary>
      <description>Switching from multiple to simple has no effect. This is because the commit.mode parameter is used instead of commit.commit in the RabbitMQ indexer.</description>
      <version>1.15</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.index-writers.xml.template</file>
    </fixedFiles>
  </bug>
  
  
  
  
  <bug fixdate="2018-8-20 01:00:00" id="2621" opendate="2018-7-20 00:00:00" resolution="Implemented">
    <buginformation>
      <summary>Generate report of third-party licenses</summary>
      <description>Would be good to have the possibility to generate a list of third-party licenses of all dependent libraries shipped with the binary 1.x package. There is the ant report target which includes also licenses but a list or tabular view would be much easier to process than a graph or HTML report. Cf. the Maven license plugin.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.build-plugin.xml</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-7-20 01:00:00" id="2622" opendate="2018-7-20 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unbundle LGPL-licensed jars from binary release</summary>
      <description>The tool commoncrawldump depends on LGPL-licensed libs to create WARC files. The LGPL license is not compatible with the Apache license (aka. category x), the jars cannot be distributed together with Nutch (see 1).</description>
      <version>1.15</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2018-10-12 01:00:00" id="2651" opendate="2018-10-12 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Tika 1.19.1 (from 1.18)</summary>
      <description>Tika 1.19.1 has been released recently. Among all the other improvements and fixes (including those of 1.19) It contains one important performance fix (TIKA-2645, cf. NUTCH-2578) affecting the MIME-/Content-Type detector.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivysettings.xml</file>
      <file type="M">src.plugin.parse-tika.plugin.xml</file>
      <file type="M">src.plugin.parse-tika.ivy.xml</file>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">default.properties</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-1-17 01:00:00" id="2658" opendate="2018-10-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add README file to all plugins in src/plugin</summary>
      <description>Since we've migrated a good portion of our workflow to Github we could consider adding a README.md file to the root of each plugin in src/plugins. This is a good place to have plugin-specific documentation. Wich fields the plugin adds to the indexer, which configuration options, etc. Also, since the README.md is rendered by Github automatically is a good link to point users.I think that a good example is the indexer-cloudsearch plugin, on top of that it's a good source of information to point users when asking questions regarding a specific plugin.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.schema.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-17 01:00:00" id="2659" opendate="2018-10-17 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add missing Apache license headers</summary>
      <description>Should add Apache license headers to source files (at least, *.java) - some files lack the license header.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.nutch.crawl.TODOTestCrawlDbStates.java</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.cosine.package-info.java</file>
      <file type="M">src.plugin.scoring-depth.src.java.org.apache.nutch.scoring.depth.DepthScoringFilter.java</file>
      <file type="M">src.plugin.scoring-depth.plugin.xml</file>
      <file type="M">src.plugin.scoring-depth.build.xml</file>
      <file type="M">src.plugin.parse-metatags.plugin.xml</file>
      <file type="M">src.plugin.indexer-dummy.src.java.org.apache.nutch.indexwriter.dummy.DummyConstants.java</file>
      <file type="M">src.plugin.index-replace.plugin.xml</file>
      <file type="M">src.plugin.headings.src.test.org.apache.nutch.parse.headings.TestHeadingsParseFilter.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.settings.SettingsPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.instances.InstancePanel.java</file>
      <file type="M">src.java.org.apache.nutch.tools.WARCUtils.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlFormatWARC.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.AbstractScoringFilter.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexWriterParams.java</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2018-12-8 01:00:00" id="2674" opendate="2018-11-8 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>HostDb: dump shows wrong column headers</summary>
      <description>The header line of the HostDb dump is wrong, it should show the fields returned by HostDatum.toString() used for the dump. In detail, the column headers redirSum and ok should be replaced by notModified.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.hostdb.ReadHostDb.java</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2018-1-27 01:00:00" id="2682" opendate="2018-12-27 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Tika 1.20</summary>
      <description>Tika 1.20 has been released, 1.x should be upgraded.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.parse-tika.src.java.org.apache.nutch.parse.tika.TikaParser.java</file>
      <file type="M">src.plugin.parse-tika.plugin.xml</file>
      <file type="M">src.plugin.parse-tika.ivy.xml</file>
      <file type="M">src.plugin.parse-tika.howto.upgrade.tika.txt</file>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-1-16 01:00:00" id="2687" opendate="2019-1-16 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>Regex for reading title from Content-Disposition is wrong</summary>
      <description>Given URL: https://www.amuse-project.org/file/download/default/E6D0537647AF1204656076943F4729B0/Koopstra2016_5fOntologically%20classifying%20ERP%20feature,%20the%20NEXT%20method_5fFinal.pdfAnd regex: bfilename=&amp;#91;&amp;#39;\"&amp;#93;(.+)&amp;#91;&amp;#39;\"&amp;#93;We get the following title:Koopstra2016_Ontologically classifying ERP feature, the NEXT method_Final.pdf"; filename*=utf-8'Changed regex to: bfilename=&amp;#91;&amp;#39;\"&amp;#93;(&amp;#91;^\"&amp;#93;+) fixes it</description>
      <version>None</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-more.src.java.org.apache.nutch.indexer.more.MoreIndexingFilter.java</file>
    </fixedFiles>
  </bug>
  
  
  
  
  
  
  <bug fixdate="2019-4-25 01:00:00" id="2704" opendate="2019-3-25 00:00:00" resolution="Implemented">
    <buginformation>
      <summary>Upgrade crawler-commons dependency to 1.0</summary>
      <description>Crawler-commons 1.0 has been released. We should upgrade.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  
  <bug fixdate="2019-5-11 01:00:00" id="2708" opendate="2019-4-11 00:00:00" resolution="Fixed">
    <buginformation>
      <summary>urlfilter-automaton: update library dependency (dk.brics.automaton)</summary>
      <description>A new version of the dk.brics.automaton library (1.12-1) is available.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.urlfilter-automaton.plugin.xml</file>
      <file type="M">src.plugin.urlfilter-automaton.ivy.xml</file>
    </fixedFiles>
  </bug>
  
  
  
  <bug fixdate="2019-8-6 01:00:00" id="2727" opendate="2019-8-6 00:00:00" resolution="Implemented">
    <buginformation>
      <summary>Upgrade Hadoop dependencies to 2.9.2</summary>
      <description>The latest upgrade of the Hadoop dependency dates back to Dec 2017 (NUTCH-2354). We might upgrade to the latest version of Hadoop 2.x (2.9.2).Note: Nutch 1.15 (or master) built with Hadoop 2.7.4 runs seamlessly on Hadoop 3.x. This should be also the case for 2.9.4 (to be tested), so we still might wait for the final upgrade to Hadoop 3.x to ensure backward-compatibility.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-okhttp.src.test.org.apache.nutch.protocol.okhttp.TestProtocolOkHttp.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.test.org.apache.nutch.protocol.okhttp.TestBadServerResponses.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.test.conf.nutch-site-test.xml</file>
      <file type="M">src.java.org.apache.nutch.protocol.ProtocolFactory.java</file>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug fixdate="2019-8-11 01:00:00" id="2728" opendate="2019-8-11 00:00:00" resolution="Implemented">
    <buginformation>
      <summary>protocol-okhttp: upgrade okhttp dependency to 3.14.2</summary>
      <description>Upgrade the okhttp library dependency to 3.14.2 (for now not to 4.0.1 which adds the Kotlin standard lib as a further dependency).</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-okhttp.plugin.xml</file>
      <file type="M">src.plugin.protocol-okhttp.ivy.xml</file>
    </fixedFiles>
  </bug>
  
  
</bugrepository>