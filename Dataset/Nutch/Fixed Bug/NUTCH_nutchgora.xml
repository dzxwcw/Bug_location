<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="NUTCH">
  <bug id="1004" opendate="2011-6-7 00:00:00" fixdate="2011-8-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Do not index empty values for title field</summary>
      <description>Tika can generate multiple values for the title field for some files such as certain PDF's. It seems parse-tika's DOMContentUtils.getTitle() and helper methods are responsible for this behaviour. We should add a check on this to prevent empty values for the title field.</description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.4,nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-basic.src.java.org.apache.nutch.indexer.basic.BasicIndexingFilter.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1005" opendate="2011-6-7 00:00:00" fixdate="2011-2-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Parse headings plugin</summary>
      <description>Very simple plugin for extracting and indexing a comma separated list of headings via the headings configuration directive.</description>
      <version>None</version>
      <fixedVersion>1.5</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.build.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1011" opendate="2011-6-23 00:00:00" fixdate="2011-7-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Normalize duplicate slashes in URL&amp;#39;s</summary>
      <description>Many websites produce faulty URL's with multiple slashes e.g. http://cocoon.apache.org///////////////////////1.x/dynamic.htmlThis can be really nasty if the number of slashes varies, resulting in many URL's actually pointing to the same page and generating new (unique) URL's to the same or other duplicate pages.</description>
      <version>1.4,nutchgora</version>
      <fixedVersion>1.4,nutchgora</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.nutch.net.TestURLNormalizers.java</file>
      <file type="M">conf.regex-normalize.xml.template</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1028" opendate="2011-7-1 00:00:00" fixdate="2011-9-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log parser keys</summary>
      <description>The parser can take ages (many hours) to complete. During this time the only output is an error or warning if it's unable to parse something (which is very common). Sometimes the parser can run for several hours without any output: this is scary. I propose to add a LOG.info to the mapper and write the key when parsing, similar to the fetcher.Thoughts?</description>
      <version>None</version>
      <fixedVersion>1.4</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.parse.ParseSegment.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1043" opendate="2011-7-12 00:00:00" fixdate="2011-7-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add pattern for filtering .js in default url filters</summary>
      <description>The Javascript parser is not used by default as it is extremely noisy, however the default URL filters do not filter out URLs ending in .js and the default parser (Tika) can't parse them. In a nutshell we are fetching URLS that we know can't be parsed.I suggest that we add a regex to the default URL filters. If people are interested in fetching and parsing .js files they can activate the plugin in their conf and remove the regex in the URL filters.</description>
      <version>1.4,nutchgora</version>
      <fixedVersion>1.4,nutchgora</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.regex-urlfilter.txt.template</file>
      <file type="M">conf.automaton-urlfilter.txt.template</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1057" opendate="2011-7-16 00:00:00" fixdate="2011-9-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make fetcher thread time out configurable</summary>
      <description>The fetcher sets a time out value based of half the mapred.task.timeout value. This is not a proper value for all cases. Add an option (fetcher.thread.timeout.divisor) to configure the divisor used and default it to two.</description>
      <version>None</version>
      <fixedVersion>1.4</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.fetcher.Fetcher.java</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1067" opendate="2011-7-22 00:00:00" fixdate="2011-9-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Configure minimum throughput for fetcher</summary>
      <description>Large fetches can contain a lot of url's for the same domain. These can be very slow to crawl due to politeness from robots.txt, e.g. 10s per url. If all other url's have been fetched, these queue's can stall the entire fetcher, 60 url's can then take 10 minutes or even more. This can usually be dealt with using the time bomb but the time bomb value is hard to determine.This patch adds a fetcher.throughput.threshold setting meaning the minimum number of pages per second before the fetcher gives up. It doesn't use the global number of pages / running time but records the actual pages processed in the previous second. This value is compared with the configured threshold.Besides the check the fetcher's status is also updated with the actual number of pages per second and bytes per second.</description>
      <version>None</version>
      <fixedVersion>1.4</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">src.test.org.apache.nutch.fetcher.TestFetcher.java</file>
      <file type="M">src.java.org.apache.nutch.tools.Benchmark.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Crawl.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.Fetcher.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1105" opendate="2011-9-7 00:00:00" fixdate="2011-9-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>MaxContentLength option for index-basic</summary>
      <description>Like the limit for title, the basic indexing filter should have an optional setting to limit and truncate the content length.</description>
      <version>1.3,1.4,nutchgora</version>
      <fixedVersion>1.4</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-basic.src.java.org.apache.nutch.indexer.basic.BasicIndexingFilter.java</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1139" opendate="2011-9-30 00:00:00" fixdate="2011-1-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Indexer to delete documents</summary>
      <description>Add an option -delete to the solrindex command. With this feature enabled documents of the currently processing segment with status FETCH_GONE or FETCH_REDIR_PERM are deleted, a following SolrClean is not required anymore.This issue is a follow up of NUTCH-1052.</description>
      <version>None</version>
      <fixedVersion>1.5</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrWriter.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrIndexer.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.NutchIndexWriter.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexerOutputFormat.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexerMapReduce.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1164" opendate="2011-10-11 00:00:00" fixdate="2011-10-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Write JUnit tests for protocol-http</summary>
      <description>This issue should provide a single Junit test as part of an effort to provide JUnit tests for all nutchgora plugins</description>
      <version>nutchgora</version>
      <fixedVersion>2.3,1.10</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-http.build.xml</file>
      <file type="M">src.plugin.build.xml</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1176" opendate="2011-10-20 00:00:00" fixdate="2011-10-20 01:00:00" resolution="Abandoned">
    <buginformation>
      <summary>Fix all javadoc warnings from nightly builds</summary>
      <description>The warnings can clearly be seen from the javadoc target (near bottom) of any successful nightly build. An example is provided below.https://builds.apache.org/job/nutch-trunk/1638/console</description>
      <version>1.4,nutchgora</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.parse.ParseResult.java</file>
      <file type="M">src.plugin.lib-regex-filter.src.java.org.apache.nutch.urlfilter.api.RegexURLFilterBase.java</file>
      <file type="M">src.java.org.apache.nutch.util.NodeWalker.java</file>
      <file type="M">src.java.org.apache.nutch.util.MimeUtil.java</file>
      <file type="M">src.java.org.apache.nutch.util.domain.TopLevelDomain.java</file>
      <file type="M">src.java.org.apache.nutch.util.domain.DomainSuffixes.java</file>
      <file type="M">src.java.org.apache.nutch.util.domain.DomainSuffix.java</file>
      <file type="M">src.java.org.apache.nutch.tools.arc.ArcRecordReader.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrDeleteDuplicates.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.FetchSchedule.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.AbstractFetchSchedule.java</file>
    </fixedFiles>
  </bug>
  <bug id="1237" opendate="2011-12-27 00:00:00" fixdate="2011-1-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve javac arguements for more verbose output</summary>
      <description>When trying to fix another problem I stumbled across this one. I think it is important to ensure that the javac outputs info regarding deprecation and unchecked operations.</description>
      <version>1.4,nutchgora</version>
      <fixedVersion>nutchgora,1.5</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">default.properties</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="125" opendate="2005-11-18 00:00:00" fixdate="2005-4-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>OpenOffice Parser plugin</summary>
      <description>A simple parser for StarOffice SXW and OpenDocument ODT files. This plugin does not use the UNO bridge in OpenOffice , but rather uses standard ZipInputStream, and parses content.xml and meta.xml inside these files to extract metadata and plain text.This plugin uses dom4j, because of easy XPath node selection, but this dependency could be removed.</description>
      <version>None</version>
      <fixedVersion>0.8</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.build.xml</file>
      <file type="M">conf.parse-plugins.xml</file>
      <file type="M">conf.mime-types.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1273" opendate="2012-2-14 00:00:00" fixdate="2012-4-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix [deprecation] javac warnings</summary>
      <description>As part of this task, these warnings should be resolved, however this particular strand of warnings can either be resolved by adding@SuppressWarnings("deprecation")or by actually upgrading our class usage to rely upon non-deprecated classes. Which option is more appropriate for the project?</description>
      <version>nutchgora,1.5</version>
      <fixedVersion>1.7,2.2</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-file.src.java.org.apache.nutch.protocol.file.FileResponse.java</file>
      <file type="M">src.java.org.apache.nutch.tools.arc.ArcSegmentCreator.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentReader.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.Content.java</file>
      <file type="M">src.java.org.apache.nutch.plugin.PluginManifestParser.java</file>
      <file type="M">src.java.org.apache.nutch.plugin.PluginDescriptor.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseSegment.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.NutchWritable.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDbReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDatum.java</file>
    </fixedFiles>
  </bug>
  <bug id="1276" opendate="2012-2-14 00:00:00" fixdate="2012-2-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix [dep-ann]</summary>
      <description>Generally speaking these are more straightforward than others as it should be a case of either annotating using@Deprecatedor of course replacing the deprecated class method with another non-deprecated implementation. Hopefully most of these occurrences will be resolved within NUTCH-1273</description>
      <version>nutchgora,1.5</version>
      <fixedVersion>nutchgora,1.5</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.nutch.crawl.CrawlDBTestUtil.java</file>
      <file type="M">src.java.org.apache.nutch.parse.OutlinkExtractor.java</file>
      <file type="M">src.java.org.apache.nutch.net.protocols.ProtocolException.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.MapWritable.java</file>
    </fixedFiles>
  </bug>
  <bug id="1277" opendate="2012-2-14 00:00:00" fixdate="2012-5-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix [fallthrough] javac warnings</summary>
      <description>This usually occurs when we have an instance where a switch statement(s) fall through (that is, one or more break statements are missing).We need to determine where a simple@SuppressWarnings("fallthrough")is required or whether we need to include the break statements in switch blocks</description>
      <version>nutchgora,1.5</version>
      <fixedVersion>1.7,2.2</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.fetcher.OldFetcher.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.Fetcher.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1306" opendate="2012-3-8 00:00:00" fixdate="2012-7-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add option to not commit and clarify existing solr.commit.size</summary>
      <description>Commit after finished writing to solr index - otherwise a bit confusing not seeing the number of docs we expect in solr</description>
      <version>nutchgora</version>
      <fixedVersion>2.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrIndexer.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrConstants.java</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1307" opendate="2012-3-8 00:00:00" fixdate="2012-3-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Improve formatting of ant targets for clearer project help</summary>
      <description>This is a trivial formatting issue I will submit a patch shortly and fix it.</description>
      <version>nutchgora,1.5</version>
      <fixedVersion>nutchgora,1.5</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1360" opendate="2012-5-9 00:00:00" fixdate="2012-1-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Suport the storing of IP address connected to when web crawling</summary>
      <description>Simple issue enabling us to capture the specific IP address of the host which we connect to to fetch a page.</description>
      <version>nutchgora,1.5</version>
      <fixedVersion>2.3,1.8</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.Http.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.FtpResponse.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.Client.java</file>
      <file type="M">src.plugin.protocol-file.src.java.org.apache.nutch.protocol.file.FileResponse.java</file>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.HttpResponse.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpBase.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.HttpHeaders.java</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1376" opendate="2012-5-22 00:00:00" fixdate="2012-7-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add description parameter to every ant task</summary>
      <description>This is really really easy to implement and makes the task of identifying ant target's a piece of cake</description>
      <version>nutchgora,1.5</version>
      <fixedVersion>1.6,2.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1404" opendate="2012-6-19 00:00:00" fixdate="2012-6-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Nutch script fails to find job file in deploy mode</summary>
      <description>See http://lucene.472066.n3.nabble.com/Nutch-1-5-Deploy-Mode-Doesn-t-Work-like-Nutch-1-4-Deploy-Mode-tp3990169.html</description>
      <version>nutchgora,1.5</version>
      <fixedVersion>nutchgora,1.5.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.bin.nutch</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1412" opendate="2012-6-28 00:00:00" fixdate="2012-6-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade commons lang</summary>
      <description>Upgrade commons-lang from 2.4 to 2.6.</description>
      <version>None</version>
      <fixedVersion>1.6</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1413" opendate="2012-6-28 00:00:00" fixdate="2012-1-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Record response time</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>2.3,1.8</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpBase.java</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1415" opendate="2012-6-30 00:00:00" fixdate="2012-9-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>release packages to contain top level folder apache-nutch-x.x</summary>
      <description>The release packages should contain a top level folder named apache-nutch-x.x (x replaced by major and minor version) as in previous releases. Unpacking the packages from the command line via tar xvfz package.tar.gz or unzip package.zip should place all files in that folder. Cf. discussions on mailing lists: http://mail-archives.apache.org/mod_mbox/nutch-dev/201205.mbox/%3C4FBD613F.1020100@googlemail.com%3E http://mail-archives.apache.org/mod_mbox/nutch-user/201206.mbox/%3Czarafa.4fe9e41c.2e51.6a20afee54fe4ae7@mail.openindex.io%3E</description>
      <version>nutchgora,1.6,1.5.1</version>
      <fixedVersion>1.6,2.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1416" opendate="2012-7-1 00:00:00" fixdate="2012-1-1 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>IndexerMapReduce can index older version of a document instead of latest one</summary>
      <description>When we update the index,can not guarantee that the contents which be indexed is the latest.In the class IndexerMapReduce and method reduce(), it has the following code:public void reduce(Text key, Iterator&lt;NutchWritable&gt; values, OutputCollector&lt;Text, NutchDocument&gt; output, Reporter reporter) throws IOException { …… } else if (value instanceof ParseData) { parseData = (ParseData)value; } else if (value instanceof ParseText) { parseText = (ParseText)value; } ……}For example,30 days ago,I fetched the web page A,now I fetch it again. Then the key A will correspond to two ParseData objects(located in different segments).But in this code,it does not compare the fetch time and simply overwrites the previous value.So the final value maybe the old one.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.metadata.Office.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.Metadata.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1419" opendate="2012-7-3 00:00:00" fixdate="2012-3-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>parsechecker and indexchecker to report protocol status</summary>
      <description>Parsechecker and indexchecker should report the protocol status when the fetch was not successful (status other than 200/ok).In case of a redirect, the protocol status contains the URL a redirect points to. Usually, this URL should be checked instead of the original one which is not indexed. The content of a redirect response is less useful (and often empty):% nutch indexchecker http://lucene.apache.org/nutch/fetching: http://lucene.apache.org/nutch/parsing: http://lucene.apache.org/nutch/contentType: text/htmlcontent : 301 Moved Permanently Moved Permanently The document has moved here . Apache/2.4.1 (Unix) OpenSSL/1.title : 301 Moved Permanentlyhost : lucene.apache.orgtstamp : Tue Jul 03 13:27:32 CEST 2012url : http://lucene.apache.org/nutch/</description>
      <version>nutchgora,1.6</version>
      <fixedVersion>1.7,2.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.parse.ParserChecker.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexingFiltersChecker.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1433" opendate="2012-7-19 00:00:00" fixdate="2012-10-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Tika 1.2</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>1.6,2.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.parse-tika.plugin.xml</file>
      <file type="M">src.plugin.parse-tika.ivy.xml</file>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1470" opendate="2012-9-15 00:00:00" fixdate="2012-9-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure test files are included for runtime testing</summary>
      <description>As discussed h6ee &amp;#91;0&amp;#93;, Vijith V highlighted the bug in both trunk and 2.X regarding test deps not being available to use @runtime.This trivial issue fixes that. &amp;#91;0&amp;#93; http://www.mail-archive.com/user%40nutch.apache.org/msg07486.html</description>
      <version>nutchgora,1.5.1</version>
      <fixedVersion>1.6,2.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="799" opendate="2010-3-1 00:00:00" fixdate="2010-3-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SOLRIndexer to commit once all reducers have finished</summary>
      <description>What about doing only one SOLR commit after the MR job has finished in SOLRIndexer instead of doing that at the end of every Reducer? I ran into timeout exceptions in some of my reducers and I suspect that this was due to the fact that other reducers had already finished and called commit.</description>
      <version>None</version>
      <fixedVersion>1.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrWriter.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrIndexer.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="809" opendate="2010-4-2 00:00:00" fixdate="2010-4-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Parse-metatags plugin</summary>
      <description>Parse-metatags pluginThe parse-metatags plugin consists of a HTMLParserFilter which takes as parameter a list of metatag names with '*' as default value. The values are separated by ';'.In order to extract the values of the metatags description and keywords, you must specify in nutch-site.xml&lt;property&gt; &lt;name&gt;metatags.names&lt;/name&gt; &lt;value&gt;description;keywords&lt;/value&gt;&lt;/property&gt;The MetatagIndexer uses the output of the parsing above to create two fields 'keywords' and 'description'. Note that keywords is multivalued.The query-basic plugin is used to include these fields in the search e.g. in nutch-site.xml&lt;property&gt; &lt;name&gt;query.basic.description.boost&lt;/name&gt; &lt;value&gt;2.0&lt;/value&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;query.basic.keywords.boost&lt;/name&gt; &lt;value&gt;2.0&lt;/value&gt;&lt;/property&gt;This code has been developed by DigitalPebble Ltd and offered to the community by ANT.com</description>
      <version>1.4,nutchgora</version>
      <fixedVersion>1.5</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.build.xml</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="81" opendate="2005-8-15 00:00:00" fixdate="2005-2-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Webapp only works when deployed in root</summary>
      <description>Index.jsp does a redirect (not forward) to the language folder.The links in the html however are relative to the language folder, not the application root.Not sure what the desired behavoir is, change the html (where is it generated?) or the redirect.</description>
      <version>None</version>
      <fixedVersion>0.8</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.web.jsp.index.jsp</file>
      <file type="M">src.web.jsp.search.jsp</file>
    </fixedFiles>
  </bug>
  <bug id="822" opendate="2010-5-13 00:00:00" fixdate="2010-6-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>DOAP file still refers to Lucene</summary>
      <description>The Nutch DOAP file still refers to Lucene, so Nutch is still listed as a Lucene sub-project in the http://projects.apache.org/ listings</description>
      <version>None</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">site.doap.rdf</file>
    </fixedFiles>
  </bug>
  <bug id="824" opendate="2010-5-20 00:00:00" fixdate="2010-1-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Crawling - File Error 404 when fetching file with an hexadecimal character in the file name.</summary>
      <description>Hello,I am performing a local file system crawling.My problem is the following: all files that contain some hexadecimal characters in the name do not get crawled.For example, I will see the following error:fetching file:/nutch-1.0/wikidump/wiki-en/en/articles/a/2E/m/A.M._%28album%29_8a09.htmlorg.apache.nutch.protocol.file.FileError: File Error: 404 at org.apache.nutch.protocol.file.File.getProtocolOutput(File.java:92) at org.apache.nutch.fetcher.Fetcher$FetcherThread.run(Fetcher.java:535)fetch of file:/nutch-1.0/wikidump/wiki-en/en/articles/a/2E/m/A.M._%28album%29_8a09.html failed with: org.apache.nutch.protocol.file.FileError: File Error: 404I am using nutch-1.0.Among other standard settings, I configured nutch-site.conf as follows:&lt;property&gt; &lt;name&gt;plugin.includes&lt;/name&gt; &lt;value&gt;protocol-file|protocol-http|urlfilter-regex|parse-(text|html|js|pdf)|index-(basic|anchor)|query-(basic|site|url)|response-(json|xml)|summary-basic|scoring-opic|urlnormalizer-(pass|regex|basic)&lt;/value&gt; &lt;description&gt;Regular expression naming plugin directory names to include. Any plugin not matching this expression is excluded. In any case you need at least include the nutch-extensionpoints plugin. By default Nutch includes crawling just HTML and plain text via HTTP, and basic indexing and search plugins. In order to use HTTPS please enable protocol-httpclient, but be aware of possible intermittent problems with the underlying commons-httpclient library. &lt;/description&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;file.content.limit&lt;/name&gt; &lt;value&gt;-1&lt;/value&gt;&lt;/property&gt;Moreover, crawl-urlfilter.txt looks like: skip http:, ftp:, &amp; mailto: urls-^(http|ftp|mailto): skip image and other suffixes we can't yet parse-\.(gif|GIF|jpg|JPG|png|PNG|ico|ICO|css|sit|eps|wmf|zip|ppt|mpg|xls|gz|rpm|tgz|mov|MOV|exe|jpeg|JPEG|bmp|BMP)$ skip URLs containing certain characters as probable queries, etc.-&amp;#91;?*!@=&amp;#93; skip URLs with slash-delimited segment that repeats 3+ times, to break loops-.*(/&amp;#91;^/&amp;#93;)/&amp;#91;^/&amp;#93;\1/&amp;#91;^/&amp;#93;+\1/ accept hosts in MY.DOMAIN.NAME#+^http://([a-z0-9]*\.)*MY.DOMAIN.NAME/ accept everything else+.*~ &amp;#8212;Thanks,Michela</description>
      <version>1.0.0,1.2,1.3,nutchgora</version>
      <fixedVersion>1.0.0,1.3,nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-file.src.test.org.apache.nutch.protocol.file.testprotocolfile.txt</file>
      <file type="M">src.plugin.protocol-file.build.xml</file>
      <file type="M">src.plugin.build.xml</file>
      <file type="M">src.plugin.protocol-file.src.test.org.apache.nutch.protocol.file.TestProtocolFile.java</file>
      <file type="M">src.plugin.protocol-file.src.java.org.apache.nutch.protocol.file.FileResponse.java</file>
      <file type="M">src.plugin.protocol-file.sample.testprotocolfile.txt</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="825" opendate="2010-5-21 00:00:00" fixdate="2010-10-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Publish nutch artifacts to central maven repository</summary>
      <description>As per the discussion at NUTCH-821, publishing nutch artifacts to maven will be nice. NUTCH-821 already introduces dependency management with ivy. As for the remaining, ant task for generating pom files should be developed, and artifacts should be published to maven repo by a committer after a release.</description>
      <version>None</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="826" opendate="2010-5-24 00:00:00" fixdate="2010-5-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Mailing list is broken.</summary>
      <description>All of the following addresses are failing:nutch-user@nutch.apache.orgnutch-user-subscribe@nutch.apache.orgnutch-user-subscribe@lucene.apache.orgFor the last one, the mailer daemon said "This mailing list has moved to user at nutch.apache.org."Below is the message I tried to send:Hi people,I've been banging my head against this problem for two days now.Simply, I want to add a field with the value of a given meta tag.I've been trying the parse-xml plugin, but that seems that it doesn'twork with version 1.0. I've tried the code athttp://sujitpal.blogspot.com/2009/07/nutch-getting-my-feet-wet.htmland it hasn't worked. I don't even know why. I don't even know if myplugin is being used... or even looked for! Nutch seems to have ainfuriating "Fail silently" policy for plugins. I put aSystem.exit(1) in my filters just to see if my code is even beingencountered. It has not in spite of my config telling it to.Here's my config:nutch-site.xml...&lt;property&gt; &lt;name&gt;plugin.includes&lt;/name&gt; &lt;value&gt;protocol-http|urlfilter-regex|parse-html|index-(basic|anchor)|query-(basic|site|url)|response-(json|xml)|summary-basic|scoring-opic|urlnormalizer-(pass|regex|basic)|metadata&lt;/value&gt;&lt;/property&gt;...parse-plugins.xml...&lt;mimeType name="application/xhtml+xml"&gt; &lt;plugin id="parse-html" /&gt; &lt;plugin id="metadata" /&gt;&lt;/mimeType&gt;&lt;mimeType name="text/html"&gt; &lt;plugin id="parse-html" /&gt; &lt;plugin id="metadata" /&gt;&lt;/mimeType&gt;&lt;mimeType name="text/sgml"&gt; &lt;plugin id="parse-html" /&gt; &lt;plugin id="metadata" /&gt;&lt;/mimeType&gt;&lt;mimeType name="text/xml"&gt; &lt;plugin id="parse-html" /&gt; &lt;plugin id="parse-rss" /&gt; &lt;plugin id="metadata" /&gt; &lt;plugin id="feed" /&gt;&lt;/mimeType&gt;...&lt;alias name="metadata"extension-id="com.example.website.nutch.parsing.MetaTagExtractorParseFilter"/&gt;...I've also copied the plugin.xml and jar from my build/metadata to theplugins root dir.Nonetheless, Nutch runs and puts data in solr for me. Afaik, Nutch iscompletely unaware of my plugin despite my config options. Is thesome other place I need to tell Nutch to use my plugin? Is there someother approach to do this without having to write a plugin? This doesseem like a lot of work to simply get a meta tag into a field. Anyhelp would be appreciated.Sincerely,John Sherwood</description>
      <version>None</version>
      <fixedVersion>1.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.site.src.documentation.content.xdocs.version.control.xml</file>
      <file type="M">src.site.src.documentation.content.xdocs.mailing.lists.xml</file>
      <file type="M">site.version.control.pdf</file>
      <file type="M">site.version.control.html</file>
      <file type="M">site.mailing.lists.pdf</file>
      <file type="M">site.mailing.lists.html</file>
    </fixedFiles>
  </bug>
  <bug id="845" opendate="2010-7-8 00:00:00" fixdate="2010-7-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Native hadoop libs not available through maven</summary>
      <description>There are no maven artifacts for the native libs (I verified this on Hadoop ML). I think it's better to delete the libs, after all we don't want to keep bits and pieces of dependencies in our svn, but let's leave a placeholder and a README that explains how to get them.</description>
      <version>nutchgora</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">lib.native.Linux-i386-32.libhadoop.so.1.0.0</file>
      <file type="M">lib.native.Linux-i386-32.libhadoop.so.1</file>
      <file type="M">lib.native.Linux-i386-32.libhadoop.so</file>
      <file type="M">lib.native.Linux-i386-32.libhadoop.a</file>
      <file type="M">lib.native.Linux-amd64-64.libhadoop.so.1.0.0</file>
      <file type="M">lib.native.Linux-amd64-64.libhadoop.so.1</file>
      <file type="M">lib.native.Linux-amd64-64.libhadoop.so</file>
      <file type="M">lib.native.Linux-amd64-64.libhadoop.a</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="847" opendate="2010-7-9 00:00:00" fixdate="2010-7-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Wrong version of SOLR in Ivy.xml</summary>
      <description>We'd upgraded to SOLR 4.0 before releasing 1.1 but the Ivy config currently still mentions 1.3.0</description>
      <version>None</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="860" opendate="2010-7-23 00:00:00" fixdate="2010-7-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>package task fails</summary>
      <description>The ant 'package' tasks fails since we reorganised the code and removed the bin directory. The patch attached fixed the issue and adds the /runtime directory to the package.An objections?</description>
      <version>nutchbase,nutchgora</version>
      <fixedVersion>nutchbase,nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="865" opendate="2010-7-30 00:00:00" fixdate="2010-1-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Format source code in unique style</summary>
      <description>We should define a standard format rules for source code/comments, then using eclipse tool to format the whole source code in the same style.</description>
      <version>None</version>
      <fixedVersion>1.10</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="873" opendate="2010-8-7 00:00:00" fixdate="2010-8-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ivy configuration settings don&amp;#39;t include Gora</summary>
      <description>The Nutch 2.0 trunk now requires Gora, and even though it's not available in any repository, we should still configure Ivy to depend on it so that the build will work provided you follow the Gora instructions here:http://github.com/enis/goraI've fixed it locally and will commit an update shortly that takes care of it. In order to compile Nutch trunk now (before we get Gora into a repo), here are the steps (copied from http://github.com/enis/gora):$ git clone git://github.com/enis/gora.git$ cd gora $ antThis will install Gora into your local Ivy repo. Then from there on out, just update your Ivy resolver (or alternatively just the Nutch build post this issue being resolved) and you're good.</description>
      <version>None</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivysettings.xml</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="880" opendate="2010-8-11 00:00:00" fixdate="2010-10-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>REST API for Nutch</summary>
      <description>This issue is for discussing a REST-style API for accessing Nutch.Here's an initial idea: I propose to use org.restlet for handling requests and returning JSON/XML/whatever responses. hook up all regular tools so that they can be driven via this API. This would have to be an async API, since all Nutch operations take long time to execute. It follows then that we need to be able also to list running operations, retrieve their current status, and possibly abort/cancel/stop/suspend/resume/...? This also means that we would have to potentially create &amp; manage many threads in a servlet - AFAIK this is frowned upon by J2EE purists... package this in a webapp (that includes all deps, essentially nutch.job content), with the restlet servlet as an entry point.Open issues: how to implement the reading of crawl results via this API should we manage only crawls that use a single configuration per webapp, or should we have a notion of crawl contexts (sets of crawl configs) with CRUD ops on them? this would be nice, because it would allow managing of several different crawls, with different configs, in a single webapp - but it complicates the implementation a lot.</description>
      <version>nutchgora</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.util.LogUtil.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParserJob.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrIndexerJob.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetcherJob.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.WebTableReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.InjectorJob.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.GeneratorJob.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.DbUpdaterJob.java</file>
      <file type="M">ivy.ivysettings.xml</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="886" opendate="2010-8-12 00:00:00" fixdate="2010-8-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>A .gitignore file for Nutch</summary>
      <description>We need a .gitignore file under nutch/ so git does not try to track many unnecessary files.</description>
      <version>nutchgora</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="888" opendate="2010-8-16 00:00:00" fixdate="2010-5-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove parse-rss</summary>
      <description>See https://issues.apache.org/jira/browse/NUTCH-887CM : I wrote parse-rss back in 2005, and used commons-feedparser from Kevin Burton and his crew. At the time it was well developed, and a little more flexible and easier for me to pick up than Rome. Since then however, its development has really become stagnant and it is no longer maintained.In terms of real differences in terms of functionality, they are roughly equivalent so there isn't much difference.Already +1 from Andrzej and Chris. Will remove it tomorrow if there aren't any objections in the meantime</description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.3,nutchgora</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">LICENSE.txt</file>
      <file type="M">default.properties</file>
      <file type="M">build.xml</file>
      <file type="M">src.plugin.parse-tika.build.xml</file>
      <file type="M">src.plugin.parse-rss.src.test.org.apache.nutch.parse.rss.TestRSSParser.java</file>
      <file type="M">src.plugin.parse-rss.src.java.org.apache.nutch.parse.rss.structs.RSSItem.java</file>
      <file type="M">src.plugin.parse-rss.src.java.org.apache.nutch.parse.rss.structs.RSSChannel.java</file>
      <file type="M">src.plugin.parse-rss.src.java.org.apache.nutch.parse.rss.RSSParser.java</file>
      <file type="M">src.plugin.parse-rss.src.java.org.apache.nutch.parse.rss.FeedParserListenerImpl.java</file>
      <file type="M">src.plugin.parse-rss.sample.rsstest.rss</file>
      <file type="M">src.plugin.parse-rss.plugin.xml</file>
      <file type="M">src.plugin.parse-rss.lib.commons-feedparser-0.6-fork.jar</file>
      <file type="M">src.plugin.parse-rss.ivy.xml</file>
      <file type="M">src.plugin.parse-rss.build.xml</file>
      <file type="M">src.plugin.build.xml</file>
      <file type="M">conf.parse-plugins.xml</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">src.test.org.apache.nutch.parse.TestParserFactory.java</file>
    </fixedFiles>
  </bug>
  <bug id="889" opendate="2010-8-17 00:00:00" fixdate="2010-8-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>remove gora jars from lib dir</summary>
      <description>Gora does not yet have any published jars we could retrieve with Ivy, instead we currently need to install it and build it locally so that Nutch Ivy can resolve it.The lib dir contains some gora jars which should be removed as they are not necessarily up to date.Note that depending on the Gora backend used for Nutch you might need to add some jars in the lib dir e.g. specific SQL driversI will remove these jars to prevent any confusion</description>
      <version>nutchgora</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">lib.gora-sql-0.1.jar</file>
      <file type="M">lib.gora-core-0.1.jar</file>
    </fixedFiles>
  </bug>
  <bug id="890" opendate="2010-8-19 00:00:00" fixdate="2010-8-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SqlStore doesn&amp;#39;t work with nested types in Avro schema</summary>
      <description>ParseStatus and ProtocolStatus are not properly serialized and stored when using SqlStore. This may indicate a broader issue in Gora with processing of nested types in Avro schemas.HBaseStore works properly, i.e. both types can be correctly stored and retrieved. SqlStore produces either NULL or '\0\0' value. This happens both when using HSQLDB and MySQL.</description>
      <version>nutchgora</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="901" opendate="2010-9-8 00:00:00" fixdate="2010-9-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make index-more plug-in configurable</summary>
      <description>In my case, i don't want the index-more plug-in to split content-types on slash. Tokenization is something a Solr instance should take care of. Instead of removing the code (which would break compatibility for users that rely on it), we need a way to configure the plug-in not to split the content-type.</description>
      <version>1.2,nutchgora</version>
      <fixedVersion>1.2,nutchgora</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-more.src.java.org.apache.nutch.indexer.more.MoreIndexingFilter.java</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">src.plugin.index-more.src.test.org.apache.nutch.indexer.more.TestMoreIndexingFilter.java</file>
    </fixedFiles>
  </bug>
  <bug id="913" opendate="2010-10-13 00:00:00" fixdate="2010-10-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Nutch should use new namespace for Gora</summary>
      <description>Gora is in Apache Incubator now (Yey!). We recently changed Gora's namespace from org.gora to org.apache.gora. This means nutch should use the new namespace otherwise it won't compile with newer builds of Gora.</description>
      <version>None</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.nutch.util.CrawlTestUtil.java</file>
      <file type="M">src.test.org.apache.nutch.util.AbstractNutchTest.java</file>
      <file type="M">src.test.org.apache.nutch.storage.TestGoraStorage.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.TestInjector.java</file>
      <file type="M">src.test.nutch-site.xml</file>
      <file type="M">src.java.org.apache.nutch.util.WebPageWritable.java</file>
      <file type="M">src.java.org.apache.nutch.util.IdentityPageReducer.java</file>
      <file type="M">src.java.org.apache.nutch.util.domain.DomainStatistics.java</file>
      <file type="M">src.java.org.apache.nutch.storage.WebTableCreator.java</file>
      <file type="M">src.java.org.apache.nutch.storage.WebPage.java</file>
      <file type="M">src.java.org.apache.nutch.storage.StorageUtils.java</file>
      <file type="M">src.java.org.apache.nutch.storage.ProtocolStatus.java</file>
      <file type="M">src.java.org.apache.nutch.storage.ParseStatus.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParserJob.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexerReducer.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexerJob.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetcherReducer.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetcherJob.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetchEntry.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.WebTableReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.InjectorJob.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.GeneratorReducer.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.GeneratorMapper.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.DbUpdaterJob.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.DbUpdateReducer.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.DbUpdateMapper.java</file>
      <file type="M">ivy.ivysettings.xml</file>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="921" opendate="2010-10-19 00:00:00" fixdate="2010-10-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Reduce dependency of Nutch on config files</summary>
      <description>Currently many components in Nutch rely on reading their configuration from files. These files need to be on the classpath (or packed into a job jar). This is inconvenient if you want to manage configuration via API, e.g. when embedding Nutch, or running many jobs with slightly different configurations.This issue tracks the improvement to make various components read their config directly from Configuration properties.</description>
      <version>nutchgora</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.urlnormalizer-regex.src.test.org.apache.nutch.net.urlnormalizer.regex.TestRegexURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-regex.src.java.org.apache.nutch.net.urlnormalizer.regex.RegexURLNormalizer.java</file>
      <file type="M">src.plugin.urlfilter-suffix.src.java.org.apache.nutch.urlfilter.suffix.SuffixURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-regex.src.java.org.apache.nutch.urlfilter.regex.RegexURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-prefix.src.java.org.apache.nutch.urlfilter.prefix.PrefixURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-domain.src.java.org.apache.nutch.urlfilter.domain.DomainURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-automaton.src.java.org.apache.nutch.urlfilter.automaton.AutomatonURLFilter.java</file>
      <file type="M">src.plugin.lib-regex-filter.src.java.org.apache.nutch.urlfilter.api.RegexURLFilterBase.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="930" opendate="2010-10-28 00:00:00" fixdate="2010-10-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove remaining dependencies on Lucene API</summary>
      <description>Nutch doesn't use Lucene API anymore, all indexing happens via Lucene-agnostic SolrJ API. The only place where we still use a minor part of Lucene is in index-basic, and that use (DateTools) can be easily replaced.</description>
      <version>nutchgora</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-basic.src.java.org.apache.nutch.indexer.basic.BasicIndexingFilter.java</file>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="931" opendate="2010-10-28 00:00:00" fixdate="2010-10-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Simple admin API to fetch status and stop the service</summary>
      <description>REST API needs a simple info / stats service and the ability to shutdown the server.</description>
      <version>nutchgora</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.api.NutchServer.java</file>
      <file type="M">src.java.org.apache.nutch.api.NutchApp.java</file>
      <file type="M">src.java.org.apache.nutch.api.APIInfoResource.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="932" opendate="2010-10-29 00:00:00" fixdate="2010-11-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bulk REST API to retrieve crawl results as JSON</summary>
      <description>It would be useful to be able to retrieve results of a crawl as JSON. There are a few things that need to be discussed: how to return bulk results using Restlet (WritableRepresentation subclass?) what should be the format of results?I think it would make sense to provide a single record retrieval (by primary key), all records, and records within a range. This incidentally matches well the capabilities of the Gora Query class</description>
      <version>nutchgora</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.nutch.api.TestAPI.java</file>
      <file type="M">src.java.org.apache.nutch.util.NutchTool.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseStatusUtils.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseStatusCodes.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParserJob.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.Nutch.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrIndexerJob.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexerJob.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetcherJob.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.WebTableReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.InjectorJob.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.GeneratorJob.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.DbUpdaterJob.java</file>
      <file type="M">src.java.org.apache.nutch.api.NutchApp.java</file>
      <file type="M">src.java.org.apache.nutch.api.JobStatus.java</file>
      <file type="M">src.java.org.apache.nutch.api.JobResource.java</file>
      <file type="M">src.java.org.apache.nutch.api.JobManager.java</file>
      <file type="M">src.java.org.apache.nutch.api.impl.RAMJobManager.java</file>
      <file type="M">src.java.org.apache.nutch.api.APIInfoResource.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="935" opendate="2010-11-17 00:00:00" fixdate="2010-1-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>remove unnecessary /./ in basic urlnormalizer</summary>
      <description>remove unnecessary /./ in basic urlnormalizer, because this is a rather a sign of bad webserver configuration than of a wanted link.</description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.3,nutchgora</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.urlnormalizer-basic.src.test.org.apache.nutch.net.urlnormalizer.basic.TestBasicURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-basic.src.java.org.apache.nutch.net.urlnormalizer.basic.BasicURLNormalizer.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="940" opendate="2010-11-26 00:00:00" fixdate="2010-9-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>static field plugin</summary>
      <description>A simple plugin called at indexing that adds fields with static data. You can specify a list of &lt;fieldname&gt;:&lt;fieldcontent&gt; per nutch job.It can be useful when collections can't be created by urlpatterns, like in subcollection, but on a job-basis.</description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.4</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.build.xml</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">src.plugin.index-static.src.java.org.apache.nutch.indexer.staticfield.StaticFieldIndexer.java</file>
    </fixedFiles>
  </bug>
  <bug id="950" opendate="2011-1-1 00:00:00" fixdate="2011-1-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Content-Length limit, URL filter and few minor issues</summary>
      <description>1. crawl command (nutch1.patch)The class was renamed to Crawler but the references to it were not updated.2. URL filter (nutch2.patch)This avoids a NPE on bogus urls which host do not have a suffix.3. Content-Length limit (nutch3.patch)This is related to NUTCH-899.The patch avoids the entire flush operation on the Gora datastore to crash because the MySQL blob limit was exceeded by a few bytes. Both protocol-http and protocol-httpclient plugins were problematic.4. Ivy configuration (nutch4.patch) Change xercesImpl and restlet versions. These 2 version changes are required. The first one currently makes a JUnit test crash, the second one is missing in default Maven repository. Add gora-hbase, zookeeper which is an HBase dependency. Add MySQL connector. These jars are necesary to run Gora with HBase or MySQL datastores. (more a suggestion that a requirement here) Add com.jcraft/jsch, which is a protocol-sftp plugin dependency.</description>
      <version>nutchgora</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.urlfilter-domain.src.java.org.apache.nutch.urlfilter.domain.DomainURLFilter.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="954" opendate="2011-1-6 00:00:00" fixdate="2011-1-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Bugfix for Content-Length limit in http protocols</summary>
      <description>3. Content-Length limit (nutch3.patch)This is related to NUTCH-899.The patch avoids the entire flush operation on the Gora datastore to crash because the MySQL blob limit was exceeded by a few bytes. Both protocol-http and protocol-httpclient plugins were problematic.</description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.3,nutchgora</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpResponse.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="956" opendate="2011-1-13 00:00:00" fixdate="2011-5-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>solrindex issues</summary>
      <description>I ran into a few caveats with solrindex command trying to index documents.Please refer to http://techvineyard.blogspot.com/2010/12/build-nutch-20.html#solrindex that describes my tests.</description>
      <version>nutchgora</version>
      <fixedVersion>1.7,2.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-more.src.java.org.apache.nutch.indexer.more.MoreIndexingFilter.java</file>
      <file type="M">conf.schema.xml</file>
      <file type="M">conf.schema-solr4.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="963" opendate="2011-1-26 00:00:00" fixdate="2011-4-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add support for deleting Solr documents with STATUS_DB_GONE in CrawlDB (404 urls)</summary>
      <description>When issuing recrawls it can happen that certain urls have expired (i.e. URLs that don't exist anymore and return 404).This patch creates a new command in the indexer that scans the crawldb looking for these urls and issues delete commands to SOLR.</description>
      <version>nutchgora</version>
      <fixedVersion>1.3</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.bin.nutch</file>
      <file type="M">conf.log4j.properties</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="965" opendate="2011-2-8 00:00:00" fixdate="2011-2-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Skip parsing for truncated documents</summary>
      <description>The issue you're likely to run into when parsing truncated FLV files is described here:http://www.mail-archive.com/user@nutch.apache.org/msg01880.htmlThe parser library gets stuck in infinite loop as it encounters corrupted data due to for example truncating big binary files at fetch time.</description>
      <version>None</version>
      <fixedVersion>nutchgora,1.5</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.parse.ParseSegment.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.Fetcher.java</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="967" opendate="2011-2-17 00:00:00" fixdate="2011-4-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Tika 0.9</summary>
      <description></description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.3,nutchgora</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.parse-tika.plugin.xml</file>
      <file type="M">src.plugin.parse-tika.ivy.xml</file>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">conf.tika-mimetypes.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="982" opendate="2011-4-12 00:00:00" fixdate="2011-4-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove copying of ID and URL field in solrmapping</summary>
      <description>Guys, the Solrindexer seems to be broken in trunk. With current solrmapping and code you'll get an exception complaining about multiple values in a non-multivalued field; the ID field which must of course be single valued. This happens because of the current mapping code and mapping config copy the url and id fields. The old 1.3 NutchDocument does not contain an ID field but in trunk it does.I propose to change the current solrmapping configuration by simply removing: &lt;field dest="id" source="url"/&gt; &lt;copyField source="url" dest="url"/&gt;If not, we need to do something about the solrmapping code.</description>
      <version>nutchgora</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.solrindex-mapping.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="983" opendate="2011-4-13 00:00:00" fixdate="2011-5-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade SolrJ</summary>
      <description>Solr 3.1 has been released a while ago. The Javabin format between 1.4.1 and 3.1 has been changed so our SolrJ 1.4.1 cannot send documents to 3.1. Since Nutch 2.0 won't be released within a short period i believe it would be a good idea to upgrade our SolrJ to 3.1. New Solr users are encouraged to use Solr 3.1 or upgrade so i expect more users wanting to use 3.1 as well. Any thoughts?</description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.3,nutchgora</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="987" opendate="2011-4-26 00:00:00" fixdate="2011-9-26 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support HTTP auth for Solr communication</summary>
      <description>At the moment we cannot send data directly to a public HTTP auth protected Solr instance. I've a WIP that passes a configured HTTPClient object to CommonsHttpSolrServer, it works. This issue should add this ability to indexing, dedup and clean and be configured from some configuration file.Enable Solr HTTP auth communication by setting the following parameters in your nutch-site config: solr.auth=true solr.auth.username=USERNAME solr.auth.password=PASSWORD</description>
      <version>None</version>
      <fixedVersion>1.4</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrWriter.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrIndexer.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrDeleteDuplicates.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrClean.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexerMapReduce.java</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrConstants.java</file>
    </fixedFiles>
  </bug>
  <bug id="991" opendate="2011-4-27 00:00:00" fixdate="2011-4-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>SolrDedup must issue a commit</summary>
      <description>Title says it all. SolrDedup job doesn't commit but it should.</description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.3,nutchgora</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrDeleteDuplicates.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="996" opendate="2011-5-8 00:00:00" fixdate="2011-5-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Indexer adds solr.commit.size+1 docs</summary>
      <description>SolrIndexer adds one additional document. This issue can be spotted easily with Solr 3.1 which accurately reports the number of added docs in the log.</description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.3,nutchgora</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrWriter.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="997" opendate="2011-5-17 00:00:00" fixdate="2011-5-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>IndexingFitlers to store Date objects instead of Strings</summary>
      <description>See Nutch-985.Several IndexingFilters generate fields containing Dates with String values. This patch changes this so that Date objects are stored then converted into whatever type and format are required during the indexing.</description>
      <version>1.3,nutchgora</version>
      <fixedVersion>1.3</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-more.src.java.org.apache.nutch.indexer.more.MoreIndexingFilter.java</file>
      <file type="M">src.plugin.index-basic.src.java.org.apache.nutch.indexer.basic.BasicIndexingFilter.java</file>
      <file type="M">src.plugin.feed.src.java.org.apache.nutch.indexer.feed.FeedIndexingFilter.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.solr.SolrWriter.java</file>
      <file type="M">conf.schema.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="999" opendate="2011-5-18 00:00:00" fixdate="2011-6-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Normalise String representation for Dates in IndexingFilters</summary>
      <description>NUTCH-997 has been applied to Nutch-1.3 so that various indexing filters store Date objects as value for fields. However in trunk NutchDocuments can have only String values which means that we will have to convert the Dates to Strings in each indexing filter.</description>
      <version>nutchgora</version>
      <fixedVersion>nutchgora</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-more.src.java.org.apache.nutch.indexer.more.MoreIndexingFilter.java</file>
      <file type="M">src.plugin.feed.src.java.org.apache.nutch.indexer.feed.FeedIndexingFilter.java</file>
      <file type="M">conf.schema.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
</bugrepository>
