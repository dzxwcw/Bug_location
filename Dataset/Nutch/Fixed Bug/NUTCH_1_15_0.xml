<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="NUTCH">
  <bug id="2192" opendate="2015-12-24 00:00:00" fixdate="2015-10-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Get rid of oro</summary>
      <description>Couple of classes still rely on oro, we should get rid of it.</description>
      <version>2.3.1,1.15</version>
      <fixedVersion>2.4,1.16</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.urlnormalizer-regex.sample.regex-normalize-scope1.xml</file>
      <file type="M">src.plugin.urlnormalizer-regex.sample.regex-normalize-default.xml</file>
      <file type="M">src.java.org.apache.nutch.parse.OutlinkExtractor.java</file>
      <file type="M">LICENSE.txt</file>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">conf.regex-normalize.xml.template</file>
      <file type="M">conf.parse-plugins.xml</file>
      <file type="M">src.plugin.parse-js.src.test.org.apache.nutch.parse.js.TestJSParseFilter.java</file>
      <file type="M">src.plugin.parse-js.src.java.org.apache.nutch.parse.js.JSParseFilter.java</file>
    </fixedFiles>
  </bug>
  <bug id="2496" opendate="2018-1-12 00:00:00" fixdate="2018-6-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Speed up link inversion step in crawling script</summary>
      <description>While working on a project where I have to index a huge number of URLs I encountered an issue with the link inversion step of the crawling script. A while ago Ian Lopata stumbled upon the same issue as described here: http://lucene.472066.n3.nabble.com/InvertLinks-Performance-Nutch-1-6-td4183004.htmlI am running the invertlinks step in my Nutch 1.6 based crawl process on a single node. I run invertlinks only because I need the Inlinks in the indexer step so as to store them with the document. I do not need the anchor text and I am not scoring. I am finding that invertlinks (and more specifically the merge of the linkdb) takes a long time - about 30 minutes for a crawl of around 150K documents. I am looking for ways that I might shorten this processing time. Any suggestions? Back then wastl-nagel suggested turning off the normalizers and filters during the inversion step which speeds up the process a bunch.In my case however I kind of depend on those so this is no real solution.I opened this issue here in order to get some feedback on how we could improve things in a crawl script and speed up the process.</description>
      <version>1.15</version>
      <fixedVersion>1.17</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.bin.crawl</file>
    </fixedFiles>
  </bug>
  <bug id="2497" opendate="2018-1-13 00:00:00" fixdate="2018-1-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Elastic REST Indexer: Allow multiple hosts</summary>
      <description>Allow specifying a list of Elasticsearch hosts to index documents to. This would be especially helpful when working with a Elasticsearch cluster which contains of multiple nodes.</description>
      <version>None</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.indexer-elastic-rest.src.java.org.apache.nutch.indexwriter.elasticrest.ElasticRestIndexWriter.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2510" opendate="2018-2-14 00:00:00" fixdate="2018-7-14 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Crawl script modification. HostDb : generate, optional usage and description</summary>
      <description>Script crawl now includes hostdb update as a part of crawling cycle, but :1) There is no hostdb parameter for generate2) Generation of hostdb is not optional, therefore hostdb is generated each step without asking of user. It should be an optional parameter.3) Description of 1 and 2.</description>
      <version>1.15</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.bin.crawl</file>
    </fixedFiles>
  </bug>
  <bug id="2518" opendate="2018-3-5 00:00:00" fixdate="2018-4-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Must check return value of job.waitForCompletion()</summary>
      <description>The return value of job.waitForCompletion() of the new MapReduce API (NUTCH-2375) must always be checked. If it's not true, the job has been failed or killed. Accordingly, the program should not proceed with further jobs/steps must clean-up temporary data, unlock CrawlDB, etc. exit with non-zero exit value, so that scripts running the crawl workflow can handle the failureCf. NUTCH-2076, NUTCH-2442, NUTCH-2375 PR #221.</description>
      <version>1.15</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.util.SitemapProcessor.java</file>
      <file type="M">src.java.org.apache.nutch.util.NutchJob.java</file>
      <file type="M">src.java.org.apache.nutch.tools.warc.WARCExporter.java</file>
      <file type="M">src.java.org.apache.nutch.tools.FreeGenerator.java</file>
      <file type="M">src.java.org.apache.nutch.tools.arc.ArcSegmentCreator.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentReader.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentMerger.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseSegment.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexingJob.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.CleaningJob.java</file>
      <file type="M">src.java.org.apache.nutch.hostdb.UpdateHostDb.java</file>
      <file type="M">src.java.org.apache.nutch.hostdb.ReadHostDb.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.Fetcher.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDbReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDbMerger.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDb.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Injector.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Generator.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.DeduplicationJob.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbMerger.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDb.java</file>
    </fixedFiles>
  </bug>
  <bug id="2544" opendate="2018-3-23 00:00:00" fixdate="2018-4-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Nutch 1.15 no longer compatible with AWS EMR and S3</summary>
      <description>Nutch 1.14 is working OK with AWS EMR and S3 storage, but NUTCH-2375 appears to have broken this.Generator partitioning fails withÂ Error: java.lang.NullPointerException at org.apache.nutch.crawl.URLPartitioner.getPartition(URLPartitioner.java:75)</description>
      <version>1.15</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.util.SitemapProcessor.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetcherOutputFormat.java</file>
    </fixedFiles>
  </bug>
  <bug id="2550" opendate="2018-4-7 00:00:00" fixdate="2018-4-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fetcher fails to follow redirects</summary>
      <description>As I detailed in this github comment, it appears that PR #221 broke redirects. The fetcher will repeatedly fetch the original url rather than the one it's supposed to be redirecting to until http.redirect.max is exceeded, and then end with STATUS_FETCH_GONE.I noticed this issue when I was trying to crawl a site with a 301 MOVED PERMANENTLY status code.Should be pretty easy to fix though: I was able to get redirects working again simply by inserting the code url = fit.url here and here.</description>
      <version>1.15</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.fetcher.FetcherThread.java</file>
    </fixedFiles>
  </bug>
  <bug id="2572" opendate="2018-4-23 00:00:00" fixdate="2018-4-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>HostDb: updatehostdb does not set values</summary>
      <description>% bin/nutch readdb crawl/crawldb -stats -sort...status 1 (db_unfetched): 3 nutch.apache.org : 3status 2 (db_fetched): 2 nutch.apache.org : 2status 6 (db_notmodified): 34 nutch.apache.org : 34CrawlDb statistics: done% bin/nutch updatehostdb -hostdb crawl/hostdb -crawldb crawl/crawldbUpdateHostDb: hostdb: crawl/hostdbUpdateHostDb: crawldb: crawl/crawldbUpdateHostDb: starting at 2018-04-23 13:50:33UpdateHostDb: finished at 2018-04-23 13:50:35, elapsed: 00:00:01% bin/nutch readhostdb crawl/hostdb -get nutch.apache.orgReadHostDb: get: nutch.apache.org0 0 0 0 0 0 0 0 0 0 0.0 1970-01-01 01:00:00Although a HostDb record is added for "nutch.apache.org", all expected values (number of fetched/unfetched/... pages, fetch time min/max/average/percentiles, etc.) are empty or zero.</description>
      <version>1.15</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.hostdb.UpdateHostDbReducer.java</file>
    </fixedFiles>
  </bug>
  <bug id="2593" opendate="2018-6-5 00:00:00" fixdate="2018-6-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Single mode doesn&amp;#39;t work in RabbitMQ indexer</summary>
      <description>Switching from multiple to simple has no effect. This is because the commit.mode parameter is used instead of commit.commit in the RabbitMQ indexer.</description>
      <version>1.15</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.index-writers.xml.template</file>
    </fixedFiles>
  </bug>
  <bug id="2597" opendate="2018-6-13 00:00:00" fixdate="2018-6-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>NPE in updatehostdb</summary>
      <description>I get an NPE on updatehostdb. I start with a clean crawlDB &amp; hostDB. After an inject, I do an updatehostdb with -checkAll and get the following stacktrace:2018-06-13 10:45:21,958 WARN hostdb.ResolverThread - java.lang.NullPointerException at org.apache.hadoop.io.SequenceFile$Writer.checkAndWriteSync(SequenceFile.java:1359) at org.apache.hadoop.io.SequenceFile$Writer.append(SequenceFile.java:1400) at org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat$1.write(SequenceFileOutputFormat.java:83) at org.apache.hadoop.mapred.ReduceTask$NewTrackingRecordWriter.write(ReduceTask.java:558) at org.apache.hadoop.mapreduce.task.TaskInputOutputContextImpl.write(TaskInputOutputContextImpl.java:89) at org.apache.hadoop.mapreduce.lib.reduce.WrappedReducer$Context.write(WrappedReducer.java:105) at org.apache.nutch.hostdb.ResolverThread.run(ResolverThread.java:82) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748)Is this related to NUTCH-2375?If further testing is needed, please let me know!</description>
      <version>1.15</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.indexer.CleaningJob.java</file>
      <file type="M">src.java.org.apache.nutch.hostdb.UpdateHostDbReducer.java</file>
    </fixedFiles>
  </bug>
  <bug id="2602" opendate="2018-6-18 00:00:00" fixdate="2018-9-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Configuration values in the description of index writers</summary>
      <description>SinceÂ GitHub Pull Request #218Â when you have 2+ different configuration of the same index writers (the same implementation class), the index command print the same descriptionÂ several times. IÂ proposeÂ the describe() method show the values of its own configuration and not a generic one.Â </description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.indexer.CleaningJob.java</file>
      <file type="M">src.plugin.indexer-csv.src.java.org.apache.nutch.indexwriter.csv.CSVIndexWriter.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexWriters.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexWriter.java</file>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">src.plugin.indexer-solr.src.java.org.apache.nutch.indexwriter.solr.SolrIndexWriter.java</file>
      <file type="M">src.plugin.indexer-rabbit.src.java.org.apache.nutch.indexwriter.rabbit.RabbitIndexWriter.java</file>
      <file type="M">src.plugin.indexer-elastic.src.java.org.apache.nutch.indexwriter.elastic.ElasticIndexWriter.java</file>
      <file type="M">src.plugin.indexer-elastic-rest.src.java.org.apache.nutch.indexwriter.elasticrest.ElasticRestIndexWriter.java</file>
      <file type="M">src.plugin.indexer-dummy.src.java.org.apache.nutch.indexwriter.dummy.DummyIndexWriter.java</file>
      <file type="M">src.plugin.indexer-cloudsearch.src.java.org.apache.nutch.indexwriter.cloudsearch.CloudSearchIndexWriter.java</file>
      <file type="M">src.plugin.indexer-cloudsearch.src.java.org.apache.nutch.indexwriter.cloudsearch.CloudSearchConstants.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexingJob.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexerOutputFormat.java</file>
    </fixedFiles>
  </bug>
  <bug id="2618" opendate="2018-7-11 00:00:00" fixdate="2018-7-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>protocol-okhttp not to use http.timeout for max duration to fetch document</summary>
      <description>Protocol-okhttp (NUTCH-2576) uses the HTTP network timeout (http.timeout) as time limit for the max duration to fetch a document. The timeout value (default = 10 sec.) is usually to small to fetch larger documents. The max fetch duration should be separately configurable, e.g., by a property http.time.limit (similar to http.content.limit).</description>
      <version>1.15</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-okhttp.src.java.org.apache.nutch.protocol.okhttp.OkHttpResponse.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpBase.java</file>
      <file type="M">src.java.org.apache.nutch.net.protocols.Response.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2619" opendate="2018-7-11 00:00:00" fixdate="2018-7-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>protocol-okhttp: allow to keep partially fetched docs as truncated</summary>
      <description>Sometimes fetching a larger document times out after some content has already been downloaded. For some use cases it may be better to save this partially fetched document and mark it as truncated, instead of retrying the fetch later (may fail for the same reason again).</description>
      <version>1.15</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-okhttp.src.java.org.apache.nutch.protocol.okhttp.OkHttpResponse.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpBase.java</file>
      <file type="M">src.java.org.apache.nutch.net.protocols.Response.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2621" opendate="2018-7-20 00:00:00" fixdate="2018-8-20 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Generate report of third-party licenses</summary>
      <description>Would be good to have the possibility to generate a list of third-party licenses of all dependent libraries shipped with the binary 1.x package. There is the ant report target which includes also licenses but a list or tabular view would be much easier to process than a graph or HTML report. Cf. the Maven license plugin.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.build-plugin.xml</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2622" opendate="2018-7-20 00:00:00" fixdate="2018-7-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unbundle LGPL-licensed jars from binary release</summary>
      <description>The tool commoncrawldump depends on LGPL-licensed libs to create WARC files. The LGPL license is not compatible with the Apache license (aka. category x), the jars cannot be distributed together with Nutch (see 1).</description>
      <version>1.15</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2624" opendate="2018-7-23 00:00:00" fixdate="2018-7-23 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>protocol-okhttp resource leak</summary>
      <description>The protocol-okhttp leaks response streams as logged by okhttp3.ConnectionPool:WARNING: A connection to ... was leaked. Did you forget to close a response body?This has been introduced in commit f598db7 - need to catch the IOException and close the response, then re-throw so that FetcherThread can handle the exception.</description>
      <version>1.15</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-okhttp.src.java.org.apache.nutch.protocol.okhttp.OkHttpResponse.java</file>
    </fixedFiles>
  </bug>
  <bug id="2630" opendate="2018-8-1 00:00:00" fixdate="2018-11-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fetcher to log skipped records by robots.txt</summary>
      <description>To analyze problems it would be helpful if fetcher logs URLs which are disallowed in the robots.txt - see discussion on user mailing list.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.fetcher.FetcherThread.java</file>
    </fixedFiles>
  </bug>
  <bug id="2645" opendate="2018-9-13 00:00:00" fixdate="2018-10-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Webgraph tools ignore command-line options</summary>
      <description>Some webgraph jobs/tools do not properly set command-line options in the job configuration (see NUTCH-2644 for a similar problem in CrawlDbReader).</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.WebGraph.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.NodeDumper.java</file>
      <file type="M">conf.log4j.properties</file>
    </fixedFiles>
  </bug>
  <bug id="2647" opendate="2018-9-19 00:00:00" fixdate="2018-9-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Skip TLS certificate checks in protocol-http plugin</summary>
      <description>Taken from protocol-httpclient, protocol-http now has support for ignoring certificate checks.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.HttpResponse.java</file>
    </fixedFiles>
  </bug>
  <bug id="2648" opendate="2018-10-8 00:00:00" fixdate="2018-10-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Make configurable whether TLS/SSL certificates are checked by protocol plugins</summary>
      <description>(see discussion in NUTCH-2647)It should be possible to enable/disable TLS/SSL certificate validation centrally for all http/https protocol plugins by a single configuration property.Some use cases (eg. crawl a site to detect insecure pages) may require that TLS/SSL certificates are checked. Also a broader, unrestricted web crawl may skip sites with invalid certificates as this is can be an indicator for the quality of a site.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-okhttp.src.java.org.apache.nutch.protocol.okhttp.OkHttp.java</file>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.Http.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpBase.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2649" opendate="2018-10-9 00:00:00" fixdate="2018-1-9 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Optionally skip TLS/SSL certificate validation for protocol-selenium and protocol-htmlunit</summary>
      <description>NUTCH-2648 adds a property to enable/disable the TLS/SSL certificate validation for protocol-http, protocol-httpclient and protocol-okhttp. It should be also supported by remaining protocol plugins: protocol-selenium, protocol-interactiveselenium and protocol-htmlunit</description>
      <version>1.15</version>
      <fixedVersion>1.17</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-selenium.src.java.org.apache.nutch.protocol.selenium.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-htmlunit.src.java.org.apache.nutch.protocol.htmlunit.HttpResponse.java</file>
    </fixedFiles>
  </bug>
  <bug id="2651" opendate="2018-10-12 00:00:00" fixdate="2018-10-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Tika 1.19.1 (from 1.18)</summary>
      <description>Tika 1.19.1 has been released recently. Among all the other improvements and fixes (including those of 1.19) It contains one important performance fix (TIKA-2645, cf. NUTCH-2578) affecting the MIME-/Content-Type detector.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivysettings.xml</file>
      <file type="M">src.plugin.parse-tika.plugin.xml</file>
      <file type="M">src.plugin.parse-tika.ivy.xml</file>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">default.properties</file>
    </fixedFiles>
  </bug>
  <bug id="2657" opendate="2018-10-15 00:00:00" fixdate="2018-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protocol-http to store HTTP response header with "\r\n"</summary>
      <description>The plugins protocol-http and protocol-okhttp allow to store the HTTP request and/or response headers in the response metadata. However, there is no consensus which line breaks ("\r\n" or "\n") are used between header lines and whether there is a trailing second line break at the end of the headers: while request headers are stored by both plugins with "\r\n" and two trailing "\r\n", the response headers are stored by protocol-http with "\n" and a single trailing line break. This is difficult to handle if the headers are required to be stored uniformly (I've created such a nasty bug writing WARC files).</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.HttpResponse.java</file>
    </fixedFiles>
  </bug>
  <bug id="2658" opendate="2018-10-17 00:00:00" fixdate="2018-1-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add README file to all plugins in src/plugin</summary>
      <description>Since we've migrated a good portion of our workflow to Github we could consider adding a README.md file to the root of each plugin in src/plugins. This is a good place to have plugin-specific documentation. Wich fields the plugin adds to the indexer, which configuration options, etc. Also, since the README.md is rendered by Github automatically is a good link to point users.I think that a good example is the indexer-cloudsearch plugin, on top of that it's a good source of information to point users when asking questions regarding a specific plugin.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.schema.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2659" opendate="2018-10-17 00:00:00" fixdate="2018-12-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add missing Apache license headers</summary>
      <description>Should add Apache license headers to source files (at least, *.java) - some files lack the license header.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.nutch.crawl.TODOTestCrawlDbStates.java</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.cosine.package-info.java</file>
      <file type="M">src.plugin.scoring-depth.src.java.org.apache.nutch.scoring.depth.DepthScoringFilter.java</file>
      <file type="M">src.plugin.scoring-depth.plugin.xml</file>
      <file type="M">src.plugin.scoring-depth.build.xml</file>
      <file type="M">src.plugin.parse-metatags.plugin.xml</file>
      <file type="M">src.plugin.indexer-dummy.src.java.org.apache.nutch.indexwriter.dummy.DummyConstants.java</file>
      <file type="M">src.plugin.index-replace.plugin.xml</file>
      <file type="M">src.plugin.headings.src.test.org.apache.nutch.parse.headings.TestHeadingsParseFilter.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.settings.SettingsPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.instances.InstancePanel.java</file>
      <file type="M">src.java.org.apache.nutch.tools.WARCUtils.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlFormatWARC.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.AbstractScoringFilter.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexWriterParams.java</file>
    </fixedFiles>
  </bug>
  <bug id="2674" opendate="2018-11-8 00:00:00" fixdate="2018-12-8 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>HostDb: dump shows wrong column headers</summary>
      <description>The header line of the HostDb dump is wrong, it should show the fields returned by HostDatum.toString() used for the dump. In detail, the column headers redirSum and ok should be replaced by notModified.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.hostdb.ReadHostDb.java</file>
    </fixedFiles>
  </bug>
  <bug id="2678" opendate="2018-12-10 00:00:00" fixdate="2018-1-10 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow for per-host configurable protocol plugin</summary>
      <description>Introduces new configuration file for mapping protocol plugins to hostnames.# This file defines a hostname to protocol plugin mapping. Each line takes a# host name followed by a tab, followed by the ID of the protocol plugin. You# can find the ID in the protocol plugin's plugin.xml file.# # &lt;hostname&gt;\t&lt;plugin_id&gt;\n# nutch.apache.org org.apache.nutch.protocol.httpclient.Http# tika.apache.org org.apache.nutch.protocol.http.Http#</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.nutch.protocol.TestProtocolFactory.java</file>
      <file type="M">src.java.org.apache.nutch.util.ObjectCache.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.ProtocolFactory.java</file>
      <file type="M">src.java.org.apache.nutch.plugin.Extension.java</file>
    </fixedFiles>
  </bug>
  <bug id="2682" opendate="2018-12-27 00:00:00" fixdate="2018-1-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Tika 1.20</summary>
      <description>Tika 1.20 has been released, 1.x should be upgraded.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.parse-tika.src.java.org.apache.nutch.parse.tika.TikaParser.java</file>
      <file type="M">src.plugin.parse-tika.plugin.xml</file>
      <file type="M">src.plugin.parse-tika.ivy.xml</file>
      <file type="M">src.plugin.parse-tika.howto.upgrade.tika.txt</file>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2686" opendate="2019-1-15 00:00:00" fixdate="2019-1-15 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Separate field for mime types mapped by index-more plugin</summary>
      <description>Since NUTCH-1262, several mime types can be mapped to a different value. By default, the behavior is to replace the original value with the new one. But if we want to keep the original mime type too? This issue pretends to accomplish this requirement.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-more.src.java.org.apache.nutch.indexer.more.MoreIndexingFilter.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2687" opendate="2019-1-16 00:00:00" fixdate="2019-1-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Regex for reading title from Content-Disposition is wrong</summary>
      <description>Given URL: https://www.amuse-project.org/file/download/default/E6D0537647AF1204656076943F4729B0/Koopstra2016_5fOntologically%20classifying%20ERP%20feature,%20the%20NEXT%20method_5fFinal.pdfAnd regex: bfilename=&amp;#91;&amp;#39;\"&amp;#93;(.+)&amp;#91;&amp;#39;\"&amp;#93;We get the following title:Koopstra2016_Ontologically classifying ERP feature, the NEXT method_Final.pdf"; filename*=utf-8'Changed regex to: bfilename=&amp;#91;&amp;#39;\"&amp;#93;(&amp;#91;^\"&amp;#93;+) fixes it</description>
      <version>None</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-more.src.java.org.apache.nutch.indexer.more.MoreIndexingFilter.java</file>
    </fixedFiles>
  </bug>
  <bug id="2688" opendate="2019-1-17 00:00:00" fixdate="2019-5-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unify the licence headers</summary>
      <description>Sometimes the license headers are written in .java classes in a javadoc comment (/** license &amp;#42;/), sometimes in a block comment (/* license &amp;#42;/), and sometimes is a javadoc comment but with several * (/**** license */). The idea is to reach an understanding on how the license headers should be written on .java files.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.net.URLFilters.java</file>
      <file type="M">src.plugin.publish-rabbitmq.src.java.org.apache.nutch.publisher.rabbitmq.RabbitMQPublisherImpl.java</file>
      <file type="M">src.test.org.apache.nutch.util.WritableTestUtils.java</file>
      <file type="M">src.test.org.apache.nutch.util.TestURLUtil.java</file>
      <file type="M">src.test.org.apache.nutch.util.TestTableUtil.java</file>
      <file type="M">src.test.org.apache.nutch.util.TestSuffixStringMatcher.java</file>
      <file type="M">src.test.org.apache.nutch.util.TestStringUtil.java</file>
      <file type="M">src.test.org.apache.nutch.util.TestPrefixStringMatcher.java</file>
      <file type="M">src.test.org.apache.nutch.util.TestNodeWalker.java</file>
      <file type="M">src.test.org.apache.nutch.util.TestMimeUtil.java</file>
      <file type="M">src.test.org.apache.nutch.util.TestGZIPUtils.java</file>
      <file type="M">src.test.org.apache.nutch.util.DumpFileUtilTest.java</file>
      <file type="M">src.test.org.apache.nutch.tools.TestCommonCrawlDataDumper.java</file>
      <file type="M">src.test.org.apache.nutch.tools.proxy.SegmentHandler.java</file>
      <file type="M">src.test.org.apache.nutch.tools.proxy.ProxyTestbed.java</file>
      <file type="M">src.test.org.apache.nutch.tools.proxy.NotFoundHandler.java</file>
      <file type="M">src.test.org.apache.nutch.tools.proxy.LogDebugHandler.java</file>
      <file type="M">src.test.org.apache.nutch.tools.proxy.FakeHandler.java</file>
      <file type="M">src.test.org.apache.nutch.tools.proxy.DelayHandler.java</file>
      <file type="M">src.test.org.apache.nutch.tools.proxy.AbstractTestbedHandler.java</file>
      <file type="M">src.test.org.apache.nutch.service.TestNutchServer.java</file>
      <file type="M">src.test.org.apache.nutch.protocol.TestContent.java</file>
      <file type="M">src.test.org.apache.nutch.plugin.TestPluginSystem.java</file>
      <file type="M">src.test.org.apache.nutch.plugin.SimpleTestPlugin.java</file>
      <file type="M">src.test.org.apache.nutch.plugin.ITestExtension.java</file>
      <file type="M">src.test.org.apache.nutch.plugin.HelloWorldExtension.java</file>
      <file type="M">src.test.org.apache.nutch.parse.TestParseText.java</file>
      <file type="M">src.test.org.apache.nutch.parse.TestParserFactory.java</file>
      <file type="M">src.test.org.apache.nutch.parse.TestParseData.java</file>
      <file type="M">src.test.org.apache.nutch.parse.TestOutlinks.java</file>
      <file type="M">src.test.org.apache.nutch.parse.TestOutlinkExtractor.java</file>
      <file type="M">src.test.org.apache.nutch.metadata.TestSpellCheckedMetadata.java</file>
      <file type="M">src.test.org.apache.nutch.metadata.TestMetadata.java</file>
      <file type="M">src.test.org.apache.nutch.indexer.TestIndexerMapReduce.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.TODOTestCrawlDbStates.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.TestLinkDbMerger.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.TestCrawlDbStates.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.TestCrawlDbMerger.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.TestCrawlDbFilter.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.DummyWritable.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.CrawlDbUpdateUtil.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.CrawlDbUpdateTestDriver.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.ContinuousCrawlTestUtil.java</file>
      <file type="M">src.plugin.urlnormalizer-slash.src.java.org.apache.nutch.net.urlnormalizer.slash.SlashURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-regex.src.test.org.apache.nutch.net.urlnormalizer.regex.TestRegexURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-regex.src.java.org.apache.nutch.net.urlnormalizer.regex.RegexURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-querystring.src.java.org.apache.nutch.net.urlnormalizer.querystring.QuerystringURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-protocol.src.java.org.apache.nutch.net.urlnormalizer.protocol.ProtocolURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-pass.src.java.org.apache.nutch.net.urlnormalizer.pass.PassURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-host.src.java.org.apache.nutch.net.urlnormalizer.host.HostURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-basic.src.test.org.apache.nutch.net.urlnormalizer.basic.TestBasicURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-basic.src.java.org.apache.nutch.net.urlnormalizer.basic.BasicURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-ajax.src.test.org.apache.nutch.net.urlnormalizer.ajax.TestAjaxURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-ajax.src.java.org.apache.nutch.net.urlnormalizer.ajax.AjaxURLNormalizer.java</file>
      <file type="M">src.plugin.urlmeta.src.java.org.apache.nutch.scoring.urlmeta.URLMetaScoringFilter.java</file>
      <file type="M">src.plugin.urlmeta.src.java.org.apache.nutch.indexer.urlmeta.URLMetaIndexingFilter.java</file>
      <file type="M">src.plugin.urlfilter-suffix.src.test.org.apache.nutch.urlfilter.suffix.TestSuffixURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-suffix.src.java.org.apache.nutch.urlfilter.suffix.SuffixURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-regex.src.test.org.apache.nutch.urlfilter.regex.TestRegexURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-regex.src.java.org.apache.nutch.urlfilter.regex.RegexURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-prefix.src.java.org.apache.nutch.urlfilter.prefix.PrefixURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-automaton.src.test.org.apache.nutch.urlfilter.automaton.TestAutomatonURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-automaton.src.java.org.apache.nutch.urlfilter.automaton.AutomatonURLFilter.java</file>
      <file type="M">src.plugin.tld.src.java.org.apache.nutch.scoring.tld.TLDScoringFilter.java</file>
      <file type="M">src.plugin.tld.src.java.org.apache.nutch.indexer.tld.TLDIndexingFilter.java</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.util.package-info.java</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.util.LuceneTokenizer.java</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.util.LuceneAnalyzerUtil.java</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.SimilarityScoringFilter.java</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.SimilarityModel.java</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.cosine.package-info.java</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.cosine.Model.java</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.cosine.DocVector.java</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.cosine.CosineSimilarity.java</file>
      <file type="M">src.plugin.scoring-orphan.src.test.org.apache.nutch.scoring.orphan.TestOrphanScoringFilter.java</file>
      <file type="M">src.plugin.scoring-opic.src.java.org.apache.nutch.scoring.opic.OPICScoringFilter.java</file>
      <file type="M">src.plugin.scoring-depth.src.java.org.apache.nutch.scoring.depth.DepthScoringFilter.java</file>
      <file type="M">src.plugin.protocol-selenium.src.java.org.apache.nutch.protocol.selenium.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-selenium.src.java.org.apache.nutch.protocol.selenium.Http.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.test.org.apache.nutch.protocol.okhttp.TestProtocolOkHttp.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.test.org.apache.nutch.protocol.okhttp.TestBadServerResponses.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.java.org.apache.nutch.protocol.okhttp.OkHttpResponse.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.java.org.apache.nutch.protocol.okhttp.OkHttp.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.Http.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.handlers.InteractiveSeleniumHandler.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.handlers.DefaultHandler.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.handlers.DefaultClickAllAjaxLinksHandler.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.handlers.DefalultMultiInteractionHandler.java</file>
      <file type="M">src.plugin.protocol-http.src.test.org.apache.nutch.protocol.http.TestProtocolHttp.java</file>
      <file type="M">src.plugin.protocol-http.src.test.org.apache.nutch.protocol.http.TestBadServerResponses.java</file>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.Http.java</file>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.DummyX509TrustManager.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.test.org.apache.nutch.protocol.httpclient.TestProtocolHttpClient.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpFormAuthentication.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpFormAuthConfigurer.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpBasicAuthentication.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpAuthenticationFactory.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpAuthenticationException.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpAuthentication.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.Http.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.DummyX509TrustManager.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.DummySSLProtocolSocketFactory.java</file>
      <file type="M">src.plugin.protocol-htmlunit.src.java.org.apache.nutch.protocol.htmlunit.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-htmlunit.src.java.org.apache.nutch.protocol.htmlunit.Http.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.PrintCommandListener.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.FtpRobotRulesParser.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.FtpResponse.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.FtpExceptionUnknownForcedDataClose.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.FtpExceptionControlClosedByForcedDataClose.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.FtpExceptionCanNotHaveDataConnection.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.FtpExceptionBadSystResponse.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.FtpException.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.FtpError.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.Ftp.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.Client.java</file>
      <file type="M">src.plugin.protocol-file.src.test.org.apache.nutch.protocol.file.TestProtocolFile.java</file>
      <file type="M">src.plugin.protocol-file.src.java.org.apache.nutch.protocol.file.FileResponse.java</file>
      <file type="M">src.plugin.protocol-file.src.java.org.apache.nutch.protocol.file.FileException.java</file>
      <file type="M">src.plugin.protocol-file.src.java.org.apache.nutch.protocol.file.FileError.java</file>
      <file type="M">src.plugin.protocol-file.src.java.org.apache.nutch.protocol.file.File.java</file>
      <file type="M">src.plugin.parsefilter-regex.src.java.org.apache.nutch.parsefilter.regex.RegexParseFilter.java</file>
      <file type="M">src.plugin.parsefilter-naivebayes.src.java.org.apache.nutch.parsefilter.naivebayes.Train.java</file>
      <file type="M">src.plugin.parsefilter-naivebayes.src.java.org.apache.nutch.parsefilter.naivebayes.package-info.java</file>
      <file type="M">src.plugin.parsefilter-naivebayes.src.java.org.apache.nutch.parsefilter.naivebayes.NaiveBayesParseFilter.java</file>
      <file type="M">src.plugin.parsefilter-naivebayes.src.java.org.apache.nutch.parsefilter.naivebayes.Classify.java</file>
      <file type="M">src.plugin.parse-zip.src.test.org.apache.nutch.parse.zip.TestZipParser.java</file>
      <file type="M">src.plugin.parse-zip.src.java.org.apache.nutch.parse.zip.ZipTextExtractor.java</file>
      <file type="M">src.plugin.parse-zip.src.java.org.apache.nutch.parse.zip.ZipParser.java</file>
      <file type="M">src.plugin.parse-tika.src.test.org.apache.nutch.parse.tika.TestRTFParser.java</file>
      <file type="M">src.plugin.parse-tika.src.test.org.apache.nutch.parse.tika.TestRobotsMetaProcessor.java</file>
      <file type="M">src.plugin.parse-tika.src.test.org.apache.nutch.parse.tika.TestPdfParser.java</file>
      <file type="M">src.plugin.parse-tika.src.test.org.apache.nutch.parse.tika.TestOOParser.java</file>
      <file type="M">src.plugin.parse-tika.src.test.org.apache.nutch.parse.tika.TestMSWordParser.java</file>
      <file type="M">src.plugin.parse-tika.src.test.org.apache.nutch.parse.tika.TestImageMetadata.java</file>
      <file type="M">src.plugin.parse-tika.src.test.org.apache.nutch.parse.tika.TestHtmlParser.java</file>
      <file type="M">src.plugin.parse-tika.src.test.org.apache.nutch.parse.tika.TestFeedParser.java</file>
      <file type="M">src.plugin.parse-tika.src.test.org.apache.nutch.parse.tika.TestDOMContentUtils.java</file>
      <file type="M">src.plugin.parse-tika.src.java.org.apache.nutch.parse.tika.XMLCharacterRecognizer.java</file>
      <file type="M">src.plugin.parse-tika.src.java.org.apache.nutch.parse.tika.HTMLMetaProcessor.java</file>
      <file type="M">src.plugin.parse-tika.src.java.org.apache.nutch.parse.tika.DOMContentUtils.java</file>
      <file type="M">src.plugin.parse-swf.src.test.org.apache.nutch.parse.swf.TestSWFParser.java</file>
      <file type="M">src.plugin.parse-swf.src.java.org.apache.nutch.parse.swf.SWFParser.java</file>
      <file type="M">src.plugin.parse-metatags.src.test.org.apache.nutch.parse.metatags.TestMetatagParser.java</file>
      <file type="M">src.plugin.parse-metatags.src.java.org.apache.nutch.parse.metatags.MetaTagsParser.java</file>
      <file type="M">src.plugin.parse-html.src.test.org.apache.nutch.parse.html.TestRobotsMetaProcessor.java</file>
      <file type="M">src.plugin.parse-html.src.test.org.apache.nutch.parse.html.TestHtmlParser.java</file>
      <file type="M">src.plugin.parse-html.src.test.org.apache.nutch.parse.html.TestDOMContentUtils.java</file>
      <file type="M">src.plugin.parse-html.src.java.org.apache.nutch.parse.html.XMLCharacterRecognizer.java</file>
      <file type="M">src.plugin.parse-html.src.java.org.apache.nutch.parse.html.HtmlParser.java</file>
      <file type="M">src.plugin.parse-html.src.java.org.apache.nutch.parse.html.HTMLMetaProcessor.java</file>
      <file type="M">src.plugin.parse-html.src.java.org.apache.nutch.parse.html.DOMContentUtils.java</file>
      <file type="M">src.plugin.parse-html.src.java.org.apache.nutch.parse.html.DOMBuilder.java</file>
      <file type="M">src.plugin.parse-ext.src.test.org.apache.nutch.parse.ext.TestExtParser.java</file>
      <file type="M">src.plugin.parse-ext.src.java.org.apache.nutch.parse.ext.ExtParser.java</file>
      <file type="M">src.plugin.mimetype-filter.src.test.org.apache.nutch.indexer.filter.MimeTypeIndexingFilterTest.java</file>
      <file type="M">src.plugin.mimetype-filter.src.java.org.apache.nutch.indexer.filter.MimeTypeIndexingFilter.java</file>
      <file type="M">src.plugin.microformats-reltag.src.java.org.apache.nutch.microformats.reltag.RelTagParser.java</file>
      <file type="M">src.plugin.microformats-reltag.src.java.org.apache.nutch.microformats.reltag.RelTagIndexingFilter.java</file>
      <file type="M">src.plugin.lib-regex-filter.src.test.org.apache.nutch.urlfilter.api.RegexURLFilterBaseTest.java</file>
      <file type="M">src.plugin.lib-regex-filter.src.java.org.apache.nutch.urlfilter.api.RegexURLFilterBase.java</file>
      <file type="M">src.plugin.lib-regex-filter.src.java.org.apache.nutch.urlfilter.api.RegexRule.java</file>
      <file type="M">src.plugin.lib-http.src.test.org.apache.nutch.protocol.http.api.TestRobotRulesParser.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpRobotRulesParser.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpException.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpBase.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.BlockedException.java</file>
      <file type="M">src.plugin.language-identifier.src.test.org.apache.nutch.analysis.lang.TestHTMLLanguageParser.java</file>
      <file type="M">src.plugin.language-identifier.src.java.org.apache.nutch.analysis.lang.LanguageIndexingFilter.java</file>
      <file type="M">src.plugin.language-identifier.src.java.org.apache.nutch.analysis.lang.HTMLLanguageParser.java</file>
      <file type="M">src.plugin.indexer-elastic.src.test.org.apache.nutch.indexwriter.elastic.TestElasticIndexWriter.java</file>
      <file type="M">src.plugin.indexer-elastic.src.java.org.apache.nutch.indexwriter.elastic.ElasticIndexWriter.java</file>
      <file type="M">src.plugin.indexer-dummy.src.java.org.apache.nutch.indexwriter.dummy.DummyConstants.java</file>
      <file type="M">src.plugin.indexer-csv.src.test.org.apache.nutch.indexwriter.csv.TestCSVIndexWriter.java</file>
      <file type="M">src.plugin.indexer-csv.src.java.org.apache.nutch.indexwriter.csv.CSVIndexWriter.java</file>
      <file type="M">src.plugin.indexer-cloudsearch.src.java.org.apache.nutch.indexwriter.cloudsearch.CloudSearchUtils.java</file>
      <file type="M">src.plugin.index-static.src.java.org.apache.nutch.indexer.staticfield.StaticFieldIndexer.java</file>
      <file type="M">src.plugin.index-replace.src.test.org.apache.nutch.indexer.replace.TestIndexReplace.java</file>
      <file type="M">src.plugin.index-replace.src.java.org.apache.nutch.indexer.replace.ReplaceIndexer.java</file>
      <file type="M">src.plugin.index-replace.src.java.org.apache.nutch.indexer.replace.FieldReplacer.java</file>
      <file type="M">src.plugin.index-more.src.java.org.apache.nutch.indexer.more.MoreIndexingFilter.java</file>
      <file type="M">src.plugin.index-metadata.src.java.org.apache.nutch.indexer.metadata.MetadataIndexer.java</file>
      <file type="M">src.plugin.index-links.src.test.org.apache.nutch.indexer.links.TestLinksIndexingFilter.java</file>
      <file type="M">src.plugin.index-links.src.java.org.apache.nutch.indexer.links.LinksIndexingFilter.java</file>
      <file type="M">src.plugin.index-jexl-filter.src.java.org.apache.nutch.indexer.jexl.package-info.java</file>
      <file type="M">src.plugin.index-jexl-filter.src.java.org.apache.nutch.indexer.jexl.JexlIndexingFilter.java</file>
      <file type="M">src.plugin.index-geoip.src.java.org.apache.nutch.indexer.geoip.package-info.java</file>
      <file type="M">src.plugin.index-geoip.src.java.org.apache.nutch.indexer.geoip.GeoIPIndexingFilter.java</file>
      <file type="M">src.plugin.index-geoip.src.java.org.apache.nutch.indexer.geoip.GeoIPDocumentCreator.java</file>
      <file type="M">src.plugin.index-basic.src.java.org.apache.nutch.indexer.basic.BasicIndexingFilter.java</file>
      <file type="M">src.plugin.headings.src.test.org.apache.nutch.parse.headings.TestHeadingsParseFilter.java</file>
      <file type="M">src.plugin.headings.src.java.org.apache.nutch.parse.headings.HeadingsParseFilter.java</file>
      <file type="M">src.plugin.feed.src.test.org.apache.nutch.parse.feed.TestFeedParser.java</file>
      <file type="M">src.plugin.feed.src.java.org.apache.nutch.parse.feed.FeedParser.java</file>
      <file type="M">src.plugin.feed.src.java.org.apache.nutch.indexer.feed.FeedIndexingFilter.java</file>
      <file type="M">src.plugin.creativecommons.src.test.org.creativecommons.nutch.TestCCParseFilter.java</file>
      <file type="M">src.plugin.creativecommons.src.java.org.creativecommons.nutch.CCParseFilter.java</file>
      <file type="M">src.plugin.creativecommons.src.java.org.creativecommons.nutch.CCIndexingFilter.java</file>
      <file type="M">src.plugin.any23.src.test.org.apache.nutch.any23.TestAny23ParseFilter.java</file>
      <file type="M">src.plugin.any23.src.test.org.apache.nutch.any23.TestAny23IndexingFilter.java</file>
      <file type="M">src.plugin.any23.src.java.org.apache.nutch.any23.package-info.java</file>
      <file type="M">src.plugin.any23.src.java.org.apache.nutch.any23.Any23ParseFilter.java</file>
      <file type="M">src.plugin.any23.src.java.org.apache.nutch.any23.Any23IndexingFilter.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.SeedListService.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.NutchService.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.NutchInstanceService.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.impl.SeedListServiceImpl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.impl.NutchServiceImpl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.impl.NutchInstanceServiceImpl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.impl.CrawlServiceImpl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.CrawlService.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.UserSettingsPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.UrlsUploadPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.StatisticsPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.settings.SettingsPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.seed.SeedPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.seed.SeedListsPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.SearchPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.SchedulingPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.menu.VerticalMenu.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.LogOutPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.instances.InstancePanel.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.DashboardPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.crawls.CrawlsPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.crawls.CrawlPanel.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.components.CpmIteratorAdapter.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.components.ColorEnumLabelBuilder.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.components.ColorEnumLabel.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.assets.NutchUiCssReference.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.AbstractBasePage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.NutchUiServer.java</file>
      <file type="M">src.java.org.apache.nutch.webui.NutchUiApplication.java</file>
      <file type="M">src.java.org.apache.nutch.webui.model.SeedUrl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.model.SeedList.java</file>
      <file type="M">src.java.org.apache.nutch.webui.model.NutchInstance.java</file>
      <file type="M">src.java.org.apache.nutch.webui.model.NutchConfig.java</file>
      <file type="M">src.java.org.apache.nutch.webui.config.SpringConfiguration.java</file>
      <file type="M">src.java.org.apache.nutch.webui.config.NutchGuiConfiguration.java</file>
      <file type="M">src.java.org.apache.nutch.webui.config.CustomTableCreator.java</file>
      <file type="M">src.java.org.apache.nutch.webui.config.CustomDaoFactory.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.NutchClientFactory.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.NutchClient.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.model.NutchStatus.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.model.JobInfo.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.model.JobConfig.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.model.Crawl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.model.ConnectionStatus.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.RemoteCommandsBatchFactory.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.RemoteCommandExecutor.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.RemoteCommandBuilder.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.RemoteCommand.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.NutchClientImpl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.CrawlingCycleListener.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.CrawlingCycle.java</file>
      <file type="M">src.java.org.apache.nutch.util.URLUtil.java</file>
      <file type="M">src.java.org.apache.nutch.util.TrieStringMatcher.java</file>
      <file type="M">src.java.org.apache.nutch.util.TimingUtil.java</file>
      <file type="M">src.java.org.apache.nutch.util.TableUtil.java</file>
      <file type="M">src.java.org.apache.nutch.util.SuffixStringMatcher.java</file>
      <file type="M">src.java.org.apache.nutch.util.StringUtil.java</file>
      <file type="M">src.java.org.apache.nutch.util.SitemapProcessor.java</file>
      <file type="M">src.java.org.apache.nutch.util.SegmentReaderUtil.java</file>
      <file type="M">src.java.org.apache.nutch.util.ProtocolStatusStatistics.java</file>
      <file type="M">src.java.org.apache.nutch.util.PrefixStringMatcher.java</file>
      <file type="M">src.java.org.apache.nutch.util.ObjectCache.java</file>
      <file type="M">src.java.org.apache.nutch.util.NutchTool.java</file>
      <file type="M">src.java.org.apache.nutch.util.NutchJob.java</file>
      <file type="M">src.java.org.apache.nutch.util.NutchConfiguration.java</file>
      <file type="M">src.java.org.apache.nutch.util.MimeUtil.java</file>
      <file type="M">src.java.org.apache.nutch.util.LockUtil.java</file>
      <file type="M">src.java.org.apache.nutch.util.JexlUtil.java</file>
      <file type="M">src.java.org.apache.nutch.util.GZIPUtils.java</file>
      <file type="M">src.java.org.apache.nutch.util.DumpFileUtil.java</file>
      <file type="M">src.java.org.apache.nutch.util.domain.TopLevelDomain.java</file>
      <file type="M">src.java.org.apache.nutch.util.domain.DomainSuffixesReader.java</file>
      <file type="M">src.java.org.apache.nutch.util.domain.DomainSuffixes.java</file>
      <file type="M">src.java.org.apache.nutch.util.domain.DomainSuffix.java</file>
      <file type="M">src.java.org.apache.nutch.util.domain.DomainStatistics.java</file>
      <file type="M">src.java.org.apache.nutch.util.DeflateUtils.java</file>
      <file type="M">src.java.org.apache.nutch.util.CrawlCompletionStats.java</file>
      <file type="M">src.java.org.apache.nutch.util.CommandRunner.java</file>
      <file type="M">src.java.org.apache.nutch.util.AbstractChecker.java</file>
      <file type="M">src.java.org.apache.nutch.tools.warc.WARCExporter.java</file>
      <file type="M">src.java.org.apache.nutch.tools.warc.package-info.java</file>
      <file type="M">src.java.org.apache.nutch.tools.WARCUtils.java</file>
      <file type="M">src.java.org.apache.nutch.tools.FreeGenerator.java</file>
      <file type="M">src.java.org.apache.nutch.tools.FileDumper.java</file>
      <file type="M">src.java.org.apache.nutch.tools.DmozParser.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlFormatWARC.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlFormatSimple.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlFormatJettinson.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlFormatJackson.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlFormatFactory.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlFormat.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlDataDumper.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlConfig.java</file>
      <file type="M">src.java.org.apache.nutch.tools.Benchmark.java</file>
      <file type="M">src.java.org.apache.nutch.tools.arc.ArcSegmentCreator.java</file>
      <file type="M">src.java.org.apache.nutch.tools.arc.ArcRecordReader.java</file>
      <file type="M">src.java.org.apache.nutch.tools.arc.ArcInputFormat.java</file>
      <file type="M">src.java.org.apache.nutch.tools.AbstractCommonCrawlFormat.java</file>
      <file type="M">src.java.org.apache.nutch.service.SeedManager.java</file>
      <file type="M">src.java.org.apache.nutch.service.resources.ServicesResource.java</file>
      <file type="M">src.java.org.apache.nutch.service.resources.SeedResource.java</file>
      <file type="M">src.java.org.apache.nutch.service.resources.ReaderResouce.java</file>
      <file type="M">src.java.org.apache.nutch.service.resources.JobResource.java</file>
      <file type="M">src.java.org.apache.nutch.service.resources.DbResource.java</file>
      <file type="M">src.java.org.apache.nutch.service.resources.ConfigResource.java</file>
      <file type="M">src.java.org.apache.nutch.service.resources.AdminResource.java</file>
      <file type="M">src.java.org.apache.nutch.service.resources.AbstractResource.java</file>
      <file type="M">src.java.org.apache.nutch.service.NutchServer.java</file>
      <file type="M">src.java.org.apache.nutch.service.NutchReader.java</file>
      <file type="M">src.java.org.apache.nutch.service.model.response.ServiceInfo.java</file>
      <file type="M">src.java.org.apache.nutch.service.model.response.JobInfo.java</file>
      <file type="M">src.java.org.apache.nutch.service.model.response.FetchNodeDbInfo.java</file>
      <file type="M">src.java.org.apache.nutch.service.model.request.ServiceConfig.java</file>
      <file type="M">src.java.org.apache.nutch.service.model.request.SeedUrl.java</file>
      <file type="M">src.java.org.apache.nutch.service.model.request.SeedList.java</file>
      <file type="M">src.java.org.apache.nutch.service.model.request.ReaderConfig.java</file>
      <file type="M">src.java.org.apache.nutch.service.model.request.NutchConfig.java</file>
      <file type="M">src.java.org.apache.nutch.service.model.request.JobConfig.java</file>
      <file type="M">src.java.org.apache.nutch.service.model.request.DbQuery.java</file>
      <file type="M">src.java.org.apache.nutch.service.JobManager.java</file>
      <file type="M">src.java.org.apache.nutch.service.impl.ServiceWorker.java</file>
      <file type="M">src.java.org.apache.nutch.service.impl.SequenceReader.java</file>
      <file type="M">src.java.org.apache.nutch.service.impl.SeedManagerImpl.java</file>
      <file type="M">src.java.org.apache.nutch.service.impl.NutchServerPoolExecutor.java</file>
      <file type="M">src.java.org.apache.nutch.service.impl.NodeReader.java</file>
      <file type="M">src.java.org.apache.nutch.service.impl.LinkReader.java</file>
      <file type="M">src.java.org.apache.nutch.service.impl.JobWorker.java</file>
      <file type="M">src.java.org.apache.nutch.service.impl.JobManagerImpl.java</file>
      <file type="M">src.java.org.apache.nutch.service.impl.JobFactory.java</file>
      <file type="M">src.java.org.apache.nutch.service.impl.ConfManagerImpl.java</file>
      <file type="M">src.java.org.apache.nutch.service.ConfManager.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentReader.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentPart.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentChecker.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.ScoringFilters.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.ScoringFilter.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.AbstractScoringFilter.java</file>
      <file type="M">src.java.org.apache.nutch.publisher.NutchPublishers.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.RobotRulesParser.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.ProtocolStatus.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.ProtocolOutput.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.ProtocolNotFound.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.ProtocolFactory.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.ProtocolException.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.Protocol.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.Content.java</file>
      <file type="M">src.java.org.apache.nutch.plugin.PluginRuntimeException.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseUtil.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseText.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseStatus.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseSegment.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParserNotFound.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParserFactory.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseResult.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParserChecker.java</file>
      <file type="M">src.java.org.apache.nutch.parse.Parser.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParsePluginsReader.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParsePluginList.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseOutputFormat.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseImpl.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseException.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseData.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseCallable.java</file>
      <file type="M">src.java.org.apache.nutch.parse.Parse.java</file>
      <file type="M">src.java.org.apache.nutch.parse.OutlinkExtractor.java</file>
      <file type="M">src.java.org.apache.nutch.parse.Outlink.java</file>
      <file type="M">src.java.org.apache.nutch.parse.HtmlParseFilters.java</file>
      <file type="M">src.java.org.apache.nutch.parse.HtmlParseFilter.java</file>
      <file type="M">src.java.org.apache.nutch.parse.HTMLMetaTags.java</file>
      <file type="M">src.java.org.apache.nutch.net.URLNormalizers.java</file>
      <file type="M">src.java.org.apache.nutch.net.URLNormalizerChecker.java</file>
      <file type="M">src.java.org.apache.nutch.net.URLNormalizer.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.AbstractFetchSchedule.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.AdaptiveFetchSchedule.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDatum.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDb.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbFilter.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbMerger.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbReducer.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.DefaultFetchSchedule.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.FetchSchedule.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.FetchScheduleFactory.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Generator.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Injector.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Inlink.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Inlinks.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDb.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDbFilter.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDbMerger.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDbReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.MD5Signature.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.MimeAdaptiveFetchSchedule.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Signature.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.SignatureComparator.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.SignatureFactory.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.TextMD5Signature.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.TextProfileSignature.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.URLPartitioner.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetcherOutputFormat.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetchNode.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetchNodeDb.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexingException.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexingFilter.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexingFilters.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexingFiltersChecker.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexWriterParams.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.NutchField.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.CreativeCommons.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.DublinCore.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.Feed.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.HttpHeaders.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.MetaWrapper.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.Nutch.java</file>
      <file type="M">src.java.org.apache.nutch.net.protocols.HttpDateFormat.java</file>
      <file type="M">src.java.org.apache.nutch.net.protocols.ProtocolException.java</file>
      <file type="M">src.java.org.apache.nutch.net.protocols.Response.java</file>
      <file type="M">src.java.org.apache.nutch.net.URLExemptionFilter.java</file>
      <file type="M">src.java.org.apache.nutch.net.URLExemptionFilters.java</file>
      <file type="M">src.java.org.apache.nutch.net.URLFilter.java</file>
      <file type="M">src.java.org.apache.nutch.net.URLFilterChecker.java</file>
      <file type="M">src.java.org.apache.nutch.net.URLFilterException.java</file>
    </fixedFiles>
  </bug>
  <bug id="2689" opendate="2019-1-22 00:00:00" fixdate="2019-1-22 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Speed up urlfilter-regex and urlfilter-automaton</summary>
      <description>The unit tests of urlfilter-regex and urlfilter-automaton include a benchmark. After playing and benchmarking modifications the following changes seem to significantly improve the performance: do not extract host and domain name from the URL if not needed (no host/domain-specific rules used, cf. NUTCH-1838) use non-capturing groups if possible use (?i) to make the patterns case insensitive and remove uppercase variants</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.urlfilter-regex.sample.WholeWebCrawling.rules</file>
      <file type="M">src.plugin.urlfilter-regex.sample.IntranetCrawling.rules</file>
      <file type="M">src.plugin.urlfilter-regex.sample.Benchmarks.rules</file>
      <file type="M">src.plugin.lib-regex-filter.src.java.org.apache.nutch.urlfilter.api.RegexURLFilterBase.java</file>
      <file type="M">conf.regex-urlfilter.txt.template</file>
    </fixedFiles>
  </bug>
  <bug id="2690" opendate="2019-1-22 00:00:00" fixdate="2019-5-22 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Configurable and fast URL filter</summary>
      <description>This improvement introduces a new URL filter plugin "urlfilter-fast" (naming debatable) which is in use at Common Crawl since 2013 to apply a long list of filters. an exact (suffix) match against the host name is done to retrieve host/domain-specific regex rules applies a regular expression against the path (and query) component of the URLWhat makes it faster than urlfilter-regex for common cases: regexes are selected by host name or it's domain suffix, so there are usually fewer rules to be checked. That's similar to NUTCH-1838 but any domain suffix can be matched including subdomain.domain.com, com or . for global rules. The selection by host name suffix is considerably fast. regexes are applied only to the path component (optionally including the query) and not the entire URL. Matching against a shorter string can make a huge difference for more complex regular expressions. the rule to deny everything from a host or domain gets special treatment to be fastMore details about the rule format are found in the plugin's README.</description>
      <version>None</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.urlfilter-regex.sample.Benchmarks.urls</file>
      <file type="M">src.plugin.urlfilter-automaton.sample.Benchmarks.urls</file>
      <file type="M">src.plugin.lib-regex-filter.src.test.org.apache.nutch.urlfilter.api.RegexURLFilterBaseTest.java</file>
      <file type="M">src.plugin.build.xml</file>
      <file type="M">default.properties</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2691" opendate="2019-1-22 00:00:00" fixdate="2019-1-22 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Improve logging from scoring-depth plugin</summary>
      <description>Currently the scoring-depth plugin emits a "Missing depth, removing all outlinks from url" log message for every page that failed parsing (and does not have outlinks anyway).Will provide a patch that exits immediately when thereÂ are no outlinks.Â </description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.scoring-depth.src.java.org.apache.nutch.scoring.depth.DepthScoringFilter.java</file>
    </fixedFiles>
  </bug>
  <bug id="2702" opendate="2019-3-15 00:00:00" fixdate="2019-8-15 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Fetcher: suppress stack for frequent exceptions</summary>
      <description>Fetcher logs the entire Java stack when a fetch fails with an Exception. To reduce the size of the fetcher logs, frequent exceptions with an obvious reason should be logged without stack, at least, for the default log level (INFO).Frequent and obvious exceptions are: java.net.UnknownHostException java.net.SocketTimeoutException java.net.ConnectException javax.net.ssl.SSLHandshakeExceptionClass name and message should be sufficient by default. For debugging the fetch can be retried with a more verbose log level.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpBase.java</file>
      <file type="M">src.java.org.apache.nutch.net.protocols.package-info.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetcherThread.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2703" opendate="2019-3-18 00:00:00" fixdate="2019-4-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>parse-tika: Boilerpipe should not run for non-(X)HTML pages</summary>
      <description>Boilerpipe is running for non-(X)html pages which is require more resources.In my testing scenario, I've large PDFs in my websites and by enablingÂ Boilerpipe I have toÂ assign 8500MB forÂ JAVA Heap to finish the crawl job without issues.DisablingÂ Boilerpipe allow me to minimize the JVM Heap to 500MB with no issues.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.parse-tika.src.java.org.apache.nutch.parse.tika.TikaParser.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2704" opendate="2019-3-25 00:00:00" fixdate="2019-4-25 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Upgrade crawler-commons dependency to 1.0</summary>
      <description>Crawler-commons 1.0 has been released. We should upgrade.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2706" opendate="2019-4-4 00:00:00" fixdate="2019-5-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>-addBinaryContent flag can cause "String length must be a multiple of four" error in IndexingJob</summary>
      <description>When using the followingÂ crawling command:bin/crawl -i -s /user/xxxx/seed /user/xxxx/test-crawl-8 3Â with the index command in the crawl script with -addBinaryContent and -base64.The error I get is:2019-04-04 04:10:43,702 svnNumber= clientHw="" userId="" actionKpi="" &amp;#91;main&amp;#93; WARN org.apache.hadoop.mapred.YarnChild - Exception running child : org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException:Â ERROR: &amp;#91;doc=73ad5e05e49054efa258e7c54ae9b9ee&amp;#93; Error adding field 'binaryContent'='PCFET0NUWVBFIGh0bWw+DQo8aHRtbCBsYW5nPSJlbiI+DQo8aGVhZD4NCgk8bWV0YSBodHRwLWVx...Â ...Â msg=String length must be a multiple of four. at org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:559) atÂ  at org.apache.nutch.indexer.IndexWriters.commit(IndexWriters.java:251) at org.apache.nutch.indexer.IndexerOutputFormat$1.close(IndexerOutputFormat.java:47) at org.apache.hadoop.mapred.ReduceTask$NewTrackingRecordWriter.close(ReduceTask.java:550) at org.apache.hadoop.mapred.ReduceTask.runNewReducer(ReduceTask.java:629) at org.apache.hadoop.mapred.ReduceTask.run(ReduceTask.java:389) at org.apache.hadoop.mapred.YarnChild$2.run(YarnChild.java:164) at java.security.AccessController.doPrivileged(Native Method) at javax.security.auth.Subject.doAs(Subject.java:422) at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1693) at org.apache.hadoop.mapred.YarnChild.main(YarnChild.java:158)Â I see thisÂ https://issues.apache.org/jira/browse/NUTCH-2186Â as well. Opening a new ticket as mentioned in the comments because I have a different environment.Â Â Â </description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.indexer.IndexerMapReduce.java</file>
    </fixedFiles>
  </bug>
  <bug id="2708" opendate="2019-4-11 00:00:00" fixdate="2019-5-11 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>urlfilter-automaton: update library dependency (dk.brics.automaton)</summary>
      <description>A new version of the dk.brics.automaton library (1.12-1) is available.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.urlfilter-automaton.plugin.xml</file>
      <file type="M">src.plugin.urlfilter-automaton.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2718" opendate="2019-5-22 00:00:00" fixdate="2019-9-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Names of index writers and exchanges configuration files to be configurable</summary>
      <description>The file names of configuration files should be configurable by a property to make it possible to select another file without the need to repackage Nutch. For example this is achieved by the properties: urlnormalizer.regex.file or urlfilter.regex.file.Also the file name for the index writer (default: index-writers.xml) and exchanges configuration (default: exchanges.xml) should be configurable.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.indexer.IndexWriters.java</file>
      <file type="M">src.java.org.apache.nutch.exchange.Exchanges.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2724" opendate="2019-6-24 00:00:00" fixdate="2019-7-24 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Metadata indexer not to emit empty values</summary>
      <description>This patch adds a trimmed length check before emitting a field.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-metadata.src.java.org.apache.nutch.indexer.metadata.MetadataIndexer.java</file>
    </fixedFiles>
  </bug>
  <bug id="2725" opendate="2019-7-25 00:00:00" fixdate="2019-7-25 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Plugin lib-http to support per-host configurable cookies</summary>
      <description></description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-okhttp.src.java.org.apache.nutch.protocol.okhttp.OkHttpResponse.java</file>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpResponse.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpBase.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2727" opendate="2019-8-6 00:00:00" fixdate="2019-8-6 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Upgrade Hadoop dependencies to 2.9.2</summary>
      <description>The latest upgrade of the Hadoop dependency dates back to Dec 2017 (NUTCH-2354). We might upgrade to the latest version of Hadoop 2.x (2.9.2).Note: Nutch 1.15 (or master) built with Hadoop 2.7.4 runs seamlessly on Hadoop 3.x. This should be also the case for 2.9.4 (to be tested), so we still might wait for the final upgrade to Hadoop 3.x to ensure backward-compatibility.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-okhttp.src.test.org.apache.nutch.protocol.okhttp.TestProtocolOkHttp.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.test.org.apache.nutch.protocol.okhttp.TestBadServerResponses.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.test.conf.nutch-site-test.xml</file>
      <file type="M">src.java.org.apache.nutch.protocol.ProtocolFactory.java</file>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2728" opendate="2019-8-11 00:00:00" fixdate="2019-8-11 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>protocol-okhttp: upgrade okhttp dependency to 3.14.2</summary>
      <description>Upgrade the okhttp library dependency to 3.14.2 (for now not to 4.0.1 which adds the Kotlin standard lib as a further dependency).</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-okhttp.plugin.xml</file>
      <file type="M">src.plugin.protocol-okhttp.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2729" opendate="2019-8-13 00:00:00" fixdate="2019-9-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>protocol-okhttp: fix marking of truncated content</summary>
      <description>The plugin protocol-okhttp marks content as "truncated" including the reason for the truncation - content limit or time limit exceeded, network disconnect during fetch.The detection of truncation by content limit has one bug: if the fetched content is exactly the size of the content limit the loop to request more content is exited. It should be continued by requesting one byte more to reliably detect whether content is truncated or not.Note that the Content-Length header cannot be used to determine truncation reliably: it does not indicate the real content length for compressed or chunked content or it might be wrong.</description>
      <version>1.15</version>
      <fixedVersion>1.16</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-okhttp.src.test.org.apache.nutch.protocol.okhttp.TestBadServerResponses.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.java.org.apache.nutch.protocol.okhttp.OkHttpResponse.java</file>
    </fixedFiles>
  </bug>
  <bug id="2733" opendate="2019-9-9 00:00:00" fixdate="2019-1-9 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>protocol-okhttp: add support for Brotli compression (Content-Encoding)</summary>
      <description>Okhttp 4.1.0 adds support for Brotli compression. We might upgrade the okhttp dependency to enable support for the "brotli" Content-Encoding.</description>
      <version>1.15</version>
      <fixedVersion>1.17</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-okhttp.src.java.org.apache.nutch.protocol.okhttp.OkHttp.java</file>
      <file type="M">src.plugin.protocol-okhttp.plugin.xml</file>
      <file type="M">src.plugin.protocol-okhttp.ivy.xml</file>
    </fixedFiles>
  </bug>
</bugrepository>
