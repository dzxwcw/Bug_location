<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="NUTCH">
  <bug id="1415" opendate="2012-6-30 00:00:00" fixdate="2012-9-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>release packages to contain top level folder apache-nutch-x.x</summary>
      <description>The release packages should contain a top level folder named apache-nutch-x.x (x replaced by major and minor version) as in previous releases. Unpacking the packages from the command line via tar xvfz package.tar.gz or unzip package.zip should place all files in that folder. Cf. discussions on mailing lists: http://mail-archives.apache.org/mod_mbox/nutch-dev/201205.mbox/%3C4FBD613F.1020100@googlemail.com%3E http://mail-archives.apache.org/mod_mbox/nutch-user/201206.mbox/%3Czarafa.4fe9e41c.2e51.6a20afee54fe4ae7@mail.openindex.io%3E</description>
      <version>nutchgora,1.6,1.5.1</version>
      <fixedVersion>1.6,2.1</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1416" opendate="2012-7-1 00:00:00" fixdate="2012-1-1 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>IndexerMapReduce can index older version of a document instead of latest one</summary>
      <description>When we update the index,can not guarantee that the contents which be indexed is the latest.In the class IndexerMapReduce and method reduce(), it has the following code:public void reduce(Text key, Iterator&lt;NutchWritable&gt; values, OutputCollector&lt;Text, NutchDocument&gt; output, Reporter reporter) throws IOException { …… } else if (value instanceof ParseData) { parseData = (ParseData)value; } else if (value instanceof ParseText) { parseText = (ParseText)value; } ……}For example,30 days ago,I fetched the web page A,now I fetch it again. Then the key A will correspond to two ParseData objects(located in different segments).But in this code,it does not compare the fetch time and simply overwrites the previous value.So the final value maybe the old one.</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.metadata.Office.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.Metadata.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1419" opendate="2012-7-3 00:00:00" fixdate="2012-3-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>parsechecker and indexchecker to report protocol status</summary>
      <description>Parsechecker and indexchecker should report the protocol status when the fetch was not successful (status other than 200/ok).In case of a redirect, the protocol status contains the URL a redirect points to. Usually, this URL should be checked instead of the original one which is not indexed. The content of a redirect response is less useful (and often empty):% nutch indexchecker http://lucene.apache.org/nutch/fetching: http://lucene.apache.org/nutch/parsing: http://lucene.apache.org/nutch/contentType: text/htmlcontent : 301 Moved Permanently Moved Permanently The document has moved here . Apache/2.4.1 (Unix) OpenSSL/1.title : 301 Moved Permanentlyhost : lucene.apache.orgtstamp : Tue Jul 03 13:27:32 CEST 2012url : http://lucene.apache.org/nutch/</description>
      <version>nutchgora,1.6</version>
      <fixedVersion>1.7,2.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.parse.ParserChecker.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexingFiltersChecker.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1493" opendate="2012-11-7 00:00:00" fixdate="2012-11-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Error adding field &amp;#39;contentLength&amp;#39;=&amp;#39;&amp;#39; during solrindex using index-more</summary>
      <description>The contentLength can be an empty string (I assume this is possible because of NUTCH-1096), but solr does not accept this. The attached patch just checks for empty string contentLength and does not try to index it.</description>
      <version>1.6,2.1,2.2</version>
      <fixedVersion>1.6,2.2</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">src.plugin.index-more.src.java.org.apache.nutch.indexer.more.MoreIndexingFilter.java</file>
    </fixedFiles>
  </bug>
  <bug id="1510" opendate="2012-12-21 00:00:00" fixdate="2012-12-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Hadoop 1.1.1</summary>
      <description></description>
      <version>1.6,2.1</version>
      <fixedVersion>1.7,2.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1514" opendate="2013-1-6 00:00:00" fixdate="2013-5-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Phase out the deprecated configuration properties (if possible)</summary>
      <description>In reference to &amp;#91;0&amp;#93;, the deprecated configuration properties can be removed (only if possible without affecting the functionality).&amp;#91;0&amp;#93; : http://mail-archives.apache.org/mod_mbox/nutch-user/201301.mbox/%3CCAFKhtFwvM7w-cVusGZWKeGdcWrVShPtBdfTdcn1NNpM1Z2-ovA@mail.gmail.com%3E</description>
      <version>1.6,2.1</version>
      <fixedVersion>1.7,2.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.indexer-csv.src.java.org.apache.nutch.indexwriter.csv.package-info.java</file>
      <file type="M">conf.index-writers.xml.template</file>
      <file type="M">src.java.org.apache.nutch.crawl.Generator.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.AbstractFetchSchedule.java</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">src.plugin.indexer-csv.src.test.org.apache.nutch.indexwriter.csv.TestCSVIndexWriter.java</file>
      <file type="M">src.plugin.indexer-csv.src.java.org.apache.nutch.indexwriter.csv.CSVIndexWriter.java</file>
    </fixedFiles>
  </bug>
  <bug id="1527" opendate="2013-2-9 00:00:00" fixdate="2013-6-9 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Port nutch-elasticsearch-indexer to Nutch</summary>
      <description>The source repos for this can be found here &amp;#91;0&amp;#93;.This issue should be inline with the work already done by Julien and others over at NUTCH-1047.&amp;#91;0&amp;#93; https://github.com/ctjmorgan/nutch-elasticsearch-indexer</description>
      <version>1.6,2.1</version>
      <fixedVersion>1.7</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.build.xml</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">conf.log4j.properties</file>
      <file type="M">CHANGES.txt</file>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1553" opendate="2013-4-4 00:00:00" fixdate="2013-7-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Property &amp;#39;indexer.delete.robots.noindex&amp;#39; not working when using parser-html.</summary>
      <description>May be I'm doing something wrong, but it seems to me that NUTCH-1434 patch only works when using tika's parser. When using parser-html, "robots" metatag is only populated if parse-metatags plugin is enabled and it's done with the prefix "metatag.". So parseData.getMeta("robots") returns nothing if not using tika.I guess the simplest solution would be to provide a fallback in case parseData.getMeta("robots") is null and then get parseData.getMeta("metatag.robots") in that case.Also dependency of this property with parse-metadata plugin when using parse-html would be something interesting to document somewhere... (nutch-default.xml?)Thanks!</description>
      <version>1.6</version>
      <fixedVersion>1.13</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.parse-html.src.test.org.apache.nutch.parse.html.TestHtmlParser.java</file>
      <file type="M">src.plugin.parse-html.src.java.org.apache.nutch.parse.html.HtmlParser.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.Metadata.java</file>
    </fixedFiles>
  </bug>
  <bug id="1559" opendate="2013-4-17 00:00:00" fixdate="2013-11-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>parse-metatags duplicates extracted metatags</summary>
      <description>If the plugin parse-metatags is used in combination with parse-tika, the extracted metatags (the pairs &lt;name, value&gt;) are duplicated.The metatags are found twice in parse.getData().getParseMeta() and in metaTags.getGeneralTags(). Is this necessary? Maybe we should fix parse-tika in this point?</description>
      <version>1.6</version>
      <fixedVersion>1.17</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.parse-metatags.src.test.org.apache.nutch.parse.metatags.TestMetatagParser.java</file>
      <file type="M">src.plugin.parse-metatags.src.java.org.apache.nutch.parse.metatags.MetaTagsParser.java</file>
    </fixedFiles>
  </bug>
  <bug id="1561" opendate="2013-4-17 00:00:00" fixdate="2013-7-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>improve usability of parse-metatags and index-metadata</summary>
      <description>Usually, the plugins parse-metatags and index-metadata are used in combination: the former "extracts" meta tags, the latter adds the extracted tags as fields to the index. Configuration of the two plugins differs which causes pitfalls and reduces the usability (see example config): the property "metatags.names" of parse-metatags uses ';' as separator instead of ',' used by index-metadata meta tags have to be lowercased in index-metadata&lt;property&gt; &lt;name&gt;metatags.names&lt;/name&gt; &lt;value&gt;DC.creator;DCTERMS.bibliographicCitation&lt;/value&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;index.parse.md&lt;/name&gt; &lt;value&gt;metatag.dc.creator,metatag.dcterms.bibliographiccitation&lt;/value&gt;&lt;/property&gt;</description>
      <version>1.6</version>
      <fixedVersion>1.9</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.parse-metatags.src.test.org.apache.nutch.parse.metatags.TestMetatagParser.java</file>
      <file type="M">src.plugin.parse-metatags.src.java.org.apache.nutch.parse.metatags.MetaTagsParser.java</file>
      <file type="M">src.plugin.index-metadata.src.java.org.apache.nutch.indexer.metadata.MetadataIndexer.java</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1577" opendate="2013-5-31 00:00:00" fixdate="2013-5-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Add target for creating eclipse project</summary>
      <description>Currently, loading Nutch source code in Eclipse as a project is cumbersome and involves lot of manual steps as given over wiki. It would be great to automate this. Adding a ant target to do that would remove burden off from developers.</description>
      <version>1.6,2.1</version>
      <fixedVersion>1.7,2.2</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="1578" opendate="2013-5-31 00:00:00" fixdate="2013-6-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to Hadoop 1.2.0</summary>
      <description>Hadoop 1.2.0 finally has the ability to run mappers in parallel when running in local mode. In trunk at least the generator seems to run slightly faster.</description>
      <version>None</version>
      <fixedVersion>1.7,2.2.1</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1580" opendate="2013-6-6 00:00:00" fixdate="2013-6-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>index-static returns object instead of value for index.static</summary>
      <description>index.static is trying to print out the string array and it's printing the string array object, not the contents of the array</description>
      <version>1.6</version>
      <fixedVersion>1.8</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-static.src.test.org.apache.nutch.indexer.staticfield.TestStaticFieldIndexerTest.java</file>
      <file type="M">src.plugin.index-static.src.java.org.apache.nutch.indexer.staticfield.StaticFieldIndexer.java</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1581" opendate="2013-6-13 00:00:00" fixdate="2013-7-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CrawlDB csv output to include metadata</summary>
      <description>Dumping the CrawlDB to CSV should include the CrawlDatum's metadata.</description>
      <version>None</version>
      <fixedVersion>1.8</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.build.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1583" opendate="2013-6-18 00:00:00" fixdate="2013-6-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Headings does not support multiValued headings</summary>
      <description>Headings can now support multiple values since NUTCH-1560 and NUTCH-1467.</description>
      <version>1.6</version>
      <fixedVersion>1.7</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.headings.src.java.org.apache.nutch.parse.headings.HeadingsParseFilter.java</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1585" opendate="2013-6-19 00:00:00" fixdate="2013-6-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Ensure duplicate tags do not exist in microformat-reltag tag set.</summary>
      <description>A WebPage can have many many embedded tags and other such markup.Creating huge tag lists containing many many duplicates is counter productive to the process of parsing and extracting out such structure.We should add a mechanism to only include single tag occurrences for the microformats-reltag parser.</description>
      <version>1.6,2.2</version>
      <fixedVersion>1.7,2.2.1</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="1636" opendate="2013-9-7 00:00:00" fixdate="2013-9-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Indexer to normalize and filter repr URL</summary>
      <description>Indexer if used with option -normalize and/or -filter (cf. NUTCH-1300) should also normalize and filter representation URLs. Otherwise URLs which are target of a redirect, and have repr URL set (see URLUtil.chooseRepr) may show up in index with an undesirable URL.</description>
      <version>1.6,1.7</version>
      <fixedVersion>1.8</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.indexer.IndexerMapReduce.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
</bugrepository>
