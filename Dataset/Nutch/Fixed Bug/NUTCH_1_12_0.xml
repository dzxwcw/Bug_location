<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="NUTCH">
  <bug id="2136" opendate="2015-10-12 00:00:00" fixdate="2015-10-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Implement a different version of Naive Bayes Parse Filter</summary>
      <description>There has been many dependency issues with the first implementation of Naive Bayes Parse Filter. The major dependencies were Mahout and Lucene. There was also the issue where the training process failed in the distributed mode due to the fact that a nested hadoop job was unable to run on the cluster.To remove all these issues and make the filter be able to run in a distributed environment I am going to implement my own version of Naive Bayes without any dependency on any machine learning libraries.</description>
      <version>None</version>
      <fixedVersion>1.10</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.parsefilter-naivebayes.src.java.org.apache.nutch.parsefilter.naivebayes.NaiveBayesParseFilter.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2137" opendate="2015-10-12 00:00:00" fixdate="2015-10-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>add changes.txt and ALV2 headers to the Naive Bayes Parse Filter</summary>
      <description></description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.parsefilter-naivebayes.src.java.org.apache.nutch.parsefilter.naivebayes.Train.java</file>
      <file type="M">src.plugin.parsefilter-naivebayes.src.java.org.apache.nutch.parsefilter.naivebayes.Classify.java</file>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2152" opendate="2015-10-27 00:00:00" fixdate="2015-7-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>CommonCrawl dump via Service endpoint</summary>
      <description></description>
      <version>1.12</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlDataDumper.java</file>
      <file type="M">src.java.org.apache.nutch.service.NutchServer.java</file>
    </fixedFiles>
  </bug>
  <bug id="2252" opendate="2016-4-16 00:00:00" fixdate="2016-5-16 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Allow phantomjs as a browser for selenium options</summary>
      <description>Adding phantomjs libraries to lib-selenium so you can choose this as a browser with the selenium option</description>
      <version>1.12</version>
      <fixedVersion>1.12</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">CHANGES.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2281" opendate="2016-6-17 00:00:00" fixdate="2016-4-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support non-default FileSystem</summary>
      <description>If a path (input or output) does not belong to the configured default FileSystem various Nutch tools may raise an exception like Exception in ... java.lang.IllegalArgumentException: Wrong FS: s3a://..., expected: hdfs://...This is fixed by getting a reference to the FileSystem from the Path object FileSystem fs = path.getFileSystem(getConf());instead of FileSystem fs = FileSystem.get(getConf());A given path (e.g., s3a://...) may not belong to the default file system (hdfs:// or file:// in local mode) and simple checks such as fs.exists(path) then will fail. Cf. FileSystem.checkPath(path), and FileSystem.get(conf) vs. FileSystem.get(URI,conf) which is called by Path.getFileSystem(conf). Note that the FileSystem for input and output may be different, e.g., read from HDFS and write to S3.</description>
      <version>1.12</version>
      <fixedVersion>1.14</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.util.LockUtil.java</file>
      <file type="M">src.java.org.apache.nutch.tools.FileDumper.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlDataDumper.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentReader.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentMerger.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.WebGraph.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.ScoreUpdater.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.NodeReader.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.LinkRank.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.LinkDumper.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseSegment.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexingJob.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexerMapReduce.java</file>
      <file type="M">src.java.org.apache.nutch.hostdb.UpdateHostDb.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDbReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDbMerger.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDb.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.DeduplicationJob.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Injector.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Generator.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbMerger.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDb.java</file>
    </fixedFiles>
  </bug>
  <bug id="229" opendate="2006-3-13 00:00:00" fixdate="2006-3-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>improved handling of plugin folder configuration</summary>
      <description>Currently nutch only supports absoluth path or realative path that are part of the classpath. There are cases where it would be useful to be able using relative paaths that are not in the classpath for example have a centralized plugin repository on a shared hdd in cluster or running nutch inside a ide etc.</description>
      <version>None</version>
      <fixedVersion>0.8</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.plugin.PluginManifestParser.java</file>
    </fixedFiles>
  </bug>
  <bug id="2321" opendate="2016-10-6 00:00:00" fixdate="2016-1-6 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Indexing filter checker leaks threads</summary>
      <description>Same issue as NUTCH-2320.</description>
      <version>1.12</version>
      <fixedVersion>1.15</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.util.AbstractChecker.java</file>
    </fixedFiles>
  </bug>
  <bug id="2327" opendate="2016-10-18 00:00:00" fixdate="2016-10-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Seeds injected in REST workflow must be ingested into HDFS</summary>
      <description>Right now when one uses the REST POST /seed/create API, a directory is created within /var/some/path/here which is create if you are working locally with the Nutch server e.g. on one machine. It is however not suitable for using the REST API in distributed deployments where seeds needs to be present within HDFS. More documentation on this topic is available at https://wiki.apache.org/nutch/Nutch_1.X_RESTAPI#Seed_List_creationThere are also various mailing list threads regarding use of the REST and this injector url issue described above needs to be addressed.sujenshah CC for context.http://www.mail-archive.com/user%40nutch.apache.org/msg14922.htmlhttp://www.mail-archive.com/user%40nutch.apache.org/msg14921.html</description>
      <version>1.12</version>
      <fixedVersion>1.13</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.service.resources.SeedResource.java</file>
    </fixedFiles>
  </bug>
  <bug id="2333" opendate="2016-11-2 00:00:00" fixdate="2016-4-2 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Indexer for RabbitMQ</summary>
      <description>A plugin to send the documents to a RabbitMQ server.</description>
      <version>1.12</version>
      <fixedVersion>1.14</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.indexer-rabbit.src.java.org.apache.nutch.indexwriter.rabbit.RabbitMQConstants.java</file>
      <file type="M">src.plugin.indexer-rabbit.src.java.org.apache.nutch.indexwriter.rabbit.RabbitIndexWriter.java</file>
      <file type="M">src.plugin.build.xml</file>
      <file type="M">build.xml</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2352" opendate="2017-1-18 00:00:00" fixdate="2017-1-18 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log with Generic Class Name at Nutch 1.x</summary>
      <description>There are many mistakes when some reference code is copied and created a new class and a logger is used. We can log with a generic class name to avoid it as like:private static final Logger LOG = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());(cf. SOLR-8324)</description>
      <version>1.12</version>
      <fixedVersion>1.13</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.publisher.NutchPublishers.java</file>
      <file type="M">src.test.org.apache.nutch.tools.proxy.SegmentHandler.java</file>
      <file type="M">src.test.org.apache.nutch.tools.proxy.ProxyTestbed.java</file>
      <file type="M">src.test.org.apache.nutch.tools.proxy.LogDebugHandler.java</file>
      <file type="M">src.test.org.apache.nutch.service.TestNutchServer.java</file>
      <file type="M">src.test.org.apache.nutch.segment.TestSegmentMergerCrawlDatums.java</file>
      <file type="M">src.test.org.apache.nutch.indexer.TestIndexerMapReduce.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.TODOTestCrawlDbStates.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.TestLinkDbMerger.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.TestCrawlDbStates.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.TestCrawlDbMerger.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.CrawlDbUpdateUtil.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.CrawlDbUpdateTestDriver.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.CrawlDBTestUtil.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.ContinuousCrawlTestUtil.java</file>
      <file type="M">src.plugin.urlnormalizer-slash.src.java.org.apache.nutch.net.urlnormalizer.slash.SlashURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-regex.src.test.org.apache.nutch.net.urlnormalizer.regex.TestRegexURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-regex.src.java.org.apache.nutch.net.urlnormalizer.regex.RegexURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-querystring.src.java.org.apache.nutch.net.urlnormalizer.querystring.QuerystringURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-protocol.src.java.org.apache.nutch.net.urlnormalizer.protocol.ProtocolURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-host.src.java.org.apache.nutch.net.urlnormalizer.host.HostURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-basic.src.java.org.apache.nutch.net.urlnormalizer.basic.BasicURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-ajax.src.java.org.apache.nutch.net.urlnormalizer.ajax.AjaxURLNormalizer.java</file>
      <file type="M">src.plugin.urlmeta.src.java.org.apache.nutch.scoring.urlmeta.URLMetaScoringFilter.java</file>
      <file type="M">src.plugin.urlmeta.src.java.org.apache.nutch.indexer.urlmeta.URLMetaIndexingFilter.java</file>
      <file type="M">src.plugin.urlfilter-suffix.src.java.org.apache.nutch.urlfilter.suffix.SuffixURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-prefix.src.java.org.apache.nutch.urlfilter.prefix.PrefixURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-ignoreexempt.src.java.org.apache.nutch.urlfilter.ignoreexempt.ExemptionUrlFilter.java</file>
      <file type="M">src.plugin.urlfilter-domain.src.java.org.apache.nutch.urlfilter.domain.DomainURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-domainblacklist.src.java.org.apache.nutch.urlfilter.domainblacklist.DomainBlacklistURLFilter.java</file>
      <file type="M">src.plugin.tld.src.java.org.apache.nutch.indexer.tld.TLDIndexingFilter.java</file>
      <file type="M">src.plugin.subcollection.src.java.org.apache.nutch.indexer.subcollection.SubcollectionIndexingFilter.java</file>
      <file type="M">src.plugin.subcollection.src.java.org.apache.nutch.collection.CollectionManager.java</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.cosine.Model.java</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.cosine.CosineSimilarity.java</file>
      <file type="M">src.plugin.scoring-opic.src.java.org.apache.nutch.scoring.opic.OPICScoringFilter.java</file>
      <file type="M">src.plugin.publish-rabbitmq.src.java.org.apache.nutch.publisher.rabbitmq.RabbitMQPublisherImpl.java</file>
      <file type="M">src.plugin.protocol-selenium.src.java.org.apache.nutch.protocol.selenium.Http.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.Http.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.handlers.DefaultClickAllAjaxLinksHandler.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.handlers.DefalultMultiInteractionHandler.java</file>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.Http.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpFormAuthentication.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpBasicAuthentication.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpAuthenticationFactory.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.Http.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.DummyX509TrustManager.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.DummySSLProtocolSocketFactory.java</file>
      <file type="M">src.plugin.protocol-htmlunit.src.java.org.apache.nutch.protocol.htmlunit.Http.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.FtpRobotRulesParser.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.Ftp.java</file>
      <file type="M">src.plugin.protocol-file.src.java.org.apache.nutch.protocol.file.File.java</file>
      <file type="M">src.plugin.parsefilter-regex.src.java.org.apache.nutch.parsefilter.regex.RegexParseFilter.java</file>
      <file type="M">src.plugin.parsefilter-naivebayes.src.java.org.apache.nutch.parsefilter.naivebayes.NaiveBayesParseFilter.java</file>
      <file type="M">src.plugin.parse-zip.src.java.org.apache.nutch.parse.zip.ZipTextExtractor.java</file>
      <file type="M">src.plugin.parse-zip.src.java.org.apache.nutch.parse.zip.ZipParser.java</file>
      <file type="M">src.plugin.parse-tika.src.test.org.apache.nutch.tika.TestFeedParser.java</file>
      <file type="M">src.plugin.parse-tika.src.java.org.apache.nutch.parse.tika.TikaParser.java</file>
      <file type="M">src.plugin.parse-swf.src.java.org.apache.nutch.parse.swf.SWFParser.java</file>
      <file type="M">src.plugin.parse-js.src.java.org.apache.nutch.parse.js.JSParseFilter.java</file>
      <file type="M">src.plugin.parse-html.src.test.org.apache.nutch.parse.html.TestHtmlParser.java</file>
      <file type="M">src.plugin.parse-html.src.java.org.apache.nutch.parse.html.HtmlParser.java</file>
      <file type="M">src.plugin.parse-ext.src.java.org.apache.nutch.parse.ext.ExtParser.java</file>
      <file type="M">src.plugin.mimetype-filter.src.java.org.apache.nutch.indexer.filter.MimeTypeIndexingFilter.java</file>
      <file type="M">src.plugin.microformats-reltag.src.java.org.apache.nutch.microformats.reltag.RelTagParser.java</file>
      <file type="M">src.plugin.lib-selenium.src.java.org.apache.nutch.protocol.selenium.HttpWebClient.java</file>
      <file type="M">src.plugin.lib-regex-filter.src.test.org.apache.nutch.urlfilter.api.RegexURLFilterBaseTest.java</file>
      <file type="M">src.plugin.lib-regex-filter.src.java.org.apache.nutch.urlfilter.api.RegexURLFilterBase.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpRobotRulesParser.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpBase.java</file>
      <file type="M">src.plugin.lib-htmlunit.src.java.org.apache.nutch.protocol.htmlunit.HtmlUnitWebDriver.java</file>
      <file type="M">src.plugin.language-identifier.src.java.org.apache.nutch.analysis.lang.HTMLLanguageParser.java</file>
      <file type="M">src.plugin.indexer-solr.src.java.org.apache.nutch.indexwriter.solr.SolrUtils.java</file>
      <file type="M">src.plugin.indexer-solr.src.java.org.apache.nutch.indexwriter.solr.SolrMappingReader.java</file>
      <file type="M">src.plugin.indexer-solr.src.java.org.apache.nutch.indexwriter.solr.SolrIndexWriter.java</file>
      <file type="M">src.plugin.indexer-elastic.src.java.org.apache.nutch.indexwriter.elastic.ElasticIndexWriter.java</file>
      <file type="M">src.plugin.indexer-dummy.src.java.org.apache.nutch.indexwriter.dummy.DummyIndexWriter.java</file>
      <file type="M">src.plugin.indexer-cloudsearch.src.java.org.apache.nutch.indexwriter.cloudsearch.CloudSearchIndexWriter.java</file>
      <file type="M">src.plugin.index-more.src.java.org.apache.nutch.indexer.more.MoreIndexingFilter.java</file>
      <file type="M">src.plugin.index-links.src.java.org.apache.nutch.indexer.links.LinksIndexingFilter.java</file>
      <file type="M">src.plugin.index-geoip.src.java.org.apache.nutch.indexer.geoip.GeoIPIndexingFilter.java</file>
      <file type="M">src.plugin.index-basic.src.java.org.apache.nutch.indexer.basic.BasicIndexingFilter.java</file>
      <file type="M">src.plugin.index-anchor.src.java.org.apache.nutch.indexer.anchor.AnchorIndexingFilter.java</file>
      <file type="M">src.plugin.feed.src.test.org.apache.nutch.parse.feed.TestFeedParser.java</file>
      <file type="M">src.plugin.feed.src.java.org.apache.nutch.parse.feed.FeedParser.java</file>
      <file type="M">src.plugin.creativecommons.src.java.org.creativecommons.nutch.CCParseFilter.java</file>
      <file type="M">src.plugin.creativecommons.src.java.org.creativecommons.nutch.CCIndexingFilter.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.impl.NutchServiceImpl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.impl.CrawlServiceImpl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.RemoteCommandExecutor.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.CrawlingCycle.java</file>
      <file type="M">src.java.org.apache.nutch.util.ProtocolStatusStatistics.java</file>
      <file type="M">src.java.org.apache.nutch.util.ObjectCache.java</file>
      <file type="M">src.java.org.apache.nutch.util.MimeUtil.java</file>
      <file type="M">src.java.org.apache.nutch.util.JexlUtil.java</file>
      <file type="M">src.java.org.apache.nutch.util.GZIPUtils.java</file>
      <file type="M">src.java.org.apache.nutch.util.EncodingDetector.java</file>
      <file type="M">src.java.org.apache.nutch.util.DumpFileUtil.java</file>
      <file type="M">src.java.org.apache.nutch.util.DomUtil.java</file>
      <file type="M">src.java.org.apache.nutch.util.domain.DomainSuffixesReader.java</file>
      <file type="M">src.java.org.apache.nutch.util.domain.DomainSuffixes.java</file>
      <file type="M">src.java.org.apache.nutch.util.domain.DomainStatistics.java</file>
      <file type="M">src.java.org.apache.nutch.util.DeflateUtils.java</file>
      <file type="M">src.java.org.apache.nutch.util.CrawlCompletionStats.java</file>
      <file type="M">src.java.org.apache.nutch.tools.warc.WARCExporter.java</file>
      <file type="M">src.java.org.apache.nutch.tools.ResolveUrls.java</file>
      <file type="M">src.java.org.apache.nutch.tools.FreeGenerator.java</file>
      <file type="M">src.java.org.apache.nutch.tools.FileDumper.java</file>
      <file type="M">src.java.org.apache.nutch.tools.DmozParser.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlDataDumper.java</file>
      <file type="M">src.java.org.apache.nutch.tools.arc.ArcSegmentCreator.java</file>
      <file type="M">src.java.org.apache.nutch.tools.arc.ArcRecordReader.java</file>
      <file type="M">src.java.org.apache.nutch.tools.AbstractCommonCrawlFormat.java</file>
      <file type="M">src.java.org.apache.nutch.service.resources.SeedResource.java</file>
      <file type="M">src.java.org.apache.nutch.service.resources.AdminResource.java</file>
      <file type="M">src.java.org.apache.nutch.service.NutchServer.java</file>
      <file type="M">src.java.org.apache.nutch.service.NutchReader.java</file>
      <file type="M">src.java.org.apache.nutch.service.impl.JobWorker.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentReader.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentMerger.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentMergeFilters.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentChecker.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.WebGraph.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.ScoreUpdater.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.NodeDumper.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.LinkRank.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.LinkDumper.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.AbstractFetchSchedule.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.AdaptiveFetchSchedule.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDb.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbFilter.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbMerger.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbReducer.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.DeduplicationJob.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.FetchScheduleFactory.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Generator.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Injector.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDb.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDbFilter.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDbMerger.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDbReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.MimeAdaptiveFetchSchedule.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.SignatureFactory.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.URLPartitioner.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.Fetcher.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetcherThread.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetcherThreadPublisher.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetchItem.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetchItemQueue.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetchItemQueues.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.QueueFeeder.java</file>
      <file type="M">src.java.org.apache.nutch.hostdb.ReadHostDb.java</file>
      <file type="M">src.java.org.apache.nutch.hostdb.ResolverThread.java</file>
      <file type="M">src.java.org.apache.nutch.hostdb.UpdateHostDb.java</file>
      <file type="M">src.java.org.apache.nutch.hostdb.UpdateHostDbMapper.java</file>
      <file type="M">src.java.org.apache.nutch.hostdb.UpdateHostDbReducer.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.CleaningJob.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexerMapReduce.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexingFilters.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexingFiltersChecker.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexingJob.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexWriters.java</file>
      <file type="M">src.java.org.apache.nutch.net.URLExemptionFilters.java</file>
      <file type="M">src.java.org.apache.nutch.net.URLNormalizers.java</file>
      <file type="M">src.java.org.apache.nutch.parse.OutlinkExtractor.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseOutputFormat.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParsePluginsReader.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParserChecker.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseResult.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParserFactory.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseSegment.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseUtil.java</file>
      <file type="M">src.java.org.apache.nutch.plugin.PluginDescriptor.java</file>
      <file type="M">src.java.org.apache.nutch.plugin.PluginRepository.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.ProtocolFactory.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.RobotRulesParser.java</file>
    </fixedFiles>
  </bug>
  <bug id="2353" opendate="2017-1-18 00:00:00" fixdate="2017-1-18 01:00:00" resolution="Unresolved">
    <buginformation>
      <summary>Create seed file with metadata using the REST API</summary>
      <description>At the moment its not possible to create a seed file and specify any metadata when using the REST API. The file gets created but there is no option to add any metadata to the seed URLs.If we use a payload like this:{ "name":"name-of-seedlist", "seedUrls":[ { "url" : "http://example.com", "metadata" : { "key1" : "value1", "key2" : "value2", "key3" : "value3" } } ]}It should be easy to specify the desired metadata. Also this should keep BC with the previous array syntax if we only want to specify the list of URLs without any metadata at all.</description>
      <version>1.12</version>
      <fixedVersion>1.20</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.webui.model.SeedUrl.java</file>
      <file type="M">src.java.org.apache.nutch.service.resources.SeedResource.java</file>
      <file type="M">src.java.org.apache.nutch.service.model.request.SeedUrl.java</file>
    </fixedFiles>
  </bug>
  <bug id="2354" opendate="2017-1-20 00:00:00" fixdate="2017-12-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade Hadoop dependencies to 2.7.4</summary>
      <description>This wednesday we experienced trouble running the 1.12 injector on Hadoop 2.7.3. We operated 2.7.2 before and we had no trouble running a job.2017-01-18 15:36:53,005 FATAL [main] org.apache.hadoop.mapred.YarnChild: Error running child : java.lang.IncompatibleClassChangeError: Found interface org.apache.hadoop.mapreduce.Counter, but class was expected at org.apache.nutch.crawl.Injector$InjectMapper.map(Injector.java:216) at org.apache.nutch.crawl.Injector$InjectMapper.map(Injector.java:100) at org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:146) at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:787) at org.apache.hadoop.mapred.MapTask.run(MapTask.java:341) at org.apache.hadoop.mapred.YarnChild$2.run(YarnChild.java:164) at java.security.AccessController.doPrivileged(Native Method) at javax.security.auth.Subject.doAs(Subject.java:422) at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1698) at org.apache.hadoop.mapred.YarnChild.main(YarnChild.java:158)Exception in thread "main" java.lang.IncompatibleClassChangeError: Found interface org.apache.hadoop.mapreduce.Counter, but class was expected at org.apache.nutch.crawl.Injector.inject(Injector.java:383) at org.apache.nutch.crawl.Injector.run(Injector.java:467) at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:70) at org.apache.nutch.crawl.Injector.main(Injector.java:441) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.hadoop.util.RunJar.run(RunJar.java:221) at org.apache.hadoop.util.RunJar.main(RunJar.java:136)Our processes retried injecting for a few minutes until we manually shut it down. Meanwhile on HDFS, our CrawlDB was gone, thanks for snapshots and/or backups we could restore it, so enable those if you haven't done so yet.These freak Hadoop errors can be notoriously difficult to debug but it seems we are in luck, recompile Nutch with Hadoop 2.7.3 instead 2.4.0. You are also in luck if your job file uses the old org.hadoop.mapred.* API, only jobs using the org.hadoop.mapreduce.* API seem to fail.</description>
      <version>1.12</version>
      <fixedVersion>1.14</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2355" opendate="2017-1-31 00:00:00" fixdate="2017-2-31 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Protocol plugins to set cookie if Cookie metadata field is present</summary>
      <description></description>
      <version>1.12</version>
      <fixedVersion>1.13</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpResponse.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpBase.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2359" opendate="2017-2-13 00:00:00" fixdate="2017-2-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Parsefilter-regex raises IndexOutOfBoundsException when rules are ill-formed</summary>
      <description>This patch fixes:1) &amp;#91;Bug&amp;#93; Parsefilter-regex raises IndexOutOfBoundsException when rules are ill-formed2) Rules are split using any space character (\s) instead tab (\t) 3) A detailed Readme for the plugin</description>
      <version>1.12</version>
      <fixedVersion>1.13</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.parsefilter-regex.src.java.org.apache.nutch.parsefilter.regex.RegexParseFilter.java</file>
    </fixedFiles>
  </bug>
  <bug id="2362" opendate="2017-2-27 00:00:00" fixdate="2017-12-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade MaxMind GeoIP version in index-geoip</summary>
      <description>Current version of GeoIP dependency is 2.8.1, we should upgradehttp://search.maven.org/#search|gav|1|g%3A%22com.maxmind.geoip2%22%20AND%20a%3A%22geoip2%22</description>
      <version>None</version>
      <fixedVersion>1.14</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-geoip.plugin.xml</file>
      <file type="M">src.plugin.index-geoip.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2367" opendate="2017-3-14 00:00:00" fixdate="2017-3-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Get single record from HostDB</summary>
      <description>Introduces:bin/nutch readhostdb crawl/hostdb/ -get www.apache.org</description>
      <version>1.12</version>
      <fixedVersion>1.13</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.hostdb.ReadHostDb.java</file>
    </fixedFiles>
  </bug>
  <bug id="2468" opendate="2017-11-30 00:00:00" fixdate="2017-12-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>should filter out invalid URLs by default</summary>
      <description>Some Nutch components, by default, should reject invalid URLs. This was recently discussed in the users mailing list and has affected my work for a while. Although there may be some special-purpose needs to collect invalid URLs, they are not generally useful for crawling.</description>
      <version>1.12</version>
      <fixedVersion>2.4,1.14</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
</bugrepository>
