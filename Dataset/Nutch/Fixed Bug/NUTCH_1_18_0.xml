<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="NUTCH">
  <bug id="2835" opendate="2020-12-17 00:00:00" fixdate="2020-12-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade commons-jexl from 2 --&gt; 3</summary>
      <description>I am running into an issue with commons-jexl, which is basically described at https://stackoverflow.com/questions/54684259/java-lang-classnotfoundexception-org-apache-commons-jexl2-jexlcontext-while-runThe difference is that I experiencing this attempting to run Nutch on Tez instead of MapReduce. I've decided to upgrade commons-jexl from 2 --&gt; 3. PR coming up!</description>
      <version>1.18</version>
      <fixedVersion>1.18</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.index-jexl-filter.src.java.org.apache.nutch.indexer.jexl.JexlIndexingFilter.java</file>
      <file type="M">src.plugin.exchange-jexl.src.java.org.apache.nutch.exchange.jexl.JexlExchange.java</file>
      <file type="M">src.java.org.apache.nutch.util.JexlUtil.java</file>
      <file type="M">src.java.org.apache.nutch.hostdb.ReadHostDb.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Generator.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDatum.java</file>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2836" opendate="2020-12-20 00:00:00" fixdate="2020-1-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade various commons dependencies</summary>
      <description>I ended up taking a look at some other dependencies. Specifically the following &lt;dependency org="org.apache.commons" name="commons-lang3" rev="3.8.1" conf="*-&gt;default" /&gt; &lt;dependency org="org.apache.commons" name="commons-collections4" rev="4.2" conf="*-&gt;master" /&gt; &lt;dependency org="org.apache.httpcomponents" name="httpclient" rev="4.5.6" conf="*-&gt;master" /&gt; &lt;dependency org="commons-codec" name="commons-codec" rev="1.11" conf="*-&gt;default" /&gt; &lt;dependency org="org.apache.commons" name="commons-compress" rev="1.18" conf="*-&gt;default" /&gt;Some of them can be upgraded... I'll go ahead and do that right now.</description>
      <version>1.18</version>
      <fixedVersion>1.18</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2837" opendate="2020-12-20 00:00:00" fixdate="2020-1-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update multiple dependencies</summary>
      <description>Began with a trivial upgrade of slf4j-api and slf4j-log4j12 dependencies to most recent stable. The upgrades then spread so I augmented the PR.</description>
      <version>1.18</version>
      <fixedVersion>1.18</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2841" opendate="2021-1-13 00:00:00" fixdate="2021-1-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade xercesImpl dependency</summary>
      <description>Trivial update &lt;dependency org="xerces" name="xercesImpl" rev="2.12.1" /&gt;</description>
      <version>1.18</version>
      <fixedVersion>1.18</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.tools.DmozParser.java</file>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2845" opendate="2021-1-25 00:00:00" fixdate="2021-2-25 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Update urlfilter-suffix rules</summary>
      <description>The rules of urlfilter-suffix should be update to include recent file formats of images .icns (Apple Icon Image Format) .tif (TIFF, alternate pattern) .webp (WebP) archive and software package formats .apk .bz2 .xz videos .mp4 .webm .m4v .qt (QuickTime)</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.suffix-urlfilter.txt.template</file>
    </fixedFiles>
  </bug>
  <bug id="2855" opendate="2021-3-5 00:00:00" fixdate="2021-4-5 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update org.elasticsearch.client</summary>
      <description>Update from org.elasticsearch.client to newest version. It is listed as a HIGH risk vulnerability on the dependency report. Change it from 7.0.3 to 7.11.1 (newest version as of 3/5/21).</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Sub-task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.indexer-elastic.plugin.xml</file>
      <file type="M">src.plugin.indexer-elastic.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2857" opendate="2021-3-13 00:00:00" fixdate="2021-3-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade from JDK1.8 --&gt; JDK11</summary>
      <description>I kicked the JDK1.8 --&gt; JDK11 conversation off on dev@nutch.a.o.This issue allows us to flesh it out more and to share some experiences alongside some pull requests.</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.urlnormalizer-regex.src.java.org.apache.nutch.net.urlnormalizer.regex.RegexURLNormalizer.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentMergeFilters.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentMergeFilter.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParserChecker.java</file>
      <file type="M">src.java.org.apache.nutch.net.URLNormalizers.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.MetaWrapper.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexWriterParams.java</file>
      <file type="M">ivy.mvn.template</file>
      <file type="M">default.properties</file>
      <file type="M">.github.workflows.master-build.yml</file>
    </fixedFiles>
  </bug>
  <bug id="2858" opendate="2021-3-27 00:00:00" fixdate="2021-4-27 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>urlnormalizer-protocol: URL port is lost during normalization</summary>
      <description>If a URL includes a port, e.g. http://example.com:8080/ or https://example.com:8443/, the port is removed when normalizing using the protocol-urlnormalizer.Instead, if the port is set, the port should be kept as is and the protocol should be unchanged keeping the port and changing the protocol might result in a connection failure unlike the default port mappings (80 (http) &lt;&gt; 443 (https)), non-default port mappings (8080 &lt;&gt; 8443) are risky and unlikely to work on every server setup.</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.protocols.txt.template</file>
      <file type="M">src.plugin.urlnormalizer-protocol.src.test.org.apache.nutch.net.urlnormalizer.protocol.TestProtocolURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-protocol.src.java.org.apache.nutch.net.urlnormalizer.protocol.ProtocolURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-basic.src.test.org.apache.nutch.net.urlnormalizer.basic.TestBasicURLNormalizer.java</file>
    </fixedFiles>
  </bug>
  <bug id="2859" opendate="2021-3-29 00:00:00" fixdate="2021-4-29 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>urlnormalizer-protocol: allow to normalize domains</summary>
      <description>The plugin urlnormalizer-protocol normalizes the URL protocol/scheme for a given list of hosts to the desired "normal" protocol (usually one of http or https). It would be handy to allow to specify domain names as well, so that all hosts/subdomains in a given domain are normalized.In order to stay backward-compatible this could be done by matching *.example.org as a pattern for all hosts or subdomains of the domain example.org.</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.urlnormalizer-protocol.src.test.org.apache.nutch.net.urlnormalizer.protocol.TestProtocolURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-protocol.src.java.org.apache.nutch.net.urlnormalizer.protocol.ProtocolURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-protocol.data.protocols.txt</file>
      <file type="M">conf.protocols.txt.template</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2869" opendate="2021-6-10 00:00:00" fixdate="2021-6-10 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Add @Override annotations to Nutch plugins</summary>
      <description>All plugins implement interfaces. Ideally, the overriden methods should be marked using the "@Override" annotation.</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.urlfilter-suffix.src.java.org.apache.nutch.urlfilter.suffix.SuffixURLFilter.java</file>
      <file type="M">src.plugin.urlnormalizer-slash.src.java.org.apache.nutch.net.urlnormalizer.slash.SlashURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-regex.src.java.org.apache.nutch.net.urlnormalizer.regex.RegexURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-querystring.src.java.org.apache.nutch.net.urlnormalizer.querystring.QuerystringURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-protocol.src.java.org.apache.nutch.net.urlnormalizer.protocol.ProtocolURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-pass.src.java.org.apache.nutch.net.urlnormalizer.pass.PassURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-host.src.java.org.apache.nutch.net.urlnormalizer.host.HostURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-ajax.src.java.org.apache.nutch.net.urlnormalizer.ajax.AjaxURLNormalizer.java</file>
      <file type="M">src.plugin.urlmeta.src.java.org.apache.nutch.scoring.urlmeta.URLMetaScoringFilter.java</file>
      <file type="M">src.plugin.urlmeta.src.java.org.apache.nutch.indexer.urlmeta.URLMetaIndexingFilter.java</file>
      <file type="M">src.plugin.urlfilter-validator.src.java.org.apache.nutch.urlfilter.validator.UrlValidator.java</file>
      <file type="M">build.xml</file>
      <file type="M">conf.nutch-default.xml</file>
      <file type="M">src.java.org.apache.nutch.net.URLFilter.java</file>
      <file type="M">src.java.org.apache.nutch.net.URLFilters.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.AbstractScoringFilter.java</file>
      <file type="M">src.plugin.creativecommons.src.java.org.creativecommons.nutch.CCIndexingFilter.java</file>
      <file type="M">src.plugin.creativecommons.src.java.org.creativecommons.nutch.CCParseFilter.java</file>
      <file type="M">src.plugin.feed.src.java.org.apache.nutch.indexer.feed.FeedIndexingFilter.java</file>
      <file type="M">src.plugin.feed.src.java.org.apache.nutch.parse.feed.FeedParser.java</file>
      <file type="M">src.plugin.headings.src.java.org.apache.nutch.parse.headings.HeadingsParseFilter.java</file>
      <file type="M">src.plugin.index-anchor.src.java.org.apache.nutch.indexer.anchor.AnchorIndexingFilter.java</file>
      <file type="M">src.plugin.index-basic.src.java.org.apache.nutch.indexer.basic.BasicIndexingFilter.java</file>
      <file type="M">src.plugin.index-links.src.java.org.apache.nutch.indexer.links.LinksIndexingFilter.java</file>
      <file type="M">src.plugin.index-metadata.src.java.org.apache.nutch.indexer.metadata.MetadataIndexer.java</file>
      <file type="M">src.plugin.index-more.src.java.org.apache.nutch.indexer.more.MoreIndexingFilter.java</file>
      <file type="M">src.plugin.index-replace.src.java.org.apache.nutch.indexer.replace.ReplaceIndexer.java</file>
      <file type="M">src.plugin.index-static.src.java.org.apache.nutch.indexer.staticfield.StaticFieldIndexer.java</file>
      <file type="M">src.plugin.language-identifier.src.java.org.apache.nutch.analysis.lang.HTMLLanguageParser.java</file>
      <file type="M">src.plugin.language-identifier.src.java.org.apache.nutch.analysis.lang.LanguageIndexingFilter.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpBase.java</file>
      <file type="M">src.plugin.lib-regex-filter.src.java.org.apache.nutch.urlfilter.api.RegexURLFilterBase.java</file>
      <file type="M">src.plugin.microformats-reltag.src.java.org.apache.nutch.microformats.reltag.RelTagIndexingFilter.java</file>
      <file type="M">src.plugin.microformats-reltag.src.java.org.apache.nutch.microformats.reltag.RelTagParser.java</file>
      <file type="M">src.plugin.parse-ext.src.java.org.apache.nutch.parse.ext.ExtParser.java</file>
      <file type="M">src.plugin.parse-html.src.java.org.apache.nutch.parse.html.HtmlParser.java</file>
      <file type="M">src.plugin.parse-js.src.java.org.apache.nutch.parse.js.JSParseFilter.java</file>
      <file type="M">src.plugin.parse-metatags.src.java.org.apache.nutch.parse.metatags.MetaTagsParser.java</file>
      <file type="M">src.plugin.parse-tika.src.java.org.apache.nutch.parse.tika.TikaParser.java</file>
      <file type="M">src.plugin.parse-zip.src.java.org.apache.nutch.parse.zip.ZipParser.java</file>
      <file type="M">src.plugin.parsefilter-naivebayes.src.java.org.apache.nutch.parsefilter.naivebayes.NaiveBayesParseFilter.java</file>
      <file type="M">src.plugin.parsefilter-regex.src.java.org.apache.nutch.parsefilter.regex.RegexParseFilter.java</file>
      <file type="M">src.plugin.protocol-file.src.java.org.apache.nutch.protocol.file.File.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.Ftp.java</file>
      <file type="M">src.plugin.protocol-htmlunit.src.java.org.apache.nutch.protocol.htmlunit.Http.java</file>
      <file type="M">src.plugin.protocol-htmlunit.src.java.org.apache.nutch.protocol.htmlunit.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.Http.java</file>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.Http.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.java.org.apache.nutch.protocol.okhttp.OkHttp.java</file>
      <file type="M">src.plugin.scoring-depth.src.java.org.apache.nutch.scoring.depth.DepthScoringFilter.java</file>
      <file type="M">src.plugin.scoring-link.src.java.org.apache.nutch.scoring.link.LinkAnalysisScoringFilter.java</file>
      <file type="M">src.plugin.scoring-metadata.src.java.org.apache.nutch.scoring.metadata.MetadataScoringFilter.java</file>
      <file type="M">src.plugin.scoring-opic.src.java.org.apache.nutch.scoring.opic.OPICScoringFilter.java</file>
      <file type="M">src.plugin.scoring-orphan.src.java.org.apache.nutch.scoring.orphan.OrphanScoringFilter.java</file>
      <file type="M">src.plugin.subcollection.src.java.org.apache.nutch.collection.Subcollection.java</file>
      <file type="M">src.plugin.subcollection.src.java.org.apache.nutch.indexer.subcollection.SubcollectionIndexingFilter.java</file>
      <file type="M">src.plugin.tld.src.java.org.apache.nutch.indexer.tld.TLDIndexingFilter.java</file>
      <file type="M">src.plugin.tld.src.java.org.apache.nutch.scoring.tld.TLDScoringFilter.java</file>
      <file type="M">src.plugin.urlfilter-domaindenylist.src.java.org.apache.nutch.urlfilter.domaindenylist.DomainDenylistURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-domain.src.java.org.apache.nutch.urlfilter.domain.DomainURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-prefix.src.java.org.apache.nutch.urlfilter.prefix.PrefixURLFilter.java</file>
    </fixedFiles>
  </bug>
  <bug id="2882" opendate="2021-6-28 00:00:00" fixdate="2021-6-28 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Configure NutchUiServer for DEPLOYMENT and improve logging</summary>
      <description>Right now the web app runs in a development mode. It should instead run in a deployment mode.Improvements can also be made such that NutchServer and the NutchUIServer log properly.Patch coming up...</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.webui.NutchUiApplication.java</file>
      <file type="M">conf.log4j.properties</file>
    </fixedFiles>
  </bug>
  <bug id="2886" opendate="2021-7-12 00:00:00" fixdate="2021-7-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Move Nutch WebApp to separate repository</summary>
      <description>I propose to move the Nutch WebApp out of the primary Nutch repository and into a new repository https://github.com/apache/nutch-webapp. This work has already been done. The task is now to essentially remove the WebApp code from the canonical Nutch repository at https://github.com/apache/nutch.PR coming up...</description>
      <version>None</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.webui.pages.seed.SeedListsPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.SeedListService.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.NutchService.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.NutchInstanceService.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.impl.SeedListServiceImpl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.impl.NutchServiceImpl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.impl.NutchInstanceServiceImpl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.impl.CrawlServiceImpl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.service.CrawlService.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.UserSettingsPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.UrlsUploadPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.StatisticsPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.settings.SettingsPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.settings.SettingsPage.html</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.seed.SeedPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.seed.SeedPage.html</file>
      <file type="M">ivy.ivy.xml</file>
      <file type="M">src.bin.nutch</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.CrawlingCycle.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.CrawlingCycleListener.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.NutchClientImpl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.RemoteCommand.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.RemoteCommandBuilder.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.RemoteCommandExecutor.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.impl.RemoteCommandsBatchFactory.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.model.ConnectionStatus.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.model.Crawl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.model.JobConfig.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.model.JobInfo.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.model.NutchStatus.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.NutchClient.java</file>
      <file type="M">src.java.org.apache.nutch.webui.client.NutchClientFactory.java</file>
      <file type="M">src.java.org.apache.nutch.webui.config.CustomDaoFactory.java</file>
      <file type="M">src.java.org.apache.nutch.webui.config.CustomTableCreator.java</file>
      <file type="M">src.java.org.apache.nutch.webui.config.NutchGuiConfiguration.java</file>
      <file type="M">src.java.org.apache.nutch.webui.config.SpringConfiguration.java</file>
      <file type="M">src.java.org.apache.nutch.webui.model.NutchConfig.java</file>
      <file type="M">src.java.org.apache.nutch.webui.model.NutchInstance.java</file>
      <file type="M">src.java.org.apache.nutch.webui.model.SeedList.java</file>
      <file type="M">src.java.org.apache.nutch.webui.model.SeedUrl.java</file>
      <file type="M">src.java.org.apache.nutch.webui.NutchUiApplication.java</file>
      <file type="M">src.java.org.apache.nutch.webui.NutchUiApplication.properties</file>
      <file type="M">src.java.org.apache.nutch.webui.NutchUiServer.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.AbstractBasePage.html</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.AbstractBasePage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.assets.nutch-style.css</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.assets.NutchUiCssReference.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.components.ColorEnumLabel.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.components.ColorEnumLabelBuilder.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.components.CpmIteratorAdapter.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.crawls.CrawlPanel.html</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.crawls.CrawlPanel.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.crawls.CrawlsPage.html</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.crawls.CrawlsPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.DashboardPage.html</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.DashboardPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.instances.InstancePanel.html</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.instances.InstancePanel.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.instances.InstancesPage.html</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.instances.InstancesPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.LogOutPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.menu.VerticalMenu.html</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.menu.VerticalMenu.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.SchedulingPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.SearchPage.java</file>
      <file type="M">src.java.org.apache.nutch.webui.pages.seed.SeedListsPage.html</file>
    </fixedFiles>
  </bug>
  <bug id="2892" opendate="2021-9-18 00:00:00" fixdate="2021-11-18 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Upgrade to Any23 2.5</summary>
      <description>I recently released Any23 which includes some important fixes. I'll go ahead and upgrade.</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.any23.plugin.xml</file>
      <file type="M">src.plugin.any23.ivy.xml</file>
      <file type="M">src.plugin.any23.howto.upgrade.any23.txt</file>
    </fixedFiles>
  </bug>
  <bug id="2894" opendate="2021-9-19 00:00:00" fixdate="2021-9-19 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Java plugin compilation classpath: priorize plugin dependencies</summary>
      <description>When compiling Java classes of Nutch plugins, the classpath is constructed with Nutch core dependencies put in front of the plugin dependencies. Since NUTCH-2378 the runtime priorizes the plugin deps.Seen when fixing deprecation warnings caused by upgrading okhttp (NUTCH-2890, 2dcd804).</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.build-plugin.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2899" opendate="2021-10-22 00:00:00" fixdate="2021-11-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove needless warning about missing o/a/rat/anttasks/antlib.xml</summary>
      <description>(reported in https://stackoverflow.com/questions/69677051/ant-eclipse-not-working-for-apache-nutch-repository)The warningTrying to override old definition of task javac [taskdef] Could not load definitions from resource org/apache/rat/anttasks/antlib.xml. It could not be found.is needless and should be removed by moving the task definition into the task it belongs to ("rat-sources").</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2903" opendate="2021-11-17 00:00:00" fixdate="2021-1-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Unable to Connect to Elasticsearch over HTTPS</summary>
      <description>Unable to connect ES from Nutch over HTTPS with the following error message:  2021-11-16 16:37:22,034 DEBUG client.RestClient - request [POST  http://192.168.0.105:9200/_bulk?timeout=1m] failed org.apache.http.ConnectionClosedException: Connection is closed         at org.apache.http.nio.protocol.HttpAsyncRequestExecutor.endOfInput(HttpA syncRequestExecutor.java:356)          at org.apache.http.impl.nio.client.InternalRequestExecutor.endOfInput(Int ernalRequestExecutor.java:132)          at org.apache.http.impl.nio.DefaultNHttpClientConnection.consumeInput(Def aultNHttpClientConnection.java:261)          at org.apache.http.impl.nio.client.InternalIODispatch.onInputReady(Intern alIODispatch.java:81)          at org.apache.http.impl.nio.client.InternalIODispatch.onInputReady(Intern alIODispatch.java:39)          at org.apache.http.impl.nio.reactor.AbstractIODispatch.inputReady(Abstrac tIODispatch.java:114)          at org.apache.http.impl.nio.reactor.BaseIOReactor.readable(BaseIOReactor. java:162)          at org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent(Abstra ctIOReactor.java:337)          at org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents(Abstr actIOReactor.java:315)          at org.apache.http.impl.nio.reactor.AbstractIOReactor.execute(AbstractIOR eactor.java:276)          at org.apache.http.impl.nio.reactor.BaseIOReactor.execute(BaseIOReactor.j ava:104)          at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker.r un(AbstractMultiworkerIOReactor.java:591)          at java.lang.Thread.run(Thread.java:748) </description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.indexer-elastic.README.md</file>
      <file type="M">src.plugin.indexer-elastic.src.java.org.apache.nutch.indexwriter.elastic.ElasticIndexWriter.java</file>
      <file type="M">src.plugin.indexer-elastic.src.java.org.apache.nutch.indexwriter.elastic.ElasticConstants.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexWriterParams.java</file>
      <file type="M">conf.index-writers.xml.template</file>
    </fixedFiles>
  </bug>
  <bug id="2905" opendate="2021-11-17 00:00:00" fixdate="2021-12-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Mask sensitive strings in log output of index writers</summary>
      <description>Mask sensitive tokens, secrets and passwords in the output of index writers.</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.nutch.util.TestStringUtil.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpBasicAuthentication.java</file>
      <file type="M">src.plugin.indexer-solr.src.java.org.apache.nutch.indexwriter.solr.SolrIndexWriter.java</file>
      <file type="M">src.plugin.indexer-rabbit.src.java.org.apache.nutch.indexwriter.rabbit.RabbitIndexWriter.java</file>
      <file type="M">src.plugin.indexer-elastic.src.java.org.apache.nutch.indexwriter.elastic.ElasticIndexWriter.java</file>
      <file type="M">src.java.org.apache.nutch.util.StringUtil.java</file>
    </fixedFiles>
  </bug>
  <bug id="2930" opendate="2022-1-11 00:00:00" fixdate="2022-8-11 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Protocol-okhttp: implement IP filter</summary>
      <description>In order to avoid information leakage to a public search index or web archive, it should be possible to configure Nutch in a way that no content is fetched from localhost, loop-back addresses, private address spaces.NUTCH-2527 adds the configuration snippets to exclude URLs pointing to private addresses. However, filtering URLs isn't enough because a DNS entry of an arbitrary host name may point to a private IP address. Blocking must happen on the protocol level because the IP address is only know in the protocol implementation. I'll add an implementation for protocol-okhttp.</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.test.org.apache.nutch.protocol.AbstractHttpProtocolPluginTest.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.test.org.apache.nutch.protocol.okhttp.TestProtocolOkHttp.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.test.org.apache.nutch.protocol.okhttp.TestBadServerResponses.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.java.org.apache.nutch.protocol.okhttp.OkHttp.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2946" opendate="2022-5-3 00:00:00" fixdate="2022-5-3 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Fetcher: optionally slow down fetching from hosts with repeated exceptions</summary>
      <description>The fetcher holds for every fetch queue a counter which counts the number of observed "exceptions" seen when fetching from the host (resp. domain or IP) bound to this queue.As an improvement to increase the politeness of the crawler, the counter value could be used to dynamically increase the fetch delay for hosts where requests fail repeatedly with exceptions or HTTP status codes mapped to ProtocolStatus.EXCEPTION (HTTP 403 Forbidden, 429 Too many requests, 5xx server errors, etc.) Of course, this should be optional. The aim to reduce the load on such hosts already before the configured max. number of exceptions (property fetcher.max.exceptions.per.queue) is hit.</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.fetcher.FetchItemQueues.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2947" opendate="2022-5-3 00:00:00" fixdate="2022-8-3 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fetcher: keep state of empty fetch queues unless queue feeder is finished</summary>
      <description>If a fetch queue is empty (containing no fetch items) it may be removed from the list of queues. This also remove the state of a fetch queue, namely the next fetch time and the exception counter. If the queue feeder is still active it may happened that the same queue (i.e. associated with the same host/domain/IP) removed before is created again. In this case, certain aspects of fetcher politeness cannot be guaranteed anymore: the fetch delay (via earliest next fetch time) and the mechanism to block fetching from the same host/domain/IP with too many exceptions (NUTCH-769).The issue was observed while verifying NUTCH-2946 in the fetcher logs:... 10:19:16,912 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 10:20:16,250 * queue foo.bar &gt;&gt; delayed next fetch by 79248 ms after 2 exceptions in queue... 10:21:52,675 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 10:25:40,931 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 10:27:45,066 * queue foo.bar &gt;&gt; delayed next fetch by 79248 ms after 2 exceptions in queue... 10:29:40,407 * queue foo.bar &gt;&gt; delayed next fetch by 100000 ms after 3 exceptions in queue... 10:41:48,870 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 10:47:54,946 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 10:52:46,792 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 10:57:43,470 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 11:01:12,220 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 11:04:24,621 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 11:18:40,398 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 11:21:09,437 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 11:34:36,052 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 11:39:17,898 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 11:40:35,472 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 11:50:34,224 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 11:51:27,547 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 11:53:04,783 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 11:54:04,404 * queue foo.bar &gt;&gt; delayed next fetch by 79248 ms after 2 exceptions in queue... 11:55:38,232 * queue foo.bar &gt;&gt; delayed next fetch by 100000 ms after 3 exceptions in queue... 11:57:37,942 * queue foo.bar &gt;&gt; delayed next fetch by 116096 ms after 4 exceptions in queue... 12:01:08,619 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue... 12:02:35,985 * queue foo.bar &gt;&gt; delayed next fetch by 50000 ms after 1 exceptions in queue</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.fetcher.QueueFeeder.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetchItemQueues.java</file>
    </fixedFiles>
  </bug>
  <bug id="2950" opendate="2022-5-19 00:00:00" fixdate="2022-5-19 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>UpdateHostDb: performance improvements</summary>
      <description>This issue addresses a couple of performance improvements when creating the HostDb: avoid needless conversions between hostname and URL improvements of HostDb serialization (write and read) parametrize logging and log less on level INFO do not create DNS resolver threads if DNS look-ups are not requested by command-line optionsA patch/PR is ready. Depending on the chosen command-line options, a 10-20% speed-up should be visible if DNS look-ups, normalization and filtering are off.</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.hostdb.UpdateHostDbReducer.java</file>
      <file type="M">src.java.org.apache.nutch.hostdb.ReadHostDb.java</file>
      <file type="M">src.java.org.apache.nutch.hostdb.HostDatum.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Generator.java</file>
      <file type="M">src.java.org.apache.nutch.util.URLUtil.java</file>
      <file type="M">src.java.org.apache.nutch.hostdb.UpdateHostDbMapper.java</file>
    </fixedFiles>
  </bug>
  <bug id="2952" opendate="2022-6-15 00:00:00" fixdate="2022-8-15 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Upgrade core dependencies (Hadoop 3.3.3, log4j 2.17.2)</summary>
      <description>Upgrade the core dependencies to Hadoop 3.3.3 and log4j 2.17.2 - and some more. Hadoop 3.3.3 announces full support for Java 11 and ARM architectures</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.publish-rabbitmq.ivy.xml</file>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2953" opendate="2022-6-20 00:00:00" fixdate="2022-8-20 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Indexer Elastic to ignore SSL issues</summary>
      <description>IndexerElastic (in 1.18) has no support for transporting over HTTPS, but 1.19 does. But 1.19 has no support for ignore SSL issues that are common with self-signed certificates.This patch is for 1.18 only and was made without knowing SSL support was already there in master. Hence, the difference in config property naming, protocol (1.18/patch)  == scheme (1.19).</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.indexer-elastic.src.java.org.apache.nutch.indexwriter.elastic.ElasticIndexWriter.java</file>
    </fixedFiles>
  </bug>
  <bug id="2958" opendate="2022-8-8 00:00:00" fixdate="2022-8-8 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Upgrade to crawler-commons 1.3</summary>
      <description>see https://github.com/crawler-commons/crawler-commons/#28th-july-2022----crawler-commons-13-released</description>
      <version>1.18</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
</bugrepository>
