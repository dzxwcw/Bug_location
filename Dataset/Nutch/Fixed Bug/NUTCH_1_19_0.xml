<?xml version="1.0" encoding="UTF-8"?>

<bugrepository name="NUTCH">
  <bug id="2864" opendate="2021-5-20 00:00:00" fixdate="2021-6-20 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade Dockerfile to use JDK 11</summary>
      <description>With NUTCH-2857 the Nutch Dockerfile needs to be update to use JDK 11 and a more recent base image.</description>
      <version>1.19</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">docker.README.md</file>
      <file type="M">docker.Dockerfile</file>
    </fixedFiles>
  </bug>
  <bug id="2908" opendate="2021-11-22 00:00:00" fixdate="2021-12-22 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Log mapreduce job messages and counters in local mode</summary>
      <description>Logging the Hadoop job counters in the hadoop.log in local mode is useful for debugging and also to understand what the MapReduce job does. See NUTCH-2519 - needs to be adapted after the Log4j2 upgrade (NUTCH-2885).</description>
      <version>1.19</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">conf.log4j2.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2915" opendate="2021-12-12 00:00:00" fixdate="2021-12-12 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to log4j 2.15.0</summary>
      <description>See Apache Log4j Security Vulnerabilities.Notes: the released 1.18 is not directly affected because it uses log4j 1.x which is not affected by CVE-2021-44228. The upgrade from log4j 1.x to 2.14.1 was done recently by NUTCH-2885. the plugin indexer-elastic includes a transitive dependency to log4j-api-2.11.1 which is not affected - only log4j-core is according to comments by slf4j.</description>
      <version>1.19</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2916" opendate="2021-12-13 00:00:00" fixdate="2021-12-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Fix log file rotation / rename default log file</summary>
      <description>The log file rotation isn't working after the upgrade to log4j 2.x (NUTCH-2885): the rotation patterns need to fit with (default) log file name: I'd propose now (was wrong in the discussion of &amp;#91;#692|github.com/apache/nutch/pull/692&amp;#93;) to use "nutch.log" as default name and to drop the old "hadoop.log" file rotation should be also done on start-upWill open a PR...</description>
      <version>1.19</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.bin.nutch</file>
      <file type="M">conf.log4j2.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2917" opendate="2021-12-13 00:00:00" fixdate="2021-12-13 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Remove transitive dependency to log4j 1.x</summary>
      <description>Despite NUTCH-2885 there's still a log4j 1.x jar (lib/log4j-1.2.17.jar) installed as a transitive dependency of Hadoop. Is it required or could it be excluded?</description>
      <version>1.19</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2918" opendate="2021-12-14 00:00:00" fixdate="2021-12-14 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Upgrade to log4j 2.16.0</summary>
      <description>See https://lists.apache.org/thread/d6v4r6nosxysyq9rvnr779336yf0woz4 and NUTCH-2915.</description>
      <version>1.19</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2919" opendate="2021-12-17 00:00:00" fixdate="2021-1-17 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>NUTCH-2919 Upgrade to Tika 2.2.1 and Any23 2.6</summary>
      <description>Tika 2.2.0 just releasedhttps://lists.apache.org/thread/rbnn1m02o38jkyfh14vjtslh11km26bb</description>
      <version>None</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.parse-tika.src.test.org.apache.nutch.parse.tika.TestRTFParser.java</file>
      <file type="M">src.plugin.parse-tika.plugin.xml</file>
      <file type="M">src.plugin.parse-tika.ivy.xml</file>
      <file type="M">src.plugin.parse-tika.howto.upgrade.tika.txt</file>
      <file type="M">src.plugin.language-identifier.plugin.xml</file>
      <file type="M">src.plugin.language-identifier.ivy.xml</file>
      <file type="M">src.plugin.build-plugin.xml</file>
      <file type="M">src.plugin.any23.src.java.org.apache.nutch.any23.Any23ParseFilter.java</file>
      <file type="M">src.plugin.any23.src.java.org.apache.nutch.any23.Any23IndexingFilter.java</file>
      <file type="M">src.plugin.any23.plugin.xml</file>
      <file type="M">src.plugin.any23.ivy.xml</file>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2948" opendate="2022-5-5 00:00:00" fixdate="2022-5-5 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Upgrade dependencies to Any23 2.7 and Tika 2.3.0</summary>
      <description>Note: I've tried to upgrade to Tika 2.4.0 but there was a test failure due to conflicting dependencies (Any23 2.7 depends on Tika 2.3.0. For now, let's upgrade from Tika 2.2.1 to 2.3.0.</description>
      <version>1.19</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.parse-tika.plugin.xml</file>
      <file type="M">src.plugin.parse-tika.ivy.xml</file>
      <file type="M">src.plugin.language-identifier.plugin.xml</file>
      <file type="M">src.plugin.language-identifier.ivy.xml</file>
      <file type="M">src.plugin.any23.plugin.xml</file>
      <file type="M">src.plugin.any23.ivy.xml</file>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2962" opendate="2022-8-15 00:00:00" fixdate="2022-8-15 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Update and complete package info of protocol plugins</summary>
      <description>The package info files of the protocol plugins are partially outdated or missing.</description>
      <version>1.19</version>
      <fixedVersion>1.19</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.protocol-selenium.src.java.org.apache.nutch.protocol.selenium.package-info.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.java.org.apache.nutch.protocol.okhttp.package-info.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.package-info.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.package-info.java</file>
      <file type="M">src.plugin.protocol-htmlunit.src.java.org.apache.nutch.protocol.htmlunit.package-info.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.package-info.java</file>
    </fixedFiles>
  </bug>
  <bug id="2977" opendate="2022-12-7 00:00:00" fixdate="2022-12-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Support for showing dependency tree</summary>
      <description>I am upgrading Nutch to slf4j 2 and need to get rid of old 1.7 stuff, and especially reload4j. I desperately need this function for that. $ ant dependencytree will now show the tree.</description>
      <version>None</version>
      <fixedVersion>1.20</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">build.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2978" opendate="2022-12-7 00:00:00" fixdate="2022-9-7 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Move to slf4j2 and remove log4j1 and reload4j</summary>
      <description>I got in trouble upgrading some dependencies and got a lot of LinkageErrors today, or with a Tika upgrade, disappearing logs. This patch fixes that by moving to slf4j2, using the corrent log4j2-slfj4-impl2 and getting rid of old log4j -&gt; reload4j. This patch fixes it.</description>
      <version>None</version>
      <fixedVersion>1.20</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">NOTICE-binary</file>
      <file type="M">LICENSE-binary</file>
      <file type="M">src.plugin.lib-rabbitmq.ivy.xml</file>
      <file type="M">src.plugin.build-plugin.xml</file>
      <file type="M">src.plugin.any23.plugin.xml</file>
      <file type="M">src.plugin.any23.ivy.xml</file>
      <file type="M">ivy.ivy.xml</file>
    </fixedFiles>
  </bug>
  <bug id="298" opendate="2006-6-4 00:00:00" fixdate="2006-6-4 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>if a 404 for a robots.txt is returned a NPE is thrown</summary>
      <description>What happen:Is no RobotRuleSet is in the cache for a host, we create try to fetch the robots.txt.In case http response code is not 200 or 403 but for example 404 we do " robotRules = EMPTY_RULES; " (line: 402)EMPTY_RULES is a RobotRuleSet created with the default constructor.tmpEntries and entries is null and will never changed.If we now try to fetch a page from the host that use the EMPTY_RULES is used and we call isAllowed in the RobotRuleSet.In this case a NPE is thrown in this line: if (entries == null) { entries= new RobotsEntry&amp;#91;tmpEntries.size()&amp;#93;;possible Solution:We can intialize the tmpEntries by default and also remove other null checks and initialisations.</description>
      <version>None</version>
      <fixedVersion>0.8</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.lib-http.src.test.org.apache.nutch.protocol.http.api.TestRobotRulesParser.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.RobotRulesParser.java</file>
    </fixedFiles>
  </bug>
  <bug id="2989" opendate="2023-3-1 00:00:00" fixdate="2023-8-1 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Can&amp;#39;t have username/pw AND https on elastic-indexer?!</summary>
      <description>While working on NUTCH-2920, I copied+pasted the elastic indexer. As part of that process, I noticed that basic auth doesn't work with https.if (auth) { restClientBuilder .setHttpClientConfigCallback(new HttpClientConfigCallback() { @Override public HttpAsyncClientBuilder customizeHttpClient( HttpAsyncClientBuilder arg0) { return arg0.setDefaultCredentialsProvider(credentialsProvider); } }); } // In case of HTTPS, set the client up for ignoring problems with self-signed // certificates and stuff if ("https".equals(scheme)) { try { SSLContextBuilder sslBuilder = SSLContexts.custom(); sslBuilder.loadTrustMaterial(null, new TrustSelfSignedStrategy()); final SSLContext sslContext = sslBuilder.build(); restClientBuilder.setHttpClientConfigCallback(new HttpClientConfigCallback() { @Override public HttpAsyncClientBuilder customizeHttpClient(HttpAsyncClientBuilder httpClientBuilder) { // ignore issues with self-signed certificates httpClientBuilder.setSSLHostnameVerifier(NoopHostnameVerifier.INSTANCE); return httpClientBuilder.setSSLContext(sslContext); } }); } catch (Exception e) { LOG.error("Error setting up SSLContext because: " + e.getMessage(), e); } }On NUTCH-2920, I fixed this for the opensearch-indexer by adding another if (auth) statement under the https branch.If this is an actual issue, I'm happy to open a PR. If I've misunderstood the code or the design, please close as "not a problem".</description>
      <version>1.19</version>
      <fixedVersion>1.20</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.indexer-elastic.src.java.org.apache.nutch.indexwriter.elastic.ElasticIndexWriter.java</file>
    </fixedFiles>
  </bug>
  <bug id="2991" opendate="2023-5-12 00:00:00" fixdate="2023-6-12 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Support HTTP/S Header Authorization for Solr connections</summary>
      <description>Currently only Basic Authentication is possible with Solr, but I have an issue to connect to a Solr instance that use Token authentication.So it should be possible to define the value of Authorization Header to provide the name and token value, that will be send on the HTTP request to Solr.Header: Authorization: Name ValueSo in the configuration should be able to set up something like this to populate the header:  solr.auth.header.name=Bearer solr.auth.header.value=JWT_TOKEN </description>
      <version>1.19</version>
      <fixedVersion>1.20</fixedVersion>
      <type>New Feature</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.indexer-solr.src.java.org.apache.nutch.indexwriter.solr.SolrUtils.java</file>
      <file type="M">src.plugin.indexer-solr.src.java.org.apache.nutch.indexwriter.solr.SolrIndexWriter.java</file>
      <file type="M">src.plugin.indexer-solr.src.java.org.apache.nutch.indexwriter.solr.SolrConstants.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexWriters.java</file>
      <file type="M">conf.index-writers.xml.template</file>
    </fixedFiles>
  </bug>
  <bug id="2993" opendate="2023-6-8 00:00:00" fixdate="2023-8-8 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>ScoringDepth plugin to skip depth check based on URL Pattern</summary>
      <description>We do not want some crawl to go deep and broad, but instead focus it on a narrow section of sites.This patch overrides maxDepth for outlinks of URLs matching a configured pattern. URL not matching the pattern get the default max depth value configured.</description>
      <version>1.19</version>
      <fixedVersion>1.20</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.scoring-depth.src.java.org.apache.nutch.scoring.depth.DepthScoringFilter.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="2997" opendate="2023-8-16 00:00:00" fixdate="2023-8-16 01:00:00" resolution="Implemented">
    <buginformation>
      <summary>Add Override annotations where applicable</summary>
      <description></description>
      <version>1.19</version>
      <fixedVersion>1.20</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.service.impl.ConfManagerImpl.java</file>
      <file type="M">src.test.org.apache.nutch.plugin.SimpleTestPlugin.java</file>
      <file type="M">src.test.org.apache.nutch.plugin.HelloWorldExtension.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.TestGenerator.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.TestAdaptiveFetchSchedule.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.CrawlDbUpdateUtil.java</file>
      <file type="M">src.test.org.apache.nutch.crawl.CrawlDBTestUtil.java</file>
      <file type="M">src.plugin.urlnormalizer-regex.src.test.org.apache.nutch.net.urlnormalizer.regex.TestRegexURLNormalizer.java</file>
      <file type="M">src.plugin.urlnormalizer-regex.src.java.org.apache.nutch.net.urlnormalizer.regex.RegexURLNormalizer.java</file>
      <file type="M">src.plugin.urlfilter-regex.src.test.org.apache.nutch.urlfilter.regex.TestRegexURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-regex.src.java.org.apache.nutch.urlfilter.regex.RegexURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-prefix.src.test.org.apache.nutch.urlfilter.prefix.TestPrefixURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-ignoreexempt.src.java.org.apache.nutch.urlfilter.ignoreexempt.ExemptionUrlFilter.java</file>
      <file type="M">src.plugin.urlfilter-fast.src.test.org.apache.nutch.urlfilter.fast.TestFastURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-fast.src.java.org.apache.nutch.urlfilter.fast.FastURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-automaton.src.test.org.apache.nutch.urlfilter.automaton.TestAutomatonURLFilter.java</file>
      <file type="M">src.plugin.urlfilter-automaton.src.java.org.apache.nutch.urlfilter.automaton.AutomatonURLFilter.java</file>
      <file type="M">src.plugin.protocol-selenium.src.java.org.apache.nutch.protocol.selenium.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-selenium.src.java.org.apache.nutch.protocol.selenium.DummyX509TrustManager.java</file>
      <file type="M">src.plugin.protocol-okhttp.src.java.org.apache.nutch.protocol.okhttp.OkHttpResponse.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.handlers.DefaultClickAllAjaxLinksHandler.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.handlers.DefalultMultiInteractionHandler.java</file>
      <file type="M">src.plugin.protocol-interactiveselenium.src.java.org.apache.nutch.protocol.interactiveselenium.DummyX509TrustManager.java</file>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-http.src.java.org.apache.nutch.protocol.http.DummyX509TrustManager.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpResponse.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpBasicAuthentication.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.HttpAuthenticationFactory.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.DummyX509TrustManager.java</file>
      <file type="M">src.plugin.protocol-httpclient.src.java.org.apache.nutch.protocol.httpclient.DummySSLProtocolSocketFactory.java</file>
      <file type="M">src.plugin.protocol-htmlunit.src.java.org.apache.nutch.protocol.htmlunit.DummyX509TrustManager.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.PrintCommandListener.java</file>
      <file type="M">src.plugin.protocol-ftp.src.java.org.apache.nutch.protocol.ftp.Client.java</file>
      <file type="M">src.plugin.protocol-foo.src.java.org.apache.nutch.protocol.foo.Handler.java</file>
      <file type="M">src.plugin.parse-tika.src.test.org.apache.nutch.parse.tika.TestEmbeddedDocuments.java</file>
      <file type="M">src.plugin.parse-tika.src.java.org.apache.nutch.parse.tika.DOMContentUtils.java</file>
      <file type="M">src.plugin.parse-html.src.java.org.apache.nutch.parse.html.DOMContentUtils.java</file>
      <file type="M">src.plugin.lib-http.src.java.org.apache.nutch.protocol.http.api.HttpRobotRulesParser.java</file>
      <file type="M">src.plugin.indexer-csv.src.java.org.apache.nutch.indexwriter.csv.CSVIndexWriter.java</file>
      <file type="M">src.plugin.indexer-cloudsearch.src.java.org.apache.nutch.indexwriter.cloudsearch.CloudSearchIndexWriter.java</file>
      <file type="M">src.java.org.apache.nutch.util.TrieStringMatcher.java</file>
      <file type="M">src.java.org.apache.nutch.util.SuffixStringMatcher.java</file>
      <file type="M">src.java.org.apache.nutch.util.PrefixStringMatcher.java</file>
      <file type="M">src.java.org.apache.nutch.util.GenericWritableConfigurable.java</file>
      <file type="M">src.java.org.apache.nutch.util.EncodingDetector.java</file>
      <file type="M">src.java.org.apache.nutch.util.CommandRunner.java</file>
      <file type="M">src.java.org.apache.nutch.util.AbstractChecker.java</file>
      <file type="M">src.java.org.apache.nutch.tools.ResolveUrls.java</file>
      <file type="M">src.java.org.apache.nutch.tools.DmozParser.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlFormatWARC.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlFormatSimple.java</file>
      <file type="M">src.java.org.apache.nutch.tools.CommonCrawlFormat.java</file>
      <file type="M">src.java.org.apache.nutch.tools.arc.ArcSegmentCreator.java</file>
      <file type="M">src.java.org.apache.nutch.tools.arc.ArcRecordReader.java</file>
      <file type="M">src.java.org.apache.nutch.tools.arc.ArcInputFormat.java</file>
      <file type="M">src.java.org.apache.nutch.tools.AbstractCommonCrawlFormat.java</file>
      <file type="M">src.java.org.apache.nutch.service.resources.AdminResource.java</file>
      <file type="M">src.java.org.apache.nutch.service.impl.SeedManagerImpl.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.AbstractFetchSchedule.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.AdaptiveFetchSchedule.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDatum.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.CrawlDbReducer.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Generator.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Inlink.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Inlinks.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.LinkDbReader.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.MD5Signature.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.MimeAdaptiveFetchSchedule.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.Signature.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.SignatureComparator.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.TextMD5Signature.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.TextProfileSignature.java</file>
      <file type="M">src.java.org.apache.nutch.crawl.URLPartitioner.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetcherOutputFormat.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.FetcherThread.java</file>
      <file type="M">src.java.org.apache.nutch.fetcher.QueueFeeder.java</file>
      <file type="M">src.java.org.apache.nutch.hostdb.ResolverThread.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexerOutputFormat.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.IndexingFiltersChecker.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.NutchDocument.java</file>
      <file type="M">src.java.org.apache.nutch.indexer.NutchIndexAction.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.Metadata.java</file>
      <file type="M">src.java.org.apache.nutch.metadata.MetaWrapper.java</file>
      <file type="M">src.java.org.apache.nutch.net.URLFilterChecker.java</file>
      <file type="M">src.java.org.apache.nutch.net.URLNormalizerChecker.java</file>
      <file type="M">src.java.org.apache.nutch.parse.HTMLMetaTags.java</file>
      <file type="M">src.java.org.apache.nutch.parse.Outlink.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseData.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseImpl.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseOutputFormat.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParserChecker.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseResult.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseStatus.java</file>
      <file type="M">src.java.org.apache.nutch.parse.ParseText.java</file>
      <file type="M">src.java.org.apache.nutch.plugin.Extension.java</file>
      <file type="M">src.java.org.apache.nutch.plugin.Plugin.java</file>
      <file type="M">src.java.org.apache.nutch.plugin.PluginClassLoader.java</file>
      <file type="M">src.java.org.apache.nutch.plugin.PluginRepository.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.Content.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.ProtocolStatus.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.ScoringFilters.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.LinkDatum.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.LinkDumper.java</file>
      <file type="M">src.java.org.apache.nutch.scoring.webgraph.Node.java</file>
      <file type="M">src.java.org.apache.nutch.segment.ContentAsTextInputFormat.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentMerger.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentPart.java</file>
      <file type="M">src.java.org.apache.nutch.segment.SegmentReader.java</file>
    </fixedFiles>
  </bug>
  <bug id="2999" opendate="2023-8-30 00:00:00" fixdate="2023-8-30 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>Update Lucene version to latest 8.x</summary>
      <description>It may be the way that I'm loading the project, but, for me, Intellij really does not like the Lucene version conflict between scoring-similarity and the OpenSearch/Elasticsearch modules.Can we bump Lucene to the latest 8.11.2 throughout?PR for review incoming.</description>
      <version>None</version>
      <fixedVersion>1.20</fixedVersion>
      <type>Task</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.indexer-opensearch-1x.ivy.xml</file>
      <file type="M">src.plugin.indexer-elastic.ivy.xml</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.util.LuceneTokenizer.java</file>
      <file type="M">src.plugin.scoring-similarity.src.java.org.apache.nutch.scoring.similarity.util.LuceneAnalyzerUtil.java</file>
      <file type="M">src.plugin.scoring-similarity.plugin.xml</file>
      <file type="M">src.plugin.scoring-similarity.ivy.xml</file>
      <file type="M">src.plugin.parsefilter-naivebayes.plugin.xml</file>
      <file type="M">src.plugin.parsefilter-naivebayes.ivy.xml</file>
      <file type="M">src.plugin.indexer-opensearch-1x.plugin.xml</file>
      <file type="M">src.plugin.indexer-elastic.plugin.xml</file>
    </fixedFiles>
  </bug>
  <bug id="3" opendate="2005-2-21 00:00:00" fixdate="2005-3-21 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>multi values of header discarded</summary>
      <description>orignal by: phoebehttp://sourceforge.net/tracker/index.php?func=detail&amp;aid=1111185&amp;group_id=59548&amp;atid=491356multi values of header discardedEach successive setting of a header value deletes theprevious one.This patch allows multi values to be retained, such ascookies, using lf cr as a delimiter for each values.&amp;#8212; /tmp/HttpResponse.java 2005-01-2719:57:55.000000000 -0500+++ HttpResponse.java 2005-01-27 20:45:01.000000000 -0500@@ -324,7 +324,19 @@}String value = line.substring(valueStart); headers.put(key, value);+//Spec allows multiple values, such as Set-Cookie -using lf cr as delimiter+ if ( headers.containsKey(key)) {+ try Unknown macro: {+ Object obj= headers.get(key);+ if ( obj != null) {+ String oldvalue=headers.get(key).toString();+ value = oldvalue +"\r\n" + value;+ }+ } catch (Exception e) {+ e.printStackTrace();+ }+ }+ headers.put(key, value);}private Map parseHeaders(PushbackInputStream in,StringBuffer line)@@ -399,5 +411,3 @@}</description>
      <version>None</version>
      <fixedVersion>0.8</fixedVersion>
      <type>Bug</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.java.org.apache.nutch.protocol.ContentProperties.java</file>
      <file type="M">src.java.org.apache.nutch.protocol.Content.java</file>
      <file type="M">conf.nutch-default.xml</file>
    </fixedFiles>
  </bug>
  <bug id="30" opendate="2005-3-29 00:00:00" fixdate="2005-8-29 01:00:00" resolution="Fixed">
    <buginformation>
      <summary>rss feed parser</summary>
      <description>A simple rss feed parser supporting:rss and atom:+ version 0.3+ version 09+ version 10+ version 20Converting of different rss versions is done via xslt. The xslt was contributed by Frank Henze - Thanks!</description>
      <version>None</version>
      <fixedVersion>None</fixedVersion>
      <type>Improvement</type>
    </buginformation>
    <fixedFiles>
      <file type="M">src.plugin.build.xml</file>
    </fixedFiles>
  </bug>
</bugrepository>
